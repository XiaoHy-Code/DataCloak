replaceOutput/ReplaceTestforHadoopWordCount.jar
Soot started on Sun Jul 25 16:47:50 CST 2021
Warning: org.codehaus.jackson.JsonGenerator is a phantom class!
Warning: org.codehaus.jackson.JsonFactory is a phantom class!
Warning: org.codehaus.jackson.map.ObjectMapper is a phantom class!
Warning: org.codehaus.jackson.map.JsonMappingException is a phantom class!
Warning: org.codehaus.jackson.JsonParseException is a phantom class!
Warning: org.apache.commons.io.FileUtils is a phantom class!
Warning: org.apache.commons.codec.binary.Base64 is a phantom class!
Warning: org.mortbay.util.ajax.JSON is a phantom class!
Warning: org.apache.commons.lang.StringUtils is a phantom class!
Warning: org.mortbay.jetty.webapp.WebAppContext is a phantom class!
Warning: javax.servlet.http.HttpServlet is a phantom class!
Warning: javax.servlet.http.HttpServletRequest is a phantom class!
Warning: javax.servlet.http.HttpServletResponse is a phantom class!
Warning: javax.servlet.ServletContext is a phantom class!
Warning: javax.servlet.ServletException is a phantom class!
Warning: org.mortbay.jetty.Connector is a phantom class!
Warning: org.mortbay.jetty.Handler is a phantom class!
Warning: org.mortbay.jetty.handler.ContextHandlerCollection is a phantom class!
Warning: org.mortbay.jetty.handler.ContextHandler$SContext is a phantom class!
Warning: com.sun.jersey.spi.container.servlet.ServletContainer is a phantom class!
Warning: org.mortbay.jetty.servlet.DefaultServlet is a phantom class!
Warning: org.mortbay.jetty.nio.SelectChannelConnector is a phantom class!
Warning: org.mortbay.thread.ThreadPool is a phantom class!
Warning: org.mortbay.jetty.servlet.FilterMapping is a phantom class!
Warning: org.mortbay.util.MultiException is a phantom class!
Warning: org.mortbay.jetty.servlet.ServletHandler is a phantom class!
Warning: org.mortbay.thread.QueuedThreadPool is a phantom class!
Warning: org.mortbay.jetty.security.SslSocketConnector is a phantom class!
Warning: org.mortbay.jetty.handler.ContextHandler is a phantom class!
Warning: org.mortbay.jetty.Server is a phantom class!
Warning: org.mortbay.jetty.HandlerContainer is a phantom class!
Warning: org.mortbay.jetty.servlet.FilterHolder is a phantom class!
Warning: org.mortbay.jetty.servlet.Context is a phantom class!
Warning: org.mortbay.jetty.servlet.ServletHolder is a phantom class!
Warning: org.apache.commons.httpclient.HttpMethod is a phantom class!
Warning: org.apache.commons.httpclient.HttpClient is a phantom class!
Warning: org.apache.commons.httpclient.methods.GetMethod is a phantom class!
Warning: org.apache.commons.httpclient.URI is a phantom class!
Warning: org.znerd.xmlenc.XMLOutputter is a phantom class!
Warning: org.apache.commons.configuration.PropertiesConfiguration is a phantom class!
Warning: org.apache.commons.math.util.MathUtils is a phantom class!
Warning: org.apache.commons.configuration.Configuration is a phantom class!
Warning: javax.servlet.ServletOutputStream is a phantom class!
Warning: javax.servlet.ServletConfig is a phantom class!
Warning: javax.servlet.ServletResponse is a phantom class!
Warning: javax.servlet.jsp.JspWriter is a phantom class!
Warning: javax.servlet.RequestDispatcher is a phantom class!
Warning: javax.servlet.ServletRequest is a phantom class!
Warning: javax.servlet.Filter is a phantom class!
Warning: javax.servlet.FilterChain is a phantom class!
Warning: javax.servlet.FilterConfig is a phantom class!
Warning: org.mortbay.jetty.security.ServletSSL is a phantom class!
Warning: org.mortbay.io.EndPoint is a phantom class!
Warning: org.mortbay.jetty.Request is a phantom class!
Warning: org.apache.log4j.Level is a phantom class!
Warning: org.apache.log4j.Logger is a phantom class!
Warning: org.apache.commons.lang.ArrayUtils is a phantom class!
Warning: org.apache.log4j.LogManager is a phantom class!
Warning: org.apache.log4j.Appender is a phantom class!
Warning: javax.ws.rs.GET is a phantom class!
Warning: javax.ws.rs.POST is a phantom class!
Warning: javax.ws.rs.core.Context is a phantom class!
Warning: com.sun.jersey.spi.container.ResourceFilters is a phantom class!
Warning: javax.ws.rs.Produces is a phantom class!
Warning: javax.ws.rs.core.Response is a phantom class!
Warning: javax.ws.rs.Path is a phantom class!
Warning: javax.ws.rs.PUT is a phantom class!
Warning: javax.ws.rs.DefaultValue is a phantom class!
Warning: javax.ws.rs.PathParam is a phantom class!
Warning: javax.ws.rs.QueryParam is a phantom class!
Warning: javax.ws.rs.Consumes is a phantom class!
Warning: org.mortbay.log.Log is a phantom class!
Warning: org.apache.commons.daemon.Daemon is a phantom class!
Warning: org.apache.commons.daemon.DaemonContext is a phantom class!
Warning: javax.ws.rs.DELETE is a phantom class!
Warning: javax.ws.rs.core.StreamingOutput is a phantom class!
Warning: org.apache.commons.configuration.SubsetConfiguration is a phantom class!
Warning: org.apache.commons.configuration.ConfigurationException is a phantom class!
Warning: javax.servlet.http.HttpServletRequestWrapper is a phantom class!
Warning: org.apache.log4j.Priority is a phantom class!
Warning: org.apache.log4j.Category is a phantom class!
Warning: org.apache.log4j.FileAppender is a phantom class!
Warning: org.apache.log4j.helpers.QuietWriter is a phantom class!
Warning: org.apache.log4j.spi.LoggingEvent is a phantom class!
Warning: javax.ws.rs.core.Response$Status is a phantom class!
Warning: javax.ws.rs.core.Response$ResponseBuilder is a phantom class!
Warning: org.apache.log4j.AppenderSkeleton is a phantom class!
Warning: org.slf4j.Logger is a phantom class!
Warning: javax.servlet.http.Cookie is a phantom class!
Warning: org.slf4j.LoggerFactory is a phantom class!
Warning: com.sun.jersey.spi.container.ResourceFilter is a phantom class!
Warning: javax.ws.rs.core.MultivaluedMap is a phantom class!
Warning: com.sun.jersey.spi.container.ContainerRequestFilter is a phantom class!
Warning: javax.ws.rs.core.UriBuilder is a phantom class!
Warning: com.sun.jersey.spi.container.ContainerResponseFilter is a phantom class!
Warning: com.sun.jersey.spi.container.ContainerRequest is a phantom class!
No main class given. Inferred 'cfhider.WordCount' as main class.
[Call Graph] For information on where the call graph may be incomplete, use the verbose option to the cg phase.
[cf]SooClass:cfhider.WordCount$IntSumReducer
[cf] class: cfhider.WordCount$IntSumReducer
[cf]SooClass:cfhider.WordCount
[cf] class: cfhider.WordCount
[cf]SooClass:cfhider.WordCount$TokenizerMapper
[cf] class: cfhider.WordCount$TokenizerMapper
2021class name :<init>
2021class name :map
[cf] sootMethod a:map
[cf] sootMethod zystble
unit20210710 :r0 := @this: cfhider.WordCount$TokenizerMapper
Identity statment
the value=r0
the value=@this: cfhider.WordCount$TokenizerMapper
unit20210710 :r1 := @parameter0: java.lang.Object
Identity statment
the value=r1
the value=@parameter0: java.lang.Object
unit20210710 :r2 := @parameter1: org.apache.hadoop.io.Text
Identity statment
the value=r2
the value=@parameter1: org.apache.hadoop.io.Text
unit20210710 :r3 := @parameter2: org.apache.hadoop.mapreduce.Mapper$Context
Identity statment
the value=r3
the value=@parameter2: org.apache.hadoop.mapreduce.Mapper$Context
unit20210710 :$r4 = new java.util.StringTokenizer
AssignStmt statment
the value=$r4
2021=false taintSourceName=$z0
the value=new java.util.StringTokenizer
2021=false taintSourceName=$z0
unit20210710 :$r6 = virtualinvoke r2.<org.apache.hadoop.io.Text: java.lang.String toString()>()
AssignStmt statment
the value=$r6
2021=false taintSourceName=$z0
the value=r2
2021=false taintSourceName=$z0
the value=virtualinvoke r2.<org.apache.hadoop.io.Text: java.lang.String toString()>()
2021=false taintSourceName=$z0
unit20210710 :specialinvoke $r4.<java.util.StringTokenizer: void <init>(java.lang.String)>($r6)
unit20210710 :r5 = $r4
AssignStmt statment
the value=r5
2021=false taintSourceName=$z0
the value=$r4
2021=false taintSourceName=$z0
unit20210710 :$z0 = virtualinvoke r5.<java.util.StringTokenizer: boolean hasMoreTokens()>()
AssignStmt statment
the value=$z0
2021=false taintSourceName=$z0
the value of newlist=[$z0]
unit20210710 :if $z0 == 0 goto return
If statment
the value=$z0
the value=0
unit20210710 :$r7 = r0.<cfhider.WordCount$TokenizerMapper: org.apache.hadoop.io.Text word>
AssignStmt statment
the value=$r7
2021=false taintSourceName=$z0
the value=r0
2021=false taintSourceName=$z0
the value=r0.<cfhider.WordCount$TokenizerMapper: org.apache.hadoop.io.Text word>
2021=false taintSourceName=$z0
unit20210710 :$r8 = virtualinvoke r5.<java.util.StringTokenizer: java.lang.String nextToken()>()
AssignStmt statment
the value=$r8
2021=false taintSourceName=$z0
the value=r5
2021=false taintSourceName=$z0
the value=virtualinvoke r5.<java.util.StringTokenizer: java.lang.String nextToken()>()
2021=false taintSourceName=$z0
unit20210710 :virtualinvoke $r7.<org.apache.hadoop.io.Text: void set(java.lang.String)>($r8)
unit20210710 :$r9 = r0.<cfhider.WordCount$TokenizerMapper: org.apache.hadoop.io.Text word>
AssignStmt statment
the value=$r9
2021=false taintSourceName=$z0
the value=r0
2021=false taintSourceName=$z0
the value=r0.<cfhider.WordCount$TokenizerMapper: org.apache.hadoop.io.Text word>
2021=false taintSourceName=$z0
unit20210710 :$r10 = <cfhider.WordCount$TokenizerMapper: org.apache.hadoop.io.IntWritable one>
AssignStmt statment
the value=$r10
2021=false taintSourceName=$z0
the value=<cfhider.WordCount$TokenizerMapper: org.apache.hadoop.io.IntWritable one>
2021=false taintSourceName=$z0
unit20210710 :virtualinvoke r3.<org.apache.hadoop.mapreduce.Mapper$Context: void write(java.lang.Object,java.lang.Object)>($r9, $r10)
unit20210710 :goto [?= $z0 = virtualinvoke r5.<java.util.StringTokenizer: boolean hasMoreTokens()>()]
unit20210710 :return
2021class name :map
[cf] sootMethod a:map
[cf] sootMethod zystble
unit20210710 :r0 := @this: cfhider.WordCount$TokenizerMapper
Identity statment
the value=r0
the value=@this: cfhider.WordCount$TokenizerMapper
unit20210710 :r1 := @parameter0: java.lang.Object
Identity statment
the value=r1
the value=@parameter0: java.lang.Object
unit20210710 :r2 := @parameter1: java.lang.Object
Identity statment
the value=r2
the value=@parameter1: java.lang.Object
unit20210710 :r3 := @parameter2: org.apache.hadoop.mapreduce.Mapper$Context
Identity statment
the value=r3
the value=@parameter2: org.apache.hadoop.mapreduce.Mapper$Context
unit20210710 :$r4 = (org.apache.hadoop.io.Text) r2
AssignStmt statment
the value=$r4
2021=false taintSourceName=$z0
the value=r2
2021=false taintSourceName=$z0
the value=(org.apache.hadoop.io.Text) r2
2021=false taintSourceName=$z0
unit20210710 :virtualinvoke r0.<cfhider.WordCount$TokenizerMapper: void map(java.lang.Object,org.apache.hadoop.io.Text,org.apache.hadoop.mapreduce.Mapper$Context)>(r1, $r4, r3)
unit20210710 :return
2021class name :<clinit>
[cf]SooClass:invoker.SnowFlake
[cf] class: invoker.SnowFlake
[cf]SooClass:invoker.sgx_invoker
[CFMAP]2021:{cfhider.WordCount$IntSumReducer={}, cfhider.WordCount$TokenizerMapper={map=[$z0]}, cfhider.WordCount={}, invoker.SnowFlake={}}
[INVOKEMAP]2021size:4
[taint]SooClass:cfhider.WordCount$IntSumReducer
[taint] class: cfhider.WordCount$IntSumReducer
methList :{}
[taint not hasActiveBody] sootMethod: <init>
clasname=cfhider.WordCount$IntSumReducer
methodname=<init>
sourcelist2021=[]
20210427node :r0 := @this: cfhider.WordCount$IntSumReducer
20210427node in :[]
20210427node out :[]
currStmt20210423:r0 := @this: cfhider.WordCount$IntSumReducer
20210427node :specialinvoke r0.<org.apache.hadoop.mapreduce.Reducer: void <init>()>()
20210427node in :[]
20210427node out :[]
[taint329]i invoke specialinvoke r0.<org.apache.hadoop.mapreduce.Reducer: void <init>()>()
[taint328]i invoke <org.apache.hadoop.mapreduce.Reducer: void <init>()>
[taint328]i invoke 0
20210427node :$r1 = new org.apache.hadoop.io.IntWritable
20210427node in :[]
普通复制语句1112:$r1 = new org.apache.hadoop.io.IntWritable
[taint source] u:new org.apache.hadoop.io.IntWritable
SourceList:[]
20210427node out :[]
20210427node :specialinvoke $r1.<org.apache.hadoop.io.IntWritable: void <init>()>()
20210427node in :[]
20210427node out :[]
[taint329]i invoke specialinvoke $r1.<org.apache.hadoop.io.IntWritable: void <init>()>()
[taint328]i invoke <org.apache.hadoop.io.IntWritable: void <init>()>
[taint328]i invoke 0
20210427node :r0.<cfhider.WordCount$IntSumReducer: org.apache.hadoop.io.IntWritable result> = $r1
20210427node in :[]
普通复制语句1112:r0.<cfhider.WordCount$IntSumReducer: org.apache.hadoop.io.IntWritable result> = $r1
[taint source] u:r0
SourceList:[]
[taint source] u:$r1
SourceList:[]
20210427node out :[]
20210427node :return
20210427node in :[]
20210427node out :[]
analysis.outSet.size():0
The data isgggg 
<cfhider.WordCount$IntSumReducer: void <init>()>
The data isgggg cfhider.WordCount$IntSumReducer <init> [] {cfhider.WordCount$IntSumReducer={<init>=[]}, cfhider.WordCount$TokenizerMapper={map=[$z0]}, cfhider.WordCount={}, invoker.SnowFlake={}}  {cfhider.WordCount$IntSumReducer={}, cfhider.WordCount$TokenizerMapper={}, cfhider.WordCount={}, invoker.SnowFlake={}}
Coming...
doAnalysis Startingqqqqqqqq.....
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:r0.<cfhider.WordCount$IntSumReducer: org.apache.hadoop.io.IntWritable result> = $r1
currStmt left value20210420:r0.<cfhider.WordCount$IntSumReducer: org.apache.hadoop.io.IntWritable result>
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
[taint329]i invoke specialinvoke $r1.<org.apache.hadoop.io.IntWritable: void <init>()>()
[taint328]i invoke <org.apache.hadoop.io.IntWritable: void <init>()>
[taint328]i invoke 0
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$r1 = new org.apache.hadoop.io.IntWritable
currStmt left value20210420:$r1
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
[taint329]i invoke specialinvoke r0.<org.apache.hadoop.mapreduce.Reducer: void <init>()>()
[taint328]i invoke <org.apache.hadoop.mapreduce.Reducer: void <init>()>
[taint328]i invoke 0
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
doAnalysis endqqqqqqq.....
come here
[taint into] sootMethod: reduce
class name :cfhider.WordCount$IntSumReducer
method name :reduce
method list :[]
clasname=cfhider.WordCount$IntSumReducer
methodname=reduce
sourcelist2021=[]
20210427node :r0 := @this: cfhider.WordCount$IntSumReducer
20210427node in :[]
20210427node out :[]
currStmt20210423:r0 := @this: cfhider.WordCount$IntSumReducer
20210427node :r1 := @parameter0: org.apache.hadoop.io.Text
20210427node in :[]
[idStmt]iiiiiii r1 := @parameter0: org.apache.hadoop.io.Text  index:0
ClassName:cfhider.WordCount$IntSumReducer
MethodName:reduce
20210427node out :[]
currStmt20210423:r1 := @parameter0: org.apache.hadoop.io.Text
20210427node :r2 := @parameter1: java.lang.Iterable
20210427node in :[]
[idStmt]iiiiiii r2 := @parameter1: java.lang.Iterable  index:1
ClassName:cfhider.WordCount$IntSumReducer
MethodName:reduce
aaaa:0
20210427node out :[]
currStmt20210423:r2 := @parameter1: java.lang.Iterable
20210427node :r3 := @parameter2: org.apache.hadoop.mapreduce.Reducer$Context
20210427node in :[]
[idStmt]iiiiiii r3 := @parameter2: org.apache.hadoop.mapreduce.Reducer$Context  index:2
ClassName:cfhider.WordCount$IntSumReducer
MethodName:reduce
aaaa:0
20210427node out :[]
currStmt20210423:r3 := @parameter2: org.apache.hadoop.mapreduce.Reducer$Context
20210427node :i0 = 0
20210427node in :[]
普通复制语句1112:i0 = 0
[taint source] u:0
SourceList:[]
20210427node out :[]
20210427node :r4 = interfaceinvoke r2.<java.lang.Iterable: java.util.Iterator iterator()>()
20210427node in :[]
调用语句赋值给变量:r4 = interfaceinvoke r2.<java.lang.Iterable: java.util.Iterator iterator()>()
20210427node out :[]
[taint328]a invoke <java.lang.Iterable: java.util.Iterator iterator()>
[taint328]a invoke 0
20210427node :$z0 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>()
20210427node in :[]
调用语句赋值给变量:$z0 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>()
20210427node out :[]
[taint328]a invoke <java.util.Iterator: boolean hasNext()>
[taint328]a invoke 0
20210427node :if $z0 == 0 goto $r7 = r0.<cfhider.WordCount$IntSumReducer: org.apache.hadoop.io.IntWritable result>
20210427node in :[]
20210427node out :[]
Have
Stmt if :if $z0 == 0 goto $r7 = r0.<cfhider.WordCount$IntSumReducer: org.apache.hadoop.io.IntWritable result>Stmt if value:$z0 == 0the value=$z0
the value=0
maintainValues.size0
ifValues1
20210427node :$r7 = r0.<cfhider.WordCount$IntSumReducer: org.apache.hadoop.io.IntWritable result>
20210427node in :[]
普通复制语句1112:$r7 = r0.<cfhider.WordCount$IntSumReducer: org.apache.hadoop.io.IntWritable result>
[taint source] u:r0
SourceList:[]
[taint source] u:r0.<cfhider.WordCount$IntSumReducer: org.apache.hadoop.io.IntWritable result>
SourceList:[]
20210427node out :[]
20210427node :virtualinvoke $r7.<org.apache.hadoop.io.IntWritable: void set(int)>(i0)
20210427node in :[]
20210427node out :[]
[taint329]i invoke virtualinvoke $r7.<org.apache.hadoop.io.IntWritable: void set(int)>(i0)
[taint328]i invoke <org.apache.hadoop.io.IntWritable: void set(int)>
[taint328]i invoke 1
value:i0
isoutSetContains  false value:i0 index:0
20210427node :$r8 = r0.<cfhider.WordCount$IntSumReducer: org.apache.hadoop.io.IntWritable result>
20210427node in :[]
普通复制语句1112:$r8 = r0.<cfhider.WordCount$IntSumReducer: org.apache.hadoop.io.IntWritable result>
[taint source] u:r0
SourceList:[]
[taint source] u:r0.<cfhider.WordCount$IntSumReducer: org.apache.hadoop.io.IntWritable result>
SourceList:[]
20210427node out :[]
20210427node :virtualinvoke r3.<org.apache.hadoop.mapreduce.Reducer$Context: void write(java.lang.Object,java.lang.Object)>(r1, $r8)
20210427node in :[]
20210427node out :[]
[taint329]i invoke virtualinvoke r3.<org.apache.hadoop.mapreduce.Reducer$Context: void write(java.lang.Object,java.lang.Object)>(r1, $r8)
[taint328]i invoke <org.apache.hadoop.mapreduce.TaskInputOutputContext: void write(java.lang.Object,java.lang.Object)>
[taint328]i invoke 2
value:r1
isoutSetContains  false value:r1 index:0
value:$r8
isoutSetContains  false value:$r8 index:1
20210427node :return
20210427node in :[]
20210427node out :[]
20210427node :$r6 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>()
20210427node in :[]
调用语句赋值给变量:$r6 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>()
20210427node out :[]
[taint328]a invoke <java.util.Iterator: java.lang.Object next()>
[taint328]a invoke 0
20210427node :r5 = (org.apache.hadoop.io.IntWritable) $r6
20210427node in :[]
普通复制语句1112:r5 = (org.apache.hadoop.io.IntWritable) $r6
[taint source] u:$r6
SourceList:[]
[taint source] u:(org.apache.hadoop.io.IntWritable) $r6
SourceList:[]
20210427node out :[]
20210427node :$i1 = virtualinvoke r5.<org.apache.hadoop.io.IntWritable: int get()>()
20210427node in :[]
调用语句赋值给变量:$i1 = virtualinvoke r5.<org.apache.hadoop.io.IntWritable: int get()>()
20210427node out :[]
[taint328]a invoke <org.apache.hadoop.io.IntWritable: int get()>
[taint328]a invoke 0
20210427node :i0 = i0 + $i1
20210427node in :[]
普通复制语句1112:i0 = i0 + $i1
[taint source] u:i0
SourceList:[]
[taint source] u:$i1
SourceList:[]
[taint source] u:i0 + $i1
SourceList:[]
20210427node out :[]
20210427node :goto [?= $z0 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>()]
20210427node in :[]
20210427node out :[]
analysis.outSet.size():0
[CFMAP]2021 After taintAnalysis:{cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={map=[$z0]}, cfhider.WordCount={}, invoker.SnowFlake={}}
The data isgggg 
<cfhider.WordCount$IntSumReducer: void reduce(org.apache.hadoop.io.Text,java.lang.Iterable,org.apache.hadoop.mapreduce.Reducer$Context)>
The data isgggg cfhider.WordCount$IntSumReducer reduce [] {cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={map=[$z0]}, cfhider.WordCount={}, invoker.SnowFlake={}}  {cfhider.WordCount$IntSumReducer={reduce=[I@6f902748}, cfhider.WordCount$TokenizerMapper={}, cfhider.WordCount={}, invoker.SnowFlake={}}
Coming...
doAnalysis Startingqqqqqqqq.....
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:i0 = i0 + $i1
currStmt left value20210420:i0
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$i1 = virtualinvoke r5.<org.apache.hadoop.io.IntWritable: int get()>()
currStmt left value20210420:$i1
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:r5 = (org.apache.hadoop.io.IntWritable) $r6
currStmt left value20210420:r5
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$r6 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>()
currStmt left value20210420:$r6
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
[taint329]i invoke virtualinvoke r3.<org.apache.hadoop.mapreduce.Reducer$Context: void write(java.lang.Object,java.lang.Object)>(r1, $r8)
[taint328]i invoke <org.apache.hadoop.mapreduce.TaskInputOutputContext: void write(java.lang.Object,java.lang.Object)>
[taint328]i invoke 2
value:r1
value:$r8
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$r8 = r0.<cfhider.WordCount$IntSumReducer: org.apache.hadoop.io.IntWritable result>
currStmt left value20210420:$r8
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
[taint329]i invoke virtualinvoke $r7.<org.apache.hadoop.io.IntWritable: void set(int)>(i0)
[taint328]i invoke <org.apache.hadoop.io.IntWritable: void set(int)>
[taint328]i invoke 1
value:i0
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$r7 = r0.<cfhider.WordCount$IntSumReducer: org.apache.hadoop.io.IntWritable result>
currStmt left value20210420:$r7
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
Have
the value=$z0
the value=0
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$z0 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>()
currStmt left value20210420:$z0
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:r4 = interfaceinvoke r2.<java.lang.Iterable: java.util.Iterator iterator()>()
currStmt left value20210420:r4
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:i0 = 0
currStmt left value20210420:i0
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
doAnalysis endqqqqqqq.....
come here
[CFMAP]2021 After BackwardAnalysis:{cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={map=[$z0]}, cfhider.WordCount={}, invoker.SnowFlake={}}
[taint into] sootMethod: reduce
[]
class name :cfhider.WordCount$IntSumReducer
method name :reduce
method list :[]
clasname=cfhider.WordCount$IntSumReducer
methodname=reduce
sourcelist2021=[]
20210427node :r0 := @this: cfhider.WordCount$IntSumReducer
20210427node in :[]
20210427node out :[]
currStmt20210423:r0 := @this: cfhider.WordCount$IntSumReducer
20210427node :r1 := @parameter0: java.lang.Object
20210427node in :[]
[idStmt]iiiiiii r1 := @parameter0: java.lang.Object  index:0
ClassName:cfhider.WordCount$IntSumReducer
MethodName:reduce
aaaa:0
20210427node out :[]
currStmt20210423:r1 := @parameter0: java.lang.Object
20210427node :r2 := @parameter1: java.lang.Iterable
20210427node in :[]
[idStmt]iiiiiii r2 := @parameter1: java.lang.Iterable  index:1
ClassName:cfhider.WordCount$IntSumReducer
MethodName:reduce
aaaa:0
20210427node out :[]
currStmt20210423:r2 := @parameter1: java.lang.Iterable
20210427node :r3 := @parameter2: org.apache.hadoop.mapreduce.Reducer$Context
20210427node in :[]
[idStmt]iiiiiii r3 := @parameter2: org.apache.hadoop.mapreduce.Reducer$Context  index:2
ClassName:cfhider.WordCount$IntSumReducer
MethodName:reduce
aaaa:0
20210427node out :[]
currStmt20210423:r3 := @parameter2: org.apache.hadoop.mapreduce.Reducer$Context
20210427node :$r4 = (org.apache.hadoop.io.Text) r1
20210427node in :[]
普通复制语句1112:$r4 = (org.apache.hadoop.io.Text) r1
[taint source] u:r1
SourceList:[]
[taint source] u:(org.apache.hadoop.io.Text) r1
SourceList:[]
20210427node out :[]
20210427node :virtualinvoke r0.<cfhider.WordCount$IntSumReducer: void reduce(org.apache.hadoop.io.Text,java.lang.Iterable,org.apache.hadoop.mapreduce.Reducer$Context)>($r4, r2, r3)
20210427node in :[]
20210427node out :[]
[taint329]i invoke virtualinvoke r0.<cfhider.WordCount$IntSumReducer: void reduce(org.apache.hadoop.io.Text,java.lang.Iterable,org.apache.hadoop.mapreduce.Reducer$Context)>($r4, r2, r3)
[taint328]i invoke <cfhider.WordCount$IntSumReducer: void reduce(org.apache.hadoop.io.Text,java.lang.Iterable,org.apache.hadoop.mapreduce.Reducer$Context)>
[taint328]i invoke 3
value:$r4
isoutSetContains  false value:$r4 index:0
value:r2
isoutSetContains  false value:r2 index:1
value:r3
isoutSetContains  false value:r3 index:2
[invokemap]invoke:reduce  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
20210427node :return
20210427node in :[]
20210427node out :[]
analysis.outSet.size():0
[CFMAP]2021 After taintAnalysis:{cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={map=[$z0]}, cfhider.WordCount={}, invoker.SnowFlake={}}
The data isgggg 
<cfhider.WordCount$IntSumReducer: void reduce(java.lang.Object,java.lang.Iterable,org.apache.hadoop.mapreduce.Reducer$Context)>
The data isgggg cfhider.WordCount$IntSumReducer reduce [] {cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={map=[$z0]}, cfhider.WordCount={}, invoker.SnowFlake={}}  {cfhider.WordCount$IntSumReducer={reduce=[I@61032130}, cfhider.WordCount$TokenizerMapper={}, cfhider.WordCount={}, invoker.SnowFlake={}}
Coming...
doAnalysis Startingqqqqqqqq.....
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
[taint329]i invoke virtualinvoke r0.<cfhider.WordCount$IntSumReducer: void reduce(org.apache.hadoop.io.Text,java.lang.Iterable,org.apache.hadoop.mapreduce.Reducer$Context)>($r4, r2, r3)
[taint328]i invoke <cfhider.WordCount$IntSumReducer: void reduce(org.apache.hadoop.io.Text,java.lang.Iterable,org.apache.hadoop.mapreduce.Reducer$Context)>
[taint328]i invoke 3
value:$r4
in here:[I@14780812
[invokemap]invoke:reduce  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
value:r2
in here:[I@14780812
[invokemap]invoke:reduce  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
value:r3
in here:[I@14780812
[invokemap]invoke:reduce  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$r4 = (org.apache.hadoop.io.Text) r1
currStmt left value20210420:$r4
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
doAnalysis endqqqqqqq.....
come here
[CFMAP]2021 After BackwardAnalysis:{cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={map=[$z0]}, cfhider.WordCount={}, invoker.SnowFlake={}}
[taint into] sootMethod: <init>
[]
class name :cfhider.WordCount$IntSumReducer
method name :<init>
method list :[]
clasname=cfhider.WordCount$IntSumReducer
methodname=<init>
sourcelist2021=[]
20210427node :r0 := @this: cfhider.WordCount$IntSumReducer
20210427node in :[]
20210427node out :[]
currStmt20210423:r0 := @this: cfhider.WordCount$IntSumReducer
20210427node :specialinvoke r0.<org.apache.hadoop.mapreduce.Reducer: void <init>()>()
20210427node in :[]
20210427node out :[]
[taint329]i invoke specialinvoke r0.<org.apache.hadoop.mapreduce.Reducer: void <init>()>()
[taint328]i invoke <org.apache.hadoop.mapreduce.Reducer: void <init>()>
[taint328]i invoke 0
20210427node :$r1 = new org.apache.hadoop.io.IntWritable
20210427node in :[]
普通复制语句1112:$r1 = new org.apache.hadoop.io.IntWritable
[taint source] u:new org.apache.hadoop.io.IntWritable
SourceList:[]
20210427node out :[]
20210427node :specialinvoke $r1.<org.apache.hadoop.io.IntWritable: void <init>()>()
20210427node in :[]
20210427node out :[]
[taint329]i invoke specialinvoke $r1.<org.apache.hadoop.io.IntWritable: void <init>()>()
[taint328]i invoke <org.apache.hadoop.io.IntWritable: void <init>()>
[taint328]i invoke 0
20210427node :r0.<cfhider.WordCount$IntSumReducer: org.apache.hadoop.io.IntWritable result> = $r1
20210427node in :[]
普通复制语句1112:r0.<cfhider.WordCount$IntSumReducer: org.apache.hadoop.io.IntWritable result> = $r1
[taint source] u:r0
SourceList:[]
[taint source] u:$r1
SourceList:[]
20210427node out :[]
20210427node :return
20210427node in :[]
20210427node out :[]
analysis.outSet.size():0
[CFMAP]2021 After taintAnalysis:{cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={map=[$z0]}, cfhider.WordCount={}, invoker.SnowFlake={}}
The data isgggg 
<cfhider.WordCount$IntSumReducer: void <init>()>
The data isgggg cfhider.WordCount$IntSumReducer <init> [] {cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={map=[$z0]}, cfhider.WordCount={}, invoker.SnowFlake={}}  {cfhider.WordCount$IntSumReducer={reduce=[I@61032130}, cfhider.WordCount$TokenizerMapper={}, cfhider.WordCount={}, invoker.SnowFlake={}}
Coming...
doAnalysis Startingqqqqqqqq.....
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:r0.<cfhider.WordCount$IntSumReducer: org.apache.hadoop.io.IntWritable result> = $r1
currStmt left value20210420:r0.<cfhider.WordCount$IntSumReducer: org.apache.hadoop.io.IntWritable result>
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
[taint329]i invoke specialinvoke $r1.<org.apache.hadoop.io.IntWritable: void <init>()>()
[taint328]i invoke <org.apache.hadoop.io.IntWritable: void <init>()>
[taint328]i invoke 0
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$r1 = new org.apache.hadoop.io.IntWritable
currStmt left value20210420:$r1
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
[taint329]i invoke specialinvoke r0.<org.apache.hadoop.mapreduce.Reducer: void <init>()>()
[taint328]i invoke <org.apache.hadoop.mapreduce.Reducer: void <init>()>
[taint328]i invoke 0
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
doAnalysis endqqqqqqq.....
come here
[CFMAP]2021 After BackwardAnalysis:{cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={map=[$z0]}, cfhider.WordCount={}, invoker.SnowFlake={}}
[taint into] sootMethod: reduce
[]
class name :cfhider.WordCount$IntSumReducer
method name :reduce
method list :[]
clasname=cfhider.WordCount$IntSumReducer
methodname=reduce
sourcelist2021=[]
20210427node :r0 := @this: cfhider.WordCount$IntSumReducer
20210427node in :[]
20210427node out :[]
currStmt20210423:r0 := @this: cfhider.WordCount$IntSumReducer
20210427node :r1 := @parameter0: org.apache.hadoop.io.Text
20210427node in :[]
[idStmt]iiiiiii r1 := @parameter0: org.apache.hadoop.io.Text  index:0
ClassName:cfhider.WordCount$IntSumReducer
MethodName:reduce
aaaa:0
20210427node out :[]
currStmt20210423:r1 := @parameter0: org.apache.hadoop.io.Text
20210427node :r2 := @parameter1: java.lang.Iterable
20210427node in :[]
[idStmt]iiiiiii r2 := @parameter1: java.lang.Iterable  index:1
ClassName:cfhider.WordCount$IntSumReducer
MethodName:reduce
aaaa:0
20210427node out :[]
currStmt20210423:r2 := @parameter1: java.lang.Iterable
20210427node :r3 := @parameter2: org.apache.hadoop.mapreduce.Reducer$Context
20210427node in :[]
[idStmt]iiiiiii r3 := @parameter2: org.apache.hadoop.mapreduce.Reducer$Context  index:2
ClassName:cfhider.WordCount$IntSumReducer
MethodName:reduce
aaaa:0
20210427node out :[]
currStmt20210423:r3 := @parameter2: org.apache.hadoop.mapreduce.Reducer$Context
20210427node :i0 = 0
20210427node in :[]
普通复制语句1112:i0 = 0
[taint source] u:0
SourceList:[]
20210427node out :[]
20210427node :r4 = interfaceinvoke r2.<java.lang.Iterable: java.util.Iterator iterator()>()
20210427node in :[]
调用语句赋值给变量:r4 = interfaceinvoke r2.<java.lang.Iterable: java.util.Iterator iterator()>()
20210427node out :[]
[taint328]a invoke <java.lang.Iterable: java.util.Iterator iterator()>
[taint328]a invoke 0
20210427node :$z0 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>()
20210427node in :[]
调用语句赋值给变量:$z0 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>()
20210427node out :[]
[taint328]a invoke <java.util.Iterator: boolean hasNext()>
[taint328]a invoke 0
20210427node :if $z0 == 0 goto $r7 = r0.<cfhider.WordCount$IntSumReducer: org.apache.hadoop.io.IntWritable result>
20210427node in :[]
20210427node out :[]
Have
Stmt if :if $z0 == 0 goto $r7 = r0.<cfhider.WordCount$IntSumReducer: org.apache.hadoop.io.IntWritable result>Stmt if value:$z0 == 0the value=$z0
the value=0
maintainValues.size0
ifValues1
20210427node :$r7 = r0.<cfhider.WordCount$IntSumReducer: org.apache.hadoop.io.IntWritable result>
20210427node in :[]
普通复制语句1112:$r7 = r0.<cfhider.WordCount$IntSumReducer: org.apache.hadoop.io.IntWritable result>
[taint source] u:r0
SourceList:[]
[taint source] u:r0.<cfhider.WordCount$IntSumReducer: org.apache.hadoop.io.IntWritable result>
SourceList:[]
20210427node out :[]
20210427node :virtualinvoke $r7.<org.apache.hadoop.io.IntWritable: void set(int)>(i0)
20210427node in :[]
20210427node out :[]
[taint329]i invoke virtualinvoke $r7.<org.apache.hadoop.io.IntWritable: void set(int)>(i0)
[taint328]i invoke <org.apache.hadoop.io.IntWritable: void set(int)>
[taint328]i invoke 1
value:i0
isoutSetContains  false value:i0 index:0
20210427node :$r8 = r0.<cfhider.WordCount$IntSumReducer: org.apache.hadoop.io.IntWritable result>
20210427node in :[]
普通复制语句1112:$r8 = r0.<cfhider.WordCount$IntSumReducer: org.apache.hadoop.io.IntWritable result>
[taint source] u:r0
SourceList:[]
[taint source] u:r0.<cfhider.WordCount$IntSumReducer: org.apache.hadoop.io.IntWritable result>
SourceList:[]
20210427node out :[]
20210427node :virtualinvoke r3.<org.apache.hadoop.mapreduce.Reducer$Context: void write(java.lang.Object,java.lang.Object)>(r1, $r8)
20210427node in :[]
20210427node out :[]
[taint329]i invoke virtualinvoke r3.<org.apache.hadoop.mapreduce.Reducer$Context: void write(java.lang.Object,java.lang.Object)>(r1, $r8)
[taint328]i invoke <org.apache.hadoop.mapreduce.TaskInputOutputContext: void write(java.lang.Object,java.lang.Object)>
[taint328]i invoke 2
value:r1
isoutSetContains  false value:r1 index:0
value:$r8
isoutSetContains  false value:$r8 index:1
20210427node :return
20210427node in :[]
20210427node out :[]
20210427node :$r6 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>()
20210427node in :[]
调用语句赋值给变量:$r6 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>()
20210427node out :[]
[taint328]a invoke <java.util.Iterator: java.lang.Object next()>
[taint328]a invoke 0
20210427node :r5 = (org.apache.hadoop.io.IntWritable) $r6
20210427node in :[]
普通复制语句1112:r5 = (org.apache.hadoop.io.IntWritable) $r6
[taint source] u:$r6
SourceList:[]
[taint source] u:(org.apache.hadoop.io.IntWritable) $r6
SourceList:[]
20210427node out :[]
20210427node :$i1 = virtualinvoke r5.<org.apache.hadoop.io.IntWritable: int get()>()
20210427node in :[]
调用语句赋值给变量:$i1 = virtualinvoke r5.<org.apache.hadoop.io.IntWritable: int get()>()
20210427node out :[]
[taint328]a invoke <org.apache.hadoop.io.IntWritable: int get()>
[taint328]a invoke 0
20210427node :i0 = i0 + $i1
20210427node in :[]
普通复制语句1112:i0 = i0 + $i1
[taint source] u:i0
SourceList:[]
[taint source] u:$i1
SourceList:[]
[taint source] u:i0 + $i1
SourceList:[]
20210427node out :[]
20210427node :goto [?= $z0 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>()]
20210427node in :[]
20210427node out :[]
analysis.outSet.size():0
[CFMAP]2021 After taintAnalysis:{cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={map=[$z0]}, cfhider.WordCount={}, invoker.SnowFlake={}}
The data isgggg 
<cfhider.WordCount$IntSumReducer: void reduce(org.apache.hadoop.io.Text,java.lang.Iterable,org.apache.hadoop.mapreduce.Reducer$Context)>
The data isgggg cfhider.WordCount$IntSumReducer reduce [] {cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={map=[$z0]}, cfhider.WordCount={}, invoker.SnowFlake={}}  {cfhider.WordCount$IntSumReducer={reduce=[I@5459e03d}, cfhider.WordCount$TokenizerMapper={}, cfhider.WordCount={}, invoker.SnowFlake={}}
Coming...
doAnalysis Startingqqqqqqqq.....
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:i0 = i0 + $i1
currStmt left value20210420:i0
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$i1 = virtualinvoke r5.<org.apache.hadoop.io.IntWritable: int get()>()
currStmt left value20210420:$i1
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:r5 = (org.apache.hadoop.io.IntWritable) $r6
currStmt left value20210420:r5
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$r6 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>()
currStmt left value20210420:$r6
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
[taint329]i invoke virtualinvoke r3.<org.apache.hadoop.mapreduce.Reducer$Context: void write(java.lang.Object,java.lang.Object)>(r1, $r8)
[taint328]i invoke <org.apache.hadoop.mapreduce.TaskInputOutputContext: void write(java.lang.Object,java.lang.Object)>
[taint328]i invoke 2
value:r1
value:$r8
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$r8 = r0.<cfhider.WordCount$IntSumReducer: org.apache.hadoop.io.IntWritable result>
currStmt left value20210420:$r8
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
[taint329]i invoke virtualinvoke $r7.<org.apache.hadoop.io.IntWritable: void set(int)>(i0)
[taint328]i invoke <org.apache.hadoop.io.IntWritable: void set(int)>
[taint328]i invoke 1
value:i0
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$r7 = r0.<cfhider.WordCount$IntSumReducer: org.apache.hadoop.io.IntWritable result>
currStmt left value20210420:$r7
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
Have
the value=$z0
the value=0
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$z0 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>()
currStmt left value20210420:$z0
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:r4 = interfaceinvoke r2.<java.lang.Iterable: java.util.Iterator iterator()>()
currStmt left value20210420:r4
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:i0 = 0
currStmt left value20210420:i0
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
doAnalysis endqqqqqqq.....
come here
[CFMAP]2021 After BackwardAnalysis:{cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={map=[$z0]}, cfhider.WordCount={}, invoker.SnowFlake={}}
[taint into] sootMethod: reduce
[]
class name :cfhider.WordCount$IntSumReducer
method name :reduce
method list :[]
clasname=cfhider.WordCount$IntSumReducer
methodname=reduce
sourcelist2021=[]
20210427node :r0 := @this: cfhider.WordCount$IntSumReducer
20210427node in :[]
20210427node out :[]
currStmt20210423:r0 := @this: cfhider.WordCount$IntSumReducer
20210427node :r1 := @parameter0: java.lang.Object
20210427node in :[]
[idStmt]iiiiiii r1 := @parameter0: java.lang.Object  index:0
ClassName:cfhider.WordCount$IntSumReducer
MethodName:reduce
aaaa:0
20210427node out :[]
currStmt20210423:r1 := @parameter0: java.lang.Object
20210427node :r2 := @parameter1: java.lang.Iterable
20210427node in :[]
[idStmt]iiiiiii r2 := @parameter1: java.lang.Iterable  index:1
ClassName:cfhider.WordCount$IntSumReducer
MethodName:reduce
aaaa:0
20210427node out :[]
currStmt20210423:r2 := @parameter1: java.lang.Iterable
20210427node :r3 := @parameter2: org.apache.hadoop.mapreduce.Reducer$Context
20210427node in :[]
[idStmt]iiiiiii r3 := @parameter2: org.apache.hadoop.mapreduce.Reducer$Context  index:2
ClassName:cfhider.WordCount$IntSumReducer
MethodName:reduce
aaaa:0
20210427node out :[]
currStmt20210423:r3 := @parameter2: org.apache.hadoop.mapreduce.Reducer$Context
20210427node :$r4 = (org.apache.hadoop.io.Text) r1
20210427node in :[]
普通复制语句1112:$r4 = (org.apache.hadoop.io.Text) r1
[taint source] u:r1
SourceList:[]
[taint source] u:(org.apache.hadoop.io.Text) r1
SourceList:[]
20210427node out :[]
20210427node :virtualinvoke r0.<cfhider.WordCount$IntSumReducer: void reduce(org.apache.hadoop.io.Text,java.lang.Iterable,org.apache.hadoop.mapreduce.Reducer$Context)>($r4, r2, r3)
20210427node in :[]
20210427node out :[]
[taint329]i invoke virtualinvoke r0.<cfhider.WordCount$IntSumReducer: void reduce(org.apache.hadoop.io.Text,java.lang.Iterable,org.apache.hadoop.mapreduce.Reducer$Context)>($r4, r2, r3)
[taint328]i invoke <cfhider.WordCount$IntSumReducer: void reduce(org.apache.hadoop.io.Text,java.lang.Iterable,org.apache.hadoop.mapreduce.Reducer$Context)>
[taint328]i invoke 3
value:$r4
isoutSetContains  false value:$r4 index:0
value:r2
isoutSetContains  false value:r2 index:1
value:r3
isoutSetContains  false value:r3 index:2
[invokemap]invoke:reduce  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
20210427node :return
20210427node in :[]
20210427node out :[]
analysis.outSet.size():0
[CFMAP]2021 After taintAnalysis:{cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={map=[$z0]}, cfhider.WordCount={}, invoker.SnowFlake={}}
The data isgggg 
<cfhider.WordCount$IntSumReducer: void reduce(java.lang.Object,java.lang.Iterable,org.apache.hadoop.mapreduce.Reducer$Context)>
The data isgggg cfhider.WordCount$IntSumReducer reduce [] {cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={map=[$z0]}, cfhider.WordCount={}, invoker.SnowFlake={}}  {cfhider.WordCount$IntSumReducer={reduce=[I@5890f00e}, cfhider.WordCount$TokenizerMapper={}, cfhider.WordCount={}, invoker.SnowFlake={}}
Coming...
doAnalysis Startingqqqqqqqq.....
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
[taint329]i invoke virtualinvoke r0.<cfhider.WordCount$IntSumReducer: void reduce(org.apache.hadoop.io.Text,java.lang.Iterable,org.apache.hadoop.mapreduce.Reducer$Context)>($r4, r2, r3)
[taint328]i invoke <cfhider.WordCount$IntSumReducer: void reduce(org.apache.hadoop.io.Text,java.lang.Iterable,org.apache.hadoop.mapreduce.Reducer$Context)>
[taint328]i invoke 3
value:$r4
in here:[I@1380548f
[invokemap]invoke:reduce  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
value:r2
in here:[I@1380548f
[invokemap]invoke:reduce  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
value:r3
in here:[I@1380548f
[invokemap]invoke:reduce  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$r4 = (org.apache.hadoop.io.Text) r1
currStmt left value20210420:$r4
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
doAnalysis endqqqqqqq.....
come here
[CFMAP]2021 After BackwardAnalysis:{cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={map=[$z0]}, cfhider.WordCount={}, invoker.SnowFlake={}}
[taint into] sootMethod: <init>
[]
class name :cfhider.WordCount$IntSumReducer
method name :<init>
method list :[]
clasname=cfhider.WordCount$IntSumReducer
methodname=<init>
sourcelist2021=[]
20210427node :r0 := @this: cfhider.WordCount$IntSumReducer
20210427node in :[]
20210427node out :[]
currStmt20210423:r0 := @this: cfhider.WordCount$IntSumReducer
20210427node :specialinvoke r0.<org.apache.hadoop.mapreduce.Reducer: void <init>()>()
20210427node in :[]
20210427node out :[]
[taint329]i invoke specialinvoke r0.<org.apache.hadoop.mapreduce.Reducer: void <init>()>()
[taint328]i invoke <org.apache.hadoop.mapreduce.Reducer: void <init>()>
[taint328]i invoke 0
20210427node :$r1 = new org.apache.hadoop.io.IntWritable
20210427node in :[]
普通复制语句1112:$r1 = new org.apache.hadoop.io.IntWritable
[taint source] u:new org.apache.hadoop.io.IntWritable
SourceList:[]
20210427node out :[]
20210427node :specialinvoke $r1.<org.apache.hadoop.io.IntWritable: void <init>()>()
20210427node in :[]
20210427node out :[]
[taint329]i invoke specialinvoke $r1.<org.apache.hadoop.io.IntWritable: void <init>()>()
[taint328]i invoke <org.apache.hadoop.io.IntWritable: void <init>()>
[taint328]i invoke 0
20210427node :r0.<cfhider.WordCount$IntSumReducer: org.apache.hadoop.io.IntWritable result> = $r1
20210427node in :[]
普通复制语句1112:r0.<cfhider.WordCount$IntSumReducer: org.apache.hadoop.io.IntWritable result> = $r1
[taint source] u:r0
SourceList:[]
[taint source] u:$r1
SourceList:[]
20210427node out :[]
20210427node :return
20210427node in :[]
20210427node out :[]
analysis.outSet.size():0
[CFMAP]2021 After taintAnalysis:{cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={map=[$z0]}, cfhider.WordCount={}, invoker.SnowFlake={}}
The data isgggg 
<cfhider.WordCount$IntSumReducer: void <init>()>
The data isgggg cfhider.WordCount$IntSumReducer <init> [] {cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={map=[$z0]}, cfhider.WordCount={}, invoker.SnowFlake={}}  {cfhider.WordCount$IntSumReducer={reduce=[I@5890f00e}, cfhider.WordCount$TokenizerMapper={}, cfhider.WordCount={}, invoker.SnowFlake={}}
Coming...
doAnalysis Startingqqqqqqqq.....
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:r0.<cfhider.WordCount$IntSumReducer: org.apache.hadoop.io.IntWritable result> = $r1
currStmt left value20210420:r0.<cfhider.WordCount$IntSumReducer: org.apache.hadoop.io.IntWritable result>
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
[taint329]i invoke specialinvoke $r1.<org.apache.hadoop.io.IntWritable: void <init>()>()
[taint328]i invoke <org.apache.hadoop.io.IntWritable: void <init>()>
[taint328]i invoke 0
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$r1 = new org.apache.hadoop.io.IntWritable
currStmt left value20210420:$r1
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
[taint329]i invoke specialinvoke r0.<org.apache.hadoop.mapreduce.Reducer: void <init>()>()
[taint328]i invoke <org.apache.hadoop.mapreduce.Reducer: void <init>()>
[taint328]i invoke 0
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
doAnalysis endqqqqqqq.....
come here
[CFMAP]2021 After BackwardAnalysis:{cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={map=[$z0]}, cfhider.WordCount={}, invoker.SnowFlake={}}
[taint into] sootMethod: reduce
[]
class name :cfhider.WordCount$IntSumReducer
method name :reduce
method list :[]
clasname=cfhider.WordCount$IntSumReducer
methodname=reduce
sourcelist2021=[]
20210427node :r0 := @this: cfhider.WordCount$IntSumReducer
20210427node in :[]
20210427node out :[]
currStmt20210423:r0 := @this: cfhider.WordCount$IntSumReducer
20210427node :r1 := @parameter0: org.apache.hadoop.io.Text
20210427node in :[]
[idStmt]iiiiiii r1 := @parameter0: org.apache.hadoop.io.Text  index:0
ClassName:cfhider.WordCount$IntSumReducer
MethodName:reduce
aaaa:0
20210427node out :[]
currStmt20210423:r1 := @parameter0: org.apache.hadoop.io.Text
20210427node :r2 := @parameter1: java.lang.Iterable
20210427node in :[]
[idStmt]iiiiiii r2 := @parameter1: java.lang.Iterable  index:1
ClassName:cfhider.WordCount$IntSumReducer
MethodName:reduce
aaaa:0
20210427node out :[]
currStmt20210423:r2 := @parameter1: java.lang.Iterable
20210427node :r3 := @parameter2: org.apache.hadoop.mapreduce.Reducer$Context
20210427node in :[]
[idStmt]iiiiiii r3 := @parameter2: org.apache.hadoop.mapreduce.Reducer$Context  index:2
ClassName:cfhider.WordCount$IntSumReducer
MethodName:reduce
aaaa:0
20210427node out :[]
currStmt20210423:r3 := @parameter2: org.apache.hadoop.mapreduce.Reducer$Context
20210427node :i0 = 0
20210427node in :[]
普通复制语句1112:i0 = 0
[taint source] u:0
SourceList:[]
20210427node out :[]
20210427node :r4 = interfaceinvoke r2.<java.lang.Iterable: java.util.Iterator iterator()>()
20210427node in :[]
调用语句赋值给变量:r4 = interfaceinvoke r2.<java.lang.Iterable: java.util.Iterator iterator()>()
20210427node out :[]
[taint328]a invoke <java.lang.Iterable: java.util.Iterator iterator()>
[taint328]a invoke 0
20210427node :$z0 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>()
20210427node in :[]
调用语句赋值给变量:$z0 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>()
20210427node out :[]
[taint328]a invoke <java.util.Iterator: boolean hasNext()>
[taint328]a invoke 0
20210427node :if $z0 == 0 goto $r7 = r0.<cfhider.WordCount$IntSumReducer: org.apache.hadoop.io.IntWritable result>
20210427node in :[]
20210427node out :[]
Have
Stmt if :if $z0 == 0 goto $r7 = r0.<cfhider.WordCount$IntSumReducer: org.apache.hadoop.io.IntWritable result>Stmt if value:$z0 == 0the value=$z0
the value=0
maintainValues.size0
ifValues1
20210427node :$r7 = r0.<cfhider.WordCount$IntSumReducer: org.apache.hadoop.io.IntWritable result>
20210427node in :[]
普通复制语句1112:$r7 = r0.<cfhider.WordCount$IntSumReducer: org.apache.hadoop.io.IntWritable result>
[taint source] u:r0
SourceList:[]
[taint source] u:r0.<cfhider.WordCount$IntSumReducer: org.apache.hadoop.io.IntWritable result>
SourceList:[]
20210427node out :[]
20210427node :virtualinvoke $r7.<org.apache.hadoop.io.IntWritable: void set(int)>(i0)
20210427node in :[]
20210427node out :[]
[taint329]i invoke virtualinvoke $r7.<org.apache.hadoop.io.IntWritable: void set(int)>(i0)
[taint328]i invoke <org.apache.hadoop.io.IntWritable: void set(int)>
[taint328]i invoke 1
value:i0
isoutSetContains  false value:i0 index:0
20210427node :$r8 = r0.<cfhider.WordCount$IntSumReducer: org.apache.hadoop.io.IntWritable result>
20210427node in :[]
普通复制语句1112:$r8 = r0.<cfhider.WordCount$IntSumReducer: org.apache.hadoop.io.IntWritable result>
[taint source] u:r0
SourceList:[]
[taint source] u:r0.<cfhider.WordCount$IntSumReducer: org.apache.hadoop.io.IntWritable result>
SourceList:[]
20210427node out :[]
20210427node :virtualinvoke r3.<org.apache.hadoop.mapreduce.Reducer$Context: void write(java.lang.Object,java.lang.Object)>(r1, $r8)
20210427node in :[]
20210427node out :[]
[taint329]i invoke virtualinvoke r3.<org.apache.hadoop.mapreduce.Reducer$Context: void write(java.lang.Object,java.lang.Object)>(r1, $r8)
[taint328]i invoke <org.apache.hadoop.mapreduce.TaskInputOutputContext: void write(java.lang.Object,java.lang.Object)>
[taint328]i invoke 2
value:r1
isoutSetContains  false value:r1 index:0
value:$r8
isoutSetContains  false value:$r8 index:1
20210427node :return
20210427node in :[]
20210427node out :[]
20210427node :$r6 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>()
20210427node in :[]
调用语句赋值给变量:$r6 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>()
20210427node out :[]
[taint328]a invoke <java.util.Iterator: java.lang.Object next()>
[taint328]a invoke 0
20210427node :r5 = (org.apache.hadoop.io.IntWritable) $r6
20210427node in :[]
普通复制语句1112:r5 = (org.apache.hadoop.io.IntWritable) $r6
[taint source] u:$r6
SourceList:[]
[taint source] u:(org.apache.hadoop.io.IntWritable) $r6
SourceList:[]
20210427node out :[]
20210427node :$i1 = virtualinvoke r5.<org.apache.hadoop.io.IntWritable: int get()>()
20210427node in :[]
调用语句赋值给变量:$i1 = virtualinvoke r5.<org.apache.hadoop.io.IntWritable: int get()>()
20210427node out :[]
[taint328]a invoke <org.apache.hadoop.io.IntWritable: int get()>
[taint328]a invoke 0
20210427node :i0 = i0 + $i1
20210427node in :[]
普通复制语句1112:i0 = i0 + $i1
[taint source] u:i0
SourceList:[]
[taint source] u:$i1
SourceList:[]
[taint source] u:i0 + $i1
SourceList:[]
20210427node out :[]
20210427node :goto [?= $z0 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>()]
20210427node in :[]
20210427node out :[]
analysis.outSet.size():0
[CFMAP]2021 After taintAnalysis:{cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={map=[$z0]}, cfhider.WordCount={}, invoker.SnowFlake={}}
The data isgggg 
<cfhider.WordCount$IntSumReducer: void reduce(org.apache.hadoop.io.Text,java.lang.Iterable,org.apache.hadoop.mapreduce.Reducer$Context)>
The data isgggg cfhider.WordCount$IntSumReducer reduce [] {cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={map=[$z0]}, cfhider.WordCount={}, invoker.SnowFlake={}}  {cfhider.WordCount$IntSumReducer={reduce=[I@4e2f8249}, cfhider.WordCount$TokenizerMapper={}, cfhider.WordCount={}, invoker.SnowFlake={}}
Coming...
doAnalysis Startingqqqqqqqq.....
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:i0 = i0 + $i1
currStmt left value20210420:i0
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$i1 = virtualinvoke r5.<org.apache.hadoop.io.IntWritable: int get()>()
currStmt left value20210420:$i1
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:r5 = (org.apache.hadoop.io.IntWritable) $r6
currStmt left value20210420:r5
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$r6 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>()
currStmt left value20210420:$r6
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
[taint329]i invoke virtualinvoke r3.<org.apache.hadoop.mapreduce.Reducer$Context: void write(java.lang.Object,java.lang.Object)>(r1, $r8)
[taint328]i invoke <org.apache.hadoop.mapreduce.TaskInputOutputContext: void write(java.lang.Object,java.lang.Object)>
[taint328]i invoke 2
value:r1
value:$r8
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$r8 = r0.<cfhider.WordCount$IntSumReducer: org.apache.hadoop.io.IntWritable result>
currStmt left value20210420:$r8
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
[taint329]i invoke virtualinvoke $r7.<org.apache.hadoop.io.IntWritable: void set(int)>(i0)
[taint328]i invoke <org.apache.hadoop.io.IntWritable: void set(int)>
[taint328]i invoke 1
value:i0
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$r7 = r0.<cfhider.WordCount$IntSumReducer: org.apache.hadoop.io.IntWritable result>
currStmt left value20210420:$r7
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
Have
the value=$z0
the value=0
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$z0 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>()
currStmt left value20210420:$z0
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:r4 = interfaceinvoke r2.<java.lang.Iterable: java.util.Iterator iterator()>()
currStmt left value20210420:r4
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:i0 = 0
currStmt left value20210420:i0
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
doAnalysis endqqqqqqq.....
come here
[CFMAP]2021 After BackwardAnalysis:{cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={map=[$z0]}, cfhider.WordCount={}, invoker.SnowFlake={}}
[taint into] sootMethod: reduce
[]
class name :cfhider.WordCount$IntSumReducer
method name :reduce
method list :[]
clasname=cfhider.WordCount$IntSumReducer
methodname=reduce
sourcelist2021=[]
20210427node :r0 := @this: cfhider.WordCount$IntSumReducer
20210427node in :[]
20210427node out :[]
currStmt20210423:r0 := @this: cfhider.WordCount$IntSumReducer
20210427node :r1 := @parameter0: java.lang.Object
20210427node in :[]
[idStmt]iiiiiii r1 := @parameter0: java.lang.Object  index:0
ClassName:cfhider.WordCount$IntSumReducer
MethodName:reduce
aaaa:0
20210427node out :[]
currStmt20210423:r1 := @parameter0: java.lang.Object
20210427node :r2 := @parameter1: java.lang.Iterable
20210427node in :[]
[idStmt]iiiiiii r2 := @parameter1: java.lang.Iterable  index:1
ClassName:cfhider.WordCount$IntSumReducer
MethodName:reduce
aaaa:0
20210427node out :[]
currStmt20210423:r2 := @parameter1: java.lang.Iterable
20210427node :r3 := @parameter2: org.apache.hadoop.mapreduce.Reducer$Context
20210427node in :[]
[idStmt]iiiiiii r3 := @parameter2: org.apache.hadoop.mapreduce.Reducer$Context  index:2
ClassName:cfhider.WordCount$IntSumReducer
MethodName:reduce
aaaa:0
20210427node out :[]
currStmt20210423:r3 := @parameter2: org.apache.hadoop.mapreduce.Reducer$Context
20210427node :$r4 = (org.apache.hadoop.io.Text) r1
20210427node in :[]
普通复制语句1112:$r4 = (org.apache.hadoop.io.Text) r1
[taint source] u:r1
SourceList:[]
[taint source] u:(org.apache.hadoop.io.Text) r1
SourceList:[]
20210427node out :[]
20210427node :virtualinvoke r0.<cfhider.WordCount$IntSumReducer: void reduce(org.apache.hadoop.io.Text,java.lang.Iterable,org.apache.hadoop.mapreduce.Reducer$Context)>($r4, r2, r3)
20210427node in :[]
20210427node out :[]
[taint329]i invoke virtualinvoke r0.<cfhider.WordCount$IntSumReducer: void reduce(org.apache.hadoop.io.Text,java.lang.Iterable,org.apache.hadoop.mapreduce.Reducer$Context)>($r4, r2, r3)
[taint328]i invoke <cfhider.WordCount$IntSumReducer: void reduce(org.apache.hadoop.io.Text,java.lang.Iterable,org.apache.hadoop.mapreduce.Reducer$Context)>
[taint328]i invoke 3
value:$r4
isoutSetContains  false value:$r4 index:0
value:r2
isoutSetContains  false value:r2 index:1
value:r3
isoutSetContains  false value:r3 index:2
[invokemap]invoke:reduce  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
20210427node :return
20210427node in :[]
20210427node out :[]
analysis.outSet.size():0
[CFMAP]2021 After taintAnalysis:{cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={map=[$z0]}, cfhider.WordCount={}, invoker.SnowFlake={}}
The data isgggg 
<cfhider.WordCount$IntSumReducer: void reduce(java.lang.Object,java.lang.Iterable,org.apache.hadoop.mapreduce.Reducer$Context)>
The data isgggg cfhider.WordCount$IntSumReducer reduce [] {cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={map=[$z0]}, cfhider.WordCount={}, invoker.SnowFlake={}}  {cfhider.WordCount$IntSumReducer={reduce=[I@1112aeb9}, cfhider.WordCount$TokenizerMapper={}, cfhider.WordCount={}, invoker.SnowFlake={}}
Coming...
doAnalysis Startingqqqqqqqq.....
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
[taint329]i invoke virtualinvoke r0.<cfhider.WordCount$IntSumReducer: void reduce(org.apache.hadoop.io.Text,java.lang.Iterable,org.apache.hadoop.mapreduce.Reducer$Context)>($r4, r2, r3)
[taint328]i invoke <cfhider.WordCount$IntSumReducer: void reduce(org.apache.hadoop.io.Text,java.lang.Iterable,org.apache.hadoop.mapreduce.Reducer$Context)>
[taint328]i invoke 3
value:$r4
in here:[I@618cfc70
[invokemap]invoke:reduce  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
value:r2
in here:[I@618cfc70
[invokemap]invoke:reduce  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
value:r3
in here:[I@618cfc70
[invokemap]invoke:reduce  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$r4 = (org.apache.hadoop.io.Text) r1
currStmt left value20210420:$r4
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
doAnalysis endqqqqqqq.....
come here
[CFMAP]2021 After BackwardAnalysis:{cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={map=[$z0]}, cfhider.WordCount={}, invoker.SnowFlake={}}
[taint]SooClass:cfhider.WordCount
[taint] class: cfhider.WordCount
methList :{}
[taint not hasActiveBody] sootMethod: <init>
clasname=cfhider.WordCount
methodname=<init>
sourcelist2021=[]
20210427node :r0 := @this: cfhider.WordCount
20210427node in :[]
20210427node out :[]
currStmt20210423:r0 := @this: cfhider.WordCount
20210427node :specialinvoke r0.<java.lang.Object: void <init>()>()
20210427node in :[]
20210427node out :[]
[taint329]i invoke specialinvoke r0.<java.lang.Object: void <init>()>()
[taint328]i invoke <java.lang.Object: void <init>()>
[taint328]i invoke 0
20210427node :return
20210427node in :[]
20210427node out :[]
analysis.outSet.size():0
The data isgggg 
<cfhider.WordCount: void <init>()>
The data isgggg cfhider.WordCount <init> [] {cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={map=[$z0]}, cfhider.WordCount={<init>=[]}, invoker.SnowFlake={}}  {cfhider.WordCount$IntSumReducer={reduce=[I@1112aeb9}, cfhider.WordCount$TokenizerMapper={}, cfhider.WordCount={}, invoker.SnowFlake={}}
Coming...
doAnalysis Startingqqqqqqqq.....
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
[taint329]i invoke specialinvoke r0.<java.lang.Object: void <init>()>()
[taint328]i invoke <java.lang.Object: void <init>()>
[taint328]i invoke 0
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
doAnalysis endqqqqqqq.....
come here
[taint into] sootMethod: main
class name :cfhider.WordCount
method name :main
method list :[]
clasname=cfhider.WordCount
methodname=main
sourcelist2021=[]
20210427node :r0 := @parameter0: java.lang.String[]
20210427node in :[]
[idStmt]iiiiiii r0 := @parameter0: java.lang.String[]  index:0
ClassName:cfhider.WordCount
MethodName:main
20210427node out :[]
currStmt20210423:r0 := @parameter0: java.lang.String[]
20210427node :$r1 = <java.lang.System: java.io.PrintStream out>
20210427node in :[]
普通复制语句1112:$r1 = <java.lang.System: java.io.PrintStream out>
[taint source] u:<java.lang.System: java.io.PrintStream out>
SourceList:[]
20210427node out :[]
20210427node :virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>("In this project, we test wordcount with SGX!\n")
20210427node in :[]
20210427node out :[]
[taint329]i invoke virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>("In this project, we test wordcount with SGX!\n")
[taint328]i invoke <java.io.PrintStream: void println(java.lang.String)>
[taint328]i invoke 1
value:"In this project, we test wordcount with SGX!\n"
isoutSetContains  false value:"In this project, we test wordcount with SGX!\n" index:0
20210427node :$r6 = new org.apache.hadoop.conf.Configuration
20210427node in :[]
普通复制语句1112:$r6 = new org.apache.hadoop.conf.Configuration
[taint source] u:new org.apache.hadoop.conf.Configuration
SourceList:[]
20210427node out :[]
20210427node :specialinvoke $r6.<org.apache.hadoop.conf.Configuration: void <init>()>()
20210427node in :[]
20210427node out :[]
[taint329]i invoke specialinvoke $r6.<org.apache.hadoop.conf.Configuration: void <init>()>()
[taint328]i invoke <org.apache.hadoop.conf.Configuration: void <init>()>
[taint328]i invoke 0
20210427node :r2 = $r6
20210427node in :[]
普通复制语句1112:r2 = $r6
[taint source] u:$r6
SourceList:[]
20210427node out :[]
20210427node :$r7 = new org.apache.hadoop.util.GenericOptionsParser
20210427node in :[]
普通复制语句1112:$r7 = new org.apache.hadoop.util.GenericOptionsParser
[taint source] u:new org.apache.hadoop.util.GenericOptionsParser
SourceList:[]
20210427node out :[]
20210427node :specialinvoke $r7.<org.apache.hadoop.util.GenericOptionsParser: void <init>(org.apache.hadoop.conf.Configuration,java.lang.String[])>(r2, r0)
20210427node in :[]
20210427node out :[]
[taint329]i invoke specialinvoke $r7.<org.apache.hadoop.util.GenericOptionsParser: void <init>(org.apache.hadoop.conf.Configuration,java.lang.String[])>(r2, r0)
[taint328]i invoke <org.apache.hadoop.util.GenericOptionsParser: void <init>(org.apache.hadoop.conf.Configuration,java.lang.String[])>
[taint328]i invoke 2
value:r2
isoutSetContains  false value:r2 index:0
value:r0
isoutSetContains  false value:r0 index:1
20210427node :r3 = $r7
20210427node in :[]
普通复制语句1112:r3 = $r7
[taint source] u:$r7
SourceList:[]
20210427node out :[]
20210427node :r4 = virtualinvoke r3.<org.apache.hadoop.util.GenericOptionsParser: java.lang.String[] getRemainingArgs()>()
20210427node in :[]
调用语句赋值给变量:r4 = virtualinvoke r3.<org.apache.hadoop.util.GenericOptionsParser: java.lang.String[] getRemainingArgs()>()
20210427node out :[]
[taint328]a invoke <org.apache.hadoop.util.GenericOptionsParser: java.lang.String[] getRemainingArgs()>
[taint328]a invoke 0
20210427node :l0 = staticinvoke <java.lang.System: long currentTimeMillis()>()
20210427node in :[]
调用语句赋值给变量:l0 = staticinvoke <java.lang.System: long currentTimeMillis()>()
20210427node out :[]
[taint328]a invoke <java.lang.System: long currentTimeMillis()>
[taint328]a invoke 0
20210427node :$r8 = new org.apache.hadoop.mapreduce.Job
20210427node in :[]
普通复制语句1112:$r8 = new org.apache.hadoop.mapreduce.Job
[taint source] u:new org.apache.hadoop.mapreduce.Job
SourceList:[]
20210427node out :[]
20210427node :specialinvoke $r8.<org.apache.hadoop.mapreduce.Job: void <init>(org.apache.hadoop.conf.Configuration,java.lang.String)>(r2, "word count")
20210427node in :[]
20210427node out :[]
[taint329]i invoke specialinvoke $r8.<org.apache.hadoop.mapreduce.Job: void <init>(org.apache.hadoop.conf.Configuration,java.lang.String)>(r2, "word count")
[taint328]i invoke <org.apache.hadoop.mapreduce.Job: void <init>(org.apache.hadoop.conf.Configuration,java.lang.String)>
[taint328]i invoke 2
value:r2
isoutSetContains  false value:r2 index:0
value:"word count"
isoutSetContains  false value:"word count" index:1
20210427node :r5 = $r8
20210427node in :[]
普通复制语句1112:r5 = $r8
[taint source] u:$r8
SourceList:[]
20210427node out :[]
20210427node :virtualinvoke r5.<org.apache.hadoop.mapreduce.Job: void setJarByClass(java.lang.Class)>(class "cfhider/WordCount")
20210427node in :[]
20210427node out :[]
[taint329]i invoke virtualinvoke r5.<org.apache.hadoop.mapreduce.Job: void setJarByClass(java.lang.Class)>(class "cfhider/WordCount")
[taint328]i invoke <org.apache.hadoop.mapreduce.Job: void setJarByClass(java.lang.Class)>
[taint328]i invoke 1
value:class "cfhider/WordCount"
isoutSetContains  false value:class "cfhider/WordCount" index:0
20210427node :virtualinvoke r5.<org.apache.hadoop.mapreduce.Job: void setMapperClass(java.lang.Class)>(class "cfhider/WordCount$TokenizerMapper")
20210427node in :[]
20210427node out :[]
[taint329]i invoke virtualinvoke r5.<org.apache.hadoop.mapreduce.Job: void setMapperClass(java.lang.Class)>(class "cfhider/WordCount$TokenizerMapper")
[taint328]i invoke <org.apache.hadoop.mapreduce.Job: void setMapperClass(java.lang.Class)>
[taint328]i invoke 1
value:class "cfhider/WordCount$TokenizerMapper"
isoutSetContains  false value:class "cfhider/WordCount$TokenizerMapper" index:0
20210427node :virtualinvoke r5.<org.apache.hadoop.mapreduce.Job: void setCombinerClass(java.lang.Class)>(class "cfhider/WordCount$IntSumReducer")
20210427node in :[]
20210427node out :[]
[taint329]i invoke virtualinvoke r5.<org.apache.hadoop.mapreduce.Job: void setCombinerClass(java.lang.Class)>(class "cfhider/WordCount$IntSumReducer")
[taint328]i invoke <org.apache.hadoop.mapreduce.Job: void setCombinerClass(java.lang.Class)>
[taint328]i invoke 1
value:class "cfhider/WordCount$IntSumReducer"
isoutSetContains  false value:class "cfhider/WordCount$IntSumReducer" index:0
20210427node :virtualinvoke r5.<org.apache.hadoop.mapreduce.Job: void setReducerClass(java.lang.Class)>(class "cfhider/WordCount$IntSumReducer")
20210427node in :[]
20210427node out :[]
[taint329]i invoke virtualinvoke r5.<org.apache.hadoop.mapreduce.Job: void setReducerClass(java.lang.Class)>(class "cfhider/WordCount$IntSumReducer")
[taint328]i invoke <org.apache.hadoop.mapreduce.Job: void setReducerClass(java.lang.Class)>
[taint328]i invoke 1
value:class "cfhider/WordCount$IntSumReducer"
isoutSetContains  false value:class "cfhider/WordCount$IntSumReducer" index:0
20210427node :virtualinvoke r5.<org.apache.hadoop.mapreduce.Job: void setOutputKeyClass(java.lang.Class)>(class "org/apache/hadoop/io/Text")
20210427node in :[]
20210427node out :[]
[taint329]i invoke virtualinvoke r5.<org.apache.hadoop.mapreduce.Job: void setOutputKeyClass(java.lang.Class)>(class "org/apache/hadoop/io/Text")
[taint328]i invoke <org.apache.hadoop.mapreduce.Job: void setOutputKeyClass(java.lang.Class)>
[taint328]i invoke 1
value:class "org/apache/hadoop/io/Text"
isoutSetContains  false value:class "org/apache/hadoop/io/Text" index:0
20210427node :virtualinvoke r5.<org.apache.hadoop.mapreduce.Job: void setOutputValueClass(java.lang.Class)>(class "org/apache/hadoop/io/IntWritable")
20210427node in :[]
20210427node out :[]
[taint329]i invoke virtualinvoke r5.<org.apache.hadoop.mapreduce.Job: void setOutputValueClass(java.lang.Class)>(class "org/apache/hadoop/io/IntWritable")
[taint328]i invoke <org.apache.hadoop.mapreduce.Job: void setOutputValueClass(java.lang.Class)>
[taint328]i invoke 1
value:class "org/apache/hadoop/io/IntWritable"
isoutSetContains  false value:class "org/apache/hadoop/io/IntWritable" index:0
20210427node :$r9 = new org.apache.hadoop.fs.Path
20210427node in :[]
普通复制语句1112:$r9 = new org.apache.hadoop.fs.Path
[taint source] u:new org.apache.hadoop.fs.Path
SourceList:[]
20210427node out :[]
20210427node :$r10 = r4[0]
20210427node in :[]
普通复制语句1112:$r10 = r4[0]
[taint source] u:r4
SourceList:[]
[taint source] u:0
SourceList:[]
[taint source] u:r4[0]
SourceList:[]
20210427node out :[]
20210427node :specialinvoke $r9.<org.apache.hadoop.fs.Path: void <init>(java.lang.String)>($r10)
20210427node in :[]
20210427node out :[]
[taint329]i invoke specialinvoke $r9.<org.apache.hadoop.fs.Path: void <init>(java.lang.String)>($r10)
[taint328]i invoke <org.apache.hadoop.fs.Path: void <init>(java.lang.String)>
[taint328]i invoke 1
value:$r10
isoutSetContains  false value:$r10 index:0
20210427node :staticinvoke <org.apache.hadoop.mapreduce.lib.input.FileInputFormat: void addInputPath(org.apache.hadoop.mapreduce.Job,org.apache.hadoop.fs.Path)>(r5, $r9)
20210427node in :[]
20210427node out :[]
[taint329]i invoke staticinvoke <org.apache.hadoop.mapreduce.lib.input.FileInputFormat: void addInputPath(org.apache.hadoop.mapreduce.Job,org.apache.hadoop.fs.Path)>(r5, $r9)
[taint328]i invoke <org.apache.hadoop.mapreduce.lib.input.FileInputFormat: void addInputPath(org.apache.hadoop.mapreduce.Job,org.apache.hadoop.fs.Path)>
[taint328]i invoke 2
value:r5
isoutSetContains  false value:r5 index:0
value:$r9
isoutSetContains  false value:$r9 index:1
20210427node :$r11 = new org.apache.hadoop.fs.Path
20210427node in :[]
普通复制语句1112:$r11 = new org.apache.hadoop.fs.Path
[taint source] u:new org.apache.hadoop.fs.Path
SourceList:[]
20210427node out :[]
20210427node :$r12 = r4[1]
20210427node in :[]
普通复制语句1112:$r12 = r4[1]
[taint source] u:r4
SourceList:[]
[taint source] u:1
SourceList:[]
[taint source] u:r4[1]
SourceList:[]
20210427node out :[]
20210427node :specialinvoke $r11.<org.apache.hadoop.fs.Path: void <init>(java.lang.String)>($r12)
20210427node in :[]
20210427node out :[]
[taint329]i invoke specialinvoke $r11.<org.apache.hadoop.fs.Path: void <init>(java.lang.String)>($r12)
[taint328]i invoke <org.apache.hadoop.fs.Path: void <init>(java.lang.String)>
[taint328]i invoke 1
value:$r12
isoutSetContains  false value:$r12 index:0
20210427node :staticinvoke <org.apache.hadoop.mapreduce.lib.output.FileOutputFormat: void setOutputPath(org.apache.hadoop.mapreduce.Job,org.apache.hadoop.fs.Path)>(r5, $r11)
20210427node in :[]
20210427node out :[]
[taint329]i invoke staticinvoke <org.apache.hadoop.mapreduce.lib.output.FileOutputFormat: void setOutputPath(org.apache.hadoop.mapreduce.Job,org.apache.hadoop.fs.Path)>(r5, $r11)
[taint328]i invoke <org.apache.hadoop.mapreduce.lib.output.FileOutputFormat: void setOutputPath(org.apache.hadoop.mapreduce.Job,org.apache.hadoop.fs.Path)>
[taint328]i invoke 2
value:r5
isoutSetContains  false value:r5 index:0
value:$r11
isoutSetContains  false value:$r11 index:1
20210427node :$z0 = virtualinvoke r5.<org.apache.hadoop.mapreduce.Job: boolean waitForCompletion(boolean)>(1)
20210427node in :[]
调用语句赋值给变量:$z0 = virtualinvoke r5.<org.apache.hadoop.mapreduce.Job: boolean waitForCompletion(boolean)>(1)
20210427node out :[]
[taint328]a invoke <org.apache.hadoop.mapreduce.Job: boolean waitForCompletion(boolean)>
[taint328]a invoke 1
assi isoutSet  false value:1 index:0
20210427node :if $z0 == 0 goto $b2 = 1
20210427node in :[]
20210427node out :[]
Have
Stmt if :if $z0 == 0 goto $b2 = 1Stmt if value:$z0 == 0the value=$z0
the value=0
maintainValues.size0
ifValues1
20210427node :$b2 = 1
20210427node in :[]
普通复制语句1112:$b2 = 1
[taint source] u:1
SourceList:[]
20210427node out :[]
20210427node :$b2 = 0
20210427node in :[]
普通复制语句1112:$b2 = 0
[taint source] u:0
SourceList:[]
20210427node out :[]
20210427node :goto [?= b1 = $b2]
20210427node in :[]
20210427node out :[]
20210427node :b1 = $b2
20210427node in :[]
普通复制语句1112:b1 = $b2
[taint source] u:$b2
SourceList:[]
20210427node out :[]
20210427node :$l3 = staticinvoke <java.lang.System: long currentTimeMillis()>()
20210427node in :[]
调用语句赋值给变量:$l3 = staticinvoke <java.lang.System: long currentTimeMillis()>()
20210427node out :[]
[taint328]a invoke <java.lang.System: long currentTimeMillis()>
[taint328]a invoke 0
20210427node :$l4 = $l3 - l0
20210427node in :[]
普通复制语句1112:$l4 = $l3 - l0
[taint source] u:$l3
SourceList:[]
[taint source] u:l0
SourceList:[]
[taint source] u:$l3 - l0
SourceList:[]
20210427node out :[]
20210427node :$d1 = (double) $l4
20210427node in :[]
普通复制语句1112:$d1 = (double) $l4
[taint source] u:$l4
SourceList:[]
[taint source] u:(double) $l4
SourceList:[]
20210427node out :[]
20210427node :d0 = $d1 / 1000.0
20210427node in :[]
普通复制语句1112:d0 = $d1 / 1000.0
[taint source] u:$d1
SourceList:[]
[taint source] u:1000.0
SourceList:[]
[taint source] u:$d1 / 1000.0
SourceList:[]
20210427node out :[]
20210427node :$r13 = <java.lang.System: java.io.PrintStream out>
20210427node in :[]
普通复制语句1112:$r13 = <java.lang.System: java.io.PrintStream out>
[taint source] u:<java.lang.System: java.io.PrintStream out>
SourceList:[]
20210427node out :[]
20210427node :$r14 = new java.lang.StringBuilder
20210427node in :[]
普通复制语句1112:$r14 = new java.lang.StringBuilder
[taint source] u:new java.lang.StringBuilder
SourceList:[]
20210427node out :[]
20210427node :specialinvoke $r14.<java.lang.StringBuilder: void <init>()>()
20210427node in :[]
20210427node out :[]
[taint329]i invoke specialinvoke $r14.<java.lang.StringBuilder: void <init>()>()
[taint328]i invoke <java.lang.StringBuilder: void <init>()>
[taint328]i invoke 0
20210427node :$r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Job Finished in ")
20210427node in :[]
调用语句赋值给变量:$r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Job Finished in ")
20210427node out :[]
[taint328]a invoke <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
[taint328]a invoke 1
assi isoutSet  false value:"Job Finished in " index:0
20210427node :$r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(double)>(d0)
20210427node in :[]
调用语句赋值给变量:$r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(double)>(d0)
20210427node out :[]
[taint328]a invoke <java.lang.StringBuilder: java.lang.StringBuilder append(double)>
[taint328]a invoke 1
assi isoutSet  false value:d0 index:0
20210427node :$r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" seconds")
20210427node in :[]
调用语句赋值给变量:$r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" seconds")
20210427node out :[]
[taint328]a invoke <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
[taint328]a invoke 1
assi isoutSet  false value:" seconds" index:0
20210427node :$r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>()
20210427node in :[]
调用语句赋值给变量:$r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>()
20210427node out :[]
[taint328]a invoke <java.lang.StringBuilder: java.lang.String toString()>
[taint328]a invoke 0
20210427node :virtualinvoke $r13.<java.io.PrintStream: void println(java.lang.String)>($r18)
20210427node in :[]
20210427node out :[]
[taint329]i invoke virtualinvoke $r13.<java.io.PrintStream: void println(java.lang.String)>($r18)
[taint328]i invoke <java.io.PrintStream: void println(java.lang.String)>
[taint328]i invoke 1
value:$r18
isoutSetContains  false value:$r18 index:0
20210427node :staticinvoke <java.lang.System: void exit(int)>(b1)
20210427node in :[]
20210427node out :[]
[taint329]i invoke staticinvoke <java.lang.System: void exit(int)>(b1)
[taint328]i invoke <java.lang.System: void exit(int)>
[taint328]i invoke 1
value:b1
isoutSetContains  false value:b1 index:0
20210427node :return
20210427node in :[]
20210427node out :[]
analysis.outSet.size():0
[CFMAP]2021 After taintAnalysis:{cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={}}
The data isgggg 
<cfhider.WordCount: void main(java.lang.String[])>
The data isgggg cfhider.WordCount main [] {cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={}}  {cfhider.WordCount$IntSumReducer={reduce=[I@1112aeb9}, cfhider.WordCount$TokenizerMapper={}, cfhider.WordCount={main=[I@18b19120}, invoker.SnowFlake={}}
Coming...
doAnalysis Startingqqqqqqqq.....
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
[taint329]i invoke staticinvoke <java.lang.System: void exit(int)>(b1)
[taint328]i invoke <java.lang.System: void exit(int)>
[taint328]i invoke 1
value:b1
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
[taint329]i invoke virtualinvoke $r13.<java.io.PrintStream: void println(java.lang.String)>($r18)
[taint328]i invoke <java.io.PrintStream: void println(java.lang.String)>
[taint328]i invoke 1
value:$r18
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>()
currStmt left value20210420:$r18
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" seconds")
currStmt left value20210420:$r17
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(double)>(d0)
currStmt left value20210420:$r16
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Job Finished in ")
currStmt left value20210420:$r15
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
[taint329]i invoke specialinvoke $r14.<java.lang.StringBuilder: void <init>()>()
[taint328]i invoke <java.lang.StringBuilder: void <init>()>
[taint328]i invoke 0
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$r14 = new java.lang.StringBuilder
currStmt left value20210420:$r14
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$r13 = <java.lang.System: java.io.PrintStream out>
currStmt left value20210420:$r13
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:d0 = $d1 / 1000.0
currStmt left value20210420:d0
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$d1 = (double) $l4
currStmt left value20210420:$d1
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$l4 = $l3 - l0
currStmt left value20210420:$l4
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$l3 = staticinvoke <java.lang.System: long currentTimeMillis()>()
currStmt left value20210420:$l3
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:b1 = $b2
currStmt left value20210420:b1
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$b2 = 0
currStmt left value20210420:$b2
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$b2 = 1
currStmt left value20210420:$b2
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
Have
the value=$z0
the value=0
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$z0 = virtualinvoke r5.<org.apache.hadoop.mapreduce.Job: boolean waitForCompletion(boolean)>(1)
currStmt left value20210420:$z0
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
[taint329]i invoke staticinvoke <org.apache.hadoop.mapreduce.lib.output.FileOutputFormat: void setOutputPath(org.apache.hadoop.mapreduce.Job,org.apache.hadoop.fs.Path)>(r5, $r11)
[taint328]i invoke <org.apache.hadoop.mapreduce.lib.output.FileOutputFormat: void setOutputPath(org.apache.hadoop.mapreduce.Job,org.apache.hadoop.fs.Path)>
[taint328]i invoke 2
value:r5
value:$r11
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
[taint329]i invoke specialinvoke $r11.<org.apache.hadoop.fs.Path: void <init>(java.lang.String)>($r12)
[taint328]i invoke <org.apache.hadoop.fs.Path: void <init>(java.lang.String)>
[taint328]i invoke 1
value:$r12
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$r12 = r4[1]
currStmt left value20210420:$r12
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$r11 = new org.apache.hadoop.fs.Path
currStmt left value20210420:$r11
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
[taint329]i invoke staticinvoke <org.apache.hadoop.mapreduce.lib.input.FileInputFormat: void addInputPath(org.apache.hadoop.mapreduce.Job,org.apache.hadoop.fs.Path)>(r5, $r9)
[taint328]i invoke <org.apache.hadoop.mapreduce.lib.input.FileInputFormat: void addInputPath(org.apache.hadoop.mapreduce.Job,org.apache.hadoop.fs.Path)>
[taint328]i invoke 2
value:r5
value:$r9
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
[taint329]i invoke specialinvoke $r9.<org.apache.hadoop.fs.Path: void <init>(java.lang.String)>($r10)
[taint328]i invoke <org.apache.hadoop.fs.Path: void <init>(java.lang.String)>
[taint328]i invoke 1
value:$r10
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$r10 = r4[0]
currStmt left value20210420:$r10
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$r9 = new org.apache.hadoop.fs.Path
currStmt left value20210420:$r9
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
[taint329]i invoke virtualinvoke r5.<org.apache.hadoop.mapreduce.Job: void setOutputValueClass(java.lang.Class)>(class "org/apache/hadoop/io/IntWritable")
[taint328]i invoke <org.apache.hadoop.mapreduce.Job: void setOutputValueClass(java.lang.Class)>
[taint328]i invoke 1
value:class "org/apache/hadoop/io/IntWritable"
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
[taint329]i invoke virtualinvoke r5.<org.apache.hadoop.mapreduce.Job: void setOutputKeyClass(java.lang.Class)>(class "org/apache/hadoop/io/Text")
[taint328]i invoke <org.apache.hadoop.mapreduce.Job: void setOutputKeyClass(java.lang.Class)>
[taint328]i invoke 1
value:class "org/apache/hadoop/io/Text"
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
[taint329]i invoke virtualinvoke r5.<org.apache.hadoop.mapreduce.Job: void setReducerClass(java.lang.Class)>(class "cfhider/WordCount$IntSumReducer")
[taint328]i invoke <org.apache.hadoop.mapreduce.Job: void setReducerClass(java.lang.Class)>
[taint328]i invoke 1
value:class "cfhider/WordCount$IntSumReducer"
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
[taint329]i invoke virtualinvoke r5.<org.apache.hadoop.mapreduce.Job: void setCombinerClass(java.lang.Class)>(class "cfhider/WordCount$IntSumReducer")
[taint328]i invoke <org.apache.hadoop.mapreduce.Job: void setCombinerClass(java.lang.Class)>
[taint328]i invoke 1
value:class "cfhider/WordCount$IntSumReducer"
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
[taint329]i invoke virtualinvoke r5.<org.apache.hadoop.mapreduce.Job: void setMapperClass(java.lang.Class)>(class "cfhider/WordCount$TokenizerMapper")
[taint328]i invoke <org.apache.hadoop.mapreduce.Job: void setMapperClass(java.lang.Class)>
[taint328]i invoke 1
value:class "cfhider/WordCount$TokenizerMapper"
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
[taint329]i invoke virtualinvoke r5.<org.apache.hadoop.mapreduce.Job: void setJarByClass(java.lang.Class)>(class "cfhider/WordCount")
[taint328]i invoke <org.apache.hadoop.mapreduce.Job: void setJarByClass(java.lang.Class)>
[taint328]i invoke 1
value:class "cfhider/WordCount"
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:r5 = $r8
currStmt left value20210420:r5
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
[taint329]i invoke specialinvoke $r8.<org.apache.hadoop.mapreduce.Job: void <init>(org.apache.hadoop.conf.Configuration,java.lang.String)>(r2, "word count")
[taint328]i invoke <org.apache.hadoop.mapreduce.Job: void <init>(org.apache.hadoop.conf.Configuration,java.lang.String)>
[taint328]i invoke 2
value:r2
value:"word count"
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$r8 = new org.apache.hadoop.mapreduce.Job
currStmt left value20210420:$r8
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:l0 = staticinvoke <java.lang.System: long currentTimeMillis()>()
currStmt left value20210420:l0
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:r4 = virtualinvoke r3.<org.apache.hadoop.util.GenericOptionsParser: java.lang.String[] getRemainingArgs()>()
currStmt left value20210420:r4
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:r3 = $r7
currStmt left value20210420:r3
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
[taint329]i invoke specialinvoke $r7.<org.apache.hadoop.util.GenericOptionsParser: void <init>(org.apache.hadoop.conf.Configuration,java.lang.String[])>(r2, r0)
[taint328]i invoke <org.apache.hadoop.util.GenericOptionsParser: void <init>(org.apache.hadoop.conf.Configuration,java.lang.String[])>
[taint328]i invoke 2
value:r2
value:r0
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$r7 = new org.apache.hadoop.util.GenericOptionsParser
currStmt left value20210420:$r7
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:r2 = $r6
currStmt left value20210420:r2
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
[taint329]i invoke specialinvoke $r6.<org.apache.hadoop.conf.Configuration: void <init>()>()
[taint328]i invoke <org.apache.hadoop.conf.Configuration: void <init>()>
[taint328]i invoke 0
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$r6 = new org.apache.hadoop.conf.Configuration
currStmt left value20210420:$r6
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
[taint329]i invoke virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>("In this project, we test wordcount with SGX!\n")
[taint328]i invoke <java.io.PrintStream: void println(java.lang.String)>
[taint328]i invoke 1
value:"In this project, we test wordcount with SGX!\n"
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$r1 = <java.lang.System: java.io.PrintStream out>
currStmt left value20210420:$r1
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
doAnalysis endqqqqqqq.....
come here
[CFMAP]2021 After BackwardAnalysis:{cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={}}
[taint into] sootMethod: <init>
[]
class name :cfhider.WordCount
method name :<init>
method list :[]
clasname=cfhider.WordCount
methodname=<init>
sourcelist2021=[]
20210427node :r0 := @this: cfhider.WordCount
20210427node in :[]
20210427node out :[]
currStmt20210423:r0 := @this: cfhider.WordCount
20210427node :specialinvoke r0.<java.lang.Object: void <init>()>()
20210427node in :[]
20210427node out :[]
[taint329]i invoke specialinvoke r0.<java.lang.Object: void <init>()>()
[taint328]i invoke <java.lang.Object: void <init>()>
[taint328]i invoke 0
20210427node :return
20210427node in :[]
20210427node out :[]
analysis.outSet.size():0
[CFMAP]2021 After taintAnalysis:{cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={}}
The data isgggg 
<cfhider.WordCount: void <init>()>
The data isgggg cfhider.WordCount <init> [] {cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={}}  {cfhider.WordCount$IntSumReducer={reduce=[I@1112aeb9}, cfhider.WordCount$TokenizerMapper={}, cfhider.WordCount={main=[I@18b19120}, invoker.SnowFlake={}}
Coming...
doAnalysis Startingqqqqqqqq.....
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
[taint329]i invoke specialinvoke r0.<java.lang.Object: void <init>()>()
[taint328]i invoke <java.lang.Object: void <init>()>
[taint328]i invoke 0
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
doAnalysis endqqqqqqq.....
come here
[CFMAP]2021 After BackwardAnalysis:{cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={}}
[taint into] sootMethod: main
[]
class name :cfhider.WordCount
method name :main
method list :[]
clasname=cfhider.WordCount
methodname=main
sourcelist2021=[]
20210427node :r0 := @parameter0: java.lang.String[]
20210427node in :[]
[idStmt]iiiiiii r0 := @parameter0: java.lang.String[]  index:0
ClassName:cfhider.WordCount
MethodName:main
aaaa:0
20210427node out :[]
currStmt20210423:r0 := @parameter0: java.lang.String[]
20210427node :$r1 = <java.lang.System: java.io.PrintStream out>
20210427node in :[]
普通复制语句1112:$r1 = <java.lang.System: java.io.PrintStream out>
[taint source] u:<java.lang.System: java.io.PrintStream out>
SourceList:[]
20210427node out :[]
20210427node :virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>("In this project, we test wordcount with SGX!\n")
20210427node in :[]
20210427node out :[]
[taint329]i invoke virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>("In this project, we test wordcount with SGX!\n")
[taint328]i invoke <java.io.PrintStream: void println(java.lang.String)>
[taint328]i invoke 1
value:"In this project, we test wordcount with SGX!\n"
isoutSetContains  false value:"In this project, we test wordcount with SGX!\n" index:0
20210427node :$r6 = new org.apache.hadoop.conf.Configuration
20210427node in :[]
普通复制语句1112:$r6 = new org.apache.hadoop.conf.Configuration
[taint source] u:new org.apache.hadoop.conf.Configuration
SourceList:[]
20210427node out :[]
20210427node :specialinvoke $r6.<org.apache.hadoop.conf.Configuration: void <init>()>()
20210427node in :[]
20210427node out :[]
[taint329]i invoke specialinvoke $r6.<org.apache.hadoop.conf.Configuration: void <init>()>()
[taint328]i invoke <org.apache.hadoop.conf.Configuration: void <init>()>
[taint328]i invoke 0
20210427node :r2 = $r6
20210427node in :[]
普通复制语句1112:r2 = $r6
[taint source] u:$r6
SourceList:[]
20210427node out :[]
20210427node :$r7 = new org.apache.hadoop.util.GenericOptionsParser
20210427node in :[]
普通复制语句1112:$r7 = new org.apache.hadoop.util.GenericOptionsParser
[taint source] u:new org.apache.hadoop.util.GenericOptionsParser
SourceList:[]
20210427node out :[]
20210427node :specialinvoke $r7.<org.apache.hadoop.util.GenericOptionsParser: void <init>(org.apache.hadoop.conf.Configuration,java.lang.String[])>(r2, r0)
20210427node in :[]
20210427node out :[]
[taint329]i invoke specialinvoke $r7.<org.apache.hadoop.util.GenericOptionsParser: void <init>(org.apache.hadoop.conf.Configuration,java.lang.String[])>(r2, r0)
[taint328]i invoke <org.apache.hadoop.util.GenericOptionsParser: void <init>(org.apache.hadoop.conf.Configuration,java.lang.String[])>
[taint328]i invoke 2
value:r2
isoutSetContains  false value:r2 index:0
value:r0
isoutSetContains  false value:r0 index:1
20210427node :r3 = $r7
20210427node in :[]
普通复制语句1112:r3 = $r7
[taint source] u:$r7
SourceList:[]
20210427node out :[]
20210427node :r4 = virtualinvoke r3.<org.apache.hadoop.util.GenericOptionsParser: java.lang.String[] getRemainingArgs()>()
20210427node in :[]
调用语句赋值给变量:r4 = virtualinvoke r3.<org.apache.hadoop.util.GenericOptionsParser: java.lang.String[] getRemainingArgs()>()
20210427node out :[]
[taint328]a invoke <org.apache.hadoop.util.GenericOptionsParser: java.lang.String[] getRemainingArgs()>
[taint328]a invoke 0
20210427node :l0 = staticinvoke <java.lang.System: long currentTimeMillis()>()
20210427node in :[]
调用语句赋值给变量:l0 = staticinvoke <java.lang.System: long currentTimeMillis()>()
20210427node out :[]
[taint328]a invoke <java.lang.System: long currentTimeMillis()>
[taint328]a invoke 0
20210427node :$r8 = new org.apache.hadoop.mapreduce.Job
20210427node in :[]
普通复制语句1112:$r8 = new org.apache.hadoop.mapreduce.Job
[taint source] u:new org.apache.hadoop.mapreduce.Job
SourceList:[]
20210427node out :[]
20210427node :specialinvoke $r8.<org.apache.hadoop.mapreduce.Job: void <init>(org.apache.hadoop.conf.Configuration,java.lang.String)>(r2, "word count")
20210427node in :[]
20210427node out :[]
[taint329]i invoke specialinvoke $r8.<org.apache.hadoop.mapreduce.Job: void <init>(org.apache.hadoop.conf.Configuration,java.lang.String)>(r2, "word count")
[taint328]i invoke <org.apache.hadoop.mapreduce.Job: void <init>(org.apache.hadoop.conf.Configuration,java.lang.String)>
[taint328]i invoke 2
value:r2
isoutSetContains  false value:r2 index:0
value:"word count"
isoutSetContains  false value:"word count" index:1
20210427node :r5 = $r8
20210427node in :[]
普通复制语句1112:r5 = $r8
[taint source] u:$r8
SourceList:[]
20210427node out :[]
20210427node :virtualinvoke r5.<org.apache.hadoop.mapreduce.Job: void setJarByClass(java.lang.Class)>(class "cfhider/WordCount")
20210427node in :[]
20210427node out :[]
[taint329]i invoke virtualinvoke r5.<org.apache.hadoop.mapreduce.Job: void setJarByClass(java.lang.Class)>(class "cfhider/WordCount")
[taint328]i invoke <org.apache.hadoop.mapreduce.Job: void setJarByClass(java.lang.Class)>
[taint328]i invoke 1
value:class "cfhider/WordCount"
isoutSetContains  false value:class "cfhider/WordCount" index:0
20210427node :virtualinvoke r5.<org.apache.hadoop.mapreduce.Job: void setMapperClass(java.lang.Class)>(class "cfhider/WordCount$TokenizerMapper")
20210427node in :[]
20210427node out :[]
[taint329]i invoke virtualinvoke r5.<org.apache.hadoop.mapreduce.Job: void setMapperClass(java.lang.Class)>(class "cfhider/WordCount$TokenizerMapper")
[taint328]i invoke <org.apache.hadoop.mapreduce.Job: void setMapperClass(java.lang.Class)>
[taint328]i invoke 1
value:class "cfhider/WordCount$TokenizerMapper"
isoutSetContains  false value:class "cfhider/WordCount$TokenizerMapper" index:0
20210427node :virtualinvoke r5.<org.apache.hadoop.mapreduce.Job: void setCombinerClass(java.lang.Class)>(class "cfhider/WordCount$IntSumReducer")
20210427node in :[]
20210427node out :[]
[taint329]i invoke virtualinvoke r5.<org.apache.hadoop.mapreduce.Job: void setCombinerClass(java.lang.Class)>(class "cfhider/WordCount$IntSumReducer")
[taint328]i invoke <org.apache.hadoop.mapreduce.Job: void setCombinerClass(java.lang.Class)>
[taint328]i invoke 1
value:class "cfhider/WordCount$IntSumReducer"
isoutSetContains  false value:class "cfhider/WordCount$IntSumReducer" index:0
20210427node :virtualinvoke r5.<org.apache.hadoop.mapreduce.Job: void setReducerClass(java.lang.Class)>(class "cfhider/WordCount$IntSumReducer")
20210427node in :[]
20210427node out :[]
[taint329]i invoke virtualinvoke r5.<org.apache.hadoop.mapreduce.Job: void setReducerClass(java.lang.Class)>(class "cfhider/WordCount$IntSumReducer")
[taint328]i invoke <org.apache.hadoop.mapreduce.Job: void setReducerClass(java.lang.Class)>
[taint328]i invoke 1
value:class "cfhider/WordCount$IntSumReducer"
isoutSetContains  false value:class "cfhider/WordCount$IntSumReducer" index:0
20210427node :virtualinvoke r5.<org.apache.hadoop.mapreduce.Job: void setOutputKeyClass(java.lang.Class)>(class "org/apache/hadoop/io/Text")
20210427node in :[]
20210427node out :[]
[taint329]i invoke virtualinvoke r5.<org.apache.hadoop.mapreduce.Job: void setOutputKeyClass(java.lang.Class)>(class "org/apache/hadoop/io/Text")
[taint328]i invoke <org.apache.hadoop.mapreduce.Job: void setOutputKeyClass(java.lang.Class)>
[taint328]i invoke 1
value:class "org/apache/hadoop/io/Text"
isoutSetContains  false value:class "org/apache/hadoop/io/Text" index:0
20210427node :virtualinvoke r5.<org.apache.hadoop.mapreduce.Job: void setOutputValueClass(java.lang.Class)>(class "org/apache/hadoop/io/IntWritable")
20210427node in :[]
20210427node out :[]
[taint329]i invoke virtualinvoke r5.<org.apache.hadoop.mapreduce.Job: void setOutputValueClass(java.lang.Class)>(class "org/apache/hadoop/io/IntWritable")
[taint328]i invoke <org.apache.hadoop.mapreduce.Job: void setOutputValueClass(java.lang.Class)>
[taint328]i invoke 1
value:class "org/apache/hadoop/io/IntWritable"
isoutSetContains  false value:class "org/apache/hadoop/io/IntWritable" index:0
20210427node :$r9 = new org.apache.hadoop.fs.Path
20210427node in :[]
普通复制语句1112:$r9 = new org.apache.hadoop.fs.Path
[taint source] u:new org.apache.hadoop.fs.Path
SourceList:[]
20210427node out :[]
20210427node :$r10 = r4[0]
20210427node in :[]
普通复制语句1112:$r10 = r4[0]
[taint source] u:r4
SourceList:[]
[taint source] u:0
SourceList:[]
[taint source] u:r4[0]
SourceList:[]
20210427node out :[]
20210427node :specialinvoke $r9.<org.apache.hadoop.fs.Path: void <init>(java.lang.String)>($r10)
20210427node in :[]
20210427node out :[]
[taint329]i invoke specialinvoke $r9.<org.apache.hadoop.fs.Path: void <init>(java.lang.String)>($r10)
[taint328]i invoke <org.apache.hadoop.fs.Path: void <init>(java.lang.String)>
[taint328]i invoke 1
value:$r10
isoutSetContains  false value:$r10 index:0
20210427node :staticinvoke <org.apache.hadoop.mapreduce.lib.input.FileInputFormat: void addInputPath(org.apache.hadoop.mapreduce.Job,org.apache.hadoop.fs.Path)>(r5, $r9)
20210427node in :[]
20210427node out :[]
[taint329]i invoke staticinvoke <org.apache.hadoop.mapreduce.lib.input.FileInputFormat: void addInputPath(org.apache.hadoop.mapreduce.Job,org.apache.hadoop.fs.Path)>(r5, $r9)
[taint328]i invoke <org.apache.hadoop.mapreduce.lib.input.FileInputFormat: void addInputPath(org.apache.hadoop.mapreduce.Job,org.apache.hadoop.fs.Path)>
[taint328]i invoke 2
value:r5
isoutSetContains  false value:r5 index:0
value:$r9
isoutSetContains  false value:$r9 index:1
20210427node :$r11 = new org.apache.hadoop.fs.Path
20210427node in :[]
普通复制语句1112:$r11 = new org.apache.hadoop.fs.Path
[taint source] u:new org.apache.hadoop.fs.Path
SourceList:[]
20210427node out :[]
20210427node :$r12 = r4[1]
20210427node in :[]
普通复制语句1112:$r12 = r4[1]
[taint source] u:r4
SourceList:[]
[taint source] u:1
SourceList:[]
[taint source] u:r4[1]
SourceList:[]
20210427node out :[]
20210427node :specialinvoke $r11.<org.apache.hadoop.fs.Path: void <init>(java.lang.String)>($r12)
20210427node in :[]
20210427node out :[]
[taint329]i invoke specialinvoke $r11.<org.apache.hadoop.fs.Path: void <init>(java.lang.String)>($r12)
[taint328]i invoke <org.apache.hadoop.fs.Path: void <init>(java.lang.String)>
[taint328]i invoke 1
value:$r12
isoutSetContains  false value:$r12 index:0
20210427node :staticinvoke <org.apache.hadoop.mapreduce.lib.output.FileOutputFormat: void setOutputPath(org.apache.hadoop.mapreduce.Job,org.apache.hadoop.fs.Path)>(r5, $r11)
20210427node in :[]
20210427node out :[]
[taint329]i invoke staticinvoke <org.apache.hadoop.mapreduce.lib.output.FileOutputFormat: void setOutputPath(org.apache.hadoop.mapreduce.Job,org.apache.hadoop.fs.Path)>(r5, $r11)
[taint328]i invoke <org.apache.hadoop.mapreduce.lib.output.FileOutputFormat: void setOutputPath(org.apache.hadoop.mapreduce.Job,org.apache.hadoop.fs.Path)>
[taint328]i invoke 2
value:r5
isoutSetContains  false value:r5 index:0
value:$r11
isoutSetContains  false value:$r11 index:1
20210427node :$z0 = virtualinvoke r5.<org.apache.hadoop.mapreduce.Job: boolean waitForCompletion(boolean)>(1)
20210427node in :[]
调用语句赋值给变量:$z0 = virtualinvoke r5.<org.apache.hadoop.mapreduce.Job: boolean waitForCompletion(boolean)>(1)
20210427node out :[]
[taint328]a invoke <org.apache.hadoop.mapreduce.Job: boolean waitForCompletion(boolean)>
[taint328]a invoke 1
assi isoutSet  false value:1 index:0
20210427node :if $z0 == 0 goto $b2 = 1
20210427node in :[]
20210427node out :[]
Have
Stmt if :if $z0 == 0 goto $b2 = 1Stmt if value:$z0 == 0the value=$z0
the value=0
maintainValues.size0
ifValues1
20210427node :$b2 = 1
20210427node in :[]
普通复制语句1112:$b2 = 1
[taint source] u:1
SourceList:[]
20210427node out :[]
20210427node :$b2 = 0
20210427node in :[]
普通复制语句1112:$b2 = 0
[taint source] u:0
SourceList:[]
20210427node out :[]
20210427node :goto [?= b1 = $b2]
20210427node in :[]
20210427node out :[]
20210427node :b1 = $b2
20210427node in :[]
普通复制语句1112:b1 = $b2
[taint source] u:$b2
SourceList:[]
20210427node out :[]
20210427node :$l3 = staticinvoke <java.lang.System: long currentTimeMillis()>()
20210427node in :[]
调用语句赋值给变量:$l3 = staticinvoke <java.lang.System: long currentTimeMillis()>()
20210427node out :[]
[taint328]a invoke <java.lang.System: long currentTimeMillis()>
[taint328]a invoke 0
20210427node :$l4 = $l3 - l0
20210427node in :[]
普通复制语句1112:$l4 = $l3 - l0
[taint source] u:$l3
SourceList:[]
[taint source] u:l0
SourceList:[]
[taint source] u:$l3 - l0
SourceList:[]
20210427node out :[]
20210427node :$d1 = (double) $l4
20210427node in :[]
普通复制语句1112:$d1 = (double) $l4
[taint source] u:$l4
SourceList:[]
[taint source] u:(double) $l4
SourceList:[]
20210427node out :[]
20210427node :d0 = $d1 / 1000.0
20210427node in :[]
普通复制语句1112:d0 = $d1 / 1000.0
[taint source] u:$d1
SourceList:[]
[taint source] u:1000.0
SourceList:[]
[taint source] u:$d1 / 1000.0
SourceList:[]
20210427node out :[]
20210427node :$r13 = <java.lang.System: java.io.PrintStream out>
20210427node in :[]
普通复制语句1112:$r13 = <java.lang.System: java.io.PrintStream out>
[taint source] u:<java.lang.System: java.io.PrintStream out>
SourceList:[]
20210427node out :[]
20210427node :$r14 = new java.lang.StringBuilder
20210427node in :[]
普通复制语句1112:$r14 = new java.lang.StringBuilder
[taint source] u:new java.lang.StringBuilder
SourceList:[]
20210427node out :[]
20210427node :specialinvoke $r14.<java.lang.StringBuilder: void <init>()>()
20210427node in :[]
20210427node out :[]
[taint329]i invoke specialinvoke $r14.<java.lang.StringBuilder: void <init>()>()
[taint328]i invoke <java.lang.StringBuilder: void <init>()>
[taint328]i invoke 0
20210427node :$r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Job Finished in ")
20210427node in :[]
调用语句赋值给变量:$r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Job Finished in ")
20210427node out :[]
[taint328]a invoke <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
[taint328]a invoke 1
assi isoutSet  false value:"Job Finished in " index:0
20210427node :$r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(double)>(d0)
20210427node in :[]
调用语句赋值给变量:$r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(double)>(d0)
20210427node out :[]
[taint328]a invoke <java.lang.StringBuilder: java.lang.StringBuilder append(double)>
[taint328]a invoke 1
assi isoutSet  false value:d0 index:0
20210427node :$r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" seconds")
20210427node in :[]
调用语句赋值给变量:$r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" seconds")
20210427node out :[]
[taint328]a invoke <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
[taint328]a invoke 1
assi isoutSet  false value:" seconds" index:0
20210427node :$r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>()
20210427node in :[]
调用语句赋值给变量:$r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>()
20210427node out :[]
[taint328]a invoke <java.lang.StringBuilder: java.lang.String toString()>
[taint328]a invoke 0
20210427node :virtualinvoke $r13.<java.io.PrintStream: void println(java.lang.String)>($r18)
20210427node in :[]
20210427node out :[]
[taint329]i invoke virtualinvoke $r13.<java.io.PrintStream: void println(java.lang.String)>($r18)
[taint328]i invoke <java.io.PrintStream: void println(java.lang.String)>
[taint328]i invoke 1
value:$r18
isoutSetContains  false value:$r18 index:0
20210427node :staticinvoke <java.lang.System: void exit(int)>(b1)
20210427node in :[]
20210427node out :[]
[taint329]i invoke staticinvoke <java.lang.System: void exit(int)>(b1)
[taint328]i invoke <java.lang.System: void exit(int)>
[taint328]i invoke 1
value:b1
isoutSetContains  false value:b1 index:0
20210427node :return
20210427node in :[]
20210427node out :[]
analysis.outSet.size():0
[CFMAP]2021 After taintAnalysis:{cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={}}
The data isgggg 
<cfhider.WordCount: void main(java.lang.String[])>
The data isgggg cfhider.WordCount main [] {cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={}}  {cfhider.WordCount$IntSumReducer={reduce=[I@1112aeb9}, cfhider.WordCount$TokenizerMapper={}, cfhider.WordCount={main=[I@31aed88a}, invoker.SnowFlake={}}
Coming...
doAnalysis Startingqqqqqqqq.....
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
[taint329]i invoke staticinvoke <java.lang.System: void exit(int)>(b1)
[taint328]i invoke <java.lang.System: void exit(int)>
[taint328]i invoke 1
value:b1
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
[taint329]i invoke virtualinvoke $r13.<java.io.PrintStream: void println(java.lang.String)>($r18)
[taint328]i invoke <java.io.PrintStream: void println(java.lang.String)>
[taint328]i invoke 1
value:$r18
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>()
currStmt left value20210420:$r18
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" seconds")
currStmt left value20210420:$r17
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(double)>(d0)
currStmt left value20210420:$r16
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Job Finished in ")
currStmt left value20210420:$r15
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
[taint329]i invoke specialinvoke $r14.<java.lang.StringBuilder: void <init>()>()
[taint328]i invoke <java.lang.StringBuilder: void <init>()>
[taint328]i invoke 0
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$r14 = new java.lang.StringBuilder
currStmt left value20210420:$r14
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$r13 = <java.lang.System: java.io.PrintStream out>
currStmt left value20210420:$r13
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:d0 = $d1 / 1000.0
currStmt left value20210420:d0
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$d1 = (double) $l4
currStmt left value20210420:$d1
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$l4 = $l3 - l0
currStmt left value20210420:$l4
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$l3 = staticinvoke <java.lang.System: long currentTimeMillis()>()
currStmt left value20210420:$l3
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:b1 = $b2
currStmt left value20210420:b1
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$b2 = 0
currStmt left value20210420:$b2
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$b2 = 1
currStmt left value20210420:$b2
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
Have
the value=$z0
the value=0
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$z0 = virtualinvoke r5.<org.apache.hadoop.mapreduce.Job: boolean waitForCompletion(boolean)>(1)
currStmt left value20210420:$z0
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
[taint329]i invoke staticinvoke <org.apache.hadoop.mapreduce.lib.output.FileOutputFormat: void setOutputPath(org.apache.hadoop.mapreduce.Job,org.apache.hadoop.fs.Path)>(r5, $r11)
[taint328]i invoke <org.apache.hadoop.mapreduce.lib.output.FileOutputFormat: void setOutputPath(org.apache.hadoop.mapreduce.Job,org.apache.hadoop.fs.Path)>
[taint328]i invoke 2
value:r5
value:$r11
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
[taint329]i invoke specialinvoke $r11.<org.apache.hadoop.fs.Path: void <init>(java.lang.String)>($r12)
[taint328]i invoke <org.apache.hadoop.fs.Path: void <init>(java.lang.String)>
[taint328]i invoke 1
value:$r12
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$r12 = r4[1]
currStmt left value20210420:$r12
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$r11 = new org.apache.hadoop.fs.Path
currStmt left value20210420:$r11
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
[taint329]i invoke staticinvoke <org.apache.hadoop.mapreduce.lib.input.FileInputFormat: void addInputPath(org.apache.hadoop.mapreduce.Job,org.apache.hadoop.fs.Path)>(r5, $r9)
[taint328]i invoke <org.apache.hadoop.mapreduce.lib.input.FileInputFormat: void addInputPath(org.apache.hadoop.mapreduce.Job,org.apache.hadoop.fs.Path)>
[taint328]i invoke 2
value:r5
value:$r9
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
[taint329]i invoke specialinvoke $r9.<org.apache.hadoop.fs.Path: void <init>(java.lang.String)>($r10)
[taint328]i invoke <org.apache.hadoop.fs.Path: void <init>(java.lang.String)>
[taint328]i invoke 1
value:$r10
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$r10 = r4[0]
currStmt left value20210420:$r10
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$r9 = new org.apache.hadoop.fs.Path
currStmt left value20210420:$r9
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
[taint329]i invoke virtualinvoke r5.<org.apache.hadoop.mapreduce.Job: void setOutputValueClass(java.lang.Class)>(class "org/apache/hadoop/io/IntWritable")
[taint328]i invoke <org.apache.hadoop.mapreduce.Job: void setOutputValueClass(java.lang.Class)>
[taint328]i invoke 1
value:class "org/apache/hadoop/io/IntWritable"
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
[taint329]i invoke virtualinvoke r5.<org.apache.hadoop.mapreduce.Job: void setOutputKeyClass(java.lang.Class)>(class "org/apache/hadoop/io/Text")
[taint328]i invoke <org.apache.hadoop.mapreduce.Job: void setOutputKeyClass(java.lang.Class)>
[taint328]i invoke 1
value:class "org/apache/hadoop/io/Text"
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
[taint329]i invoke virtualinvoke r5.<org.apache.hadoop.mapreduce.Job: void setReducerClass(java.lang.Class)>(class "cfhider/WordCount$IntSumReducer")
[taint328]i invoke <org.apache.hadoop.mapreduce.Job: void setReducerClass(java.lang.Class)>
[taint328]i invoke 1
value:class "cfhider/WordCount$IntSumReducer"
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
[taint329]i invoke virtualinvoke r5.<org.apache.hadoop.mapreduce.Job: void setCombinerClass(java.lang.Class)>(class "cfhider/WordCount$IntSumReducer")
[taint328]i invoke <org.apache.hadoop.mapreduce.Job: void setCombinerClass(java.lang.Class)>
[taint328]i invoke 1
value:class "cfhider/WordCount$IntSumReducer"
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
[taint329]i invoke virtualinvoke r5.<org.apache.hadoop.mapreduce.Job: void setMapperClass(java.lang.Class)>(class "cfhider/WordCount$TokenizerMapper")
[taint328]i invoke <org.apache.hadoop.mapreduce.Job: void setMapperClass(java.lang.Class)>
[taint328]i invoke 1
value:class "cfhider/WordCount$TokenizerMapper"
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
[taint329]i invoke virtualinvoke r5.<org.apache.hadoop.mapreduce.Job: void setJarByClass(java.lang.Class)>(class "cfhider/WordCount")
[taint328]i invoke <org.apache.hadoop.mapreduce.Job: void setJarByClass(java.lang.Class)>
[taint328]i invoke 1
value:class "cfhider/WordCount"
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:r5 = $r8
currStmt left value20210420:r5
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
[taint329]i invoke specialinvoke $r8.<org.apache.hadoop.mapreduce.Job: void <init>(org.apache.hadoop.conf.Configuration,java.lang.String)>(r2, "word count")
[taint328]i invoke <org.apache.hadoop.mapreduce.Job: void <init>(org.apache.hadoop.conf.Configuration,java.lang.String)>
[taint328]i invoke 2
value:r2
value:"word count"
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$r8 = new org.apache.hadoop.mapreduce.Job
currStmt left value20210420:$r8
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:l0 = staticinvoke <java.lang.System: long currentTimeMillis()>()
currStmt left value20210420:l0
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:r4 = virtualinvoke r3.<org.apache.hadoop.util.GenericOptionsParser: java.lang.String[] getRemainingArgs()>()
currStmt left value20210420:r4
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:r3 = $r7
currStmt left value20210420:r3
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
[taint329]i invoke specialinvoke $r7.<org.apache.hadoop.util.GenericOptionsParser: void <init>(org.apache.hadoop.conf.Configuration,java.lang.String[])>(r2, r0)
[taint328]i invoke <org.apache.hadoop.util.GenericOptionsParser: void <init>(org.apache.hadoop.conf.Configuration,java.lang.String[])>
[taint328]i invoke 2
value:r2
value:r0
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$r7 = new org.apache.hadoop.util.GenericOptionsParser
currStmt left value20210420:$r7
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:r2 = $r6
currStmt left value20210420:r2
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
[taint329]i invoke specialinvoke $r6.<org.apache.hadoop.conf.Configuration: void <init>()>()
[taint328]i invoke <org.apache.hadoop.conf.Configuration: void <init>()>
[taint328]i invoke 0
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$r6 = new org.apache.hadoop.conf.Configuration
currStmt left value20210420:$r6
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
[taint329]i invoke virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>("In this project, we test wordcount with SGX!\n")
[taint328]i invoke <java.io.PrintStream: void println(java.lang.String)>
[taint328]i invoke 1
value:"In this project, we test wordcount with SGX!\n"
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$r1 = <java.lang.System: java.io.PrintStream out>
currStmt left value20210420:$r1
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
doAnalysis endqqqqqqq.....
come here
[CFMAP]2021 After BackwardAnalysis:{cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={}}
[taint]SooClass:cfhider.WordCount$TokenizerMapper
[taint] class: cfhider.WordCount$TokenizerMapper
methList :{map=[$z0]}
[taint not hasActiveBody] sootMethod: <init>
clasname=cfhider.WordCount$TokenizerMapper
methodname=<init>
sourcelist2021=[]
20210427node :r0 := @this: cfhider.WordCount$TokenizerMapper
20210427node in :[]
20210427node out :[]
currStmt20210423:r0 := @this: cfhider.WordCount$TokenizerMapper
20210427node :specialinvoke r0.<org.apache.hadoop.mapreduce.Mapper: void <init>()>()
20210427node in :[]
20210427node out :[]
[taint329]i invoke specialinvoke r0.<org.apache.hadoop.mapreduce.Mapper: void <init>()>()
[taint328]i invoke <org.apache.hadoop.mapreduce.Mapper: void <init>()>
[taint328]i invoke 0
20210427node :$r1 = new org.apache.hadoop.io.Text
20210427node in :[]
普通复制语句1112:$r1 = new org.apache.hadoop.io.Text
[taint source] u:new org.apache.hadoop.io.Text
SourceList:[]
20210427node out :[]
20210427node :specialinvoke $r1.<org.apache.hadoop.io.Text: void <init>()>()
20210427node in :[]
20210427node out :[]
[taint329]i invoke specialinvoke $r1.<org.apache.hadoop.io.Text: void <init>()>()
[taint328]i invoke <org.apache.hadoop.io.Text: void <init>()>
[taint328]i invoke 0
20210427node :r0.<cfhider.WordCount$TokenizerMapper: org.apache.hadoop.io.Text word> = $r1
20210427node in :[]
普通复制语句1112:r0.<cfhider.WordCount$TokenizerMapper: org.apache.hadoop.io.Text word> = $r1
[taint source] u:r0
SourceList:[]
[taint source] u:$r1
SourceList:[]
20210427node out :[]
20210427node :return
20210427node in :[]
20210427node out :[]
analysis.outSet.size():0
The data isgggg 
<cfhider.WordCount$TokenizerMapper: void <init>()>
The data isgggg cfhider.WordCount$TokenizerMapper <init> [] {cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={}}  {cfhider.WordCount$IntSumReducer={reduce=[I@1112aeb9}, cfhider.WordCount$TokenizerMapper={}, cfhider.WordCount={main=[I@31aed88a}, invoker.SnowFlake={}}
Coming...
doAnalysis Startingqqqqqqqq.....
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:r0.<cfhider.WordCount$TokenizerMapper: org.apache.hadoop.io.Text word> = $r1
currStmt left value20210420:r0.<cfhider.WordCount$TokenizerMapper: org.apache.hadoop.io.Text word>
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
[taint329]i invoke specialinvoke $r1.<org.apache.hadoop.io.Text: void <init>()>()
[taint328]i invoke <org.apache.hadoop.io.Text: void <init>()>
[taint328]i invoke 0
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$r1 = new org.apache.hadoop.io.Text
currStmt left value20210420:$r1
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
[taint329]i invoke specialinvoke r0.<org.apache.hadoop.mapreduce.Mapper: void <init>()>()
[taint328]i invoke <org.apache.hadoop.mapreduce.Mapper: void <init>()>
[taint328]i invoke 0
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
doAnalysis endqqqqqqq.....
come here
[taint into] sootMethod: map
[$z0]
class name :cfhider.WordCount$TokenizerMapper
method name :map
method list :[$z0]
clasname=cfhider.WordCount$TokenizerMapper
methodname=map
sourcelist2021=[$z0]
20210427node :r0 := @this: cfhider.WordCount$TokenizerMapper
20210427node in :[]
20210427node out :[]
currStmt20210423:r0 := @this: cfhider.WordCount$TokenizerMapper
20210427node :r1 := @parameter0: java.lang.Object
20210427node in :[]
[idStmt]iiiiiii r1 := @parameter0: java.lang.Object  index:0
ClassName:cfhider.WordCount$TokenizerMapper
MethodName:map
20210427node out :[]
currStmt20210423:r1 := @parameter0: java.lang.Object
20210427node :r2 := @parameter1: org.apache.hadoop.io.Text
20210427node in :[]
[idStmt]iiiiiii r2 := @parameter1: org.apache.hadoop.io.Text  index:1
ClassName:cfhider.WordCount$TokenizerMapper
MethodName:map
aaaa:0
20210427node out :[]
currStmt20210423:r2 := @parameter1: org.apache.hadoop.io.Text
20210427node :r3 := @parameter2: org.apache.hadoop.mapreduce.Mapper$Context
20210427node in :[]
[idStmt]iiiiiii r3 := @parameter2: org.apache.hadoop.mapreduce.Mapper$Context  index:2
ClassName:cfhider.WordCount$TokenizerMapper
MethodName:map
aaaa:0
20210427node out :[]
currStmt20210423:r3 := @parameter2: org.apache.hadoop.mapreduce.Mapper$Context
20210427node :$r4 = new java.util.StringTokenizer
20210427node in :[]
普通复制语句1112:$r4 = new java.util.StringTokenizer
[taint source] u:new java.util.StringTokenizer
SourceList:[$z0]
20210427node out :[]
20210427node :$r6 = virtualinvoke r2.<org.apache.hadoop.io.Text: java.lang.String toString()>()
20210427node in :[]
调用语句赋值给变量:$r6 = virtualinvoke r2.<org.apache.hadoop.io.Text: java.lang.String toString()>()
20210427node out :[]
[taint328]a invoke <org.apache.hadoop.io.Text: java.lang.String toString()>
[taint328]a invoke 0
20210427node :specialinvoke $r4.<java.util.StringTokenizer: void <init>(java.lang.String)>($r6)
20210427node in :[]
20210427node out :[]
[taint329]i invoke specialinvoke $r4.<java.util.StringTokenizer: void <init>(java.lang.String)>($r6)
[taint328]i invoke <java.util.StringTokenizer: void <init>(java.lang.String)>
[taint328]i invoke 1
value:$r6
isoutSetContains  false value:$r6 index:0
20210427node :r5 = $r4
20210427node in :[]
普通复制语句1112:r5 = $r4
[taint source] u:$r4
SourceList:[$z0]
20210427node out :[]
20210427node :$z0 = virtualinvoke r5.<java.util.StringTokenizer: boolean hasMoreTokens()>()
20210427node in :[]
调用语句赋值给变量:$z0 = virtualinvoke r5.<java.util.StringTokenizer: boolean hasMoreTokens()>()
20210427node out :[]
[taint328]a invoke <java.util.StringTokenizer: boolean hasMoreTokens()>
[taint328]a invoke 0
20210427node :if $z0 == 0 goto return
20210427node in :[]
20210427node out :[]
Have
Stmt if :if $z0 == 0 goto returnStmt if value:$z0 == 0the value=$z0
the value=0
maintainValues.size1
ifValues1
20210427node :return
20210427node in :[]
20210427node out :[]
20210427node :$r7 = r0.<cfhider.WordCount$TokenizerMapper: org.apache.hadoop.io.Text word>
20210427node in :[]
普通复制语句1112:$r7 = r0.<cfhider.WordCount$TokenizerMapper: org.apache.hadoop.io.Text word>
[taint source] u:r0
SourceList:[$z0]
[taint source] u:r0.<cfhider.WordCount$TokenizerMapper: org.apache.hadoop.io.Text word>
SourceList:[$z0]
20210427node out :[]
20210427node :$r8 = virtualinvoke r5.<java.util.StringTokenizer: java.lang.String nextToken()>()
20210427node in :[]
调用语句赋值给变量:$r8 = virtualinvoke r5.<java.util.StringTokenizer: java.lang.String nextToken()>()
20210427node out :[]
[taint328]a invoke <java.util.StringTokenizer: java.lang.String nextToken()>
[taint328]a invoke 0
20210427node :virtualinvoke $r7.<org.apache.hadoop.io.Text: void set(java.lang.String)>($r8)
20210427node in :[]
20210427node out :[]
[taint329]i invoke virtualinvoke $r7.<org.apache.hadoop.io.Text: void set(java.lang.String)>($r8)
[taint328]i invoke <org.apache.hadoop.io.Text: void set(java.lang.String)>
[taint328]i invoke 1
value:$r8
isoutSetContains  false value:$r8 index:0
20210427node :$r9 = r0.<cfhider.WordCount$TokenizerMapper: org.apache.hadoop.io.Text word>
20210427node in :[]
普通复制语句1112:$r9 = r0.<cfhider.WordCount$TokenizerMapper: org.apache.hadoop.io.Text word>
[taint source] u:r0
SourceList:[$z0]
[taint source] u:r0.<cfhider.WordCount$TokenizerMapper: org.apache.hadoop.io.Text word>
SourceList:[$z0]
20210427node out :[]
20210427node :$r10 = <cfhider.WordCount$TokenizerMapper: org.apache.hadoop.io.IntWritable one>
20210427node in :[]
普通复制语句1112:$r10 = <cfhider.WordCount$TokenizerMapper: org.apache.hadoop.io.IntWritable one>
[taint source] u:<cfhider.WordCount$TokenizerMapper: org.apache.hadoop.io.IntWritable one>
SourceList:[$z0]
20210427node out :[]
20210427node :virtualinvoke r3.<org.apache.hadoop.mapreduce.Mapper$Context: void write(java.lang.Object,java.lang.Object)>($r9, $r10)
20210427node in :[]
20210427node out :[]
[taint329]i invoke virtualinvoke r3.<org.apache.hadoop.mapreduce.Mapper$Context: void write(java.lang.Object,java.lang.Object)>($r9, $r10)
[taint328]i invoke <org.apache.hadoop.mapreduce.TaskInputOutputContext: void write(java.lang.Object,java.lang.Object)>
[taint328]i invoke 2
value:$r9
isoutSetContains  false value:$r9 index:0
value:$r10
isoutSetContains  false value:$r10 index:1
20210427node :goto [?= $z0 = virtualinvoke r5.<java.util.StringTokenizer: boolean hasMoreTokens()>()]
20210427node in :[]
20210427node out :[]
analysis.outSet.size():0
[CFMAP]2021 After taintAnalysis:{cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={}}
The data isgggg 
<cfhider.WordCount$TokenizerMapper: void map(java.lang.Object,org.apache.hadoop.io.Text,org.apache.hadoop.mapreduce.Mapper$Context)>
The data isgggg cfhider.WordCount$TokenizerMapper map [$z0] {cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={}}  {cfhider.WordCount$IntSumReducer={reduce=[I@1112aeb9}, cfhider.WordCount$TokenizerMapper={map=[I@9f0bd8c}, cfhider.WordCount={main=[I@31aed88a}, invoker.SnowFlake={}}
Coming...
doAnalysis Startingqqqqqqqq.....
srcValue=[]
destValue:[]
taint data:[$z0]
Coming in Backward Analysis
srcValue=[]
destValue:[]
taint data:[$z0]
Coming in Backward Analysis
[taint329]i invoke virtualinvoke r3.<org.apache.hadoop.mapreduce.Mapper$Context: void write(java.lang.Object,java.lang.Object)>($r9, $r10)
[taint328]i invoke <org.apache.hadoop.mapreduce.TaskInputOutputContext: void write(java.lang.Object,java.lang.Object)>
[taint328]i invoke 2
value:$r9
value:$r10
srcValue=[]
destValue:[]
taint data:[$z0]
Coming in Backward Analysis
currStmt20210420:$r10 = <cfhider.WordCount$TokenizerMapper: org.apache.hadoop.io.IntWritable one>
currStmt left value20210420:$r10
srcValue=[]
destValue:[]
taint data:[$z0]
Coming in Backward Analysis
currStmt20210420:$r9 = r0.<cfhider.WordCount$TokenizerMapper: org.apache.hadoop.io.Text word>
currStmt left value20210420:$r9
srcValue=[]
destValue:[]
taint data:[$z0]
Coming in Backward Analysis
[taint329]i invoke virtualinvoke $r7.<org.apache.hadoop.io.Text: void set(java.lang.String)>($r8)
[taint328]i invoke <org.apache.hadoop.io.Text: void set(java.lang.String)>
[taint328]i invoke 1
value:$r8
srcValue=[]
destValue:[]
taint data:[$z0]
Coming in Backward Analysis
currStmt20210420:$r8 = virtualinvoke r5.<java.util.StringTokenizer: java.lang.String nextToken()>()
currStmt left value20210420:$r8
srcValue=[]
destValue:[]
taint data:[$z0]
Coming in Backward Analysis
currStmt20210420:$r7 = r0.<cfhider.WordCount$TokenizerMapper: org.apache.hadoop.io.Text word>
currStmt left value20210420:$r7
srcValue=[]
destValue:[]
taint data:[$z0]
Coming in Backward Analysis
srcValue=[]
destValue:[]
taint data:[$z0]
Coming in Backward Analysis
Have
the value=$z0
the value=0
srcValue=[]
destValue:[]
taint data:[$z0]
Coming in Backward Analysis
currStmt20210420:$z0 = virtualinvoke r5.<java.util.StringTokenizer: boolean hasMoreTokens()>()
currStmt left value20210420:$z0
BackWard 20210419===virtualinvoke r5.<java.util.StringTokenizer: boolean hasMoreTokens()>()
[BackWard taint329]i invoke $z0 = virtualinvoke r5.<java.util.StringTokenizer: boolean hasMoreTokens()>()
[BackWard taint328]i invoke <java.util.StringTokenizer: boolean hasMoreTokens()>
srcValue=[]
destValue:[]
taint data:[$z0]
Coming in Backward Analysis
currStmt20210420:r5 = $r4
currStmt left value20210420:r5
srcValue=[]
destValue:[]
taint data:[$z0]
Coming in Backward Analysis
[taint329]i invoke specialinvoke $r4.<java.util.StringTokenizer: void <init>(java.lang.String)>($r6)
[taint328]i invoke <java.util.StringTokenizer: void <init>(java.lang.String)>
[taint328]i invoke 1
value:$r6
srcValue=[]
destValue:[]
taint data:[$z0]
Coming in Backward Analysis
currStmt20210420:$r6 = virtualinvoke r2.<org.apache.hadoop.io.Text: java.lang.String toString()>()
currStmt left value20210420:$r6
srcValue=[]
destValue:[]
taint data:[$z0]
Coming in Backward Analysis
currStmt20210420:$r4 = new java.util.StringTokenizer
currStmt left value20210420:$r4
srcValue=[]
destValue:[]
taint data:[$z0]
Coming in Backward Analysis
srcValue=[]
destValue:[]
taint data:[$z0]
Coming in Backward Analysis
srcValue=[]
destValue:[]
taint data:[$z0]
Coming in Backward Analysis
srcValue=[]
destValue:[]
taint data:[$z0]
Coming in Backward Analysis
doAnalysis endqqqqqqq.....
come here
[CFMAP]2021 After BackwardAnalysis:{cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={}}
[taint into] sootMethod: map
[$z0]
class name :cfhider.WordCount$TokenizerMapper
method name :map
method list :[$z0]
clasname=cfhider.WordCount$TokenizerMapper
methodname=map
sourcelist2021=[$z0]
20210427node :r0 := @this: cfhider.WordCount$TokenizerMapper
20210427node in :[]
20210427node out :[]
currStmt20210423:r0 := @this: cfhider.WordCount$TokenizerMapper
20210427node :r1 := @parameter0: java.lang.Object
20210427node in :[]
[idStmt]iiiiiii r1 := @parameter0: java.lang.Object  index:0
ClassName:cfhider.WordCount$TokenizerMapper
MethodName:map
aaaa:0
20210427node out :[]
currStmt20210423:r1 := @parameter0: java.lang.Object
20210427node :r2 := @parameter1: java.lang.Object
20210427node in :[]
[idStmt]iiiiiii r2 := @parameter1: java.lang.Object  index:1
ClassName:cfhider.WordCount$TokenizerMapper
MethodName:map
aaaa:0
20210427node out :[]
currStmt20210423:r2 := @parameter1: java.lang.Object
20210427node :r3 := @parameter2: org.apache.hadoop.mapreduce.Mapper$Context
20210427node in :[]
[idStmt]iiiiiii r3 := @parameter2: org.apache.hadoop.mapreduce.Mapper$Context  index:2
ClassName:cfhider.WordCount$TokenizerMapper
MethodName:map
aaaa:0
20210427node out :[]
currStmt20210423:r3 := @parameter2: org.apache.hadoop.mapreduce.Mapper$Context
20210427node :$r4 = (org.apache.hadoop.io.Text) r2
20210427node in :[]
普通复制语句1112:$r4 = (org.apache.hadoop.io.Text) r2
[taint source] u:r2
SourceList:[$z0]
[taint source] u:(org.apache.hadoop.io.Text) r2
SourceList:[$z0]
20210427node out :[]
20210427node :virtualinvoke r0.<cfhider.WordCount$TokenizerMapper: void map(java.lang.Object,org.apache.hadoop.io.Text,org.apache.hadoop.mapreduce.Mapper$Context)>(r1, $r4, r3)
20210427node in :[]
20210427node out :[]
[taint329]i invoke virtualinvoke r0.<cfhider.WordCount$TokenizerMapper: void map(java.lang.Object,org.apache.hadoop.io.Text,org.apache.hadoop.mapreduce.Mapper$Context)>(r1, $r4, r3)
[taint328]i invoke <cfhider.WordCount$TokenizerMapper: void map(java.lang.Object,org.apache.hadoop.io.Text,org.apache.hadoop.mapreduce.Mapper$Context)>
[taint328]i invoke 3
value:r1
isoutSetContains  false value:r1 index:0
value:$r4
isoutSetContains  false value:$r4 index:1
value:r3
isoutSetContains  false value:r3 index:2
[invokemap]invoke:map  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
20210427node :return
20210427node in :[]
20210427node out :[]
analysis.outSet.size():0
[CFMAP]2021 After taintAnalysis:{cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={}}
The data isgggg 
<cfhider.WordCount$TokenizerMapper: void map(java.lang.Object,java.lang.Object,org.apache.hadoop.mapreduce.Mapper$Context)>
The data isgggg cfhider.WordCount$TokenizerMapper map [$z0] {cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={}}  {cfhider.WordCount$IntSumReducer={reduce=[I@1112aeb9}, cfhider.WordCount$TokenizerMapper={map=[I@1c2c376d}, cfhider.WordCount={main=[I@31aed88a}, invoker.SnowFlake={}}
Coming...
doAnalysis Startingqqqqqqqq.....
srcValue=[]
destValue:[]
taint data:[$z0]
Coming in Backward Analysis
srcValue=[]
destValue:[]
taint data:[$z0]
Coming in Backward Analysis
[taint329]i invoke virtualinvoke r0.<cfhider.WordCount$TokenizerMapper: void map(java.lang.Object,org.apache.hadoop.io.Text,org.apache.hadoop.mapreduce.Mapper$Context)>(r1, $r4, r3)
[taint328]i invoke <cfhider.WordCount$TokenizerMapper: void map(java.lang.Object,org.apache.hadoop.io.Text,org.apache.hadoop.mapreduce.Mapper$Context)>
[taint328]i invoke 3
value:r1
in here:[I@1aeae38e
[invokemap]invoke:map  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
value:$r4
in here:[I@1aeae38e
[invokemap]invoke:map  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
value:r3
in here:[I@1aeae38e
[invokemap]invoke:map  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
srcValue=[]
destValue:[]
taint data:[$z0]
Coming in Backward Analysis
currStmt20210420:$r4 = (org.apache.hadoop.io.Text) r2
currStmt left value20210420:$r4
srcValue=[]
destValue:[]
taint data:[$z0]
Coming in Backward Analysis
srcValue=[]
destValue:[]
taint data:[$z0]
Coming in Backward Analysis
srcValue=[]
destValue:[]
taint data:[$z0]
Coming in Backward Analysis
srcValue=[]
destValue:[]
taint data:[$z0]
Coming in Backward Analysis
doAnalysis endqqqqqqq.....
come here
[CFMAP]2021 After BackwardAnalysis:{cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={}}
[taint into] sootMethod: <clinit>
class name :cfhider.WordCount$TokenizerMapper
method name :<clinit>
method list :[]
clasname=cfhider.WordCount$TokenizerMapper
methodname=<clinit>
sourcelist2021=[]
20210427node :$r0 = new org.apache.hadoop.io.IntWritable
20210427node in :[]
普通复制语句1112:$r0 = new org.apache.hadoop.io.IntWritable
[taint source] u:new org.apache.hadoop.io.IntWritable
SourceList:[]
20210427node out :[]
20210427node :specialinvoke $r0.<org.apache.hadoop.io.IntWritable: void <init>(int)>(1)
20210427node in :[]
20210427node out :[]
[taint329]i invoke specialinvoke $r0.<org.apache.hadoop.io.IntWritable: void <init>(int)>(1)
[taint328]i invoke <org.apache.hadoop.io.IntWritable: void <init>(int)>
[taint328]i invoke 1
value:1
isoutSetContains  false value:1 index:0
20210427node :<cfhider.WordCount$TokenizerMapper: org.apache.hadoop.io.IntWritable one> = $r0
20210427node in :[]
普通复制语句1112:<cfhider.WordCount$TokenizerMapper: org.apache.hadoop.io.IntWritable one> = $r0
[taint source] u:$r0
SourceList:[]
20210427node out :[]
20210427node :return
20210427node in :[]
20210427node out :[]
analysis.outSet.size():0
[CFMAP]2021 After taintAnalysis:{cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={}}
The data isgggg 
<cfhider.WordCount$TokenizerMapper: void <clinit>()>
The data isgggg cfhider.WordCount$TokenizerMapper <clinit> [] {cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={}}  {cfhider.WordCount$IntSumReducer={reduce=[I@1112aeb9}, cfhider.WordCount$TokenizerMapper={map=[I@1c2c376d}, cfhider.WordCount={main=[I@31aed88a}, invoker.SnowFlake={}}
Coming...
doAnalysis Startingqqqqqqqq.....
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:<cfhider.WordCount$TokenizerMapper: org.apache.hadoop.io.IntWritable one> = $r0
currStmt left value20210420:<cfhider.WordCount$TokenizerMapper: org.apache.hadoop.io.IntWritable one>
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
[taint329]i invoke specialinvoke $r0.<org.apache.hadoop.io.IntWritable: void <init>(int)>(1)
[taint328]i invoke <org.apache.hadoop.io.IntWritable: void <init>(int)>
[taint328]i invoke 1
value:1
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$r0 = new org.apache.hadoop.io.IntWritable
currStmt left value20210420:$r0
doAnalysis endqqqqqqq.....
come here
[CFMAP]2021 After BackwardAnalysis:{cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={}}
[taint into] sootMethod: <init>
[]
class name :cfhider.WordCount$TokenizerMapper
method name :<init>
method list :[]
clasname=cfhider.WordCount$TokenizerMapper
methodname=<init>
sourcelist2021=[]
20210427node :r0 := @this: cfhider.WordCount$TokenizerMapper
20210427node in :[]
20210427node out :[]
currStmt20210423:r0 := @this: cfhider.WordCount$TokenizerMapper
20210427node :specialinvoke r0.<org.apache.hadoop.mapreduce.Mapper: void <init>()>()
20210427node in :[]
20210427node out :[]
[taint329]i invoke specialinvoke r0.<org.apache.hadoop.mapreduce.Mapper: void <init>()>()
[taint328]i invoke <org.apache.hadoop.mapreduce.Mapper: void <init>()>
[taint328]i invoke 0
20210427node :$r1 = new org.apache.hadoop.io.Text
20210427node in :[]
普通复制语句1112:$r1 = new org.apache.hadoop.io.Text
[taint source] u:new org.apache.hadoop.io.Text
SourceList:[]
20210427node out :[]
20210427node :specialinvoke $r1.<org.apache.hadoop.io.Text: void <init>()>()
20210427node in :[]
20210427node out :[]
[taint329]i invoke specialinvoke $r1.<org.apache.hadoop.io.Text: void <init>()>()
[taint328]i invoke <org.apache.hadoop.io.Text: void <init>()>
[taint328]i invoke 0
20210427node :r0.<cfhider.WordCount$TokenizerMapper: org.apache.hadoop.io.Text word> = $r1
20210427node in :[]
普通复制语句1112:r0.<cfhider.WordCount$TokenizerMapper: org.apache.hadoop.io.Text word> = $r1
[taint source] u:r0
SourceList:[]
[taint source] u:$r1
SourceList:[]
20210427node out :[]
20210427node :return
20210427node in :[]
20210427node out :[]
analysis.outSet.size():0
[CFMAP]2021 After taintAnalysis:{cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={}}
The data isgggg 
<cfhider.WordCount$TokenizerMapper: void <init>()>
The data isgggg cfhider.WordCount$TokenizerMapper <init> [] {cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={}}  {cfhider.WordCount$IntSumReducer={reduce=[I@1112aeb9}, cfhider.WordCount$TokenizerMapper={map=[I@1c2c376d}, cfhider.WordCount={main=[I@31aed88a}, invoker.SnowFlake={}}
Coming...
doAnalysis Startingqqqqqqqq.....
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:r0.<cfhider.WordCount$TokenizerMapper: org.apache.hadoop.io.Text word> = $r1
currStmt left value20210420:r0.<cfhider.WordCount$TokenizerMapper: org.apache.hadoop.io.Text word>
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
[taint329]i invoke specialinvoke $r1.<org.apache.hadoop.io.Text: void <init>()>()
[taint328]i invoke <org.apache.hadoop.io.Text: void <init>()>
[taint328]i invoke 0
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$r1 = new org.apache.hadoop.io.Text
currStmt left value20210420:$r1
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
[taint329]i invoke specialinvoke r0.<org.apache.hadoop.mapreduce.Mapper: void <init>()>()
[taint328]i invoke <org.apache.hadoop.mapreduce.Mapper: void <init>()>
[taint328]i invoke 0
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
doAnalysis endqqqqqqq.....
come here
[CFMAP]2021 After BackwardAnalysis:{cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={}}
[taint into] sootMethod: map
[$z0]
class name :cfhider.WordCount$TokenizerMapper
method name :map
method list :[$z0]
clasname=cfhider.WordCount$TokenizerMapper
methodname=map
sourcelist2021=[$z0]
20210427node :r0 := @this: cfhider.WordCount$TokenizerMapper
20210427node in :[]
20210427node out :[]
currStmt20210423:r0 := @this: cfhider.WordCount$TokenizerMapper
20210427node :r1 := @parameter0: java.lang.Object
20210427node in :[]
[idStmt]iiiiiii r1 := @parameter0: java.lang.Object  index:0
ClassName:cfhider.WordCount$TokenizerMapper
MethodName:map
aaaa:0
20210427node out :[]
currStmt20210423:r1 := @parameter0: java.lang.Object
20210427node :r2 := @parameter1: org.apache.hadoop.io.Text
20210427node in :[]
[idStmt]iiiiiii r2 := @parameter1: org.apache.hadoop.io.Text  index:1
ClassName:cfhider.WordCount$TokenizerMapper
MethodName:map
aaaa:0
20210427node out :[]
currStmt20210423:r2 := @parameter1: org.apache.hadoop.io.Text
20210427node :r3 := @parameter2: org.apache.hadoop.mapreduce.Mapper$Context
20210427node in :[]
[idStmt]iiiiiii r3 := @parameter2: org.apache.hadoop.mapreduce.Mapper$Context  index:2
ClassName:cfhider.WordCount$TokenizerMapper
MethodName:map
aaaa:0
20210427node out :[]
currStmt20210423:r3 := @parameter2: org.apache.hadoop.mapreduce.Mapper$Context
20210427node :$r4 = new java.util.StringTokenizer
20210427node in :[]
普通复制语句1112:$r4 = new java.util.StringTokenizer
[taint source] u:new java.util.StringTokenizer
SourceList:[$z0]
20210427node out :[]
20210427node :$r6 = virtualinvoke r2.<org.apache.hadoop.io.Text: java.lang.String toString()>()
20210427node in :[]
调用语句赋值给变量:$r6 = virtualinvoke r2.<org.apache.hadoop.io.Text: java.lang.String toString()>()
20210427node out :[]
[taint328]a invoke <org.apache.hadoop.io.Text: java.lang.String toString()>
[taint328]a invoke 0
20210427node :specialinvoke $r4.<java.util.StringTokenizer: void <init>(java.lang.String)>($r6)
20210427node in :[]
20210427node out :[]
[taint329]i invoke specialinvoke $r4.<java.util.StringTokenizer: void <init>(java.lang.String)>($r6)
[taint328]i invoke <java.util.StringTokenizer: void <init>(java.lang.String)>
[taint328]i invoke 1
value:$r6
isoutSetContains  false value:$r6 index:0
20210427node :r5 = $r4
20210427node in :[]
普通复制语句1112:r5 = $r4
[taint source] u:$r4
SourceList:[$z0]
20210427node out :[]
20210427node :$z0 = virtualinvoke r5.<java.util.StringTokenizer: boolean hasMoreTokens()>()
20210427node in :[]
调用语句赋值给变量:$z0 = virtualinvoke r5.<java.util.StringTokenizer: boolean hasMoreTokens()>()
20210427node out :[]
[taint328]a invoke <java.util.StringTokenizer: boolean hasMoreTokens()>
[taint328]a invoke 0
20210427node :if $z0 == 0 goto return
20210427node in :[]
20210427node out :[]
Have
Stmt if :if $z0 == 0 goto returnStmt if value:$z0 == 0the value=$z0
the value=0
maintainValues.size1
ifValues1
20210427node :return
20210427node in :[]
20210427node out :[]
20210427node :$r7 = r0.<cfhider.WordCount$TokenizerMapper: org.apache.hadoop.io.Text word>
20210427node in :[]
普通复制语句1112:$r7 = r0.<cfhider.WordCount$TokenizerMapper: org.apache.hadoop.io.Text word>
[taint source] u:r0
SourceList:[$z0]
[taint source] u:r0.<cfhider.WordCount$TokenizerMapper: org.apache.hadoop.io.Text word>
SourceList:[$z0]
20210427node out :[]
20210427node :$r8 = virtualinvoke r5.<java.util.StringTokenizer: java.lang.String nextToken()>()
20210427node in :[]
调用语句赋值给变量:$r8 = virtualinvoke r5.<java.util.StringTokenizer: java.lang.String nextToken()>()
20210427node out :[]
[taint328]a invoke <java.util.StringTokenizer: java.lang.String nextToken()>
[taint328]a invoke 0
20210427node :virtualinvoke $r7.<org.apache.hadoop.io.Text: void set(java.lang.String)>($r8)
20210427node in :[]
20210427node out :[]
[taint329]i invoke virtualinvoke $r7.<org.apache.hadoop.io.Text: void set(java.lang.String)>($r8)
[taint328]i invoke <org.apache.hadoop.io.Text: void set(java.lang.String)>
[taint328]i invoke 1
value:$r8
isoutSetContains  false value:$r8 index:0
20210427node :$r9 = r0.<cfhider.WordCount$TokenizerMapper: org.apache.hadoop.io.Text word>
20210427node in :[]
普通复制语句1112:$r9 = r0.<cfhider.WordCount$TokenizerMapper: org.apache.hadoop.io.Text word>
[taint source] u:r0
SourceList:[$z0]
[taint source] u:r0.<cfhider.WordCount$TokenizerMapper: org.apache.hadoop.io.Text word>
SourceList:[$z0]
20210427node out :[]
20210427node :$r10 = <cfhider.WordCount$TokenizerMapper: org.apache.hadoop.io.IntWritable one>
20210427node in :[]
普通复制语句1112:$r10 = <cfhider.WordCount$TokenizerMapper: org.apache.hadoop.io.IntWritable one>
[taint source] u:<cfhider.WordCount$TokenizerMapper: org.apache.hadoop.io.IntWritable one>
SourceList:[$z0]
20210427node out :[]
20210427node :virtualinvoke r3.<org.apache.hadoop.mapreduce.Mapper$Context: void write(java.lang.Object,java.lang.Object)>($r9, $r10)
20210427node in :[]
20210427node out :[]
[taint329]i invoke virtualinvoke r3.<org.apache.hadoop.mapreduce.Mapper$Context: void write(java.lang.Object,java.lang.Object)>($r9, $r10)
[taint328]i invoke <org.apache.hadoop.mapreduce.TaskInputOutputContext: void write(java.lang.Object,java.lang.Object)>
[taint328]i invoke 2
value:$r9
isoutSetContains  false value:$r9 index:0
value:$r10
isoutSetContains  false value:$r10 index:1
20210427node :goto [?= $z0 = virtualinvoke r5.<java.util.StringTokenizer: boolean hasMoreTokens()>()]
20210427node in :[]
20210427node out :[]
analysis.outSet.size():0
[CFMAP]2021 After taintAnalysis:{cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={}}
The data isgggg 
<cfhider.WordCount$TokenizerMapper: void map(java.lang.Object,org.apache.hadoop.io.Text,org.apache.hadoop.mapreduce.Mapper$Context)>
The data isgggg cfhider.WordCount$TokenizerMapper map [$z0] {cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={}}  {cfhider.WordCount$IntSumReducer={reduce=[I@1112aeb9}, cfhider.WordCount$TokenizerMapper={map=[I@33018d70}, cfhider.WordCount={main=[I@31aed88a}, invoker.SnowFlake={}}
Coming...
doAnalysis Startingqqqqqqqq.....
srcValue=[]
destValue:[]
taint data:[$z0]
Coming in Backward Analysis
srcValue=[]
destValue:[]
taint data:[$z0]
Coming in Backward Analysis
[taint329]i invoke virtualinvoke r3.<org.apache.hadoop.mapreduce.Mapper$Context: void write(java.lang.Object,java.lang.Object)>($r9, $r10)
[taint328]i invoke <org.apache.hadoop.mapreduce.TaskInputOutputContext: void write(java.lang.Object,java.lang.Object)>
[taint328]i invoke 2
value:$r9
value:$r10
srcValue=[]
destValue:[]
taint data:[$z0]
Coming in Backward Analysis
currStmt20210420:$r10 = <cfhider.WordCount$TokenizerMapper: org.apache.hadoop.io.IntWritable one>
currStmt left value20210420:$r10
srcValue=[]
destValue:[]
taint data:[$z0]
Coming in Backward Analysis
currStmt20210420:$r9 = r0.<cfhider.WordCount$TokenizerMapper: org.apache.hadoop.io.Text word>
currStmt left value20210420:$r9
srcValue=[]
destValue:[]
taint data:[$z0]
Coming in Backward Analysis
[taint329]i invoke virtualinvoke $r7.<org.apache.hadoop.io.Text: void set(java.lang.String)>($r8)
[taint328]i invoke <org.apache.hadoop.io.Text: void set(java.lang.String)>
[taint328]i invoke 1
value:$r8
srcValue=[]
destValue:[]
taint data:[$z0]
Coming in Backward Analysis
currStmt20210420:$r8 = virtualinvoke r5.<java.util.StringTokenizer: java.lang.String nextToken()>()
currStmt left value20210420:$r8
srcValue=[]
destValue:[]
taint data:[$z0]
Coming in Backward Analysis
currStmt20210420:$r7 = r0.<cfhider.WordCount$TokenizerMapper: org.apache.hadoop.io.Text word>
currStmt left value20210420:$r7
srcValue=[]
destValue:[]
taint data:[$z0]
Coming in Backward Analysis
srcValue=[]
destValue:[]
taint data:[$z0]
Coming in Backward Analysis
Have
the value=$z0
the value=0
srcValue=[]
destValue:[]
taint data:[$z0]
Coming in Backward Analysis
currStmt20210420:$z0 = virtualinvoke r5.<java.util.StringTokenizer: boolean hasMoreTokens()>()
currStmt left value20210420:$z0
BackWard 20210419===virtualinvoke r5.<java.util.StringTokenizer: boolean hasMoreTokens()>()
[BackWard taint329]i invoke $z0 = virtualinvoke r5.<java.util.StringTokenizer: boolean hasMoreTokens()>()
[BackWard taint328]i invoke <java.util.StringTokenizer: boolean hasMoreTokens()>
srcValue=[]
destValue:[]
taint data:[$z0]
Coming in Backward Analysis
currStmt20210420:r5 = $r4
currStmt left value20210420:r5
srcValue=[]
destValue:[]
taint data:[$z0]
Coming in Backward Analysis
[taint329]i invoke specialinvoke $r4.<java.util.StringTokenizer: void <init>(java.lang.String)>($r6)
[taint328]i invoke <java.util.StringTokenizer: void <init>(java.lang.String)>
[taint328]i invoke 1
value:$r6
srcValue=[]
destValue:[]
taint data:[$z0]
Coming in Backward Analysis
currStmt20210420:$r6 = virtualinvoke r2.<org.apache.hadoop.io.Text: java.lang.String toString()>()
currStmt left value20210420:$r6
srcValue=[]
destValue:[]
taint data:[$z0]
Coming in Backward Analysis
currStmt20210420:$r4 = new java.util.StringTokenizer
currStmt left value20210420:$r4
srcValue=[]
destValue:[]
taint data:[$z0]
Coming in Backward Analysis
srcValue=[]
destValue:[]
taint data:[$z0]
Coming in Backward Analysis
srcValue=[]
destValue:[]
taint data:[$z0]
Coming in Backward Analysis
srcValue=[]
destValue:[]
taint data:[$z0]
Coming in Backward Analysis
doAnalysis endqqqqqqq.....
come here
[CFMAP]2021 After BackwardAnalysis:{cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={}}
[taint into] sootMethod: map
[$z0]
class name :cfhider.WordCount$TokenizerMapper
method name :map
method list :[$z0]
clasname=cfhider.WordCount$TokenizerMapper
methodname=map
sourcelist2021=[$z0]
20210427node :r0 := @this: cfhider.WordCount$TokenizerMapper
20210427node in :[]
20210427node out :[]
currStmt20210423:r0 := @this: cfhider.WordCount$TokenizerMapper
20210427node :r1 := @parameter0: java.lang.Object
20210427node in :[]
[idStmt]iiiiiii r1 := @parameter0: java.lang.Object  index:0
ClassName:cfhider.WordCount$TokenizerMapper
MethodName:map
aaaa:0
20210427node out :[]
currStmt20210423:r1 := @parameter0: java.lang.Object
20210427node :r2 := @parameter1: java.lang.Object
20210427node in :[]
[idStmt]iiiiiii r2 := @parameter1: java.lang.Object  index:1
ClassName:cfhider.WordCount$TokenizerMapper
MethodName:map
aaaa:0
20210427node out :[]
currStmt20210423:r2 := @parameter1: java.lang.Object
20210427node :r3 := @parameter2: org.apache.hadoop.mapreduce.Mapper$Context
20210427node in :[]
[idStmt]iiiiiii r3 := @parameter2: org.apache.hadoop.mapreduce.Mapper$Context  index:2
ClassName:cfhider.WordCount$TokenizerMapper
MethodName:map
aaaa:0
20210427node out :[]
currStmt20210423:r3 := @parameter2: org.apache.hadoop.mapreduce.Mapper$Context
20210427node :$r4 = (org.apache.hadoop.io.Text) r2
20210427node in :[]
普通复制语句1112:$r4 = (org.apache.hadoop.io.Text) r2
[taint source] u:r2
SourceList:[$z0]
[taint source] u:(org.apache.hadoop.io.Text) r2
SourceList:[$z0]
20210427node out :[]
20210427node :virtualinvoke r0.<cfhider.WordCount$TokenizerMapper: void map(java.lang.Object,org.apache.hadoop.io.Text,org.apache.hadoop.mapreduce.Mapper$Context)>(r1, $r4, r3)
20210427node in :[]
20210427node out :[]
[taint329]i invoke virtualinvoke r0.<cfhider.WordCount$TokenizerMapper: void map(java.lang.Object,org.apache.hadoop.io.Text,org.apache.hadoop.mapreduce.Mapper$Context)>(r1, $r4, r3)
[taint328]i invoke <cfhider.WordCount$TokenizerMapper: void map(java.lang.Object,org.apache.hadoop.io.Text,org.apache.hadoop.mapreduce.Mapper$Context)>
[taint328]i invoke 3
value:r1
isoutSetContains  false value:r1 index:0
value:$r4
isoutSetContains  false value:$r4 index:1
value:r3
isoutSetContains  false value:r3 index:2
[invokemap]invoke:map  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
20210427node :return
20210427node in :[]
20210427node out :[]
analysis.outSet.size():0
[CFMAP]2021 After taintAnalysis:{cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={}}
The data isgggg 
<cfhider.WordCount$TokenizerMapper: void map(java.lang.Object,java.lang.Object,org.apache.hadoop.mapreduce.Mapper$Context)>
The data isgggg cfhider.WordCount$TokenizerMapper map [$z0] {cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={}}  {cfhider.WordCount$IntSumReducer={reduce=[I@1112aeb9}, cfhider.WordCount$TokenizerMapper={map=[I@2aecce39}, cfhider.WordCount={main=[I@31aed88a}, invoker.SnowFlake={}}
Coming...
doAnalysis Startingqqqqqqqq.....
srcValue=[]
destValue:[]
taint data:[$z0]
Coming in Backward Analysis
srcValue=[]
destValue:[]
taint data:[$z0]
Coming in Backward Analysis
[taint329]i invoke virtualinvoke r0.<cfhider.WordCount$TokenizerMapper: void map(java.lang.Object,org.apache.hadoop.io.Text,org.apache.hadoop.mapreduce.Mapper$Context)>(r1, $r4, r3)
[taint328]i invoke <cfhider.WordCount$TokenizerMapper: void map(java.lang.Object,org.apache.hadoop.io.Text,org.apache.hadoop.mapreduce.Mapper$Context)>
[taint328]i invoke 3
value:r1
in here:[I@20d71633
[invokemap]invoke:map  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
value:$r4
in here:[I@20d71633
[invokemap]invoke:map  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
value:r3
in here:[I@20d71633
[invokemap]invoke:map  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
srcValue=[]
destValue:[]
taint data:[$z0]
Coming in Backward Analysis
currStmt20210420:$r4 = (org.apache.hadoop.io.Text) r2
currStmt left value20210420:$r4
srcValue=[]
destValue:[]
taint data:[$z0]
Coming in Backward Analysis
srcValue=[]
destValue:[]
taint data:[$z0]
Coming in Backward Analysis
srcValue=[]
destValue:[]
taint data:[$z0]
Coming in Backward Analysis
srcValue=[]
destValue:[]
taint data:[$z0]
Coming in Backward Analysis
doAnalysis endqqqqqqq.....
come here
[CFMAP]2021 After BackwardAnalysis:{cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={}}
[taint into] sootMethod: <clinit>
[]
class name :cfhider.WordCount$TokenizerMapper
method name :<clinit>
method list :[]
clasname=cfhider.WordCount$TokenizerMapper
methodname=<clinit>
sourcelist2021=[]
20210427node :$r0 = new org.apache.hadoop.io.IntWritable
20210427node in :[]
普通复制语句1112:$r0 = new org.apache.hadoop.io.IntWritable
[taint source] u:new org.apache.hadoop.io.IntWritable
SourceList:[]
20210427node out :[]
20210427node :specialinvoke $r0.<org.apache.hadoop.io.IntWritable: void <init>(int)>(1)
20210427node in :[]
20210427node out :[]
[taint329]i invoke specialinvoke $r0.<org.apache.hadoop.io.IntWritable: void <init>(int)>(1)
[taint328]i invoke <org.apache.hadoop.io.IntWritable: void <init>(int)>
[taint328]i invoke 1
value:1
isoutSetContains  false value:1 index:0
20210427node :<cfhider.WordCount$TokenizerMapper: org.apache.hadoop.io.IntWritable one> = $r0
20210427node in :[]
普通复制语句1112:<cfhider.WordCount$TokenizerMapper: org.apache.hadoop.io.IntWritable one> = $r0
[taint source] u:$r0
SourceList:[]
20210427node out :[]
20210427node :return
20210427node in :[]
20210427node out :[]
analysis.outSet.size():0
[CFMAP]2021 After taintAnalysis:{cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={}}
The data isgggg 
<cfhider.WordCount$TokenizerMapper: void <clinit>()>
The data isgggg cfhider.WordCount$TokenizerMapper <clinit> [] {cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={}}  {cfhider.WordCount$IntSumReducer={reduce=[I@1112aeb9}, cfhider.WordCount$TokenizerMapper={map=[I@2aecce39}, cfhider.WordCount={main=[I@31aed88a}, invoker.SnowFlake={}}
Coming...
doAnalysis Startingqqqqqqqq.....
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:<cfhider.WordCount$TokenizerMapper: org.apache.hadoop.io.IntWritable one> = $r0
currStmt left value20210420:<cfhider.WordCount$TokenizerMapper: org.apache.hadoop.io.IntWritable one>
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
[taint329]i invoke specialinvoke $r0.<org.apache.hadoop.io.IntWritable: void <init>(int)>(1)
[taint328]i invoke <org.apache.hadoop.io.IntWritable: void <init>(int)>
[taint328]i invoke 1
value:1
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$r0 = new org.apache.hadoop.io.IntWritable
currStmt left value20210420:$r0
doAnalysis endqqqqqqq.....
come here
[CFMAP]2021 After BackwardAnalysis:{cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={}}
[taint into] sootMethod: <init>
[]
class name :cfhider.WordCount$TokenizerMapper
method name :<init>
method list :[]
clasname=cfhider.WordCount$TokenizerMapper
methodname=<init>
sourcelist2021=[]
20210427node :r0 := @this: cfhider.WordCount$TokenizerMapper
20210427node in :[]
20210427node out :[]
currStmt20210423:r0 := @this: cfhider.WordCount$TokenizerMapper
20210427node :specialinvoke r0.<org.apache.hadoop.mapreduce.Mapper: void <init>()>()
20210427node in :[]
20210427node out :[]
[taint329]i invoke specialinvoke r0.<org.apache.hadoop.mapreduce.Mapper: void <init>()>()
[taint328]i invoke <org.apache.hadoop.mapreduce.Mapper: void <init>()>
[taint328]i invoke 0
20210427node :$r1 = new org.apache.hadoop.io.Text
20210427node in :[]
普通复制语句1112:$r1 = new org.apache.hadoop.io.Text
[taint source] u:new org.apache.hadoop.io.Text
SourceList:[]
20210427node out :[]
20210427node :specialinvoke $r1.<org.apache.hadoop.io.Text: void <init>()>()
20210427node in :[]
20210427node out :[]
[taint329]i invoke specialinvoke $r1.<org.apache.hadoop.io.Text: void <init>()>()
[taint328]i invoke <org.apache.hadoop.io.Text: void <init>()>
[taint328]i invoke 0
20210427node :r0.<cfhider.WordCount$TokenizerMapper: org.apache.hadoop.io.Text word> = $r1
20210427node in :[]
普通复制语句1112:r0.<cfhider.WordCount$TokenizerMapper: org.apache.hadoop.io.Text word> = $r1
[taint source] u:r0
SourceList:[]
[taint source] u:$r1
SourceList:[]
20210427node out :[]
20210427node :return
20210427node in :[]
20210427node out :[]
analysis.outSet.size():0
[CFMAP]2021 After taintAnalysis:{cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={}}
The data isgggg 
<cfhider.WordCount$TokenizerMapper: void <init>()>
The data isgggg cfhider.WordCount$TokenizerMapper <init> [] {cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={}}  {cfhider.WordCount$IntSumReducer={reduce=[I@1112aeb9}, cfhider.WordCount$TokenizerMapper={map=[I@2aecce39}, cfhider.WordCount={main=[I@31aed88a}, invoker.SnowFlake={}}
Coming...
doAnalysis Startingqqqqqqqq.....
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:r0.<cfhider.WordCount$TokenizerMapper: org.apache.hadoop.io.Text word> = $r1
currStmt left value20210420:r0.<cfhider.WordCount$TokenizerMapper: org.apache.hadoop.io.Text word>
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
[taint329]i invoke specialinvoke $r1.<org.apache.hadoop.io.Text: void <init>()>()
[taint328]i invoke <org.apache.hadoop.io.Text: void <init>()>
[taint328]i invoke 0
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$r1 = new org.apache.hadoop.io.Text
currStmt left value20210420:$r1
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
[taint329]i invoke specialinvoke r0.<org.apache.hadoop.mapreduce.Mapper: void <init>()>()
[taint328]i invoke <org.apache.hadoop.mapreduce.Mapper: void <init>()>
[taint328]i invoke 0
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
doAnalysis endqqqqqqq.....
come here
[CFMAP]2021 After BackwardAnalysis:{cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={}}
[taint into] sootMethod: map
[$z0]
class name :cfhider.WordCount$TokenizerMapper
method name :map
method list :[$z0]
clasname=cfhider.WordCount$TokenizerMapper
methodname=map
sourcelist2021=[$z0]
20210427node :r0 := @this: cfhider.WordCount$TokenizerMapper
20210427node in :[]
20210427node out :[]
currStmt20210423:r0 := @this: cfhider.WordCount$TokenizerMapper
20210427node :r1 := @parameter0: java.lang.Object
20210427node in :[]
[idStmt]iiiiiii r1 := @parameter0: java.lang.Object  index:0
ClassName:cfhider.WordCount$TokenizerMapper
MethodName:map
aaaa:0
20210427node out :[]
currStmt20210423:r1 := @parameter0: java.lang.Object
20210427node :r2 := @parameter1: org.apache.hadoop.io.Text
20210427node in :[]
[idStmt]iiiiiii r2 := @parameter1: org.apache.hadoop.io.Text  index:1
ClassName:cfhider.WordCount$TokenizerMapper
MethodName:map
aaaa:0
20210427node out :[]
currStmt20210423:r2 := @parameter1: org.apache.hadoop.io.Text
20210427node :r3 := @parameter2: org.apache.hadoop.mapreduce.Mapper$Context
20210427node in :[]
[idStmt]iiiiiii r3 := @parameter2: org.apache.hadoop.mapreduce.Mapper$Context  index:2
ClassName:cfhider.WordCount$TokenizerMapper
MethodName:map
aaaa:0
20210427node out :[]
currStmt20210423:r3 := @parameter2: org.apache.hadoop.mapreduce.Mapper$Context
20210427node :$r4 = new java.util.StringTokenizer
20210427node in :[]
普通复制语句1112:$r4 = new java.util.StringTokenizer
[taint source] u:new java.util.StringTokenizer
SourceList:[$z0]
20210427node out :[]
20210427node :$r6 = virtualinvoke r2.<org.apache.hadoop.io.Text: java.lang.String toString()>()
20210427node in :[]
调用语句赋值给变量:$r6 = virtualinvoke r2.<org.apache.hadoop.io.Text: java.lang.String toString()>()
20210427node out :[]
[taint328]a invoke <org.apache.hadoop.io.Text: java.lang.String toString()>
[taint328]a invoke 0
20210427node :specialinvoke $r4.<java.util.StringTokenizer: void <init>(java.lang.String)>($r6)
20210427node in :[]
20210427node out :[]
[taint329]i invoke specialinvoke $r4.<java.util.StringTokenizer: void <init>(java.lang.String)>($r6)
[taint328]i invoke <java.util.StringTokenizer: void <init>(java.lang.String)>
[taint328]i invoke 1
value:$r6
isoutSetContains  false value:$r6 index:0
20210427node :r5 = $r4
20210427node in :[]
普通复制语句1112:r5 = $r4
[taint source] u:$r4
SourceList:[$z0]
20210427node out :[]
20210427node :$z0 = virtualinvoke r5.<java.util.StringTokenizer: boolean hasMoreTokens()>()
20210427node in :[]
调用语句赋值给变量:$z0 = virtualinvoke r5.<java.util.StringTokenizer: boolean hasMoreTokens()>()
20210427node out :[]
[taint328]a invoke <java.util.StringTokenizer: boolean hasMoreTokens()>
[taint328]a invoke 0
20210427node :if $z0 == 0 goto return
20210427node in :[]
20210427node out :[]
Have
Stmt if :if $z0 == 0 goto returnStmt if value:$z0 == 0the value=$z0
the value=0
maintainValues.size1
ifValues1
20210427node :return
20210427node in :[]
20210427node out :[]
20210427node :$r7 = r0.<cfhider.WordCount$TokenizerMapper: org.apache.hadoop.io.Text word>
20210427node in :[]
普通复制语句1112:$r7 = r0.<cfhider.WordCount$TokenizerMapper: org.apache.hadoop.io.Text word>
[taint source] u:r0
SourceList:[$z0]
[taint source] u:r0.<cfhider.WordCount$TokenizerMapper: org.apache.hadoop.io.Text word>
SourceList:[$z0]
20210427node out :[]
20210427node :$r8 = virtualinvoke r5.<java.util.StringTokenizer: java.lang.String nextToken()>()
20210427node in :[]
调用语句赋值给变量:$r8 = virtualinvoke r5.<java.util.StringTokenizer: java.lang.String nextToken()>()
20210427node out :[]
[taint328]a invoke <java.util.StringTokenizer: java.lang.String nextToken()>
[taint328]a invoke 0
20210427node :virtualinvoke $r7.<org.apache.hadoop.io.Text: void set(java.lang.String)>($r8)
20210427node in :[]
20210427node out :[]
[taint329]i invoke virtualinvoke $r7.<org.apache.hadoop.io.Text: void set(java.lang.String)>($r8)
[taint328]i invoke <org.apache.hadoop.io.Text: void set(java.lang.String)>
[taint328]i invoke 1
value:$r8
isoutSetContains  false value:$r8 index:0
20210427node :$r9 = r0.<cfhider.WordCount$TokenizerMapper: org.apache.hadoop.io.Text word>
20210427node in :[]
普通复制语句1112:$r9 = r0.<cfhider.WordCount$TokenizerMapper: org.apache.hadoop.io.Text word>
[taint source] u:r0
SourceList:[$z0]
[taint source] u:r0.<cfhider.WordCount$TokenizerMapper: org.apache.hadoop.io.Text word>
SourceList:[$z0]
20210427node out :[]
20210427node :$r10 = <cfhider.WordCount$TokenizerMapper: org.apache.hadoop.io.IntWritable one>
20210427node in :[]
普通复制语句1112:$r10 = <cfhider.WordCount$TokenizerMapper: org.apache.hadoop.io.IntWritable one>
[taint source] u:<cfhider.WordCount$TokenizerMapper: org.apache.hadoop.io.IntWritable one>
SourceList:[$z0]
20210427node out :[]
20210427node :virtualinvoke r3.<org.apache.hadoop.mapreduce.Mapper$Context: void write(java.lang.Object,java.lang.Object)>($r9, $r10)
20210427node in :[]
20210427node out :[]
[taint329]i invoke virtualinvoke r3.<org.apache.hadoop.mapreduce.Mapper$Context: void write(java.lang.Object,java.lang.Object)>($r9, $r10)
[taint328]i invoke <org.apache.hadoop.mapreduce.TaskInputOutputContext: void write(java.lang.Object,java.lang.Object)>
[taint328]i invoke 2
value:$r9
isoutSetContains  false value:$r9 index:0
value:$r10
isoutSetContains  false value:$r10 index:1
20210427node :goto [?= $z0 = virtualinvoke r5.<java.util.StringTokenizer: boolean hasMoreTokens()>()]
20210427node in :[]
20210427node out :[]
analysis.outSet.size():0
[CFMAP]2021 After taintAnalysis:{cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={}}
The data isgggg 
<cfhider.WordCount$TokenizerMapper: void map(java.lang.Object,org.apache.hadoop.io.Text,org.apache.hadoop.mapreduce.Mapper$Context)>
The data isgggg cfhider.WordCount$TokenizerMapper map [$z0] {cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={}}  {cfhider.WordCount$IntSumReducer={reduce=[I@1112aeb9}, cfhider.WordCount$TokenizerMapper={map=[I@8f27f1d}, cfhider.WordCount={main=[I@31aed88a}, invoker.SnowFlake={}}
Coming...
doAnalysis Startingqqqqqqqq.....
srcValue=[]
destValue:[]
taint data:[$z0]
Coming in Backward Analysis
srcValue=[]
destValue:[]
taint data:[$z0]
Coming in Backward Analysis
[taint329]i invoke virtualinvoke r3.<org.apache.hadoop.mapreduce.Mapper$Context: void write(java.lang.Object,java.lang.Object)>($r9, $r10)
[taint328]i invoke <org.apache.hadoop.mapreduce.TaskInputOutputContext: void write(java.lang.Object,java.lang.Object)>
[taint328]i invoke 2
value:$r9
value:$r10
srcValue=[]
destValue:[]
taint data:[$z0]
Coming in Backward Analysis
currStmt20210420:$r10 = <cfhider.WordCount$TokenizerMapper: org.apache.hadoop.io.IntWritable one>
currStmt left value20210420:$r10
srcValue=[]
destValue:[]
taint data:[$z0]
Coming in Backward Analysis
currStmt20210420:$r9 = r0.<cfhider.WordCount$TokenizerMapper: org.apache.hadoop.io.Text word>
currStmt left value20210420:$r9
srcValue=[]
destValue:[]
taint data:[$z0]
Coming in Backward Analysis
[taint329]i invoke virtualinvoke $r7.<org.apache.hadoop.io.Text: void set(java.lang.String)>($r8)
[taint328]i invoke <org.apache.hadoop.io.Text: void set(java.lang.String)>
[taint328]i invoke 1
value:$r8
srcValue=[]
destValue:[]
taint data:[$z0]
Coming in Backward Analysis
currStmt20210420:$r8 = virtualinvoke r5.<java.util.StringTokenizer: java.lang.String nextToken()>()
currStmt left value20210420:$r8
srcValue=[]
destValue:[]
taint data:[$z0]
Coming in Backward Analysis
currStmt20210420:$r7 = r0.<cfhider.WordCount$TokenizerMapper: org.apache.hadoop.io.Text word>
currStmt left value20210420:$r7
srcValue=[]
destValue:[]
taint data:[$z0]
Coming in Backward Analysis
srcValue=[]
destValue:[]
taint data:[$z0]
Coming in Backward Analysis
Have
the value=$z0
the value=0
srcValue=[]
destValue:[]
taint data:[$z0]
Coming in Backward Analysis
currStmt20210420:$z0 = virtualinvoke r5.<java.util.StringTokenizer: boolean hasMoreTokens()>()
currStmt left value20210420:$z0
BackWard 20210419===virtualinvoke r5.<java.util.StringTokenizer: boolean hasMoreTokens()>()
[BackWard taint329]i invoke $z0 = virtualinvoke r5.<java.util.StringTokenizer: boolean hasMoreTokens()>()
[BackWard taint328]i invoke <java.util.StringTokenizer: boolean hasMoreTokens()>
srcValue=[]
destValue:[]
taint data:[$z0]
Coming in Backward Analysis
currStmt20210420:r5 = $r4
currStmt left value20210420:r5
srcValue=[]
destValue:[]
taint data:[$z0]
Coming in Backward Analysis
[taint329]i invoke specialinvoke $r4.<java.util.StringTokenizer: void <init>(java.lang.String)>($r6)
[taint328]i invoke <java.util.StringTokenizer: void <init>(java.lang.String)>
[taint328]i invoke 1
value:$r6
srcValue=[]
destValue:[]
taint data:[$z0]
Coming in Backward Analysis
currStmt20210420:$r6 = virtualinvoke r2.<org.apache.hadoop.io.Text: java.lang.String toString()>()
currStmt left value20210420:$r6
srcValue=[]
destValue:[]
taint data:[$z0]
Coming in Backward Analysis
currStmt20210420:$r4 = new java.util.StringTokenizer
currStmt left value20210420:$r4
srcValue=[]
destValue:[]
taint data:[$z0]
Coming in Backward Analysis
srcValue=[]
destValue:[]
taint data:[$z0]
Coming in Backward Analysis
srcValue=[]
destValue:[]
taint data:[$z0]
Coming in Backward Analysis
srcValue=[]
destValue:[]
taint data:[$z0]
Coming in Backward Analysis
doAnalysis endqqqqqqq.....
come here
[CFMAP]2021 After BackwardAnalysis:{cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={}}
[taint into] sootMethod: map
[$z0]
class name :cfhider.WordCount$TokenizerMapper
method name :map
method list :[$z0]
clasname=cfhider.WordCount$TokenizerMapper
methodname=map
sourcelist2021=[$z0]
20210427node :r0 := @this: cfhider.WordCount$TokenizerMapper
20210427node in :[]
20210427node out :[]
currStmt20210423:r0 := @this: cfhider.WordCount$TokenizerMapper
20210427node :r1 := @parameter0: java.lang.Object
20210427node in :[]
[idStmt]iiiiiii r1 := @parameter0: java.lang.Object  index:0
ClassName:cfhider.WordCount$TokenizerMapper
MethodName:map
aaaa:0
20210427node out :[]
currStmt20210423:r1 := @parameter0: java.lang.Object
20210427node :r2 := @parameter1: java.lang.Object
20210427node in :[]
[idStmt]iiiiiii r2 := @parameter1: java.lang.Object  index:1
ClassName:cfhider.WordCount$TokenizerMapper
MethodName:map
aaaa:0
20210427node out :[]
currStmt20210423:r2 := @parameter1: java.lang.Object
20210427node :r3 := @parameter2: org.apache.hadoop.mapreduce.Mapper$Context
20210427node in :[]
[idStmt]iiiiiii r3 := @parameter2: org.apache.hadoop.mapreduce.Mapper$Context  index:2
ClassName:cfhider.WordCount$TokenizerMapper
MethodName:map
aaaa:0
20210427node out :[]
currStmt20210423:r3 := @parameter2: org.apache.hadoop.mapreduce.Mapper$Context
20210427node :$r4 = (org.apache.hadoop.io.Text) r2
20210427node in :[]
普通复制语句1112:$r4 = (org.apache.hadoop.io.Text) r2
[taint source] u:r2
SourceList:[$z0]
[taint source] u:(org.apache.hadoop.io.Text) r2
SourceList:[$z0]
20210427node out :[]
20210427node :virtualinvoke r0.<cfhider.WordCount$TokenizerMapper: void map(java.lang.Object,org.apache.hadoop.io.Text,org.apache.hadoop.mapreduce.Mapper$Context)>(r1, $r4, r3)
20210427node in :[]
20210427node out :[]
[taint329]i invoke virtualinvoke r0.<cfhider.WordCount$TokenizerMapper: void map(java.lang.Object,org.apache.hadoop.io.Text,org.apache.hadoop.mapreduce.Mapper$Context)>(r1, $r4, r3)
[taint328]i invoke <cfhider.WordCount$TokenizerMapper: void map(java.lang.Object,org.apache.hadoop.io.Text,org.apache.hadoop.mapreduce.Mapper$Context)>
[taint328]i invoke 3
value:r1
isoutSetContains  false value:r1 index:0
value:$r4
isoutSetContains  false value:$r4 index:1
value:r3
isoutSetContains  false value:r3 index:2
[invokemap]invoke:map  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
20210427node :return
20210427node in :[]
20210427node out :[]
analysis.outSet.size():0
[CFMAP]2021 After taintAnalysis:{cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={}}
The data isgggg 
<cfhider.WordCount$TokenizerMapper: void map(java.lang.Object,java.lang.Object,org.apache.hadoop.mapreduce.Mapper$Context)>
The data isgggg cfhider.WordCount$TokenizerMapper map [$z0] {cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={}}  {cfhider.WordCount$IntSumReducer={reduce=[I@1112aeb9}, cfhider.WordCount$TokenizerMapper={map=[I@68774d81}, cfhider.WordCount={main=[I@31aed88a}, invoker.SnowFlake={}}
Coming...
doAnalysis Startingqqqqqqqq.....
srcValue=[]
destValue:[]
taint data:[$z0]
Coming in Backward Analysis
srcValue=[]
destValue:[]
taint data:[$z0]
Coming in Backward Analysis
[taint329]i invoke virtualinvoke r0.<cfhider.WordCount$TokenizerMapper: void map(java.lang.Object,org.apache.hadoop.io.Text,org.apache.hadoop.mapreduce.Mapper$Context)>(r1, $r4, r3)
[taint328]i invoke <cfhider.WordCount$TokenizerMapper: void map(java.lang.Object,org.apache.hadoop.io.Text,org.apache.hadoop.mapreduce.Mapper$Context)>
[taint328]i invoke 3
value:r1
in here:[I@708185bb
[invokemap]invoke:map  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
value:$r4
in here:[I@708185bb
[invokemap]invoke:map  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
value:r3
in here:[I@708185bb
[invokemap]invoke:map  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
srcValue=[]
destValue:[]
taint data:[$z0]
Coming in Backward Analysis
currStmt20210420:$r4 = (org.apache.hadoop.io.Text) r2
currStmt left value20210420:$r4
srcValue=[]
destValue:[]
taint data:[$z0]
Coming in Backward Analysis
srcValue=[]
destValue:[]
taint data:[$z0]
Coming in Backward Analysis
srcValue=[]
destValue:[]
taint data:[$z0]
Coming in Backward Analysis
srcValue=[]
destValue:[]
taint data:[$z0]
Coming in Backward Analysis
doAnalysis endqqqqqqq.....
come here
[CFMAP]2021 After BackwardAnalysis:{cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={}}
[taint into] sootMethod: <clinit>
[]
class name :cfhider.WordCount$TokenizerMapper
method name :<clinit>
method list :[]
clasname=cfhider.WordCount$TokenizerMapper
methodname=<clinit>
sourcelist2021=[]
20210427node :$r0 = new org.apache.hadoop.io.IntWritable
20210427node in :[]
普通复制语句1112:$r0 = new org.apache.hadoop.io.IntWritable
[taint source] u:new org.apache.hadoop.io.IntWritable
SourceList:[]
20210427node out :[]
20210427node :specialinvoke $r0.<org.apache.hadoop.io.IntWritable: void <init>(int)>(1)
20210427node in :[]
20210427node out :[]
[taint329]i invoke specialinvoke $r0.<org.apache.hadoop.io.IntWritable: void <init>(int)>(1)
[taint328]i invoke <org.apache.hadoop.io.IntWritable: void <init>(int)>
[taint328]i invoke 1
value:1
isoutSetContains  false value:1 index:0
20210427node :<cfhider.WordCount$TokenizerMapper: org.apache.hadoop.io.IntWritable one> = $r0
20210427node in :[]
普通复制语句1112:<cfhider.WordCount$TokenizerMapper: org.apache.hadoop.io.IntWritable one> = $r0
[taint source] u:$r0
SourceList:[]
20210427node out :[]
20210427node :return
20210427node in :[]
20210427node out :[]
analysis.outSet.size():0
[CFMAP]2021 After taintAnalysis:{cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={}}
The data isgggg 
<cfhider.WordCount$TokenizerMapper: void <clinit>()>
The data isgggg cfhider.WordCount$TokenizerMapper <clinit> [] {cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={}}  {cfhider.WordCount$IntSumReducer={reduce=[I@1112aeb9}, cfhider.WordCount$TokenizerMapper={map=[I@68774d81}, cfhider.WordCount={main=[I@31aed88a}, invoker.SnowFlake={}}
Coming...
doAnalysis Startingqqqqqqqq.....
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:<cfhider.WordCount$TokenizerMapper: org.apache.hadoop.io.IntWritable one> = $r0
currStmt left value20210420:<cfhider.WordCount$TokenizerMapper: org.apache.hadoop.io.IntWritable one>
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
[taint329]i invoke specialinvoke $r0.<org.apache.hadoop.io.IntWritable: void <init>(int)>(1)
[taint328]i invoke <org.apache.hadoop.io.IntWritable: void <init>(int)>
[taint328]i invoke 1
value:1
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$r0 = new org.apache.hadoop.io.IntWritable
currStmt left value20210420:$r0
doAnalysis endqqqqqqq.....
come here
[CFMAP]2021 After BackwardAnalysis:{cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={}}
[taint into] sootMethod: <init>
[]
class name :cfhider.WordCount$TokenizerMapper
method name :<init>
method list :[]
clasname=cfhider.WordCount$TokenizerMapper
methodname=<init>
sourcelist2021=[]
20210427node :r0 := @this: cfhider.WordCount$TokenizerMapper
20210427node in :[]
20210427node out :[]
currStmt20210423:r0 := @this: cfhider.WordCount$TokenizerMapper
20210427node :specialinvoke r0.<org.apache.hadoop.mapreduce.Mapper: void <init>()>()
20210427node in :[]
20210427node out :[]
[taint329]i invoke specialinvoke r0.<org.apache.hadoop.mapreduce.Mapper: void <init>()>()
[taint328]i invoke <org.apache.hadoop.mapreduce.Mapper: void <init>()>
[taint328]i invoke 0
20210427node :$r1 = new org.apache.hadoop.io.Text
20210427node in :[]
普通复制语句1112:$r1 = new org.apache.hadoop.io.Text
[taint source] u:new org.apache.hadoop.io.Text
SourceList:[]
20210427node out :[]
20210427node :specialinvoke $r1.<org.apache.hadoop.io.Text: void <init>()>()
20210427node in :[]
20210427node out :[]
[taint329]i invoke specialinvoke $r1.<org.apache.hadoop.io.Text: void <init>()>()
[taint328]i invoke <org.apache.hadoop.io.Text: void <init>()>
[taint328]i invoke 0
20210427node :r0.<cfhider.WordCount$TokenizerMapper: org.apache.hadoop.io.Text word> = $r1
20210427node in :[]
普通复制语句1112:r0.<cfhider.WordCount$TokenizerMapper: org.apache.hadoop.io.Text word> = $r1
[taint source] u:r0
SourceList:[]
[taint source] u:$r1
SourceList:[]
20210427node out :[]
20210427node :return
20210427node in :[]
20210427node out :[]
analysis.outSet.size():0
[CFMAP]2021 After taintAnalysis:{cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={}}
The data isgggg 
<cfhider.WordCount$TokenizerMapper: void <init>()>
The data isgggg cfhider.WordCount$TokenizerMapper <init> [] {cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={}}  {cfhider.WordCount$IntSumReducer={reduce=[I@1112aeb9}, cfhider.WordCount$TokenizerMapper={map=[I@68774d81}, cfhider.WordCount={main=[I@31aed88a}, invoker.SnowFlake={}}
Coming...
doAnalysis Startingqqqqqqqq.....
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:r0.<cfhider.WordCount$TokenizerMapper: org.apache.hadoop.io.Text word> = $r1
currStmt left value20210420:r0.<cfhider.WordCount$TokenizerMapper: org.apache.hadoop.io.Text word>
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
[taint329]i invoke specialinvoke $r1.<org.apache.hadoop.io.Text: void <init>()>()
[taint328]i invoke <org.apache.hadoop.io.Text: void <init>()>
[taint328]i invoke 0
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$r1 = new org.apache.hadoop.io.Text
currStmt left value20210420:$r1
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
[taint329]i invoke specialinvoke r0.<org.apache.hadoop.mapreduce.Mapper: void <init>()>()
[taint328]i invoke <org.apache.hadoop.mapreduce.Mapper: void <init>()>
[taint328]i invoke 0
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
doAnalysis endqqqqqqq.....
come here
[CFMAP]2021 After BackwardAnalysis:{cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={}}
[taint into] sootMethod: map
[$z0]
class name :cfhider.WordCount$TokenizerMapper
method name :map
method list :[$z0]
clasname=cfhider.WordCount$TokenizerMapper
methodname=map
sourcelist2021=[$z0]
20210427node :r0 := @this: cfhider.WordCount$TokenizerMapper
20210427node in :[]
20210427node out :[]
currStmt20210423:r0 := @this: cfhider.WordCount$TokenizerMapper
20210427node :r1 := @parameter0: java.lang.Object
20210427node in :[]
[idStmt]iiiiiii r1 := @parameter0: java.lang.Object  index:0
ClassName:cfhider.WordCount$TokenizerMapper
MethodName:map
aaaa:0
20210427node out :[]
currStmt20210423:r1 := @parameter0: java.lang.Object
20210427node :r2 := @parameter1: org.apache.hadoop.io.Text
20210427node in :[]
[idStmt]iiiiiii r2 := @parameter1: org.apache.hadoop.io.Text  index:1
ClassName:cfhider.WordCount$TokenizerMapper
MethodName:map
aaaa:0
20210427node out :[]
currStmt20210423:r2 := @parameter1: org.apache.hadoop.io.Text
20210427node :r3 := @parameter2: org.apache.hadoop.mapreduce.Mapper$Context
20210427node in :[]
[idStmt]iiiiiii r3 := @parameter2: org.apache.hadoop.mapreduce.Mapper$Context  index:2
ClassName:cfhider.WordCount$TokenizerMapper
MethodName:map
aaaa:0
20210427node out :[]
currStmt20210423:r3 := @parameter2: org.apache.hadoop.mapreduce.Mapper$Context
20210427node :$r4 = new java.util.StringTokenizer
20210427node in :[]
普通复制语句1112:$r4 = new java.util.StringTokenizer
[taint source] u:new java.util.StringTokenizer
SourceList:[$z0]
20210427node out :[]
20210427node :$r6 = virtualinvoke r2.<org.apache.hadoop.io.Text: java.lang.String toString()>()
20210427node in :[]
调用语句赋值给变量:$r6 = virtualinvoke r2.<org.apache.hadoop.io.Text: java.lang.String toString()>()
20210427node out :[]
[taint328]a invoke <org.apache.hadoop.io.Text: java.lang.String toString()>
[taint328]a invoke 0
20210427node :specialinvoke $r4.<java.util.StringTokenizer: void <init>(java.lang.String)>($r6)
20210427node in :[]
20210427node out :[]
[taint329]i invoke specialinvoke $r4.<java.util.StringTokenizer: void <init>(java.lang.String)>($r6)
[taint328]i invoke <java.util.StringTokenizer: void <init>(java.lang.String)>
[taint328]i invoke 1
value:$r6
isoutSetContains  false value:$r6 index:0
20210427node :r5 = $r4
20210427node in :[]
普通复制语句1112:r5 = $r4
[taint source] u:$r4
SourceList:[$z0]
20210427node out :[]
20210427node :$z0 = virtualinvoke r5.<java.util.StringTokenizer: boolean hasMoreTokens()>()
20210427node in :[]
调用语句赋值给变量:$z0 = virtualinvoke r5.<java.util.StringTokenizer: boolean hasMoreTokens()>()
20210427node out :[]
[taint328]a invoke <java.util.StringTokenizer: boolean hasMoreTokens()>
[taint328]a invoke 0
20210427node :if $z0 == 0 goto return
20210427node in :[]
20210427node out :[]
Have
Stmt if :if $z0 == 0 goto returnStmt if value:$z0 == 0the value=$z0
the value=0
maintainValues.size1
ifValues1
20210427node :return
20210427node in :[]
20210427node out :[]
20210427node :$r7 = r0.<cfhider.WordCount$TokenizerMapper: org.apache.hadoop.io.Text word>
20210427node in :[]
普通复制语句1112:$r7 = r0.<cfhider.WordCount$TokenizerMapper: org.apache.hadoop.io.Text word>
[taint source] u:r0
SourceList:[$z0]
[taint source] u:r0.<cfhider.WordCount$TokenizerMapper: org.apache.hadoop.io.Text word>
SourceList:[$z0]
20210427node out :[]
20210427node :$r8 = virtualinvoke r5.<java.util.StringTokenizer: java.lang.String nextToken()>()
20210427node in :[]
调用语句赋值给变量:$r8 = virtualinvoke r5.<java.util.StringTokenizer: java.lang.String nextToken()>()
20210427node out :[]
[taint328]a invoke <java.util.StringTokenizer: java.lang.String nextToken()>
[taint328]a invoke 0
20210427node :virtualinvoke $r7.<org.apache.hadoop.io.Text: void set(java.lang.String)>($r8)
20210427node in :[]
20210427node out :[]
[taint329]i invoke virtualinvoke $r7.<org.apache.hadoop.io.Text: void set(java.lang.String)>($r8)
[taint328]i invoke <org.apache.hadoop.io.Text: void set(java.lang.String)>
[taint328]i invoke 1
value:$r8
isoutSetContains  false value:$r8 index:0
20210427node :$r9 = r0.<cfhider.WordCount$TokenizerMapper: org.apache.hadoop.io.Text word>
20210427node in :[]
普通复制语句1112:$r9 = r0.<cfhider.WordCount$TokenizerMapper: org.apache.hadoop.io.Text word>
[taint source] u:r0
SourceList:[$z0]
[taint source] u:r0.<cfhider.WordCount$TokenizerMapper: org.apache.hadoop.io.Text word>
SourceList:[$z0]
20210427node out :[]
20210427node :$r10 = <cfhider.WordCount$TokenizerMapper: org.apache.hadoop.io.IntWritable one>
20210427node in :[]
普通复制语句1112:$r10 = <cfhider.WordCount$TokenizerMapper: org.apache.hadoop.io.IntWritable one>
[taint source] u:<cfhider.WordCount$TokenizerMapper: org.apache.hadoop.io.IntWritable one>
SourceList:[$z0]
20210427node out :[]
20210427node :virtualinvoke r3.<org.apache.hadoop.mapreduce.Mapper$Context: void write(java.lang.Object,java.lang.Object)>($r9, $r10)
20210427node in :[]
20210427node out :[]
[taint329]i invoke virtualinvoke r3.<org.apache.hadoop.mapreduce.Mapper$Context: void write(java.lang.Object,java.lang.Object)>($r9, $r10)
[taint328]i invoke <org.apache.hadoop.mapreduce.TaskInputOutputContext: void write(java.lang.Object,java.lang.Object)>
[taint328]i invoke 2
value:$r9
isoutSetContains  false value:$r9 index:0
value:$r10
isoutSetContains  false value:$r10 index:1
20210427node :goto [?= $z0 = virtualinvoke r5.<java.util.StringTokenizer: boolean hasMoreTokens()>()]
20210427node in :[]
20210427node out :[]
analysis.outSet.size():0
[CFMAP]2021 After taintAnalysis:{cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={}}
The data isgggg 
<cfhider.WordCount$TokenizerMapper: void map(java.lang.Object,org.apache.hadoop.io.Text,org.apache.hadoop.mapreduce.Mapper$Context)>
The data isgggg cfhider.WordCount$TokenizerMapper map [$z0] {cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={}}  {cfhider.WordCount$IntSumReducer={reduce=[I@1112aeb9}, cfhider.WordCount$TokenizerMapper={map=[I@4772f1b1}, cfhider.WordCount={main=[I@31aed88a}, invoker.SnowFlake={}}
Coming...
doAnalysis Startingqqqqqqqq.....
srcValue=[]
destValue:[]
taint data:[$z0]
Coming in Backward Analysis
srcValue=[]
destValue:[]
taint data:[$z0]
Coming in Backward Analysis
[taint329]i invoke virtualinvoke r3.<org.apache.hadoop.mapreduce.Mapper$Context: void write(java.lang.Object,java.lang.Object)>($r9, $r10)
[taint328]i invoke <org.apache.hadoop.mapreduce.TaskInputOutputContext: void write(java.lang.Object,java.lang.Object)>
[taint328]i invoke 2
value:$r9
value:$r10
srcValue=[]
destValue:[]
taint data:[$z0]
Coming in Backward Analysis
currStmt20210420:$r10 = <cfhider.WordCount$TokenizerMapper: org.apache.hadoop.io.IntWritable one>
currStmt left value20210420:$r10
srcValue=[]
destValue:[]
taint data:[$z0]
Coming in Backward Analysis
currStmt20210420:$r9 = r0.<cfhider.WordCount$TokenizerMapper: org.apache.hadoop.io.Text word>
currStmt left value20210420:$r9
srcValue=[]
destValue:[]
taint data:[$z0]
Coming in Backward Analysis
[taint329]i invoke virtualinvoke $r7.<org.apache.hadoop.io.Text: void set(java.lang.String)>($r8)
[taint328]i invoke <org.apache.hadoop.io.Text: void set(java.lang.String)>
[taint328]i invoke 1
value:$r8
srcValue=[]
destValue:[]
taint data:[$z0]
Coming in Backward Analysis
currStmt20210420:$r8 = virtualinvoke r5.<java.util.StringTokenizer: java.lang.String nextToken()>()
currStmt left value20210420:$r8
srcValue=[]
destValue:[]
taint data:[$z0]
Coming in Backward Analysis
currStmt20210420:$r7 = r0.<cfhider.WordCount$TokenizerMapper: org.apache.hadoop.io.Text word>
currStmt left value20210420:$r7
srcValue=[]
destValue:[]
taint data:[$z0]
Coming in Backward Analysis
srcValue=[]
destValue:[]
taint data:[$z0]
Coming in Backward Analysis
Have
the value=$z0
the value=0
srcValue=[]
destValue:[]
taint data:[$z0]
Coming in Backward Analysis
currStmt20210420:$z0 = virtualinvoke r5.<java.util.StringTokenizer: boolean hasMoreTokens()>()
currStmt left value20210420:$z0
BackWard 20210419===virtualinvoke r5.<java.util.StringTokenizer: boolean hasMoreTokens()>()
[BackWard taint329]i invoke $z0 = virtualinvoke r5.<java.util.StringTokenizer: boolean hasMoreTokens()>()
[BackWard taint328]i invoke <java.util.StringTokenizer: boolean hasMoreTokens()>
srcValue=[]
destValue:[]
taint data:[$z0]
Coming in Backward Analysis
currStmt20210420:r5 = $r4
currStmt left value20210420:r5
srcValue=[]
destValue:[]
taint data:[$z0]
Coming in Backward Analysis
[taint329]i invoke specialinvoke $r4.<java.util.StringTokenizer: void <init>(java.lang.String)>($r6)
[taint328]i invoke <java.util.StringTokenizer: void <init>(java.lang.String)>
[taint328]i invoke 1
value:$r6
srcValue=[]
destValue:[]
taint data:[$z0]
Coming in Backward Analysis
currStmt20210420:$r6 = virtualinvoke r2.<org.apache.hadoop.io.Text: java.lang.String toString()>()
currStmt left value20210420:$r6
srcValue=[]
destValue:[]
taint data:[$z0]
Coming in Backward Analysis
currStmt20210420:$r4 = new java.util.StringTokenizer
currStmt left value20210420:$r4
srcValue=[]
destValue:[]
taint data:[$z0]
Coming in Backward Analysis
srcValue=[]
destValue:[]
taint data:[$z0]
Coming in Backward Analysis
srcValue=[]
destValue:[]
taint data:[$z0]
Coming in Backward Analysis
srcValue=[]
destValue:[]
taint data:[$z0]
Coming in Backward Analysis
doAnalysis endqqqqqqq.....
come here
[CFMAP]2021 After BackwardAnalysis:{cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={}}
[taint into] sootMethod: map
[$z0]
class name :cfhider.WordCount$TokenizerMapper
method name :map
method list :[$z0]
clasname=cfhider.WordCount$TokenizerMapper
methodname=map
sourcelist2021=[$z0]
20210427node :r0 := @this: cfhider.WordCount$TokenizerMapper
20210427node in :[]
20210427node out :[]
currStmt20210423:r0 := @this: cfhider.WordCount$TokenizerMapper
20210427node :r1 := @parameter0: java.lang.Object
20210427node in :[]
[idStmt]iiiiiii r1 := @parameter0: java.lang.Object  index:0
ClassName:cfhider.WordCount$TokenizerMapper
MethodName:map
aaaa:0
20210427node out :[]
currStmt20210423:r1 := @parameter0: java.lang.Object
20210427node :r2 := @parameter1: java.lang.Object
20210427node in :[]
[idStmt]iiiiiii r2 := @parameter1: java.lang.Object  index:1
ClassName:cfhider.WordCount$TokenizerMapper
MethodName:map
aaaa:0
20210427node out :[]
currStmt20210423:r2 := @parameter1: java.lang.Object
20210427node :r3 := @parameter2: org.apache.hadoop.mapreduce.Mapper$Context
20210427node in :[]
[idStmt]iiiiiii r3 := @parameter2: org.apache.hadoop.mapreduce.Mapper$Context  index:2
ClassName:cfhider.WordCount$TokenizerMapper
MethodName:map
aaaa:0
20210427node out :[]
currStmt20210423:r3 := @parameter2: org.apache.hadoop.mapreduce.Mapper$Context
20210427node :$r4 = (org.apache.hadoop.io.Text) r2
20210427node in :[]
普通复制语句1112:$r4 = (org.apache.hadoop.io.Text) r2
[taint source] u:r2
SourceList:[$z0]
[taint source] u:(org.apache.hadoop.io.Text) r2
SourceList:[$z0]
20210427node out :[]
20210427node :virtualinvoke r0.<cfhider.WordCount$TokenizerMapper: void map(java.lang.Object,org.apache.hadoop.io.Text,org.apache.hadoop.mapreduce.Mapper$Context)>(r1, $r4, r3)
20210427node in :[]
20210427node out :[]
[taint329]i invoke virtualinvoke r0.<cfhider.WordCount$TokenizerMapper: void map(java.lang.Object,org.apache.hadoop.io.Text,org.apache.hadoop.mapreduce.Mapper$Context)>(r1, $r4, r3)
[taint328]i invoke <cfhider.WordCount$TokenizerMapper: void map(java.lang.Object,org.apache.hadoop.io.Text,org.apache.hadoop.mapreduce.Mapper$Context)>
[taint328]i invoke 3
value:r1
isoutSetContains  false value:r1 index:0
value:$r4
isoutSetContains  false value:$r4 index:1
value:r3
isoutSetContains  false value:r3 index:2
[invokemap]invoke:map  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
20210427node :return
20210427node in :[]
20210427node out :[]
analysis.outSet.size():0
[CFMAP]2021 After taintAnalysis:{cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={}}
The data isgggg 
<cfhider.WordCount$TokenizerMapper: void map(java.lang.Object,java.lang.Object,org.apache.hadoop.mapreduce.Mapper$Context)>
The data isgggg cfhider.WordCount$TokenizerMapper map [$z0] {cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={}}  {cfhider.WordCount$IntSumReducer={reduce=[I@1112aeb9}, cfhider.WordCount$TokenizerMapper={map=[I@4b59c01c}, cfhider.WordCount={main=[I@31aed88a}, invoker.SnowFlake={}}
Coming...
doAnalysis Startingqqqqqqqq.....
srcValue=[]
destValue:[]
taint data:[$z0]
Coming in Backward Analysis
srcValue=[]
destValue:[]
taint data:[$z0]
Coming in Backward Analysis
[taint329]i invoke virtualinvoke r0.<cfhider.WordCount$TokenizerMapper: void map(java.lang.Object,org.apache.hadoop.io.Text,org.apache.hadoop.mapreduce.Mapper$Context)>(r1, $r4, r3)
[taint328]i invoke <cfhider.WordCount$TokenizerMapper: void map(java.lang.Object,org.apache.hadoop.io.Text,org.apache.hadoop.mapreduce.Mapper$Context)>
[taint328]i invoke 3
value:r1
in here:[I@715394e9
[invokemap]invoke:map  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
value:$r4
in here:[I@715394e9
[invokemap]invoke:map  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
value:r3
in here:[I@715394e9
[invokemap]invoke:map  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
srcValue=[]
destValue:[]
taint data:[$z0]
Coming in Backward Analysis
currStmt20210420:$r4 = (org.apache.hadoop.io.Text) r2
currStmt left value20210420:$r4
srcValue=[]
destValue:[]
taint data:[$z0]
Coming in Backward Analysis
srcValue=[]
destValue:[]
taint data:[$z0]
Coming in Backward Analysis
srcValue=[]
destValue:[]
taint data:[$z0]
Coming in Backward Analysis
srcValue=[]
destValue:[]
taint data:[$z0]
Coming in Backward Analysis
doAnalysis endqqqqqqq.....
come here
[CFMAP]2021 After BackwardAnalysis:{cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={}}
[taint into] sootMethod: <clinit>
[]
class name :cfhider.WordCount$TokenizerMapper
method name :<clinit>
method list :[]
clasname=cfhider.WordCount$TokenizerMapper
methodname=<clinit>
sourcelist2021=[]
20210427node :$r0 = new org.apache.hadoop.io.IntWritable
20210427node in :[]
普通复制语句1112:$r0 = new org.apache.hadoop.io.IntWritable
[taint source] u:new org.apache.hadoop.io.IntWritable
SourceList:[]
20210427node out :[]
20210427node :specialinvoke $r0.<org.apache.hadoop.io.IntWritable: void <init>(int)>(1)
20210427node in :[]
20210427node out :[]
[taint329]i invoke specialinvoke $r0.<org.apache.hadoop.io.IntWritable: void <init>(int)>(1)
[taint328]i invoke <org.apache.hadoop.io.IntWritable: void <init>(int)>
[taint328]i invoke 1
value:1
isoutSetContains  false value:1 index:0
20210427node :<cfhider.WordCount$TokenizerMapper: org.apache.hadoop.io.IntWritable one> = $r0
20210427node in :[]
普通复制语句1112:<cfhider.WordCount$TokenizerMapper: org.apache.hadoop.io.IntWritable one> = $r0
[taint source] u:$r0
SourceList:[]
20210427node out :[]
20210427node :return
20210427node in :[]
20210427node out :[]
analysis.outSet.size():0
[CFMAP]2021 After taintAnalysis:{cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={}}
The data isgggg 
<cfhider.WordCount$TokenizerMapper: void <clinit>()>
The data isgggg cfhider.WordCount$TokenizerMapper <clinit> [] {cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={}}  {cfhider.WordCount$IntSumReducer={reduce=[I@1112aeb9}, cfhider.WordCount$TokenizerMapper={map=[I@4b59c01c}, cfhider.WordCount={main=[I@31aed88a}, invoker.SnowFlake={}}
Coming...
doAnalysis Startingqqqqqqqq.....
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:<cfhider.WordCount$TokenizerMapper: org.apache.hadoop.io.IntWritable one> = $r0
currStmt left value20210420:<cfhider.WordCount$TokenizerMapper: org.apache.hadoop.io.IntWritable one>
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
[taint329]i invoke specialinvoke $r0.<org.apache.hadoop.io.IntWritable: void <init>(int)>(1)
[taint328]i invoke <org.apache.hadoop.io.IntWritable: void <init>(int)>
[taint328]i invoke 1
value:1
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$r0 = new org.apache.hadoop.io.IntWritable
currStmt left value20210420:$r0
doAnalysis endqqqqqqq.....
come here
[CFMAP]2021 After BackwardAnalysis:{cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={}}
[taint]SooClass:invoker.SnowFlake
[taint] class: invoker.SnowFlake
methList :{}
[taint not hasActiveBody] sootMethod: <init>
clasname=invoker.SnowFlake
methodname=<init>
sourcelist2021=[]
20210427node :r0 := @this: invoker.SnowFlake
20210427node in :[]
20210427node out :[]
currStmt20210423:r0 := @this: invoker.SnowFlake
20210427node :l0 := @parameter0: long
20210427node in :[]
[idStmt]iiiiiii l0 := @parameter0: long  index:0
ClassName:invoker.SnowFlake
MethodName:<init>
20210427node out :[]
currStmt20210423:l0 := @parameter0: long
20210427node :l1 := @parameter1: long
20210427node in :[]
[idStmt]iiiiiii l1 := @parameter1: long  index:1
ClassName:invoker.SnowFlake
MethodName:<init>
aaaa:0
20210427node out :[]
currStmt20210423:l1 := @parameter1: long
20210427node :specialinvoke r0.<java.lang.Object: void <init>()>()
20210427node in :[]
20210427node out :[]
[taint329]i invoke specialinvoke r0.<java.lang.Object: void <init>()>()
[taint328]i invoke <java.lang.Object: void <init>()>
[taint328]i invoke 0
20210427node :$b2 = l0 cmp 31L
20210427node in :[]
普通复制语句1112:$b2 = l0 cmp 31L
[taint source] u:l0
SourceList:[]
[taint source] u:31L
SourceList:[]
[taint source] u:l0 cmp 31L
SourceList:[]
20210427node out :[]
20210427node :if $b2 > 0 goto $r1 = new java.lang.IllegalArgumentException
20210427node in :[]
20210427node out :[]
Have
Stmt if :if $b2 > 0 goto $r1 = new java.lang.IllegalArgumentExceptionStmt if value:$b2 > 0the value=$b2
the value=0
maintainValues.size0
ifValues1
20210427node :$b3 = l0 cmp 0L
20210427node in :[]
普通复制语句1112:$b3 = l0 cmp 0L
[taint source] u:l0
SourceList:[]
[taint source] u:0L
SourceList:[]
[taint source] u:l0 cmp 0L
SourceList:[]
20210427node out :[]
20210427node :if $b3 >= 0 goto $b4 = l1 cmp 31L
20210427node in :[]
20210427node out :[]
Have
Stmt if :if $b3 >= 0 goto $b4 = l1 cmp 31LStmt if value:$b3 >= 0the value=$b3
the value=0
maintainValues.size0
ifValues1
20210427node :$b4 = l1 cmp 31L
20210427node in :[]
普通复制语句1112:$b4 = l1 cmp 31L
[taint source] u:l1
SourceList:[]
[taint source] u:31L
SourceList:[]
[taint source] u:l1 cmp 31L
SourceList:[]
20210427node out :[]
20210427node :if $b4 > 0 goto $r2 = new java.lang.IllegalArgumentException
20210427node in :[]
20210427node out :[]
Have
Stmt if :if $b4 > 0 goto $r2 = new java.lang.IllegalArgumentExceptionStmt if value:$b4 > 0the value=$b4
the value=0
maintainValues.size0
ifValues1
20210427node :$b5 = l1 cmp 0L
20210427node in :[]
普通复制语句1112:$b5 = l1 cmp 0L
[taint source] u:l1
SourceList:[]
[taint source] u:0L
SourceList:[]
[taint source] u:l1 cmp 0L
SourceList:[]
20210427node out :[]
20210427node :if $b5 >= 0 goto <invoker.SnowFlake: long datacenterId> = 0L
20210427node in :[]
20210427node out :[]
Have
Stmt if :if $b5 >= 0 goto <invoker.SnowFlake: long datacenterId> = 0LStmt if value:$b5 >= 0the value=$b5
the value=0
maintainValues.size0
ifValues1
20210427node :<invoker.SnowFlake: long datacenterId> = 0L
20210427node in :[]
普通复制语句1112:<invoker.SnowFlake: long datacenterId> = 0L
[taint source] u:0L
SourceList:[]
20210427node out :[]
20210427node :<invoker.SnowFlake: long machineId> = 0L
20210427node in :[]
普通复制语句1112:<invoker.SnowFlake: long machineId> = 0L
[taint source] u:0L
SourceList:[]
20210427node out :[]
20210427node :return
20210427node in :[]
20210427node out :[]
20210427node :$r2 = new java.lang.IllegalArgumentException
20210427node in :[]
普通复制语句1112:$r2 = new java.lang.IllegalArgumentException
[taint source] u:new java.lang.IllegalArgumentException
SourceList:[]
20210427node out :[]
20210427node :specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("machineId can\'t be greater than MAX_MACHINE_NUM or less than 0")
20210427node in :[]
20210427node out :[]
[taint329]i invoke specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("machineId can\'t be greater than MAX_MACHINE_NUM or less than 0")
[taint328]i invoke <java.lang.IllegalArgumentException: void <init>(java.lang.String)>
[taint328]i invoke 1
value:"machineId can\'t be greater than MAX_MACHINE_NUM or less than 0"
isoutSetContains  false value:"machineId can\'t be greater than MAX_MACHINE_NUM or less than 0" index:0
20210427node :throw $r2
20210427node in :[]
20210427node out :[]
20210427node :$r1 = new java.lang.IllegalArgumentException
20210427node in :[]
普通复制语句1112:$r1 = new java.lang.IllegalArgumentException
[taint source] u:new java.lang.IllegalArgumentException
SourceList:[]
20210427node out :[]
20210427node :specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("datacenterId can\'t be greater than MAX_DATACENTER_NUM or less than 0")
20210427node in :[]
20210427node out :[]
[taint329]i invoke specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("datacenterId can\'t be greater than MAX_DATACENTER_NUM or less than 0")
[taint328]i invoke <java.lang.IllegalArgumentException: void <init>(java.lang.String)>
[taint328]i invoke 1
value:"datacenterId can\'t be greater than MAX_DATACENTER_NUM or less than 0"
isoutSetContains  false value:"datacenterId can\'t be greater than MAX_DATACENTER_NUM or less than 0" index:0
20210427node :throw $r1
20210427node in :[]
20210427node out :[]
analysis.outSet.size():0
The data isgggg 
<invoker.SnowFlake: void <init>(long,long)>
The data isgggg invoker.SnowFlake <init> [] {cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[]}}  {cfhider.WordCount$IntSumReducer={reduce=[I@1112aeb9}, cfhider.WordCount$TokenizerMapper={map=[I@4b59c01c}, cfhider.WordCount={main=[I@31aed88a}, invoker.SnowFlake={<init>=[I@77caa822}}
Coming...
doAnalysis Startingqqqqqqqq.....
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
[taint329]i invoke specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("datacenterId can\'t be greater than MAX_DATACENTER_NUM or less than 0")
[taint328]i invoke <java.lang.IllegalArgumentException: void <init>(java.lang.String)>
[taint328]i invoke 1
value:"datacenterId can\'t be greater than MAX_DATACENTER_NUM or less than 0"
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$r1 = new java.lang.IllegalArgumentException
currStmt left value20210420:$r1
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
[taint329]i invoke specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("machineId can\'t be greater than MAX_MACHINE_NUM or less than 0")
[taint328]i invoke <java.lang.IllegalArgumentException: void <init>(java.lang.String)>
[taint328]i invoke 1
value:"machineId can\'t be greater than MAX_MACHINE_NUM or less than 0"
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$r2 = new java.lang.IllegalArgumentException
currStmt left value20210420:$r2
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:<invoker.SnowFlake: long machineId> = 0L
currStmt left value20210420:<invoker.SnowFlake: long machineId>
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:<invoker.SnowFlake: long datacenterId> = 0L
currStmt left value20210420:<invoker.SnowFlake: long datacenterId>
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
Have
the value=$b5
the value=0
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$b5 = l1 cmp 0L
currStmt left value20210420:$b5
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
Have
the value=$b4
the value=0
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$b4 = l1 cmp 31L
currStmt left value20210420:$b4
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
Have
the value=$b3
the value=0
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$b3 = l0 cmp 0L
currStmt left value20210420:$b3
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
Have
the value=$b2
the value=0
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$b2 = l0 cmp 31L
currStmt left value20210420:$b2
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
[taint329]i invoke specialinvoke r0.<java.lang.Object: void <init>()>()
[taint328]i invoke <java.lang.Object: void <init>()>
[taint328]i invoke 0
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
doAnalysis endqqqqqqq.....
come here
[taint not hasActiveBody] sootMethod: nextId
clasname=invoker.SnowFlake
methodname=nextId
sourcelist2021=[]
20210427node :l0 = staticinvoke <invoker.SnowFlake: long getNewstmp()>()
20210427node in :[]
调用语句赋值给变量:l0 = staticinvoke <invoker.SnowFlake: long getNewstmp()>()
20210427node out :[]
[taint328]a invoke <invoker.SnowFlake: long getNewstmp()>
[taint328]a invoke 0
[invokemap]invoke:getNewstmp  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
20210427node :$l1 = <invoker.SnowFlake: long lastStmp>
20210427node in :[]
普通复制语句1112:$l1 = <invoker.SnowFlake: long lastStmp>
[taint source] u:<invoker.SnowFlake: long lastStmp>
SourceList:[]
20210427node out :[]
20210427node :$b2 = l0 cmp $l1
20210427node in :[]
普通复制语句1112:$b2 = l0 cmp $l1
[taint source] u:l0
SourceList:[]
[taint source] u:$l1
SourceList:[]
[taint source] u:l0 cmp $l1
SourceList:[]
20210427node out :[]
20210427node :if $b2 >= 0 goto $l3 = <invoker.SnowFlake: long lastStmp>
20210427node in :[]
20210427node out :[]
Have
Stmt if :if $b2 >= 0 goto $l3 = <invoker.SnowFlake: long lastStmp>Stmt if value:$b2 >= 0the value=$b2
the value=0
maintainValues.size0
ifValues1
20210427node :$l3 = <invoker.SnowFlake: long lastStmp>
20210427node in :[]
普通复制语句1112:$l3 = <invoker.SnowFlake: long lastStmp>
[taint source] u:<invoker.SnowFlake: long lastStmp>
SourceList:[]
20210427node out :[]
20210427node :$b4 = l0 cmp $l3
20210427node in :[]
普通复制语句1112:$b4 = l0 cmp $l3
[taint source] u:l0
SourceList:[]
[taint source] u:$l3
SourceList:[]
[taint source] u:l0 cmp $l3
SourceList:[]
20210427node out :[]
20210427node :if $b4 != 0 goto <invoker.SnowFlake: long sequence> = 0L
20210427node in :[]
20210427node out :[]
Have
Stmt if :if $b4 != 0 goto <invoker.SnowFlake: long sequence> = 0LStmt if value:$b4 != 0the value=$b4
the value=0
maintainValues.size0
ifValues1
20210427node :<invoker.SnowFlake: long sequence> = 0L
20210427node in :[]
普通复制语句1112:<invoker.SnowFlake: long sequence> = 0L
[taint source] u:0L
SourceList:[]
20210427node out :[]
20210427node :$l5 = <invoker.SnowFlake: long sequence>
20210427node in :[]
普通复制语句1112:$l5 = <invoker.SnowFlake: long sequence>
[taint source] u:<invoker.SnowFlake: long sequence>
SourceList:[]
20210427node out :[]
20210427node :$l6 = $l5 + 1L
20210427node in :[]
普通复制语句1112:$l6 = $l5 + 1L
[taint source] u:$l5
SourceList:[]
[taint source] u:1L
SourceList:[]
[taint source] u:$l5 + 1L
SourceList:[]
20210427node out :[]
20210427node :$l7 = $l6 & 4095L
20210427node in :[]
普通复制语句1112:$l7 = $l6 & 4095L
[taint source] u:$l6
SourceList:[]
[taint source] u:4095L
SourceList:[]
[taint source] u:$l6 & 4095L
SourceList:[]
20210427node out :[]
20210427node :<invoker.SnowFlake: long sequence> = $l7
20210427node in :[]
普通复制语句1112:<invoker.SnowFlake: long sequence> = $l7
[taint source] u:$l7
SourceList:[]
20210427node out :[]
20210427node :$l8 = <invoker.SnowFlake: long sequence>
20210427node in :[]
普通复制语句1112:$l8 = <invoker.SnowFlake: long sequence>
[taint source] u:<invoker.SnowFlake: long sequence>
SourceList:[]
20210427node out :[]
20210427node :$b9 = $l8 cmp 0L
20210427node in :[]
普通复制语句1112:$b9 = $l8 cmp 0L
[taint source] u:$l8
SourceList:[]
[taint source] u:0L
SourceList:[]
[taint source] u:$l8 cmp 0L
SourceList:[]
20210427node out :[]
20210427node :if $b9 != 0 goto <invoker.SnowFlake: long lastStmp> = l0
20210427node in :[]
20210427node out :[]
Have
Stmt if :if $b9 != 0 goto <invoker.SnowFlake: long lastStmp> = l0Stmt if value:$b9 != 0the value=$b9
the value=0
maintainValues.size0
ifValues1
20210427node :l0 = staticinvoke <invoker.SnowFlake: long getNextMill()>()
20210427node in :[]
调用语句赋值给变量:l0 = staticinvoke <invoker.SnowFlake: long getNextMill()>()
20210427node out :[]
[taint328]a invoke <invoker.SnowFlake: long getNextMill()>
[taint328]a invoke 0
[invokemap]invoke:getNextMill  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
20210427node :goto [?= <invoker.SnowFlake: long lastStmp> = l0]
20210427node in :[]
20210427node out :[]
20210427node :<invoker.SnowFlake: long lastStmp> = l0
20210427node in :[]
普通复制语句1112:<invoker.SnowFlake: long lastStmp> = l0
[taint source] u:l0
SourceList:[]
20210427node out :[]
20210427node :$l10 = l0 - 1480166465631L
20210427node in :[]
普通复制语句1112:$l10 = l0 - 1480166465631L
[taint source] u:l0
SourceList:[]
[taint source] u:1480166465631L
SourceList:[]
[taint source] u:l0 - 1480166465631L
SourceList:[]
20210427node out :[]
20210427node :$l11 = $l10 << 22
20210427node in :[]
普通复制语句1112:$l11 = $l10 << 22
[taint source] u:$l10
SourceList:[]
[taint source] u:22
SourceList:[]
[taint source] u:$l10 << 22
SourceList:[]
20210427node out :[]
20210427node :$l12 = <invoker.SnowFlake: long datacenterId>
20210427node in :[]
普通复制语句1112:$l12 = <invoker.SnowFlake: long datacenterId>
[taint source] u:<invoker.SnowFlake: long datacenterId>
SourceList:[]
20210427node out :[]
20210427node :$l13 = $l12 << 17
20210427node in :[]
普通复制语句1112:$l13 = $l12 << 17
[taint source] u:$l12
SourceList:[]
[taint source] u:17
SourceList:[]
[taint source] u:$l12 << 17
SourceList:[]
20210427node out :[]
20210427node :$l14 = $l11 | $l13
20210427node in :[]
普通复制语句1112:$l14 = $l11 | $l13
[taint source] u:$l11
SourceList:[]
[taint source] u:$l13
SourceList:[]
[taint source] u:$l11 | $l13
SourceList:[]
20210427node out :[]
20210427node :$l15 = <invoker.SnowFlake: long machineId>
20210427node in :[]
普通复制语句1112:$l15 = <invoker.SnowFlake: long machineId>
[taint source] u:<invoker.SnowFlake: long machineId>
SourceList:[]
20210427node out :[]
20210427node :$l16 = $l15 << 12
20210427node in :[]
普通复制语句1112:$l16 = $l15 << 12
[taint source] u:$l15
SourceList:[]
[taint source] u:12
SourceList:[]
[taint source] u:$l15 << 12
SourceList:[]
20210427node out :[]
20210427node :$l17 = $l14 | $l16
20210427node in :[]
普通复制语句1112:$l17 = $l14 | $l16
[taint source] u:$l14
SourceList:[]
[taint source] u:$l16
SourceList:[]
[taint source] u:$l14 | $l16
SourceList:[]
20210427node out :[]
20210427node :$l18 = <invoker.SnowFlake: long sequence>
20210427node in :[]
普通复制语句1112:$l18 = <invoker.SnowFlake: long sequence>
[taint source] u:<invoker.SnowFlake: long sequence>
SourceList:[]
20210427node out :[]
20210427node :$l19 = $l17 | $l18
20210427node in :[]
普通复制语句1112:$l19 = $l17 | $l18
[taint source] u:$l17
SourceList:[]
[taint source] u:$l18
SourceList:[]
[taint source] u:$l17 | $l18
SourceList:[]
20210427node out :[]
20210427node :return $l19
20210427node in :[]
20210427node out :[]
20210427node :$r0 = new java.lang.RuntimeException
20210427node in :[]
普通复制语句1112:$r0 = new java.lang.RuntimeException
[taint source] u:new java.lang.RuntimeException
SourceList:[]
20210427node out :[]
20210427node :specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Clock moved backwards.  Refusing to generate id")
20210427node in :[]
20210427node out :[]
[taint329]i invoke specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Clock moved backwards.  Refusing to generate id")
[taint328]i invoke <java.lang.RuntimeException: void <init>(java.lang.String)>
[taint328]i invoke 1
value:"Clock moved backwards.  Refusing to generate id"
isoutSetContains  false value:"Clock moved backwards.  Refusing to generate id" index:0
20210427node :throw $r0
20210427node in :[]
20210427node out :[]
analysis.outSet.size():0
The data isgggg 
<invoker.SnowFlake: long nextId()>
The data isgggg invoker.SnowFlake nextId [] {cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], nextId=[]}}  {cfhider.WordCount$IntSumReducer={reduce=[I@1112aeb9}, cfhider.WordCount$TokenizerMapper={map=[I@4b59c01c}, cfhider.WordCount={main=[I@31aed88a}, invoker.SnowFlake={<init>=[I@77caa822, getNextMill=[I@6c8d0b00, getNewstmp=[I@1fcd64ad}}
Coming...
doAnalysis Startingqqqqqqqq.....
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
[taint329]i invoke specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Clock moved backwards.  Refusing to generate id")
[taint328]i invoke <java.lang.RuntimeException: void <init>(java.lang.String)>
[taint328]i invoke 1
value:"Clock moved backwards.  Refusing to generate id"
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$r0 = new java.lang.RuntimeException
currStmt left value20210420:$r0
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$l19 = $l17 | $l18
currStmt left value20210420:$l19
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$l18 = <invoker.SnowFlake: long sequence>
currStmt left value20210420:$l18
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$l17 = $l14 | $l16
currStmt left value20210420:$l17
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$l16 = $l15 << 12
currStmt left value20210420:$l16
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$l15 = <invoker.SnowFlake: long machineId>
currStmt left value20210420:$l15
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$l14 = $l11 | $l13
currStmt left value20210420:$l14
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$l13 = $l12 << 17
currStmt left value20210420:$l13
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$l12 = <invoker.SnowFlake: long datacenterId>
currStmt left value20210420:$l12
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$l11 = $l10 << 22
currStmt left value20210420:$l11
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$l10 = l0 - 1480166465631L
currStmt left value20210420:$l10
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:<invoker.SnowFlake: long lastStmp> = l0
currStmt left value20210420:<invoker.SnowFlake: long lastStmp>
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:l0 = staticinvoke <invoker.SnowFlake: long getNextMill()>()
currStmt left value20210420:l0
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
Have
the value=$b9
the value=0
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$b9 = $l8 cmp 0L
currStmt left value20210420:$b9
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$l8 = <invoker.SnowFlake: long sequence>
currStmt left value20210420:$l8
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:<invoker.SnowFlake: long sequence> = $l7
currStmt left value20210420:<invoker.SnowFlake: long sequence>
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$l7 = $l6 & 4095L
currStmt left value20210420:$l7
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$l6 = $l5 + 1L
currStmt left value20210420:$l6
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$l5 = <invoker.SnowFlake: long sequence>
currStmt left value20210420:$l5
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:<invoker.SnowFlake: long sequence> = 0L
currStmt left value20210420:<invoker.SnowFlake: long sequence>
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
Have
the value=$b4
the value=0
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$b4 = l0 cmp $l3
currStmt left value20210420:$b4
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$l3 = <invoker.SnowFlake: long lastStmp>
currStmt left value20210420:$l3
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
Have
the value=$b2
the value=0
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$b2 = l0 cmp $l1
currStmt left value20210420:$b2
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$l1 = <invoker.SnowFlake: long lastStmp>
currStmt left value20210420:$l1
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:l0 = staticinvoke <invoker.SnowFlake: long getNewstmp()>()
currStmt left value20210420:l0
doAnalysis endqqqqqqq.....
come here
[taint not hasActiveBody] sootMethod: getNextMill
clasname=invoker.SnowFlake
methodname=getNextMill
sourcelist2021=[]
20210427node :l0 = staticinvoke <invoker.SnowFlake: long getNewstmp()>()
20210427node in :[]
调用语句赋值给变量:l0 = staticinvoke <invoker.SnowFlake: long getNewstmp()>()
Invokestmt:getNewstmp
20210427node out :[]
[taint328]a invoke <invoker.SnowFlake: long getNewstmp()>
[taint328]a invoke 0
[invokemap]invoke:getNewstmp  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
20210427node :$l1 = <invoker.SnowFlake: long lastStmp>
20210427node in :[]
普通复制语句1112:$l1 = <invoker.SnowFlake: long lastStmp>
[taint source] u:<invoker.SnowFlake: long lastStmp>
SourceList:[]
20210427node out :[]
20210427node :$b2 = l0 cmp $l1
20210427node in :[]
普通复制语句1112:$b2 = l0 cmp $l1
[taint source] u:l0
SourceList:[]
[taint source] u:$l1
SourceList:[]
[taint source] u:l0 cmp $l1
SourceList:[]
20210427node out :[]
20210427node :if $b2 > 0 goto return l0
20210427node in :[]
20210427node out :[]
Have
Stmt if :if $b2 > 0 goto return l0Stmt if value:$b2 > 0the value=$b2
the value=0
maintainValues.size0
ifValues1
20210427node :return l0
20210427node in :[]
20210427node out :[]
20210427node :l0 = staticinvoke <invoker.SnowFlake: long getNewstmp()>()
20210427node in :[]
调用语句赋值给变量:l0 = staticinvoke <invoker.SnowFlake: long getNewstmp()>()
Invokestmt:getNewstmp
20210427node out :[]
[taint328]a invoke <invoker.SnowFlake: long getNewstmp()>
[taint328]a invoke 0
[invokemap]invoke:getNewstmp  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
20210427node :goto [?= $l1 = <invoker.SnowFlake: long lastStmp>]
20210427node in :[]
20210427node out :[]
analysis.outSet.size():0
The data isgggg 
<invoker.SnowFlake: long getNextMill()>
The data isgggg invoker.SnowFlake getNextMill [] {cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], getNextMill=[], nextId=[]}}  {cfhider.WordCount$IntSumReducer={reduce=[I@1112aeb9}, cfhider.WordCount$TokenizerMapper={map=[I@4b59c01c}, cfhider.WordCount={main=[I@31aed88a}, invoker.SnowFlake={<init>=[I@77caa822, getNextMill=[I@6c8d0b00, getNewstmp=[I@5ecd1ba4}}
Coming...
doAnalysis Startingqqqqqqqq.....
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:l0 = staticinvoke <invoker.SnowFlake: long getNewstmp()>()
currStmt left value20210420:l0
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
Have
the value=$b2
the value=0
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$b2 = l0 cmp $l1
currStmt left value20210420:$b2
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$l1 = <invoker.SnowFlake: long lastStmp>
currStmt left value20210420:$l1
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:l0 = staticinvoke <invoker.SnowFlake: long getNewstmp()>()
currStmt left value20210420:l0
doAnalysis endqqqqqqq.....
come here
[taint not hasActiveBody] sootMethod: getNewstmp
clasname=invoker.SnowFlake
methodname=getNewstmp
sourcelist2021=[]
20210427node :$l0 = staticinvoke <java.lang.System: long currentTimeMillis()>()
20210427node in :[]
调用语句赋值给变量:$l0 = staticinvoke <java.lang.System: long currentTimeMillis()>()
20210427node out :[]
[taint328]a invoke <java.lang.System: long currentTimeMillis()>
[taint328]a invoke 0
20210427node :return $l0
20210427node in :[]
20210427node out :[]
analysis.outSet.size():0
The data isgggg 
<invoker.SnowFlake: long getNewstmp()>
The data isgggg invoker.SnowFlake getNewstmp [] {cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], getNextMill=[], getNewstmp=[], nextId=[]}}  {cfhider.WordCount$IntSumReducer={reduce=[I@1112aeb9}, cfhider.WordCount$TokenizerMapper={map=[I@4b59c01c}, cfhider.WordCount={main=[I@31aed88a}, invoker.SnowFlake={<init>=[I@77caa822, getNextMill=[I@6c8d0b00, getNewstmp=[I@5ecd1ba4}}
Coming...
doAnalysis Startingqqqqqqqq.....
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$l0 = staticinvoke <java.lang.System: long currentTimeMillis()>()
currStmt left value20210420:$l0
doAnalysis endqqqqqqq.....
come here
[taint not hasActiveBody] sootMethod: <clinit>
clasname=invoker.SnowFlake
methodname=<clinit>
sourcelist2021=[]
20210427node :<invoker.SnowFlake: long sequence> = 0L
20210427node in :[]
普通复制语句1112:<invoker.SnowFlake: long sequence> = 0L
[taint source] u:0L
SourceList:[]
20210427node out :[]
20210427node :<invoker.SnowFlake: long lastStmp> = -1L
20210427node in :[]
普通复制语句1112:<invoker.SnowFlake: long lastStmp> = -1L
[taint source] u:-1L
SourceList:[]
20210427node out :[]
20210427node :return
20210427node in :[]
20210427node out :[]
analysis.outSet.size():0
The data isgggg 
<invoker.SnowFlake: void <clinit>()>
The data isgggg invoker.SnowFlake <clinit> [] {cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}  {cfhider.WordCount$IntSumReducer={reduce=[I@1112aeb9}, cfhider.WordCount$TokenizerMapper={map=[I@4b59c01c}, cfhider.WordCount={main=[I@31aed88a}, invoker.SnowFlake={<init>=[I@77caa822, getNextMill=[I@6c8d0b00, getNewstmp=[I@5ecd1ba4}}
Coming...
doAnalysis Startingqqqqqqqq.....
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:<invoker.SnowFlake: long lastStmp> = -1L
currStmt left value20210420:<invoker.SnowFlake: long lastStmp>
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:<invoker.SnowFlake: long sequence> = 0L
currStmt left value20210420:<invoker.SnowFlake: long sequence>
doAnalysis endqqqqqqq.....
come here
[taint into] sootMethod: <init>
[]
class name :invoker.SnowFlake
method name :<init>
method list :[]
clasname=invoker.SnowFlake
methodname=<init>
sourcelist2021=[]
20210427node :r0 := @this: invoker.SnowFlake
20210427node in :[]
20210427node out :[]
currStmt20210423:r0 := @this: invoker.SnowFlake
20210427node :l0 := @parameter0: long
20210427node in :[]
[idStmt]iiiiiii l0 := @parameter0: long  index:0
ClassName:invoker.SnowFlake
MethodName:<init>
aaaa:0
20210427node out :[]
currStmt20210423:l0 := @parameter0: long
20210427node :l1 := @parameter1: long
20210427node in :[]
[idStmt]iiiiiii l1 := @parameter1: long  index:1
ClassName:invoker.SnowFlake
MethodName:<init>
aaaa:0
20210427node out :[]
currStmt20210423:l1 := @parameter1: long
20210427node :specialinvoke r0.<java.lang.Object: void <init>()>()
20210427node in :[]
20210427node out :[]
[taint329]i invoke specialinvoke r0.<java.lang.Object: void <init>()>()
[taint328]i invoke <java.lang.Object: void <init>()>
[taint328]i invoke 0
20210427node :$b2 = l0 cmp 31L
20210427node in :[]
普通复制语句1112:$b2 = l0 cmp 31L
[taint source] u:l0
SourceList:[]
[taint source] u:31L
SourceList:[]
[taint source] u:l0 cmp 31L
SourceList:[]
20210427node out :[]
20210427node :if $b2 > 0 goto $r1 = new java.lang.IllegalArgumentException
20210427node in :[]
20210427node out :[]
Have
Stmt if :if $b2 > 0 goto $r1 = new java.lang.IllegalArgumentExceptionStmt if value:$b2 > 0the value=$b2
the value=0
maintainValues.size0
ifValues1
20210427node :$b3 = l0 cmp 0L
20210427node in :[]
普通复制语句1112:$b3 = l0 cmp 0L
[taint source] u:l0
SourceList:[]
[taint source] u:0L
SourceList:[]
[taint source] u:l0 cmp 0L
SourceList:[]
20210427node out :[]
20210427node :if $b3 >= 0 goto $b4 = l1 cmp 31L
20210427node in :[]
20210427node out :[]
Have
Stmt if :if $b3 >= 0 goto $b4 = l1 cmp 31LStmt if value:$b3 >= 0the value=$b3
the value=0
maintainValues.size0
ifValues1
20210427node :$b4 = l1 cmp 31L
20210427node in :[]
普通复制语句1112:$b4 = l1 cmp 31L
[taint source] u:l1
SourceList:[]
[taint source] u:31L
SourceList:[]
[taint source] u:l1 cmp 31L
SourceList:[]
20210427node out :[]
20210427node :if $b4 > 0 goto $r2 = new java.lang.IllegalArgumentException
20210427node in :[]
20210427node out :[]
Have
Stmt if :if $b4 > 0 goto $r2 = new java.lang.IllegalArgumentExceptionStmt if value:$b4 > 0the value=$b4
the value=0
maintainValues.size0
ifValues1
20210427node :$b5 = l1 cmp 0L
20210427node in :[]
普通复制语句1112:$b5 = l1 cmp 0L
[taint source] u:l1
SourceList:[]
[taint source] u:0L
SourceList:[]
[taint source] u:l1 cmp 0L
SourceList:[]
20210427node out :[]
20210427node :if $b5 >= 0 goto <invoker.SnowFlake: long datacenterId> = 0L
20210427node in :[]
20210427node out :[]
Have
Stmt if :if $b5 >= 0 goto <invoker.SnowFlake: long datacenterId> = 0LStmt if value:$b5 >= 0the value=$b5
the value=0
maintainValues.size0
ifValues1
20210427node :<invoker.SnowFlake: long datacenterId> = 0L
20210427node in :[]
普通复制语句1112:<invoker.SnowFlake: long datacenterId> = 0L
[taint source] u:0L
SourceList:[]
20210427node out :[]
20210427node :<invoker.SnowFlake: long machineId> = 0L
20210427node in :[]
普通复制语句1112:<invoker.SnowFlake: long machineId> = 0L
[taint source] u:0L
SourceList:[]
20210427node out :[]
20210427node :return
20210427node in :[]
20210427node out :[]
20210427node :$r2 = new java.lang.IllegalArgumentException
20210427node in :[]
普通复制语句1112:$r2 = new java.lang.IllegalArgumentException
[taint source] u:new java.lang.IllegalArgumentException
SourceList:[]
20210427node out :[]
20210427node :specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("machineId can\'t be greater than MAX_MACHINE_NUM or less than 0")
20210427node in :[]
20210427node out :[]
[taint329]i invoke specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("machineId can\'t be greater than MAX_MACHINE_NUM or less than 0")
[taint328]i invoke <java.lang.IllegalArgumentException: void <init>(java.lang.String)>
[taint328]i invoke 1
value:"machineId can\'t be greater than MAX_MACHINE_NUM or less than 0"
isoutSetContains  false value:"machineId can\'t be greater than MAX_MACHINE_NUM or less than 0" index:0
20210427node :throw $r2
20210427node in :[]
20210427node out :[]
20210427node :$r1 = new java.lang.IllegalArgumentException
20210427node in :[]
普通复制语句1112:$r1 = new java.lang.IllegalArgumentException
[taint source] u:new java.lang.IllegalArgumentException
SourceList:[]
20210427node out :[]
20210427node :specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("datacenterId can\'t be greater than MAX_DATACENTER_NUM or less than 0")
20210427node in :[]
20210427node out :[]
[taint329]i invoke specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("datacenterId can\'t be greater than MAX_DATACENTER_NUM or less than 0")
[taint328]i invoke <java.lang.IllegalArgumentException: void <init>(java.lang.String)>
[taint328]i invoke 1
value:"datacenterId can\'t be greater than MAX_DATACENTER_NUM or less than 0"
isoutSetContains  false value:"datacenterId can\'t be greater than MAX_DATACENTER_NUM or less than 0" index:0
20210427node :throw $r1
20210427node in :[]
20210427node out :[]
analysis.outSet.size():0
[CFMAP]2021 After taintAnalysis:{cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}
The data isgggg 
<invoker.SnowFlake: void <init>(long,long)>
The data isgggg invoker.SnowFlake <init> [] {cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}  {cfhider.WordCount$IntSumReducer={reduce=[I@1112aeb9}, cfhider.WordCount$TokenizerMapper={map=[I@4b59c01c}, cfhider.WordCount={main=[I@31aed88a}, invoker.SnowFlake={<init>=[I@75f38e3a, getNextMill=[I@6c8d0b00, getNewstmp=[I@5ecd1ba4}}
Coming...
doAnalysis Startingqqqqqqqq.....
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
[taint329]i invoke specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("datacenterId can\'t be greater than MAX_DATACENTER_NUM or less than 0")
[taint328]i invoke <java.lang.IllegalArgumentException: void <init>(java.lang.String)>
[taint328]i invoke 1
value:"datacenterId can\'t be greater than MAX_DATACENTER_NUM or less than 0"
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$r1 = new java.lang.IllegalArgumentException
currStmt left value20210420:$r1
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
[taint329]i invoke specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("machineId can\'t be greater than MAX_MACHINE_NUM or less than 0")
[taint328]i invoke <java.lang.IllegalArgumentException: void <init>(java.lang.String)>
[taint328]i invoke 1
value:"machineId can\'t be greater than MAX_MACHINE_NUM or less than 0"
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$r2 = new java.lang.IllegalArgumentException
currStmt left value20210420:$r2
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:<invoker.SnowFlake: long machineId> = 0L
currStmt left value20210420:<invoker.SnowFlake: long machineId>
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:<invoker.SnowFlake: long datacenterId> = 0L
currStmt left value20210420:<invoker.SnowFlake: long datacenterId>
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
Have
the value=$b5
the value=0
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$b5 = l1 cmp 0L
currStmt left value20210420:$b5
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
Have
the value=$b4
the value=0
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$b4 = l1 cmp 31L
currStmt left value20210420:$b4
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
Have
the value=$b3
the value=0
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$b3 = l0 cmp 0L
currStmt left value20210420:$b3
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
Have
the value=$b2
the value=0
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$b2 = l0 cmp 31L
currStmt left value20210420:$b2
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
[taint329]i invoke specialinvoke r0.<java.lang.Object: void <init>()>()
[taint328]i invoke <java.lang.Object: void <init>()>
[taint328]i invoke 0
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
doAnalysis endqqqqqqq.....
come here
[CFMAP]2021 After BackwardAnalysis:{cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}
[taint into] sootMethod: nextId
[]
class name :invoker.SnowFlake
method name :nextId
method list :[]
clasname=invoker.SnowFlake
methodname=nextId
sourcelist2021=[]
20210427node :l0 = staticinvoke <invoker.SnowFlake: long getNewstmp()>()
20210427node in :[]
调用语句赋值给变量:l0 = staticinvoke <invoker.SnowFlake: long getNewstmp()>()
Invokestmt:getNewstmp
20210427node out :[]
[taint328]a invoke <invoker.SnowFlake: long getNewstmp()>
[taint328]a invoke 0
[invokemap]invoke:getNewstmp  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
20210427node :$l1 = <invoker.SnowFlake: long lastStmp>
20210427node in :[]
普通复制语句1112:$l1 = <invoker.SnowFlake: long lastStmp>
[taint source] u:<invoker.SnowFlake: long lastStmp>
SourceList:[]
20210427node out :[]
20210427node :$b2 = l0 cmp $l1
20210427node in :[]
普通复制语句1112:$b2 = l0 cmp $l1
[taint source] u:l0
SourceList:[]
[taint source] u:$l1
SourceList:[]
[taint source] u:l0 cmp $l1
SourceList:[]
20210427node out :[]
20210427node :if $b2 >= 0 goto $l3 = <invoker.SnowFlake: long lastStmp>
20210427node in :[]
20210427node out :[]
Have
Stmt if :if $b2 >= 0 goto $l3 = <invoker.SnowFlake: long lastStmp>Stmt if value:$b2 >= 0the value=$b2
the value=0
maintainValues.size0
ifValues1
20210427node :$l3 = <invoker.SnowFlake: long lastStmp>
20210427node in :[]
普通复制语句1112:$l3 = <invoker.SnowFlake: long lastStmp>
[taint source] u:<invoker.SnowFlake: long lastStmp>
SourceList:[]
20210427node out :[]
20210427node :$b4 = l0 cmp $l3
20210427node in :[]
普通复制语句1112:$b4 = l0 cmp $l3
[taint source] u:l0
SourceList:[]
[taint source] u:$l3
SourceList:[]
[taint source] u:l0 cmp $l3
SourceList:[]
20210427node out :[]
20210427node :if $b4 != 0 goto <invoker.SnowFlake: long sequence> = 0L
20210427node in :[]
20210427node out :[]
Have
Stmt if :if $b4 != 0 goto <invoker.SnowFlake: long sequence> = 0LStmt if value:$b4 != 0the value=$b4
the value=0
maintainValues.size0
ifValues1
20210427node :<invoker.SnowFlake: long sequence> = 0L
20210427node in :[]
普通复制语句1112:<invoker.SnowFlake: long sequence> = 0L
[taint source] u:0L
SourceList:[]
20210427node out :[]
20210427node :$l5 = <invoker.SnowFlake: long sequence>
20210427node in :[]
普通复制语句1112:$l5 = <invoker.SnowFlake: long sequence>
[taint source] u:<invoker.SnowFlake: long sequence>
SourceList:[]
20210427node out :[]
20210427node :$l6 = $l5 + 1L
20210427node in :[]
普通复制语句1112:$l6 = $l5 + 1L
[taint source] u:$l5
SourceList:[]
[taint source] u:1L
SourceList:[]
[taint source] u:$l5 + 1L
SourceList:[]
20210427node out :[]
20210427node :$l7 = $l6 & 4095L
20210427node in :[]
普通复制语句1112:$l7 = $l6 & 4095L
[taint source] u:$l6
SourceList:[]
[taint source] u:4095L
SourceList:[]
[taint source] u:$l6 & 4095L
SourceList:[]
20210427node out :[]
20210427node :<invoker.SnowFlake: long sequence> = $l7
20210427node in :[]
普通复制语句1112:<invoker.SnowFlake: long sequence> = $l7
[taint source] u:$l7
SourceList:[]
20210427node out :[]
20210427node :$l8 = <invoker.SnowFlake: long sequence>
20210427node in :[]
普通复制语句1112:$l8 = <invoker.SnowFlake: long sequence>
[taint source] u:<invoker.SnowFlake: long sequence>
SourceList:[]
20210427node out :[]
20210427node :$b9 = $l8 cmp 0L
20210427node in :[]
普通复制语句1112:$b9 = $l8 cmp 0L
[taint source] u:$l8
SourceList:[]
[taint source] u:0L
SourceList:[]
[taint source] u:$l8 cmp 0L
SourceList:[]
20210427node out :[]
20210427node :if $b9 != 0 goto <invoker.SnowFlake: long lastStmp> = l0
20210427node in :[]
20210427node out :[]
Have
Stmt if :if $b9 != 0 goto <invoker.SnowFlake: long lastStmp> = l0Stmt if value:$b9 != 0the value=$b9
the value=0
maintainValues.size0
ifValues1
20210427node :l0 = staticinvoke <invoker.SnowFlake: long getNextMill()>()
20210427node in :[]
调用语句赋值给变量:l0 = staticinvoke <invoker.SnowFlake: long getNextMill()>()
Invokestmt:getNextMill
20210427node out :[]
[taint328]a invoke <invoker.SnowFlake: long getNextMill()>
[taint328]a invoke 0
[invokemap]invoke:getNextMill  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
20210427node :goto [?= <invoker.SnowFlake: long lastStmp> = l0]
20210427node in :[]
20210427node out :[]
20210427node :<invoker.SnowFlake: long lastStmp> = l0
20210427node in :[]
普通复制语句1112:<invoker.SnowFlake: long lastStmp> = l0
[taint source] u:l0
SourceList:[]
20210427node out :[]
20210427node :$l10 = l0 - 1480166465631L
20210427node in :[]
普通复制语句1112:$l10 = l0 - 1480166465631L
[taint source] u:l0
SourceList:[]
[taint source] u:1480166465631L
SourceList:[]
[taint source] u:l0 - 1480166465631L
SourceList:[]
20210427node out :[]
20210427node :$l11 = $l10 << 22
20210427node in :[]
普通复制语句1112:$l11 = $l10 << 22
[taint source] u:$l10
SourceList:[]
[taint source] u:22
SourceList:[]
[taint source] u:$l10 << 22
SourceList:[]
20210427node out :[]
20210427node :$l12 = <invoker.SnowFlake: long datacenterId>
20210427node in :[]
普通复制语句1112:$l12 = <invoker.SnowFlake: long datacenterId>
[taint source] u:<invoker.SnowFlake: long datacenterId>
SourceList:[]
20210427node out :[]
20210427node :$l13 = $l12 << 17
20210427node in :[]
普通复制语句1112:$l13 = $l12 << 17
[taint source] u:$l12
SourceList:[]
[taint source] u:17
SourceList:[]
[taint source] u:$l12 << 17
SourceList:[]
20210427node out :[]
20210427node :$l14 = $l11 | $l13
20210427node in :[]
普通复制语句1112:$l14 = $l11 | $l13
[taint source] u:$l11
SourceList:[]
[taint source] u:$l13
SourceList:[]
[taint source] u:$l11 | $l13
SourceList:[]
20210427node out :[]
20210427node :$l15 = <invoker.SnowFlake: long machineId>
20210427node in :[]
普通复制语句1112:$l15 = <invoker.SnowFlake: long machineId>
[taint source] u:<invoker.SnowFlake: long machineId>
SourceList:[]
20210427node out :[]
20210427node :$l16 = $l15 << 12
20210427node in :[]
普通复制语句1112:$l16 = $l15 << 12
[taint source] u:$l15
SourceList:[]
[taint source] u:12
SourceList:[]
[taint source] u:$l15 << 12
SourceList:[]
20210427node out :[]
20210427node :$l17 = $l14 | $l16
20210427node in :[]
普通复制语句1112:$l17 = $l14 | $l16
[taint source] u:$l14
SourceList:[]
[taint source] u:$l16
SourceList:[]
[taint source] u:$l14 | $l16
SourceList:[]
20210427node out :[]
20210427node :$l18 = <invoker.SnowFlake: long sequence>
20210427node in :[]
普通复制语句1112:$l18 = <invoker.SnowFlake: long sequence>
[taint source] u:<invoker.SnowFlake: long sequence>
SourceList:[]
20210427node out :[]
20210427node :$l19 = $l17 | $l18
20210427node in :[]
普通复制语句1112:$l19 = $l17 | $l18
[taint source] u:$l17
SourceList:[]
[taint source] u:$l18
SourceList:[]
[taint source] u:$l17 | $l18
SourceList:[]
20210427node out :[]
20210427node :return $l19
20210427node in :[]
20210427node out :[]
20210427node :$r0 = new java.lang.RuntimeException
20210427node in :[]
普通复制语句1112:$r0 = new java.lang.RuntimeException
[taint source] u:new java.lang.RuntimeException
SourceList:[]
20210427node out :[]
20210427node :specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Clock moved backwards.  Refusing to generate id")
20210427node in :[]
20210427node out :[]
[taint329]i invoke specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Clock moved backwards.  Refusing to generate id")
[taint328]i invoke <java.lang.RuntimeException: void <init>(java.lang.String)>
[taint328]i invoke 1
value:"Clock moved backwards.  Refusing to generate id"
isoutSetContains  false value:"Clock moved backwards.  Refusing to generate id" index:0
20210427node :throw $r0
20210427node in :[]
20210427node out :[]
analysis.outSet.size():0
[CFMAP]2021 After taintAnalysis:{cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}
The data isgggg 
<invoker.SnowFlake: long nextId()>
The data isgggg invoker.SnowFlake nextId [] {cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}  {cfhider.WordCount$IntSumReducer={reduce=[I@1112aeb9}, cfhider.WordCount$TokenizerMapper={map=[I@4b59c01c}, cfhider.WordCount={main=[I@31aed88a}, invoker.SnowFlake={<init>=[I@75f38e3a, getNextMill=[I@48febe55, getNewstmp=[I@4c81e3e3}}
Coming...
doAnalysis Startingqqqqqqqq.....
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
[taint329]i invoke specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Clock moved backwards.  Refusing to generate id")
[taint328]i invoke <java.lang.RuntimeException: void <init>(java.lang.String)>
[taint328]i invoke 1
value:"Clock moved backwards.  Refusing to generate id"
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$r0 = new java.lang.RuntimeException
currStmt left value20210420:$r0
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$l19 = $l17 | $l18
currStmt left value20210420:$l19
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$l18 = <invoker.SnowFlake: long sequence>
currStmt left value20210420:$l18
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$l17 = $l14 | $l16
currStmt left value20210420:$l17
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$l16 = $l15 << 12
currStmt left value20210420:$l16
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$l15 = <invoker.SnowFlake: long machineId>
currStmt left value20210420:$l15
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$l14 = $l11 | $l13
currStmt left value20210420:$l14
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$l13 = $l12 << 17
currStmt left value20210420:$l13
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$l12 = <invoker.SnowFlake: long datacenterId>
currStmt left value20210420:$l12
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$l11 = $l10 << 22
currStmt left value20210420:$l11
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$l10 = l0 - 1480166465631L
currStmt left value20210420:$l10
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:<invoker.SnowFlake: long lastStmp> = l0
currStmt left value20210420:<invoker.SnowFlake: long lastStmp>
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:l0 = staticinvoke <invoker.SnowFlake: long getNextMill()>()
currStmt left value20210420:l0
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
Have
the value=$b9
the value=0
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$b9 = $l8 cmp 0L
currStmt left value20210420:$b9
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$l8 = <invoker.SnowFlake: long sequence>
currStmt left value20210420:$l8
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:<invoker.SnowFlake: long sequence> = $l7
currStmt left value20210420:<invoker.SnowFlake: long sequence>
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$l7 = $l6 & 4095L
currStmt left value20210420:$l7
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$l6 = $l5 + 1L
currStmt left value20210420:$l6
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$l5 = <invoker.SnowFlake: long sequence>
currStmt left value20210420:$l5
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:<invoker.SnowFlake: long sequence> = 0L
currStmt left value20210420:<invoker.SnowFlake: long sequence>
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
Have
the value=$b4
the value=0
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$b4 = l0 cmp $l3
currStmt left value20210420:$b4
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$l3 = <invoker.SnowFlake: long lastStmp>
currStmt left value20210420:$l3
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
Have
the value=$b2
the value=0
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$b2 = l0 cmp $l1
currStmt left value20210420:$b2
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$l1 = <invoker.SnowFlake: long lastStmp>
currStmt left value20210420:$l1
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:l0 = staticinvoke <invoker.SnowFlake: long getNewstmp()>()
currStmt left value20210420:l0
doAnalysis endqqqqqqq.....
come here
[CFMAP]2021 After BackwardAnalysis:{cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}
[taint into] sootMethod: getNextMill
[]
class name :invoker.SnowFlake
method name :getNextMill
method list :[]
clasname=invoker.SnowFlake
methodname=getNextMill
sourcelist2021=[]
20210427node :l0 = staticinvoke <invoker.SnowFlake: long getNewstmp()>()
20210427node in :[]
调用语句赋值给变量:l0 = staticinvoke <invoker.SnowFlake: long getNewstmp()>()
Invokestmt:getNewstmp
20210427node out :[]
[taint328]a invoke <invoker.SnowFlake: long getNewstmp()>
[taint328]a invoke 0
[invokemap]invoke:getNewstmp  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
20210427node :$l1 = <invoker.SnowFlake: long lastStmp>
20210427node in :[]
普通复制语句1112:$l1 = <invoker.SnowFlake: long lastStmp>
[taint source] u:<invoker.SnowFlake: long lastStmp>
SourceList:[]
20210427node out :[]
20210427node :$b2 = l0 cmp $l1
20210427node in :[]
普通复制语句1112:$b2 = l0 cmp $l1
[taint source] u:l0
SourceList:[]
[taint source] u:$l1
SourceList:[]
[taint source] u:l0 cmp $l1
SourceList:[]
20210427node out :[]
20210427node :if $b2 > 0 goto return l0
20210427node in :[]
20210427node out :[]
Have
Stmt if :if $b2 > 0 goto return l0Stmt if value:$b2 > 0the value=$b2
the value=0
maintainValues.size0
ifValues1
20210427node :return l0
20210427node in :[]
20210427node out :[]
20210427node :l0 = staticinvoke <invoker.SnowFlake: long getNewstmp()>()
20210427node in :[]
调用语句赋值给变量:l0 = staticinvoke <invoker.SnowFlake: long getNewstmp()>()
Invokestmt:getNewstmp
20210427node out :[]
[taint328]a invoke <invoker.SnowFlake: long getNewstmp()>
[taint328]a invoke 0
[invokemap]invoke:getNewstmp  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
20210427node :goto [?= $l1 = <invoker.SnowFlake: long lastStmp>]
20210427node in :[]
20210427node out :[]
analysis.outSet.size():0
[CFMAP]2021 After taintAnalysis:{cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}
The data isgggg 
<invoker.SnowFlake: long getNextMill()>
The data isgggg invoker.SnowFlake getNextMill [] {cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}  {cfhider.WordCount$IntSumReducer={reduce=[I@1112aeb9}, cfhider.WordCount$TokenizerMapper={map=[I@4b59c01c}, cfhider.WordCount={main=[I@31aed88a}, invoker.SnowFlake={<init>=[I@75f38e3a, getNextMill=[I@48febe55, getNewstmp=[I@63987352}}
Coming...
doAnalysis Startingqqqqqqqq.....
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:l0 = staticinvoke <invoker.SnowFlake: long getNewstmp()>()
currStmt left value20210420:l0
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
Have
the value=$b2
the value=0
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$b2 = l0 cmp $l1
currStmt left value20210420:$b2
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$l1 = <invoker.SnowFlake: long lastStmp>
currStmt left value20210420:$l1
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:l0 = staticinvoke <invoker.SnowFlake: long getNewstmp()>()
currStmt left value20210420:l0
doAnalysis endqqqqqqq.....
come here
[CFMAP]2021 After BackwardAnalysis:{cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}
[taint into] sootMethod: getNewstmp
[]
class name :invoker.SnowFlake
method name :getNewstmp
method list :[]
clasname=invoker.SnowFlake
methodname=getNewstmp
sourcelist2021=[]
20210427node :$l0 = staticinvoke <java.lang.System: long currentTimeMillis()>()
20210427node in :[]
调用语句赋值给变量:$l0 = staticinvoke <java.lang.System: long currentTimeMillis()>()
20210427node out :[]
[taint328]a invoke <java.lang.System: long currentTimeMillis()>
[taint328]a invoke 0
20210427node :return $l0
20210427node in :[]
20210427node out :[]
analysis.outSet.size():0
[CFMAP]2021 After taintAnalysis:{cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}
The data isgggg 
<invoker.SnowFlake: long getNewstmp()>
The data isgggg invoker.SnowFlake getNewstmp [] {cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}  {cfhider.WordCount$IntSumReducer={reduce=[I@1112aeb9}, cfhider.WordCount$TokenizerMapper={map=[I@4b59c01c}, cfhider.WordCount={main=[I@31aed88a}, invoker.SnowFlake={<init>=[I@75f38e3a, getNextMill=[I@48febe55, getNewstmp=[I@63987352}}
Coming...
doAnalysis Startingqqqqqqqq.....
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$l0 = staticinvoke <java.lang.System: long currentTimeMillis()>()
currStmt left value20210420:$l0
doAnalysis endqqqqqqq.....
come here
[CFMAP]2021 After BackwardAnalysis:{cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}
[taint into] sootMethod: <clinit>
[]
class name :invoker.SnowFlake
method name :<clinit>
method list :[]
clasname=invoker.SnowFlake
methodname=<clinit>
sourcelist2021=[]
20210427node :<invoker.SnowFlake: long sequence> = 0L
20210427node in :[]
普通复制语句1112:<invoker.SnowFlake: long sequence> = 0L
[taint source] u:0L
SourceList:[]
20210427node out :[]
20210427node :<invoker.SnowFlake: long lastStmp> = -1L
20210427node in :[]
普通复制语句1112:<invoker.SnowFlake: long lastStmp> = -1L
[taint source] u:-1L
SourceList:[]
20210427node out :[]
20210427node :return
20210427node in :[]
20210427node out :[]
analysis.outSet.size():0
[CFMAP]2021 After taintAnalysis:{cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}
The data isgggg 
<invoker.SnowFlake: void <clinit>()>
The data isgggg invoker.SnowFlake <clinit> [] {cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}  {cfhider.WordCount$IntSumReducer={reduce=[I@1112aeb9}, cfhider.WordCount$TokenizerMapper={map=[I@4b59c01c}, cfhider.WordCount={main=[I@31aed88a}, invoker.SnowFlake={<init>=[I@75f38e3a, getNextMill=[I@48febe55, getNewstmp=[I@63987352}}
Coming...
doAnalysis Startingqqqqqqqq.....
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:<invoker.SnowFlake: long lastStmp> = -1L
currStmt left value20210420:<invoker.SnowFlake: long lastStmp>
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:<invoker.SnowFlake: long sequence> = 0L
currStmt left value20210420:<invoker.SnowFlake: long sequence>
doAnalysis endqqqqqqq.....
come here
[CFMAP]2021 After BackwardAnalysis:{cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}
[taint into] sootMethod: <init>
[]
class name :invoker.SnowFlake
method name :<init>
method list :[]
clasname=invoker.SnowFlake
methodname=<init>
sourcelist2021=[]
20210427node :r0 := @this: invoker.SnowFlake
20210427node in :[]
20210427node out :[]
currStmt20210423:r0 := @this: invoker.SnowFlake
20210427node :l0 := @parameter0: long
20210427node in :[]
[idStmt]iiiiiii l0 := @parameter0: long  index:0
ClassName:invoker.SnowFlake
MethodName:<init>
aaaa:0
20210427node out :[]
currStmt20210423:l0 := @parameter0: long
20210427node :l1 := @parameter1: long
20210427node in :[]
[idStmt]iiiiiii l1 := @parameter1: long  index:1
ClassName:invoker.SnowFlake
MethodName:<init>
aaaa:0
20210427node out :[]
currStmt20210423:l1 := @parameter1: long
20210427node :specialinvoke r0.<java.lang.Object: void <init>()>()
20210427node in :[]
20210427node out :[]
[taint329]i invoke specialinvoke r0.<java.lang.Object: void <init>()>()
[taint328]i invoke <java.lang.Object: void <init>()>
[taint328]i invoke 0
20210427node :$b2 = l0 cmp 31L
20210427node in :[]
普通复制语句1112:$b2 = l0 cmp 31L
[taint source] u:l0
SourceList:[]
[taint source] u:31L
SourceList:[]
[taint source] u:l0 cmp 31L
SourceList:[]
20210427node out :[]
20210427node :if $b2 > 0 goto $r1 = new java.lang.IllegalArgumentException
20210427node in :[]
20210427node out :[]
Have
Stmt if :if $b2 > 0 goto $r1 = new java.lang.IllegalArgumentExceptionStmt if value:$b2 > 0the value=$b2
the value=0
maintainValues.size0
ifValues1
20210427node :$b3 = l0 cmp 0L
20210427node in :[]
普通复制语句1112:$b3 = l0 cmp 0L
[taint source] u:l0
SourceList:[]
[taint source] u:0L
SourceList:[]
[taint source] u:l0 cmp 0L
SourceList:[]
20210427node out :[]
20210427node :if $b3 >= 0 goto $b4 = l1 cmp 31L
20210427node in :[]
20210427node out :[]
Have
Stmt if :if $b3 >= 0 goto $b4 = l1 cmp 31LStmt if value:$b3 >= 0the value=$b3
the value=0
maintainValues.size0
ifValues1
20210427node :$b4 = l1 cmp 31L
20210427node in :[]
普通复制语句1112:$b4 = l1 cmp 31L
[taint source] u:l1
SourceList:[]
[taint source] u:31L
SourceList:[]
[taint source] u:l1 cmp 31L
SourceList:[]
20210427node out :[]
20210427node :if $b4 > 0 goto $r2 = new java.lang.IllegalArgumentException
20210427node in :[]
20210427node out :[]
Have
Stmt if :if $b4 > 0 goto $r2 = new java.lang.IllegalArgumentExceptionStmt if value:$b4 > 0the value=$b4
the value=0
maintainValues.size0
ifValues1
20210427node :$b5 = l1 cmp 0L
20210427node in :[]
普通复制语句1112:$b5 = l1 cmp 0L
[taint source] u:l1
SourceList:[]
[taint source] u:0L
SourceList:[]
[taint source] u:l1 cmp 0L
SourceList:[]
20210427node out :[]
20210427node :if $b5 >= 0 goto <invoker.SnowFlake: long datacenterId> = 0L
20210427node in :[]
20210427node out :[]
Have
Stmt if :if $b5 >= 0 goto <invoker.SnowFlake: long datacenterId> = 0LStmt if value:$b5 >= 0the value=$b5
the value=0
maintainValues.size0
ifValues1
20210427node :<invoker.SnowFlake: long datacenterId> = 0L
20210427node in :[]
普通复制语句1112:<invoker.SnowFlake: long datacenterId> = 0L
[taint source] u:0L
SourceList:[]
20210427node out :[]
20210427node :<invoker.SnowFlake: long machineId> = 0L
20210427node in :[]
普通复制语句1112:<invoker.SnowFlake: long machineId> = 0L
[taint source] u:0L
SourceList:[]
20210427node out :[]
20210427node :return
20210427node in :[]
20210427node out :[]
20210427node :$r2 = new java.lang.IllegalArgumentException
20210427node in :[]
普通复制语句1112:$r2 = new java.lang.IllegalArgumentException
[taint source] u:new java.lang.IllegalArgumentException
SourceList:[]
20210427node out :[]
20210427node :specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("machineId can\'t be greater than MAX_MACHINE_NUM or less than 0")
20210427node in :[]
20210427node out :[]
[taint329]i invoke specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("machineId can\'t be greater than MAX_MACHINE_NUM or less than 0")
[taint328]i invoke <java.lang.IllegalArgumentException: void <init>(java.lang.String)>
[taint328]i invoke 1
value:"machineId can\'t be greater than MAX_MACHINE_NUM or less than 0"
isoutSetContains  false value:"machineId can\'t be greater than MAX_MACHINE_NUM or less than 0" index:0
20210427node :throw $r2
20210427node in :[]
20210427node out :[]
20210427node :$r1 = new java.lang.IllegalArgumentException
20210427node in :[]
普通复制语句1112:$r1 = new java.lang.IllegalArgumentException
[taint source] u:new java.lang.IllegalArgumentException
SourceList:[]
20210427node out :[]
20210427node :specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("datacenterId can\'t be greater than MAX_DATACENTER_NUM or less than 0")
20210427node in :[]
20210427node out :[]
[taint329]i invoke specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("datacenterId can\'t be greater than MAX_DATACENTER_NUM or less than 0")
[taint328]i invoke <java.lang.IllegalArgumentException: void <init>(java.lang.String)>
[taint328]i invoke 1
value:"datacenterId can\'t be greater than MAX_DATACENTER_NUM or less than 0"
isoutSetContains  false value:"datacenterId can\'t be greater than MAX_DATACENTER_NUM or less than 0" index:0
20210427node :throw $r1
20210427node in :[]
20210427node out :[]
analysis.outSet.size():0
[CFMAP]2021 After taintAnalysis:{cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}
The data isgggg 
<invoker.SnowFlake: void <init>(long,long)>
The data isgggg invoker.SnowFlake <init> [] {cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}  {cfhider.WordCount$IntSumReducer={reduce=[I@1112aeb9}, cfhider.WordCount$TokenizerMapper={map=[I@4b59c01c}, cfhider.WordCount={main=[I@31aed88a}, invoker.SnowFlake={<init>=[I@2dbb3f93, getNextMill=[I@48febe55, getNewstmp=[I@63987352}}
Coming...
doAnalysis Startingqqqqqqqq.....
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
[taint329]i invoke specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("datacenterId can\'t be greater than MAX_DATACENTER_NUM or less than 0")
[taint328]i invoke <java.lang.IllegalArgumentException: void <init>(java.lang.String)>
[taint328]i invoke 1
value:"datacenterId can\'t be greater than MAX_DATACENTER_NUM or less than 0"
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$r1 = new java.lang.IllegalArgumentException
currStmt left value20210420:$r1
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
[taint329]i invoke specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("machineId can\'t be greater than MAX_MACHINE_NUM or less than 0")
[taint328]i invoke <java.lang.IllegalArgumentException: void <init>(java.lang.String)>
[taint328]i invoke 1
value:"machineId can\'t be greater than MAX_MACHINE_NUM or less than 0"
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$r2 = new java.lang.IllegalArgumentException
currStmt left value20210420:$r2
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:<invoker.SnowFlake: long machineId> = 0L
currStmt left value20210420:<invoker.SnowFlake: long machineId>
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:<invoker.SnowFlake: long datacenterId> = 0L
currStmt left value20210420:<invoker.SnowFlake: long datacenterId>
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
Have
the value=$b5
the value=0
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$b5 = l1 cmp 0L
currStmt left value20210420:$b5
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
Have
the value=$b4
the value=0
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$b4 = l1 cmp 31L
currStmt left value20210420:$b4
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
Have
the value=$b3
the value=0
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$b3 = l0 cmp 0L
currStmt left value20210420:$b3
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
Have
the value=$b2
the value=0
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$b2 = l0 cmp 31L
currStmt left value20210420:$b2
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
[taint329]i invoke specialinvoke r0.<java.lang.Object: void <init>()>()
[taint328]i invoke <java.lang.Object: void <init>()>
[taint328]i invoke 0
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
doAnalysis endqqqqqqq.....
come here
[CFMAP]2021 After BackwardAnalysis:{cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}
[taint into] sootMethod: nextId
[]
class name :invoker.SnowFlake
method name :nextId
method list :[]
clasname=invoker.SnowFlake
methodname=nextId
sourcelist2021=[]
20210427node :l0 = staticinvoke <invoker.SnowFlake: long getNewstmp()>()
20210427node in :[]
调用语句赋值给变量:l0 = staticinvoke <invoker.SnowFlake: long getNewstmp()>()
Invokestmt:getNewstmp
20210427node out :[]
[taint328]a invoke <invoker.SnowFlake: long getNewstmp()>
[taint328]a invoke 0
[invokemap]invoke:getNewstmp  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
20210427node :$l1 = <invoker.SnowFlake: long lastStmp>
20210427node in :[]
普通复制语句1112:$l1 = <invoker.SnowFlake: long lastStmp>
[taint source] u:<invoker.SnowFlake: long lastStmp>
SourceList:[]
20210427node out :[]
20210427node :$b2 = l0 cmp $l1
20210427node in :[]
普通复制语句1112:$b2 = l0 cmp $l1
[taint source] u:l0
SourceList:[]
[taint source] u:$l1
SourceList:[]
[taint source] u:l0 cmp $l1
SourceList:[]
20210427node out :[]
20210427node :if $b2 >= 0 goto $l3 = <invoker.SnowFlake: long lastStmp>
20210427node in :[]
20210427node out :[]
Have
Stmt if :if $b2 >= 0 goto $l3 = <invoker.SnowFlake: long lastStmp>Stmt if value:$b2 >= 0the value=$b2
the value=0
maintainValues.size0
ifValues1
20210427node :$l3 = <invoker.SnowFlake: long lastStmp>
20210427node in :[]
普通复制语句1112:$l3 = <invoker.SnowFlake: long lastStmp>
[taint source] u:<invoker.SnowFlake: long lastStmp>
SourceList:[]
20210427node out :[]
20210427node :$b4 = l0 cmp $l3
20210427node in :[]
普通复制语句1112:$b4 = l0 cmp $l3
[taint source] u:l0
SourceList:[]
[taint source] u:$l3
SourceList:[]
[taint source] u:l0 cmp $l3
SourceList:[]
20210427node out :[]
20210427node :if $b4 != 0 goto <invoker.SnowFlake: long sequence> = 0L
20210427node in :[]
20210427node out :[]
Have
Stmt if :if $b4 != 0 goto <invoker.SnowFlake: long sequence> = 0LStmt if value:$b4 != 0the value=$b4
the value=0
maintainValues.size0
ifValues1
20210427node :<invoker.SnowFlake: long sequence> = 0L
20210427node in :[]
普通复制语句1112:<invoker.SnowFlake: long sequence> = 0L
[taint source] u:0L
SourceList:[]
20210427node out :[]
20210427node :$l5 = <invoker.SnowFlake: long sequence>
20210427node in :[]
普通复制语句1112:$l5 = <invoker.SnowFlake: long sequence>
[taint source] u:<invoker.SnowFlake: long sequence>
SourceList:[]
20210427node out :[]
20210427node :$l6 = $l5 + 1L
20210427node in :[]
普通复制语句1112:$l6 = $l5 + 1L
[taint source] u:$l5
SourceList:[]
[taint source] u:1L
SourceList:[]
[taint source] u:$l5 + 1L
SourceList:[]
20210427node out :[]
20210427node :$l7 = $l6 & 4095L
20210427node in :[]
普通复制语句1112:$l7 = $l6 & 4095L
[taint source] u:$l6
SourceList:[]
[taint source] u:4095L
SourceList:[]
[taint source] u:$l6 & 4095L
SourceList:[]
20210427node out :[]
20210427node :<invoker.SnowFlake: long sequence> = $l7
20210427node in :[]
普通复制语句1112:<invoker.SnowFlake: long sequence> = $l7
[taint source] u:$l7
SourceList:[]
20210427node out :[]
20210427node :$l8 = <invoker.SnowFlake: long sequence>
20210427node in :[]
普通复制语句1112:$l8 = <invoker.SnowFlake: long sequence>
[taint source] u:<invoker.SnowFlake: long sequence>
SourceList:[]
20210427node out :[]
20210427node :$b9 = $l8 cmp 0L
20210427node in :[]
普通复制语句1112:$b9 = $l8 cmp 0L
[taint source] u:$l8
SourceList:[]
[taint source] u:0L
SourceList:[]
[taint source] u:$l8 cmp 0L
SourceList:[]
20210427node out :[]
20210427node :if $b9 != 0 goto <invoker.SnowFlake: long lastStmp> = l0
20210427node in :[]
20210427node out :[]
Have
Stmt if :if $b9 != 0 goto <invoker.SnowFlake: long lastStmp> = l0Stmt if value:$b9 != 0the value=$b9
the value=0
maintainValues.size0
ifValues1
20210427node :l0 = staticinvoke <invoker.SnowFlake: long getNextMill()>()
20210427node in :[]
调用语句赋值给变量:l0 = staticinvoke <invoker.SnowFlake: long getNextMill()>()
Invokestmt:getNextMill
20210427node out :[]
[taint328]a invoke <invoker.SnowFlake: long getNextMill()>
[taint328]a invoke 0
[invokemap]invoke:getNextMill  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
20210427node :goto [?= <invoker.SnowFlake: long lastStmp> = l0]
20210427node in :[]
20210427node out :[]
20210427node :<invoker.SnowFlake: long lastStmp> = l0
20210427node in :[]
普通复制语句1112:<invoker.SnowFlake: long lastStmp> = l0
[taint source] u:l0
SourceList:[]
20210427node out :[]
20210427node :$l10 = l0 - 1480166465631L
20210427node in :[]
普通复制语句1112:$l10 = l0 - 1480166465631L
[taint source] u:l0
SourceList:[]
[taint source] u:1480166465631L
SourceList:[]
[taint source] u:l0 - 1480166465631L
SourceList:[]
20210427node out :[]
20210427node :$l11 = $l10 << 22
20210427node in :[]
普通复制语句1112:$l11 = $l10 << 22
[taint source] u:$l10
SourceList:[]
[taint source] u:22
SourceList:[]
[taint source] u:$l10 << 22
SourceList:[]
20210427node out :[]
20210427node :$l12 = <invoker.SnowFlake: long datacenterId>
20210427node in :[]
普通复制语句1112:$l12 = <invoker.SnowFlake: long datacenterId>
[taint source] u:<invoker.SnowFlake: long datacenterId>
SourceList:[]
20210427node out :[]
20210427node :$l13 = $l12 << 17
20210427node in :[]
普通复制语句1112:$l13 = $l12 << 17
[taint source] u:$l12
SourceList:[]
[taint source] u:17
SourceList:[]
[taint source] u:$l12 << 17
SourceList:[]
20210427node out :[]
20210427node :$l14 = $l11 | $l13
20210427node in :[]
普通复制语句1112:$l14 = $l11 | $l13
[taint source] u:$l11
SourceList:[]
[taint source] u:$l13
SourceList:[]
[taint source] u:$l11 | $l13
SourceList:[]
20210427node out :[]
20210427node :$l15 = <invoker.SnowFlake: long machineId>
20210427node in :[]
普通复制语句1112:$l15 = <invoker.SnowFlake: long machineId>
[taint source] u:<invoker.SnowFlake: long machineId>
SourceList:[]
20210427node out :[]
20210427node :$l16 = $l15 << 12
20210427node in :[]
普通复制语句1112:$l16 = $l15 << 12
[taint source] u:$l15
SourceList:[]
[taint source] u:12
SourceList:[]
[taint source] u:$l15 << 12
SourceList:[]
20210427node out :[]
20210427node :$l17 = $l14 | $l16
20210427node in :[]
普通复制语句1112:$l17 = $l14 | $l16
[taint source] u:$l14
SourceList:[]
[taint source] u:$l16
SourceList:[]
[taint source] u:$l14 | $l16
SourceList:[]
20210427node out :[]
20210427node :$l18 = <invoker.SnowFlake: long sequence>
20210427node in :[]
普通复制语句1112:$l18 = <invoker.SnowFlake: long sequence>
[taint source] u:<invoker.SnowFlake: long sequence>
SourceList:[]
20210427node out :[]
20210427node :$l19 = $l17 | $l18
20210427node in :[]
普通复制语句1112:$l19 = $l17 | $l18
[taint source] u:$l17
SourceList:[]
[taint source] u:$l18
SourceList:[]
[taint source] u:$l17 | $l18
SourceList:[]
20210427node out :[]
20210427node :return $l19
20210427node in :[]
20210427node out :[]
20210427node :$r0 = new java.lang.RuntimeException
20210427node in :[]
普通复制语句1112:$r0 = new java.lang.RuntimeException
[taint source] u:new java.lang.RuntimeException
SourceList:[]
20210427node out :[]
20210427node :specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Clock moved backwards.  Refusing to generate id")
20210427node in :[]
20210427node out :[]
[taint329]i invoke specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Clock moved backwards.  Refusing to generate id")
[taint328]i invoke <java.lang.RuntimeException: void <init>(java.lang.String)>
[taint328]i invoke 1
value:"Clock moved backwards.  Refusing to generate id"
isoutSetContains  false value:"Clock moved backwards.  Refusing to generate id" index:0
20210427node :throw $r0
20210427node in :[]
20210427node out :[]
analysis.outSet.size():0
[CFMAP]2021 After taintAnalysis:{cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}
The data isgggg 
<invoker.SnowFlake: long nextId()>
The data isgggg invoker.SnowFlake nextId [] {cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}  {cfhider.WordCount$IntSumReducer={reduce=[I@1112aeb9}, cfhider.WordCount$TokenizerMapper={map=[I@4b59c01c}, cfhider.WordCount={main=[I@31aed88a}, invoker.SnowFlake={<init>=[I@2dbb3f93, getNextMill=[I@604ae359, getNewstmp=[I@54941972}}
Coming...
doAnalysis Startingqqqqqqqq.....
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
[taint329]i invoke specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Clock moved backwards.  Refusing to generate id")
[taint328]i invoke <java.lang.RuntimeException: void <init>(java.lang.String)>
[taint328]i invoke 1
value:"Clock moved backwards.  Refusing to generate id"
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$r0 = new java.lang.RuntimeException
currStmt left value20210420:$r0
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$l19 = $l17 | $l18
currStmt left value20210420:$l19
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$l18 = <invoker.SnowFlake: long sequence>
currStmt left value20210420:$l18
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$l17 = $l14 | $l16
currStmt left value20210420:$l17
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$l16 = $l15 << 12
currStmt left value20210420:$l16
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$l15 = <invoker.SnowFlake: long machineId>
currStmt left value20210420:$l15
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$l14 = $l11 | $l13
currStmt left value20210420:$l14
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$l13 = $l12 << 17
currStmt left value20210420:$l13
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$l12 = <invoker.SnowFlake: long datacenterId>
currStmt left value20210420:$l12
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$l11 = $l10 << 22
currStmt left value20210420:$l11
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$l10 = l0 - 1480166465631L
currStmt left value20210420:$l10
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:<invoker.SnowFlake: long lastStmp> = l0
currStmt left value20210420:<invoker.SnowFlake: long lastStmp>
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:l0 = staticinvoke <invoker.SnowFlake: long getNextMill()>()
currStmt left value20210420:l0
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
Have
the value=$b9
the value=0
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$b9 = $l8 cmp 0L
currStmt left value20210420:$b9
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$l8 = <invoker.SnowFlake: long sequence>
currStmt left value20210420:$l8
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:<invoker.SnowFlake: long sequence> = $l7
currStmt left value20210420:<invoker.SnowFlake: long sequence>
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$l7 = $l6 & 4095L
currStmt left value20210420:$l7
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$l6 = $l5 + 1L
currStmt left value20210420:$l6
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$l5 = <invoker.SnowFlake: long sequence>
currStmt left value20210420:$l5
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:<invoker.SnowFlake: long sequence> = 0L
currStmt left value20210420:<invoker.SnowFlake: long sequence>
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
Have
the value=$b4
the value=0
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$b4 = l0 cmp $l3
currStmt left value20210420:$b4
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$l3 = <invoker.SnowFlake: long lastStmp>
currStmt left value20210420:$l3
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
Have
the value=$b2
the value=0
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$b2 = l0 cmp $l1
currStmt left value20210420:$b2
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$l1 = <invoker.SnowFlake: long lastStmp>
currStmt left value20210420:$l1
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:l0 = staticinvoke <invoker.SnowFlake: long getNewstmp()>()
currStmt left value20210420:l0
doAnalysis endqqqqqqq.....
come here
[CFMAP]2021 After BackwardAnalysis:{cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}
[taint into] sootMethod: getNextMill
[]
class name :invoker.SnowFlake
method name :getNextMill
method list :[]
clasname=invoker.SnowFlake
methodname=getNextMill
sourcelist2021=[]
20210427node :l0 = staticinvoke <invoker.SnowFlake: long getNewstmp()>()
20210427node in :[]
调用语句赋值给变量:l0 = staticinvoke <invoker.SnowFlake: long getNewstmp()>()
Invokestmt:getNewstmp
20210427node out :[]
[taint328]a invoke <invoker.SnowFlake: long getNewstmp()>
[taint328]a invoke 0
[invokemap]invoke:getNewstmp  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
20210427node :$l1 = <invoker.SnowFlake: long lastStmp>
20210427node in :[]
普通复制语句1112:$l1 = <invoker.SnowFlake: long lastStmp>
[taint source] u:<invoker.SnowFlake: long lastStmp>
SourceList:[]
20210427node out :[]
20210427node :$b2 = l0 cmp $l1
20210427node in :[]
普通复制语句1112:$b2 = l0 cmp $l1
[taint source] u:l0
SourceList:[]
[taint source] u:$l1
SourceList:[]
[taint source] u:l0 cmp $l1
SourceList:[]
20210427node out :[]
20210427node :if $b2 > 0 goto return l0
20210427node in :[]
20210427node out :[]
Have
Stmt if :if $b2 > 0 goto return l0Stmt if value:$b2 > 0the value=$b2
the value=0
maintainValues.size0
ifValues1
20210427node :return l0
20210427node in :[]
20210427node out :[]
20210427node :l0 = staticinvoke <invoker.SnowFlake: long getNewstmp()>()
20210427node in :[]
调用语句赋值给变量:l0 = staticinvoke <invoker.SnowFlake: long getNewstmp()>()
Invokestmt:getNewstmp
20210427node out :[]
[taint328]a invoke <invoker.SnowFlake: long getNewstmp()>
[taint328]a invoke 0
[invokemap]invoke:getNewstmp  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
20210427node :goto [?= $l1 = <invoker.SnowFlake: long lastStmp>]
20210427node in :[]
20210427node out :[]
analysis.outSet.size():0
[CFMAP]2021 After taintAnalysis:{cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}
The data isgggg 
<invoker.SnowFlake: long getNextMill()>
The data isgggg invoker.SnowFlake getNextMill [] {cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}  {cfhider.WordCount$IntSumReducer={reduce=[I@1112aeb9}, cfhider.WordCount$TokenizerMapper={map=[I@4b59c01c}, cfhider.WordCount={main=[I@31aed88a}, invoker.SnowFlake={<init>=[I@2dbb3f93, getNextMill=[I@604ae359, getNewstmp=[I@4712b6bf}}
Coming...
doAnalysis Startingqqqqqqqq.....
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:l0 = staticinvoke <invoker.SnowFlake: long getNewstmp()>()
currStmt left value20210420:l0
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
Have
the value=$b2
the value=0
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$b2 = l0 cmp $l1
currStmt left value20210420:$b2
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$l1 = <invoker.SnowFlake: long lastStmp>
currStmt left value20210420:$l1
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:l0 = staticinvoke <invoker.SnowFlake: long getNewstmp()>()
currStmt left value20210420:l0
doAnalysis endqqqqqqq.....
come here
[CFMAP]2021 After BackwardAnalysis:{cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}
[taint into] sootMethod: getNewstmp
[]
class name :invoker.SnowFlake
method name :getNewstmp
method list :[]
clasname=invoker.SnowFlake
methodname=getNewstmp
sourcelist2021=[]
20210427node :$l0 = staticinvoke <java.lang.System: long currentTimeMillis()>()
20210427node in :[]
调用语句赋值给变量:$l0 = staticinvoke <java.lang.System: long currentTimeMillis()>()
20210427node out :[]
[taint328]a invoke <java.lang.System: long currentTimeMillis()>
[taint328]a invoke 0
20210427node :return $l0
20210427node in :[]
20210427node out :[]
analysis.outSet.size():0
[CFMAP]2021 After taintAnalysis:{cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}
The data isgggg 
<invoker.SnowFlake: long getNewstmp()>
The data isgggg invoker.SnowFlake getNewstmp [] {cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}  {cfhider.WordCount$IntSumReducer={reduce=[I@1112aeb9}, cfhider.WordCount$TokenizerMapper={map=[I@4b59c01c}, cfhider.WordCount={main=[I@31aed88a}, invoker.SnowFlake={<init>=[I@2dbb3f93, getNextMill=[I@604ae359, getNewstmp=[I@4712b6bf}}
Coming...
doAnalysis Startingqqqqqqqq.....
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$l0 = staticinvoke <java.lang.System: long currentTimeMillis()>()
currStmt left value20210420:$l0
doAnalysis endqqqqqqq.....
come here
[CFMAP]2021 After BackwardAnalysis:{cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}
[taint into] sootMethod: <clinit>
[]
class name :invoker.SnowFlake
method name :<clinit>
method list :[]
clasname=invoker.SnowFlake
methodname=<clinit>
sourcelist2021=[]
20210427node :<invoker.SnowFlake: long sequence> = 0L
20210427node in :[]
普通复制语句1112:<invoker.SnowFlake: long sequence> = 0L
[taint source] u:0L
SourceList:[]
20210427node out :[]
20210427node :<invoker.SnowFlake: long lastStmp> = -1L
20210427node in :[]
普通复制语句1112:<invoker.SnowFlake: long lastStmp> = -1L
[taint source] u:-1L
SourceList:[]
20210427node out :[]
20210427node :return
20210427node in :[]
20210427node out :[]
analysis.outSet.size():0
[CFMAP]2021 After taintAnalysis:{cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}
The data isgggg 
<invoker.SnowFlake: void <clinit>()>
The data isgggg invoker.SnowFlake <clinit> [] {cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}  {cfhider.WordCount$IntSumReducer={reduce=[I@1112aeb9}, cfhider.WordCount$TokenizerMapper={map=[I@4b59c01c}, cfhider.WordCount={main=[I@31aed88a}, invoker.SnowFlake={<init>=[I@2dbb3f93, getNextMill=[I@604ae359, getNewstmp=[I@4712b6bf}}
Coming...
doAnalysis Startingqqqqqqqq.....
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:<invoker.SnowFlake: long lastStmp> = -1L
currStmt left value20210420:<invoker.SnowFlake: long lastStmp>
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:<invoker.SnowFlake: long sequence> = 0L
currStmt left value20210420:<invoker.SnowFlake: long sequence>
doAnalysis endqqqqqqq.....
come here
[CFMAP]2021 After BackwardAnalysis:{cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}
[taint into] sootMethod: <init>
[]
class name :invoker.SnowFlake
method name :<init>
method list :[]
clasname=invoker.SnowFlake
methodname=<init>
sourcelist2021=[]
20210427node :r0 := @this: invoker.SnowFlake
20210427node in :[]
20210427node out :[]
currStmt20210423:r0 := @this: invoker.SnowFlake
20210427node :l0 := @parameter0: long
20210427node in :[]
[idStmt]iiiiiii l0 := @parameter0: long  index:0
ClassName:invoker.SnowFlake
MethodName:<init>
aaaa:0
20210427node out :[]
currStmt20210423:l0 := @parameter0: long
20210427node :l1 := @parameter1: long
20210427node in :[]
[idStmt]iiiiiii l1 := @parameter1: long  index:1
ClassName:invoker.SnowFlake
MethodName:<init>
aaaa:0
20210427node out :[]
currStmt20210423:l1 := @parameter1: long
20210427node :specialinvoke r0.<java.lang.Object: void <init>()>()
20210427node in :[]
20210427node out :[]
[taint329]i invoke specialinvoke r0.<java.lang.Object: void <init>()>()
[taint328]i invoke <java.lang.Object: void <init>()>
[taint328]i invoke 0
20210427node :$b2 = l0 cmp 31L
20210427node in :[]
普通复制语句1112:$b2 = l0 cmp 31L
[taint source] u:l0
SourceList:[]
[taint source] u:31L
SourceList:[]
[taint source] u:l0 cmp 31L
SourceList:[]
20210427node out :[]
20210427node :if $b2 > 0 goto $r1 = new java.lang.IllegalArgumentException
20210427node in :[]
20210427node out :[]
Have
Stmt if :if $b2 > 0 goto $r1 = new java.lang.IllegalArgumentExceptionStmt if value:$b2 > 0the value=$b2
the value=0
maintainValues.size0
ifValues1
20210427node :$b3 = l0 cmp 0L
20210427node in :[]
普通复制语句1112:$b3 = l0 cmp 0L
[taint source] u:l0
SourceList:[]
[taint source] u:0L
SourceList:[]
[taint source] u:l0 cmp 0L
SourceList:[]
20210427node out :[]
20210427node :if $b3 >= 0 goto $b4 = l1 cmp 31L
20210427node in :[]
20210427node out :[]
Have
Stmt if :if $b3 >= 0 goto $b4 = l1 cmp 31LStmt if value:$b3 >= 0the value=$b3
the value=0
maintainValues.size0
ifValues1
20210427node :$b4 = l1 cmp 31L
20210427node in :[]
普通复制语句1112:$b4 = l1 cmp 31L
[taint source] u:l1
SourceList:[]
[taint source] u:31L
SourceList:[]
[taint source] u:l1 cmp 31L
SourceList:[]
20210427node out :[]
20210427node :if $b4 > 0 goto $r2 = new java.lang.IllegalArgumentException
20210427node in :[]
20210427node out :[]
Have
Stmt if :if $b4 > 0 goto $r2 = new java.lang.IllegalArgumentExceptionStmt if value:$b4 > 0the value=$b4
the value=0
maintainValues.size0
ifValues1
20210427node :$b5 = l1 cmp 0L
20210427node in :[]
普通复制语句1112:$b5 = l1 cmp 0L
[taint source] u:l1
SourceList:[]
[taint source] u:0L
SourceList:[]
[taint source] u:l1 cmp 0L
SourceList:[]
20210427node out :[]
20210427node :if $b5 >= 0 goto <invoker.SnowFlake: long datacenterId> = 0L
20210427node in :[]
20210427node out :[]
Have
Stmt if :if $b5 >= 0 goto <invoker.SnowFlake: long datacenterId> = 0LStmt if value:$b5 >= 0the value=$b5
the value=0
maintainValues.size0
ifValues1
20210427node :<invoker.SnowFlake: long datacenterId> = 0L
20210427node in :[]
普通复制语句1112:<invoker.SnowFlake: long datacenterId> = 0L
[taint source] u:0L
SourceList:[]
20210427node out :[]
20210427node :<invoker.SnowFlake: long machineId> = 0L
20210427node in :[]
普通复制语句1112:<invoker.SnowFlake: long machineId> = 0L
[taint source] u:0L
SourceList:[]
20210427node out :[]
20210427node :return
20210427node in :[]
20210427node out :[]
20210427node :$r2 = new java.lang.IllegalArgumentException
20210427node in :[]
普通复制语句1112:$r2 = new java.lang.IllegalArgumentException
[taint source] u:new java.lang.IllegalArgumentException
SourceList:[]
20210427node out :[]
20210427node :specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("machineId can\'t be greater than MAX_MACHINE_NUM or less than 0")
20210427node in :[]
20210427node out :[]
[taint329]i invoke specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("machineId can\'t be greater than MAX_MACHINE_NUM or less than 0")
[taint328]i invoke <java.lang.IllegalArgumentException: void <init>(java.lang.String)>
[taint328]i invoke 1
value:"machineId can\'t be greater than MAX_MACHINE_NUM or less than 0"
isoutSetContains  false value:"machineId can\'t be greater than MAX_MACHINE_NUM or less than 0" index:0
20210427node :throw $r2
20210427node in :[]
20210427node out :[]
20210427node :$r1 = new java.lang.IllegalArgumentException
20210427node in :[]
普通复制语句1112:$r1 = new java.lang.IllegalArgumentException
[taint source] u:new java.lang.IllegalArgumentException
SourceList:[]
20210427node out :[]
20210427node :specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("datacenterId can\'t be greater than MAX_DATACENTER_NUM or less than 0")
20210427node in :[]
20210427node out :[]
[taint329]i invoke specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("datacenterId can\'t be greater than MAX_DATACENTER_NUM or less than 0")
[taint328]i invoke <java.lang.IllegalArgumentException: void <init>(java.lang.String)>
[taint328]i invoke 1
value:"datacenterId can\'t be greater than MAX_DATACENTER_NUM or less than 0"
isoutSetContains  false value:"datacenterId can\'t be greater than MAX_DATACENTER_NUM or less than 0" index:0
20210427node :throw $r1
20210427node in :[]
20210427node out :[]
analysis.outSet.size():0
[CFMAP]2021 After taintAnalysis:{cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}
The data isgggg 
<invoker.SnowFlake: void <init>(long,long)>
The data isgggg invoker.SnowFlake <init> [] {cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}  {cfhider.WordCount$IntSumReducer={reduce=[I@1112aeb9}, cfhider.WordCount$TokenizerMapper={map=[I@4b59c01c}, cfhider.WordCount={main=[I@31aed88a}, invoker.SnowFlake={<init>=[I@1d9bda0d, getNextMill=[I@604ae359, getNewstmp=[I@4712b6bf}}
Coming...
doAnalysis Startingqqqqqqqq.....
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
[taint329]i invoke specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("datacenterId can\'t be greater than MAX_DATACENTER_NUM or less than 0")
[taint328]i invoke <java.lang.IllegalArgumentException: void <init>(java.lang.String)>
[taint328]i invoke 1
value:"datacenterId can\'t be greater than MAX_DATACENTER_NUM or less than 0"
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$r1 = new java.lang.IllegalArgumentException
currStmt left value20210420:$r1
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
[taint329]i invoke specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("machineId can\'t be greater than MAX_MACHINE_NUM or less than 0")
[taint328]i invoke <java.lang.IllegalArgumentException: void <init>(java.lang.String)>
[taint328]i invoke 1
value:"machineId can\'t be greater than MAX_MACHINE_NUM or less than 0"
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$r2 = new java.lang.IllegalArgumentException
currStmt left value20210420:$r2
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:<invoker.SnowFlake: long machineId> = 0L
currStmt left value20210420:<invoker.SnowFlake: long machineId>
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:<invoker.SnowFlake: long datacenterId> = 0L
currStmt left value20210420:<invoker.SnowFlake: long datacenterId>
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
Have
the value=$b5
the value=0
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$b5 = l1 cmp 0L
currStmt left value20210420:$b5
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
Have
the value=$b4
the value=0
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$b4 = l1 cmp 31L
currStmt left value20210420:$b4
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
Have
the value=$b3
the value=0
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$b3 = l0 cmp 0L
currStmt left value20210420:$b3
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
Have
the value=$b2
the value=0
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$b2 = l0 cmp 31L
currStmt left value20210420:$b2
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
[taint329]i invoke specialinvoke r0.<java.lang.Object: void <init>()>()
[taint328]i invoke <java.lang.Object: void <init>()>
[taint328]i invoke 0
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
doAnalysis endqqqqqqq.....
come here
[CFMAP]2021 After BackwardAnalysis:{cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}
[taint into] sootMethod: nextId
[]
class name :invoker.SnowFlake
method name :nextId
method list :[]
clasname=invoker.SnowFlake
methodname=nextId
sourcelist2021=[]
20210427node :l0 = staticinvoke <invoker.SnowFlake: long getNewstmp()>()
20210427node in :[]
调用语句赋值给变量:l0 = staticinvoke <invoker.SnowFlake: long getNewstmp()>()
Invokestmt:getNewstmp
20210427node out :[]
[taint328]a invoke <invoker.SnowFlake: long getNewstmp()>
[taint328]a invoke 0
[invokemap]invoke:getNewstmp  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
20210427node :$l1 = <invoker.SnowFlake: long lastStmp>
20210427node in :[]
普通复制语句1112:$l1 = <invoker.SnowFlake: long lastStmp>
[taint source] u:<invoker.SnowFlake: long lastStmp>
SourceList:[]
20210427node out :[]
20210427node :$b2 = l0 cmp $l1
20210427node in :[]
普通复制语句1112:$b2 = l0 cmp $l1
[taint source] u:l0
SourceList:[]
[taint source] u:$l1
SourceList:[]
[taint source] u:l0 cmp $l1
SourceList:[]
20210427node out :[]
20210427node :if $b2 >= 0 goto $l3 = <invoker.SnowFlake: long lastStmp>
20210427node in :[]
20210427node out :[]
Have
Stmt if :if $b2 >= 0 goto $l3 = <invoker.SnowFlake: long lastStmp>Stmt if value:$b2 >= 0the value=$b2
the value=0
maintainValues.size0
ifValues1
20210427node :$l3 = <invoker.SnowFlake: long lastStmp>
20210427node in :[]
普通复制语句1112:$l3 = <invoker.SnowFlake: long lastStmp>
[taint source] u:<invoker.SnowFlake: long lastStmp>
SourceList:[]
20210427node out :[]
20210427node :$b4 = l0 cmp $l3
20210427node in :[]
普通复制语句1112:$b4 = l0 cmp $l3
[taint source] u:l0
SourceList:[]
[taint source] u:$l3
SourceList:[]
[taint source] u:l0 cmp $l3
SourceList:[]
20210427node out :[]
20210427node :if $b4 != 0 goto <invoker.SnowFlake: long sequence> = 0L
20210427node in :[]
20210427node out :[]
Have
Stmt if :if $b4 != 0 goto <invoker.SnowFlake: long sequence> = 0LStmt if value:$b4 != 0the value=$b4
the value=0
maintainValues.size0
ifValues1
20210427node :<invoker.SnowFlake: long sequence> = 0L
20210427node in :[]
普通复制语句1112:<invoker.SnowFlake: long sequence> = 0L
[taint source] u:0L
SourceList:[]
20210427node out :[]
20210427node :$l5 = <invoker.SnowFlake: long sequence>
20210427node in :[]
普通复制语句1112:$l5 = <invoker.SnowFlake: long sequence>
[taint source] u:<invoker.SnowFlake: long sequence>
SourceList:[]
20210427node out :[]
20210427node :$l6 = $l5 + 1L
20210427node in :[]
普通复制语句1112:$l6 = $l5 + 1L
[taint source] u:$l5
SourceList:[]
[taint source] u:1L
SourceList:[]
[taint source] u:$l5 + 1L
SourceList:[]
20210427node out :[]
20210427node :$l7 = $l6 & 4095L
20210427node in :[]
普通复制语句1112:$l7 = $l6 & 4095L
[taint source] u:$l6
SourceList:[]
[taint source] u:4095L
SourceList:[]
[taint source] u:$l6 & 4095L
SourceList:[]
20210427node out :[]
20210427node :<invoker.SnowFlake: long sequence> = $l7
20210427node in :[]
普通复制语句1112:<invoker.SnowFlake: long sequence> = $l7
[taint source] u:$l7
SourceList:[]
20210427node out :[]
20210427node :$l8 = <invoker.SnowFlake: long sequence>
20210427node in :[]
普通复制语句1112:$l8 = <invoker.SnowFlake: long sequence>
[taint source] u:<invoker.SnowFlake: long sequence>
SourceList:[]
20210427node out :[]
20210427node :$b9 = $l8 cmp 0L
20210427node in :[]
普通复制语句1112:$b9 = $l8 cmp 0L
[taint source] u:$l8
SourceList:[]
[taint source] u:0L
SourceList:[]
[taint source] u:$l8 cmp 0L
SourceList:[]
20210427node out :[]
20210427node :if $b9 != 0 goto <invoker.SnowFlake: long lastStmp> = l0
20210427node in :[]
20210427node out :[]
Have
Stmt if :if $b9 != 0 goto <invoker.SnowFlake: long lastStmp> = l0Stmt if value:$b9 != 0the value=$b9
the value=0
maintainValues.size0
ifValues1
20210427node :l0 = staticinvoke <invoker.SnowFlake: long getNextMill()>()
20210427node in :[]
调用语句赋值给变量:l0 = staticinvoke <invoker.SnowFlake: long getNextMill()>()
Invokestmt:getNextMill
20210427node out :[]
[taint328]a invoke <invoker.SnowFlake: long getNextMill()>
[taint328]a invoke 0
[invokemap]invoke:getNextMill  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
20210427node :goto [?= <invoker.SnowFlake: long lastStmp> = l0]
20210427node in :[]
20210427node out :[]
20210427node :<invoker.SnowFlake: long lastStmp> = l0
20210427node in :[]
普通复制语句1112:<invoker.SnowFlake: long lastStmp> = l0
[taint source] u:l0
SourceList:[]
20210427node out :[]
20210427node :$l10 = l0 - 1480166465631L
20210427node in :[]
普通复制语句1112:$l10 = l0 - 1480166465631L
[taint source] u:l0
SourceList:[]
[taint source] u:1480166465631L
SourceList:[]
[taint source] u:l0 - 1480166465631L
SourceList:[]
20210427node out :[]
20210427node :$l11 = $l10 << 22
20210427node in :[]
普通复制语句1112:$l11 = $l10 << 22
[taint source] u:$l10
SourceList:[]
[taint source] u:22
SourceList:[]
[taint source] u:$l10 << 22
SourceList:[]
20210427node out :[]
20210427node :$l12 = <invoker.SnowFlake: long datacenterId>
20210427node in :[]
普通复制语句1112:$l12 = <invoker.SnowFlake: long datacenterId>
[taint source] u:<invoker.SnowFlake: long datacenterId>
SourceList:[]
20210427node out :[]
20210427node :$l13 = $l12 << 17
20210427node in :[]
普通复制语句1112:$l13 = $l12 << 17
[taint source] u:$l12
SourceList:[]
[taint source] u:17
SourceList:[]
[taint source] u:$l12 << 17
SourceList:[]
20210427node out :[]
20210427node :$l14 = $l11 | $l13
20210427node in :[]
普通复制语句1112:$l14 = $l11 | $l13
[taint source] u:$l11
SourceList:[]
[taint source] u:$l13
SourceList:[]
[taint source] u:$l11 | $l13
SourceList:[]
20210427node out :[]
20210427node :$l15 = <invoker.SnowFlake: long machineId>
20210427node in :[]
普通复制语句1112:$l15 = <invoker.SnowFlake: long machineId>
[taint source] u:<invoker.SnowFlake: long machineId>
SourceList:[]
20210427node out :[]
20210427node :$l16 = $l15 << 12
20210427node in :[]
普通复制语句1112:$l16 = $l15 << 12
[taint source] u:$l15
SourceList:[]
[taint source] u:12
SourceList:[]
[taint source] u:$l15 << 12
SourceList:[]
20210427node out :[]
20210427node :$l17 = $l14 | $l16
20210427node in :[]
普通复制语句1112:$l17 = $l14 | $l16
[taint source] u:$l14
SourceList:[]
[taint source] u:$l16
SourceList:[]
[taint source] u:$l14 | $l16
SourceList:[]
20210427node out :[]
20210427node :$l18 = <invoker.SnowFlake: long sequence>
20210427node in :[]
普通复制语句1112:$l18 = <invoker.SnowFlake: long sequence>
[taint source] u:<invoker.SnowFlake: long sequence>
SourceList:[]
20210427node out :[]
20210427node :$l19 = $l17 | $l18
20210427node in :[]
普通复制语句1112:$l19 = $l17 | $l18
[taint source] u:$l17
SourceList:[]
[taint source] u:$l18
SourceList:[]
[taint source] u:$l17 | $l18
SourceList:[]
20210427node out :[]
20210427node :return $l19
20210427node in :[]
20210427node out :[]
20210427node :$r0 = new java.lang.RuntimeException
20210427node in :[]
普通复制语句1112:$r0 = new java.lang.RuntimeException
[taint source] u:new java.lang.RuntimeException
SourceList:[]
20210427node out :[]
20210427node :specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Clock moved backwards.  Refusing to generate id")
20210427node in :[]
20210427node out :[]
[taint329]i invoke specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Clock moved backwards.  Refusing to generate id")
[taint328]i invoke <java.lang.RuntimeException: void <init>(java.lang.String)>
[taint328]i invoke 1
value:"Clock moved backwards.  Refusing to generate id"
isoutSetContains  false value:"Clock moved backwards.  Refusing to generate id" index:0
20210427node :throw $r0
20210427node in :[]
20210427node out :[]
analysis.outSet.size():0
[CFMAP]2021 After taintAnalysis:{cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}
The data isgggg 
<invoker.SnowFlake: long nextId()>
The data isgggg invoker.SnowFlake nextId [] {cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}  {cfhider.WordCount$IntSumReducer={reduce=[I@1112aeb9}, cfhider.WordCount$TokenizerMapper={map=[I@4b59c01c}, cfhider.WordCount={main=[I@31aed88a}, invoker.SnowFlake={<init>=[I@1d9bda0d, getNextMill=[I@63089aaa, getNewstmp=[I@49e241b1}}
Coming...
doAnalysis Startingqqqqqqqq.....
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
[taint329]i invoke specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Clock moved backwards.  Refusing to generate id")
[taint328]i invoke <java.lang.RuntimeException: void <init>(java.lang.String)>
[taint328]i invoke 1
value:"Clock moved backwards.  Refusing to generate id"
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$r0 = new java.lang.RuntimeException
currStmt left value20210420:$r0
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$l19 = $l17 | $l18
currStmt left value20210420:$l19
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$l18 = <invoker.SnowFlake: long sequence>
currStmt left value20210420:$l18
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$l17 = $l14 | $l16
currStmt left value20210420:$l17
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$l16 = $l15 << 12
currStmt left value20210420:$l16
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$l15 = <invoker.SnowFlake: long machineId>
currStmt left value20210420:$l15
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$l14 = $l11 | $l13
currStmt left value20210420:$l14
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$l13 = $l12 << 17
currStmt left value20210420:$l13
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$l12 = <invoker.SnowFlake: long datacenterId>
currStmt left value20210420:$l12
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$l11 = $l10 << 22
currStmt left value20210420:$l11
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$l10 = l0 - 1480166465631L
currStmt left value20210420:$l10
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:<invoker.SnowFlake: long lastStmp> = l0
currStmt left value20210420:<invoker.SnowFlake: long lastStmp>
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:l0 = staticinvoke <invoker.SnowFlake: long getNextMill()>()
currStmt left value20210420:l0
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
Have
the value=$b9
the value=0
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$b9 = $l8 cmp 0L
currStmt left value20210420:$b9
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$l8 = <invoker.SnowFlake: long sequence>
currStmt left value20210420:$l8
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:<invoker.SnowFlake: long sequence> = $l7
currStmt left value20210420:<invoker.SnowFlake: long sequence>
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$l7 = $l6 & 4095L
currStmt left value20210420:$l7
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$l6 = $l5 + 1L
currStmt left value20210420:$l6
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$l5 = <invoker.SnowFlake: long sequence>
currStmt left value20210420:$l5
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:<invoker.SnowFlake: long sequence> = 0L
currStmt left value20210420:<invoker.SnowFlake: long sequence>
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
Have
the value=$b4
the value=0
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$b4 = l0 cmp $l3
currStmt left value20210420:$b4
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$l3 = <invoker.SnowFlake: long lastStmp>
currStmt left value20210420:$l3
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
Have
the value=$b2
the value=0
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$b2 = l0 cmp $l1
currStmt left value20210420:$b2
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$l1 = <invoker.SnowFlake: long lastStmp>
currStmt left value20210420:$l1
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:l0 = staticinvoke <invoker.SnowFlake: long getNewstmp()>()
currStmt left value20210420:l0
doAnalysis endqqqqqqq.....
come here
[CFMAP]2021 After BackwardAnalysis:{cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}
[taint into] sootMethod: getNextMill
[]
class name :invoker.SnowFlake
method name :getNextMill
method list :[]
clasname=invoker.SnowFlake
methodname=getNextMill
sourcelist2021=[]
20210427node :l0 = staticinvoke <invoker.SnowFlake: long getNewstmp()>()
20210427node in :[]
调用语句赋值给变量:l0 = staticinvoke <invoker.SnowFlake: long getNewstmp()>()
Invokestmt:getNewstmp
20210427node out :[]
[taint328]a invoke <invoker.SnowFlake: long getNewstmp()>
[taint328]a invoke 0
[invokemap]invoke:getNewstmp  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
20210427node :$l1 = <invoker.SnowFlake: long lastStmp>
20210427node in :[]
普通复制语句1112:$l1 = <invoker.SnowFlake: long lastStmp>
[taint source] u:<invoker.SnowFlake: long lastStmp>
SourceList:[]
20210427node out :[]
20210427node :$b2 = l0 cmp $l1
20210427node in :[]
普通复制语句1112:$b2 = l0 cmp $l1
[taint source] u:l0
SourceList:[]
[taint source] u:$l1
SourceList:[]
[taint source] u:l0 cmp $l1
SourceList:[]
20210427node out :[]
20210427node :if $b2 > 0 goto return l0
20210427node in :[]
20210427node out :[]
Have
Stmt if :if $b2 > 0 goto return l0Stmt if value:$b2 > 0the value=$b2
the value=0
maintainValues.size0
ifValues1
20210427node :return l0
20210427node in :[]
20210427node out :[]
20210427node :l0 = staticinvoke <invoker.SnowFlake: long getNewstmp()>()
20210427node in :[]
调用语句赋值给变量:l0 = staticinvoke <invoker.SnowFlake: long getNewstmp()>()
Invokestmt:getNewstmp
20210427node out :[]
[taint328]a invoke <invoker.SnowFlake: long getNewstmp()>
[taint328]a invoke 0
[invokemap]invoke:getNewstmp  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
20210427node :goto [?= $l1 = <invoker.SnowFlake: long lastStmp>]
20210427node in :[]
20210427node out :[]
analysis.outSet.size():0
[CFMAP]2021 After taintAnalysis:{cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}
The data isgggg 
<invoker.SnowFlake: long getNextMill()>
The data isgggg invoker.SnowFlake getNextMill [] {cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}  {cfhider.WordCount$IntSumReducer={reduce=[I@1112aeb9}, cfhider.WordCount$TokenizerMapper={map=[I@4b59c01c}, cfhider.WordCount={main=[I@31aed88a}, invoker.SnowFlake={<init>=[I@1d9bda0d, getNextMill=[I@63089aaa, getNewstmp=[I@2546f15c}}
Coming...
doAnalysis Startingqqqqqqqq.....
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:l0 = staticinvoke <invoker.SnowFlake: long getNewstmp()>()
currStmt left value20210420:l0
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
Have
the value=$b2
the value=0
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$b2 = l0 cmp $l1
currStmt left value20210420:$b2
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$l1 = <invoker.SnowFlake: long lastStmp>
currStmt left value20210420:$l1
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:l0 = staticinvoke <invoker.SnowFlake: long getNewstmp()>()
currStmt left value20210420:l0
doAnalysis endqqqqqqq.....
come here
[CFMAP]2021 After BackwardAnalysis:{cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}
[taint into] sootMethod: getNewstmp
[]
class name :invoker.SnowFlake
method name :getNewstmp
method list :[]
clasname=invoker.SnowFlake
methodname=getNewstmp
sourcelist2021=[]
20210427node :$l0 = staticinvoke <java.lang.System: long currentTimeMillis()>()
20210427node in :[]
调用语句赋值给变量:$l0 = staticinvoke <java.lang.System: long currentTimeMillis()>()
20210427node out :[]
[taint328]a invoke <java.lang.System: long currentTimeMillis()>
[taint328]a invoke 0
20210427node :return $l0
20210427node in :[]
20210427node out :[]
analysis.outSet.size():0
[CFMAP]2021 After taintAnalysis:{cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}
The data isgggg 
<invoker.SnowFlake: long getNewstmp()>
The data isgggg invoker.SnowFlake getNewstmp [] {cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}  {cfhider.WordCount$IntSumReducer={reduce=[I@1112aeb9}, cfhider.WordCount$TokenizerMapper={map=[I@4b59c01c}, cfhider.WordCount={main=[I@31aed88a}, invoker.SnowFlake={<init>=[I@1d9bda0d, getNextMill=[I@63089aaa, getNewstmp=[I@2546f15c}}
Coming...
doAnalysis Startingqqqqqqqq.....
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$l0 = staticinvoke <java.lang.System: long currentTimeMillis()>()
currStmt left value20210420:$l0
doAnalysis endqqqqqqq.....
come here
[CFMAP]2021 After BackwardAnalysis:{cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}
[taint into] sootMethod: <clinit>
[]
class name :invoker.SnowFlake
method name :<clinit>
method list :[]
clasname=invoker.SnowFlake
methodname=<clinit>
sourcelist2021=[]
20210427node :<invoker.SnowFlake: long sequence> = 0L
20210427node in :[]
普通复制语句1112:<invoker.SnowFlake: long sequence> = 0L
[taint source] u:0L
SourceList:[]
20210427node out :[]
20210427node :<invoker.SnowFlake: long lastStmp> = -1L
20210427node in :[]
普通复制语句1112:<invoker.SnowFlake: long lastStmp> = -1L
[taint source] u:-1L
SourceList:[]
20210427node out :[]
20210427node :return
20210427node in :[]
20210427node out :[]
analysis.outSet.size():0
[CFMAP]2021 After taintAnalysis:{cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}
The data isgggg 
<invoker.SnowFlake: void <clinit>()>
The data isgggg invoker.SnowFlake <clinit> [] {cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}  {cfhider.WordCount$IntSumReducer={reduce=[I@1112aeb9}, cfhider.WordCount$TokenizerMapper={map=[I@4b59c01c}, cfhider.WordCount={main=[I@31aed88a}, invoker.SnowFlake={<init>=[I@1d9bda0d, getNextMill=[I@63089aaa, getNewstmp=[I@2546f15c}}
Coming...
doAnalysis Startingqqqqqqqq.....
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:<invoker.SnowFlake: long lastStmp> = -1L
currStmt left value20210420:<invoker.SnowFlake: long lastStmp>
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:<invoker.SnowFlake: long sequence> = 0L
currStmt left value20210420:<invoker.SnowFlake: long sequence>
doAnalysis endqqqqqqq.....
come here
[CFMAP]2021 After BackwardAnalysis:{cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}
[taint into] sootMethod: <init>
[]
class name :invoker.SnowFlake
method name :<init>
method list :[]
clasname=invoker.SnowFlake
methodname=<init>
sourcelist2021=[]
20210427node :r0 := @this: invoker.SnowFlake
20210427node in :[]
20210427node out :[]
currStmt20210423:r0 := @this: invoker.SnowFlake
20210427node :l0 := @parameter0: long
20210427node in :[]
[idStmt]iiiiiii l0 := @parameter0: long  index:0
ClassName:invoker.SnowFlake
MethodName:<init>
aaaa:0
20210427node out :[]
currStmt20210423:l0 := @parameter0: long
20210427node :l1 := @parameter1: long
20210427node in :[]
[idStmt]iiiiiii l1 := @parameter1: long  index:1
ClassName:invoker.SnowFlake
MethodName:<init>
aaaa:0
20210427node out :[]
currStmt20210423:l1 := @parameter1: long
20210427node :specialinvoke r0.<java.lang.Object: void <init>()>()
20210427node in :[]
20210427node out :[]
[taint329]i invoke specialinvoke r0.<java.lang.Object: void <init>()>()
[taint328]i invoke <java.lang.Object: void <init>()>
[taint328]i invoke 0
20210427node :$b2 = l0 cmp 31L
20210427node in :[]
普通复制语句1112:$b2 = l0 cmp 31L
[taint source] u:l0
SourceList:[]
[taint source] u:31L
SourceList:[]
[taint source] u:l0 cmp 31L
SourceList:[]
20210427node out :[]
20210427node :if $b2 > 0 goto $r1 = new java.lang.IllegalArgumentException
20210427node in :[]
20210427node out :[]
Have
Stmt if :if $b2 > 0 goto $r1 = new java.lang.IllegalArgumentExceptionStmt if value:$b2 > 0the value=$b2
the value=0
maintainValues.size0
ifValues1
20210427node :$b3 = l0 cmp 0L
20210427node in :[]
普通复制语句1112:$b3 = l0 cmp 0L
[taint source] u:l0
SourceList:[]
[taint source] u:0L
SourceList:[]
[taint source] u:l0 cmp 0L
SourceList:[]
20210427node out :[]
20210427node :if $b3 >= 0 goto $b4 = l1 cmp 31L
20210427node in :[]
20210427node out :[]
Have
Stmt if :if $b3 >= 0 goto $b4 = l1 cmp 31LStmt if value:$b3 >= 0the value=$b3
the value=0
maintainValues.size0
ifValues1
20210427node :$b4 = l1 cmp 31L
20210427node in :[]
普通复制语句1112:$b4 = l1 cmp 31L
[taint source] u:l1
SourceList:[]
[taint source] u:31L
SourceList:[]
[taint source] u:l1 cmp 31L
SourceList:[]
20210427node out :[]
20210427node :if $b4 > 0 goto $r2 = new java.lang.IllegalArgumentException
20210427node in :[]
20210427node out :[]
Have
Stmt if :if $b4 > 0 goto $r2 = new java.lang.IllegalArgumentExceptionStmt if value:$b4 > 0the value=$b4
the value=0
maintainValues.size0
ifValues1
20210427node :$b5 = l1 cmp 0L
20210427node in :[]
普通复制语句1112:$b5 = l1 cmp 0L
[taint source] u:l1
SourceList:[]
[taint source] u:0L
SourceList:[]
[taint source] u:l1 cmp 0L
SourceList:[]
20210427node out :[]
20210427node :if $b5 >= 0 goto <invoker.SnowFlake: long datacenterId> = 0L
20210427node in :[]
20210427node out :[]
Have
Stmt if :if $b5 >= 0 goto <invoker.SnowFlake: long datacenterId> = 0LStmt if value:$b5 >= 0the value=$b5
the value=0
maintainValues.size0
ifValues1
20210427node :<invoker.SnowFlake: long datacenterId> = 0L
20210427node in :[]
普通复制语句1112:<invoker.SnowFlake: long datacenterId> = 0L
[taint source] u:0L
SourceList:[]
20210427node out :[]
20210427node :<invoker.SnowFlake: long machineId> = 0L
20210427node in :[]
普通复制语句1112:<invoker.SnowFlake: long machineId> = 0L
[taint source] u:0L
SourceList:[]
20210427node out :[]
20210427node :return
20210427node in :[]
20210427node out :[]
20210427node :$r2 = new java.lang.IllegalArgumentException
20210427node in :[]
普通复制语句1112:$r2 = new java.lang.IllegalArgumentException
[taint source] u:new java.lang.IllegalArgumentException
SourceList:[]
20210427node out :[]
20210427node :specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("machineId can\'t be greater than MAX_MACHINE_NUM or less than 0")
20210427node in :[]
20210427node out :[]
[taint329]i invoke specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("machineId can\'t be greater than MAX_MACHINE_NUM or less than 0")
[taint328]i invoke <java.lang.IllegalArgumentException: void <init>(java.lang.String)>
[taint328]i invoke 1
value:"machineId can\'t be greater than MAX_MACHINE_NUM or less than 0"
isoutSetContains  false value:"machineId can\'t be greater than MAX_MACHINE_NUM or less than 0" index:0
20210427node :throw $r2
20210427node in :[]
20210427node out :[]
20210427node :$r1 = new java.lang.IllegalArgumentException
20210427node in :[]
普通复制语句1112:$r1 = new java.lang.IllegalArgumentException
[taint source] u:new java.lang.IllegalArgumentException
SourceList:[]
20210427node out :[]
20210427node :specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("datacenterId can\'t be greater than MAX_DATACENTER_NUM or less than 0")
20210427node in :[]
20210427node out :[]
[taint329]i invoke specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("datacenterId can\'t be greater than MAX_DATACENTER_NUM or less than 0")
[taint328]i invoke <java.lang.IllegalArgumentException: void <init>(java.lang.String)>
[taint328]i invoke 1
value:"datacenterId can\'t be greater than MAX_DATACENTER_NUM or less than 0"
isoutSetContains  false value:"datacenterId can\'t be greater than MAX_DATACENTER_NUM or less than 0" index:0
20210427node :throw $r1
20210427node in :[]
20210427node out :[]
analysis.outSet.size():0
[CFMAP]2021 After taintAnalysis:{cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}
The data isgggg 
<invoker.SnowFlake: void <init>(long,long)>
The data isgggg invoker.SnowFlake <init> [] {cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}  {cfhider.WordCount$IntSumReducer={reduce=[I@1112aeb9}, cfhider.WordCount$TokenizerMapper={map=[I@4b59c01c}, cfhider.WordCount={main=[I@31aed88a}, invoker.SnowFlake={<init>=[I@548fe222, getNextMill=[I@63089aaa, getNewstmp=[I@2546f15c}}
Coming...
doAnalysis Startingqqqqqqqq.....
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
[taint329]i invoke specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("datacenterId can\'t be greater than MAX_DATACENTER_NUM or less than 0")
[taint328]i invoke <java.lang.IllegalArgumentException: void <init>(java.lang.String)>
[taint328]i invoke 1
value:"datacenterId can\'t be greater than MAX_DATACENTER_NUM or less than 0"
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$r1 = new java.lang.IllegalArgumentException
currStmt left value20210420:$r1
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
[taint329]i invoke specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("machineId can\'t be greater than MAX_MACHINE_NUM or less than 0")
[taint328]i invoke <java.lang.IllegalArgumentException: void <init>(java.lang.String)>
[taint328]i invoke 1
value:"machineId can\'t be greater than MAX_MACHINE_NUM or less than 0"
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$r2 = new java.lang.IllegalArgumentException
currStmt left value20210420:$r2
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:<invoker.SnowFlake: long machineId> = 0L
currStmt left value20210420:<invoker.SnowFlake: long machineId>
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:<invoker.SnowFlake: long datacenterId> = 0L
currStmt left value20210420:<invoker.SnowFlake: long datacenterId>
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
Have
the value=$b5
the value=0
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$b5 = l1 cmp 0L
currStmt left value20210420:$b5
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
Have
the value=$b4
the value=0
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$b4 = l1 cmp 31L
currStmt left value20210420:$b4
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
Have
the value=$b3
the value=0
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$b3 = l0 cmp 0L
currStmt left value20210420:$b3
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
Have
the value=$b2
the value=0
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$b2 = l0 cmp 31L
currStmt left value20210420:$b2
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
[taint329]i invoke specialinvoke r0.<java.lang.Object: void <init>()>()
[taint328]i invoke <java.lang.Object: void <init>()>
[taint328]i invoke 0
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
doAnalysis endqqqqqqq.....
come here
[CFMAP]2021 After BackwardAnalysis:{cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}
[taint into] sootMethod: nextId
[]
class name :invoker.SnowFlake
method name :nextId
method list :[]
clasname=invoker.SnowFlake
methodname=nextId
sourcelist2021=[]
20210427node :l0 = staticinvoke <invoker.SnowFlake: long getNewstmp()>()
20210427node in :[]
调用语句赋值给变量:l0 = staticinvoke <invoker.SnowFlake: long getNewstmp()>()
Invokestmt:getNewstmp
20210427node out :[]
[taint328]a invoke <invoker.SnowFlake: long getNewstmp()>
[taint328]a invoke 0
[invokemap]invoke:getNewstmp  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
20210427node :$l1 = <invoker.SnowFlake: long lastStmp>
20210427node in :[]
普通复制语句1112:$l1 = <invoker.SnowFlake: long lastStmp>
[taint source] u:<invoker.SnowFlake: long lastStmp>
SourceList:[]
20210427node out :[]
20210427node :$b2 = l0 cmp $l1
20210427node in :[]
普通复制语句1112:$b2 = l0 cmp $l1
[taint source] u:l0
SourceList:[]
[taint source] u:$l1
SourceList:[]
[taint source] u:l0 cmp $l1
SourceList:[]
20210427node out :[]
20210427node :if $b2 >= 0 goto $l3 = <invoker.SnowFlake: long lastStmp>
20210427node in :[]
20210427node out :[]
Have
Stmt if :if $b2 >= 0 goto $l3 = <invoker.SnowFlake: long lastStmp>Stmt if value:$b2 >= 0the value=$b2
the value=0
maintainValues.size0
ifValues1
20210427node :$l3 = <invoker.SnowFlake: long lastStmp>
20210427node in :[]
普通复制语句1112:$l3 = <invoker.SnowFlake: long lastStmp>
[taint source] u:<invoker.SnowFlake: long lastStmp>
SourceList:[]
20210427node out :[]
20210427node :$b4 = l0 cmp $l3
20210427node in :[]
普通复制语句1112:$b4 = l0 cmp $l3
[taint source] u:l0
SourceList:[]
[taint source] u:$l3
SourceList:[]
[taint source] u:l0 cmp $l3
SourceList:[]
20210427node out :[]
20210427node :if $b4 != 0 goto <invoker.SnowFlake: long sequence> = 0L
20210427node in :[]
20210427node out :[]
Have
Stmt if :if $b4 != 0 goto <invoker.SnowFlake: long sequence> = 0LStmt if value:$b4 != 0the value=$b4
the value=0
maintainValues.size0
ifValues1
20210427node :<invoker.SnowFlake: long sequence> = 0L
20210427node in :[]
普通复制语句1112:<invoker.SnowFlake: long sequence> = 0L
[taint source] u:0L
SourceList:[]
20210427node out :[]
20210427node :$l5 = <invoker.SnowFlake: long sequence>
20210427node in :[]
普通复制语句1112:$l5 = <invoker.SnowFlake: long sequence>
[taint source] u:<invoker.SnowFlake: long sequence>
SourceList:[]
20210427node out :[]
20210427node :$l6 = $l5 + 1L
20210427node in :[]
普通复制语句1112:$l6 = $l5 + 1L
[taint source] u:$l5
SourceList:[]
[taint source] u:1L
SourceList:[]
[taint source] u:$l5 + 1L
SourceList:[]
20210427node out :[]
20210427node :$l7 = $l6 & 4095L
20210427node in :[]
普通复制语句1112:$l7 = $l6 & 4095L
[taint source] u:$l6
SourceList:[]
[taint source] u:4095L
SourceList:[]
[taint source] u:$l6 & 4095L
SourceList:[]
20210427node out :[]
20210427node :<invoker.SnowFlake: long sequence> = $l7
20210427node in :[]
普通复制语句1112:<invoker.SnowFlake: long sequence> = $l7
[taint source] u:$l7
SourceList:[]
20210427node out :[]
20210427node :$l8 = <invoker.SnowFlake: long sequence>
20210427node in :[]
普通复制语句1112:$l8 = <invoker.SnowFlake: long sequence>
[taint source] u:<invoker.SnowFlake: long sequence>
SourceList:[]
20210427node out :[]
20210427node :$b9 = $l8 cmp 0L
20210427node in :[]
普通复制语句1112:$b9 = $l8 cmp 0L
[taint source] u:$l8
SourceList:[]
[taint source] u:0L
SourceList:[]
[taint source] u:$l8 cmp 0L
SourceList:[]
20210427node out :[]
20210427node :if $b9 != 0 goto <invoker.SnowFlake: long lastStmp> = l0
20210427node in :[]
20210427node out :[]
Have
Stmt if :if $b9 != 0 goto <invoker.SnowFlake: long lastStmp> = l0Stmt if value:$b9 != 0the value=$b9
the value=0
maintainValues.size0
ifValues1
20210427node :l0 = staticinvoke <invoker.SnowFlake: long getNextMill()>()
20210427node in :[]
调用语句赋值给变量:l0 = staticinvoke <invoker.SnowFlake: long getNextMill()>()
Invokestmt:getNextMill
20210427node out :[]
[taint328]a invoke <invoker.SnowFlake: long getNextMill()>
[taint328]a invoke 0
[invokemap]invoke:getNextMill  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
20210427node :goto [?= <invoker.SnowFlake: long lastStmp> = l0]
20210427node in :[]
20210427node out :[]
20210427node :<invoker.SnowFlake: long lastStmp> = l0
20210427node in :[]
普通复制语句1112:<invoker.SnowFlake: long lastStmp> = l0
[taint source] u:l0
SourceList:[]
20210427node out :[]
20210427node :$l10 = l0 - 1480166465631L
20210427node in :[]
普通复制语句1112:$l10 = l0 - 1480166465631L
[taint source] u:l0
SourceList:[]
[taint source] u:1480166465631L
SourceList:[]
[taint source] u:l0 - 1480166465631L
SourceList:[]
20210427node out :[]
20210427node :$l11 = $l10 << 22
20210427node in :[]
普通复制语句1112:$l11 = $l10 << 22
[taint source] u:$l10
SourceList:[]
[taint source] u:22
SourceList:[]
[taint source] u:$l10 << 22
SourceList:[]
20210427node out :[]
20210427node :$l12 = <invoker.SnowFlake: long datacenterId>
20210427node in :[]
普通复制语句1112:$l12 = <invoker.SnowFlake: long datacenterId>
[taint source] u:<invoker.SnowFlake: long datacenterId>
SourceList:[]
20210427node out :[]
20210427node :$l13 = $l12 << 17
20210427node in :[]
普通复制语句1112:$l13 = $l12 << 17
[taint source] u:$l12
SourceList:[]
[taint source] u:17
SourceList:[]
[taint source] u:$l12 << 17
SourceList:[]
20210427node out :[]
20210427node :$l14 = $l11 | $l13
20210427node in :[]
普通复制语句1112:$l14 = $l11 | $l13
[taint source] u:$l11
SourceList:[]
[taint source] u:$l13
SourceList:[]
[taint source] u:$l11 | $l13
SourceList:[]
20210427node out :[]
20210427node :$l15 = <invoker.SnowFlake: long machineId>
20210427node in :[]
普通复制语句1112:$l15 = <invoker.SnowFlake: long machineId>
[taint source] u:<invoker.SnowFlake: long machineId>
SourceList:[]
20210427node out :[]
20210427node :$l16 = $l15 << 12
20210427node in :[]
普通复制语句1112:$l16 = $l15 << 12
[taint source] u:$l15
SourceList:[]
[taint source] u:12
SourceList:[]
[taint source] u:$l15 << 12
SourceList:[]
20210427node out :[]
20210427node :$l17 = $l14 | $l16
20210427node in :[]
普通复制语句1112:$l17 = $l14 | $l16
[taint source] u:$l14
SourceList:[]
[taint source] u:$l16
SourceList:[]
[taint source] u:$l14 | $l16
SourceList:[]
20210427node out :[]
20210427node :$l18 = <invoker.SnowFlake: long sequence>
20210427node in :[]
普通复制语句1112:$l18 = <invoker.SnowFlake: long sequence>
[taint source] u:<invoker.SnowFlake: long sequence>
SourceList:[]
20210427node out :[]
20210427node :$l19 = $l17 | $l18
20210427node in :[]
普通复制语句1112:$l19 = $l17 | $l18
[taint source] u:$l17
SourceList:[]
[taint source] u:$l18
SourceList:[]
[taint source] u:$l17 | $l18
SourceList:[]
20210427node out :[]
20210427node :return $l19
20210427node in :[]
20210427node out :[]
20210427node :$r0 = new java.lang.RuntimeException
20210427node in :[]
普通复制语句1112:$r0 = new java.lang.RuntimeException
[taint source] u:new java.lang.RuntimeException
SourceList:[]
20210427node out :[]
20210427node :specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Clock moved backwards.  Refusing to generate id")
20210427node in :[]
20210427node out :[]
[taint329]i invoke specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Clock moved backwards.  Refusing to generate id")
[taint328]i invoke <java.lang.RuntimeException: void <init>(java.lang.String)>
[taint328]i invoke 1
value:"Clock moved backwards.  Refusing to generate id"
isoutSetContains  false value:"Clock moved backwards.  Refusing to generate id" index:0
20210427node :throw $r0
20210427node in :[]
20210427node out :[]
analysis.outSet.size():0
[CFMAP]2021 After taintAnalysis:{cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}
The data isgggg 
<invoker.SnowFlake: long nextId()>
The data isgggg invoker.SnowFlake nextId [] {cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}  {cfhider.WordCount$IntSumReducer={reduce=[I@1112aeb9}, cfhider.WordCount$TokenizerMapper={map=[I@4b59c01c}, cfhider.WordCount={main=[I@31aed88a}, invoker.SnowFlake={<init>=[I@548fe222, getNextMill=[I@3247518d, getNewstmp=[I@683b19c4}}
Coming...
doAnalysis Startingqqqqqqqq.....
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
[taint329]i invoke specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Clock moved backwards.  Refusing to generate id")
[taint328]i invoke <java.lang.RuntimeException: void <init>(java.lang.String)>
[taint328]i invoke 1
value:"Clock moved backwards.  Refusing to generate id"
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$r0 = new java.lang.RuntimeException
currStmt left value20210420:$r0
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$l19 = $l17 | $l18
currStmt left value20210420:$l19
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$l18 = <invoker.SnowFlake: long sequence>
currStmt left value20210420:$l18
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$l17 = $l14 | $l16
currStmt left value20210420:$l17
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$l16 = $l15 << 12
currStmt left value20210420:$l16
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$l15 = <invoker.SnowFlake: long machineId>
currStmt left value20210420:$l15
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$l14 = $l11 | $l13
currStmt left value20210420:$l14
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$l13 = $l12 << 17
currStmt left value20210420:$l13
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$l12 = <invoker.SnowFlake: long datacenterId>
currStmt left value20210420:$l12
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$l11 = $l10 << 22
currStmt left value20210420:$l11
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$l10 = l0 - 1480166465631L
currStmt left value20210420:$l10
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:<invoker.SnowFlake: long lastStmp> = l0
currStmt left value20210420:<invoker.SnowFlake: long lastStmp>
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:l0 = staticinvoke <invoker.SnowFlake: long getNextMill()>()
currStmt left value20210420:l0
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
Have
the value=$b9
the value=0
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$b9 = $l8 cmp 0L
currStmt left value20210420:$b9
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$l8 = <invoker.SnowFlake: long sequence>
currStmt left value20210420:$l8
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:<invoker.SnowFlake: long sequence> = $l7
currStmt left value20210420:<invoker.SnowFlake: long sequence>
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$l7 = $l6 & 4095L
currStmt left value20210420:$l7
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$l6 = $l5 + 1L
currStmt left value20210420:$l6
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$l5 = <invoker.SnowFlake: long sequence>
currStmt left value20210420:$l5
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:<invoker.SnowFlake: long sequence> = 0L
currStmt left value20210420:<invoker.SnowFlake: long sequence>
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
Have
the value=$b4
the value=0
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$b4 = l0 cmp $l3
currStmt left value20210420:$b4
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$l3 = <invoker.SnowFlake: long lastStmp>
currStmt left value20210420:$l3
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
Have
the value=$b2
the value=0
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$b2 = l0 cmp $l1
currStmt left value20210420:$b2
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$l1 = <invoker.SnowFlake: long lastStmp>
currStmt left value20210420:$l1
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:l0 = staticinvoke <invoker.SnowFlake: long getNewstmp()>()
currStmt left value20210420:l0
doAnalysis endqqqqqqq.....
come here
[CFMAP]2021 After BackwardAnalysis:{cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}
[taint into] sootMethod: getNextMill
[]
class name :invoker.SnowFlake
method name :getNextMill
method list :[]
clasname=invoker.SnowFlake
methodname=getNextMill
sourcelist2021=[]
20210427node :l0 = staticinvoke <invoker.SnowFlake: long getNewstmp()>()
20210427node in :[]
调用语句赋值给变量:l0 = staticinvoke <invoker.SnowFlake: long getNewstmp()>()
Invokestmt:getNewstmp
20210427node out :[]
[taint328]a invoke <invoker.SnowFlake: long getNewstmp()>
[taint328]a invoke 0
[invokemap]invoke:getNewstmp  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
20210427node :$l1 = <invoker.SnowFlake: long lastStmp>
20210427node in :[]
普通复制语句1112:$l1 = <invoker.SnowFlake: long lastStmp>
[taint source] u:<invoker.SnowFlake: long lastStmp>
SourceList:[]
20210427node out :[]
20210427node :$b2 = l0 cmp $l1
20210427node in :[]
普通复制语句1112:$b2 = l0 cmp $l1
[taint source] u:l0
SourceList:[]
[taint source] u:$l1
SourceList:[]
[taint source] u:l0 cmp $l1
SourceList:[]
20210427node out :[]
20210427node :if $b2 > 0 goto return l0
20210427node in :[]
20210427node out :[]
Have
Stmt if :if $b2 > 0 goto return l0Stmt if value:$b2 > 0the value=$b2
the value=0
maintainValues.size0
ifValues1
20210427node :return l0
20210427node in :[]
20210427node out :[]
20210427node :l0 = staticinvoke <invoker.SnowFlake: long getNewstmp()>()
20210427node in :[]
调用语句赋值给变量:l0 = staticinvoke <invoker.SnowFlake: long getNewstmp()>()
Invokestmt:getNewstmp
20210427node out :[]
[taint328]a invoke <invoker.SnowFlake: long getNewstmp()>
[taint328]a invoke 0
[invokemap]invoke:getNewstmp  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
20210427node :goto [?= $l1 = <invoker.SnowFlake: long lastStmp>]
20210427node in :[]
20210427node out :[]
analysis.outSet.size():0
[CFMAP]2021 After taintAnalysis:{cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}
The data isgggg 
<invoker.SnowFlake: long getNextMill()>
The data isgggg invoker.SnowFlake getNextMill [] {cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}  {cfhider.WordCount$IntSumReducer={reduce=[I@1112aeb9}, cfhider.WordCount$TokenizerMapper={map=[I@4b59c01c}, cfhider.WordCount={main=[I@31aed88a}, invoker.SnowFlake={<init>=[I@548fe222, getNextMill=[I@3247518d, getNewstmp=[I@18c852}}
Coming...
doAnalysis Startingqqqqqqqq.....
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:l0 = staticinvoke <invoker.SnowFlake: long getNewstmp()>()
currStmt left value20210420:l0
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
Have
the value=$b2
the value=0
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$b2 = l0 cmp $l1
currStmt left value20210420:$b2
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$l1 = <invoker.SnowFlake: long lastStmp>
currStmt left value20210420:$l1
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:l0 = staticinvoke <invoker.SnowFlake: long getNewstmp()>()
currStmt left value20210420:l0
doAnalysis endqqqqqqq.....
come here
[CFMAP]2021 After BackwardAnalysis:{cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}
[taint into] sootMethod: getNewstmp
[]
class name :invoker.SnowFlake
method name :getNewstmp
method list :[]
clasname=invoker.SnowFlake
methodname=getNewstmp
sourcelist2021=[]
20210427node :$l0 = staticinvoke <java.lang.System: long currentTimeMillis()>()
20210427node in :[]
调用语句赋值给变量:$l0 = staticinvoke <java.lang.System: long currentTimeMillis()>()
20210427node out :[]
[taint328]a invoke <java.lang.System: long currentTimeMillis()>
[taint328]a invoke 0
20210427node :return $l0
20210427node in :[]
20210427node out :[]
analysis.outSet.size():0
[CFMAP]2021 After taintAnalysis:{cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}
The data isgggg 
<invoker.SnowFlake: long getNewstmp()>
The data isgggg invoker.SnowFlake getNewstmp [] {cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}  {cfhider.WordCount$IntSumReducer={reduce=[I@1112aeb9}, cfhider.WordCount$TokenizerMapper={map=[I@4b59c01c}, cfhider.WordCount={main=[I@31aed88a}, invoker.SnowFlake={<init>=[I@548fe222, getNextMill=[I@3247518d, getNewstmp=[I@18c852}}
Coming...
doAnalysis Startingqqqqqqqq.....
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$l0 = staticinvoke <java.lang.System: long currentTimeMillis()>()
currStmt left value20210420:$l0
doAnalysis endqqqqqqq.....
come here
[CFMAP]2021 After BackwardAnalysis:{cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}
[taint into] sootMethod: <clinit>
[]
class name :invoker.SnowFlake
method name :<clinit>
method list :[]
clasname=invoker.SnowFlake
methodname=<clinit>
sourcelist2021=[]
20210427node :<invoker.SnowFlake: long sequence> = 0L
20210427node in :[]
普通复制语句1112:<invoker.SnowFlake: long sequence> = 0L
[taint source] u:0L
SourceList:[]
20210427node out :[]
20210427node :<invoker.SnowFlake: long lastStmp> = -1L
20210427node in :[]
普通复制语句1112:<invoker.SnowFlake: long lastStmp> = -1L
[taint source] u:-1L
SourceList:[]
20210427node out :[]
20210427node :return
20210427node in :[]
20210427node out :[]
analysis.outSet.size():0
[CFMAP]2021 After taintAnalysis:{cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}
The data isgggg 
<invoker.SnowFlake: void <clinit>()>
The data isgggg invoker.SnowFlake <clinit> [] {cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}  {cfhider.WordCount$IntSumReducer={reduce=[I@1112aeb9}, cfhider.WordCount$TokenizerMapper={map=[I@4b59c01c}, cfhider.WordCount={main=[I@31aed88a}, invoker.SnowFlake={<init>=[I@548fe222, getNextMill=[I@3247518d, getNewstmp=[I@18c852}}
Coming...
doAnalysis Startingqqqqqqqq.....
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:<invoker.SnowFlake: long lastStmp> = -1L
currStmt left value20210420:<invoker.SnowFlake: long lastStmp>
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:<invoker.SnowFlake: long sequence> = 0L
currStmt left value20210420:<invoker.SnowFlake: long sequence>
doAnalysis endqqqqqqq.....
come here
[CFMAP]2021 After BackwardAnalysis:{cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}
[taint]SooClass:invoker.sgx_invoker
[taint]SooClass:cfhider.WordCount$IntSumReducer
[taint] class: cfhider.WordCount$IntSumReducer
methList :{<init>=[], reduce=[]}
[taint into] sootMethod: <init>
[]
class name :cfhider.WordCount$IntSumReducer
method name :<init>
method list :[]
clasname=cfhider.WordCount$IntSumReducer
methodname=<init>
sourcelist2021=[]
20210427node :r0 := @this: cfhider.WordCount$IntSumReducer
20210427node in :[]
20210427node out :[]
currStmt20210423:r0 := @this: cfhider.WordCount$IntSumReducer
20210427node :specialinvoke r0.<org.apache.hadoop.mapreduce.Reducer: void <init>()>()
20210427node in :[]
20210427node out :[]
[taint329]i invoke specialinvoke r0.<org.apache.hadoop.mapreduce.Reducer: void <init>()>()
[taint328]i invoke <org.apache.hadoop.mapreduce.Reducer: void <init>()>
[taint328]i invoke 0
20210427node :$r1 = new org.apache.hadoop.io.IntWritable
20210427node in :[]
普通复制语句1112:$r1 = new org.apache.hadoop.io.IntWritable
[taint source] u:new org.apache.hadoop.io.IntWritable
SourceList:[]
20210427node out :[]
20210427node :specialinvoke $r1.<org.apache.hadoop.io.IntWritable: void <init>()>()
20210427node in :[]
20210427node out :[]
[taint329]i invoke specialinvoke $r1.<org.apache.hadoop.io.IntWritable: void <init>()>()
[taint328]i invoke <org.apache.hadoop.io.IntWritable: void <init>()>
[taint328]i invoke 0
20210427node :r0.<cfhider.WordCount$IntSumReducer: org.apache.hadoop.io.IntWritable result> = $r1
20210427node in :[]
普通复制语句1112:r0.<cfhider.WordCount$IntSumReducer: org.apache.hadoop.io.IntWritable result> = $r1
[taint source] u:r0
SourceList:[]
[taint source] u:$r1
SourceList:[]
20210427node out :[]
20210427node :return
20210427node in :[]
20210427node out :[]
analysis.outSet.size():0
[CFMAP]2021 After taintAnalysis:{cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}
The data isgggg 
<cfhider.WordCount$IntSumReducer: void <init>()>
The data isgggg cfhider.WordCount$IntSumReducer <init> [] {cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}  {cfhider.WordCount$IntSumReducer={reduce=[I@1112aeb9}, cfhider.WordCount$TokenizerMapper={map=[I@4b59c01c}, cfhider.WordCount={main=[I@31aed88a}, invoker.SnowFlake={<init>=[I@548fe222, getNextMill=[I@3247518d, getNewstmp=[I@18c852}}
Coming...
doAnalysis Startingqqqqqqqq.....
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:r0.<cfhider.WordCount$IntSumReducer: org.apache.hadoop.io.IntWritable result> = $r1
currStmt left value20210420:r0.<cfhider.WordCount$IntSumReducer: org.apache.hadoop.io.IntWritable result>
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
[taint329]i invoke specialinvoke $r1.<org.apache.hadoop.io.IntWritable: void <init>()>()
[taint328]i invoke <org.apache.hadoop.io.IntWritable: void <init>()>
[taint328]i invoke 0
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$r1 = new org.apache.hadoop.io.IntWritable
currStmt left value20210420:$r1
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
[taint329]i invoke specialinvoke r0.<org.apache.hadoop.mapreduce.Reducer: void <init>()>()
[taint328]i invoke <org.apache.hadoop.mapreduce.Reducer: void <init>()>
[taint328]i invoke 0
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
doAnalysis endqqqqqqq.....
come here
[CFMAP]2021 After BackwardAnalysis:{cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}
[taint into] sootMethod: reduce
[]
class name :cfhider.WordCount$IntSumReducer
method name :reduce
method list :[]
clasname=cfhider.WordCount$IntSumReducer
methodname=reduce
sourcelist2021=[]
20210427node :r0 := @this: cfhider.WordCount$IntSumReducer
20210427node in :[]
20210427node out :[]
currStmt20210423:r0 := @this: cfhider.WordCount$IntSumReducer
20210427node :r1 := @parameter0: org.apache.hadoop.io.Text
20210427node in :[]
[idStmt]iiiiiii r1 := @parameter0: org.apache.hadoop.io.Text  index:0
ClassName:cfhider.WordCount$IntSumReducer
MethodName:reduce
aaaa:0
20210427node out :[]
currStmt20210423:r1 := @parameter0: org.apache.hadoop.io.Text
20210427node :r2 := @parameter1: java.lang.Iterable
20210427node in :[]
[idStmt]iiiiiii r2 := @parameter1: java.lang.Iterable  index:1
ClassName:cfhider.WordCount$IntSumReducer
MethodName:reduce
aaaa:0
20210427node out :[]
currStmt20210423:r2 := @parameter1: java.lang.Iterable
20210427node :r3 := @parameter2: org.apache.hadoop.mapreduce.Reducer$Context
20210427node in :[]
[idStmt]iiiiiii r3 := @parameter2: org.apache.hadoop.mapreduce.Reducer$Context  index:2
ClassName:cfhider.WordCount$IntSumReducer
MethodName:reduce
aaaa:0
20210427node out :[]
currStmt20210423:r3 := @parameter2: org.apache.hadoop.mapreduce.Reducer$Context
20210427node :i0 = 0
20210427node in :[]
普通复制语句1112:i0 = 0
[taint source] u:0
SourceList:[]
20210427node out :[]
20210427node :r4 = interfaceinvoke r2.<java.lang.Iterable: java.util.Iterator iterator()>()
20210427node in :[]
调用语句赋值给变量:r4 = interfaceinvoke r2.<java.lang.Iterable: java.util.Iterator iterator()>()
20210427node out :[]
[taint328]a invoke <java.lang.Iterable: java.util.Iterator iterator()>
[taint328]a invoke 0
20210427node :$z0 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>()
20210427node in :[]
调用语句赋值给变量:$z0 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>()
20210427node out :[]
[taint328]a invoke <java.util.Iterator: boolean hasNext()>
[taint328]a invoke 0
20210427node :if $z0 == 0 goto $r7 = r0.<cfhider.WordCount$IntSumReducer: org.apache.hadoop.io.IntWritable result>
20210427node in :[]
20210427node out :[]
Have
Stmt if :if $z0 == 0 goto $r7 = r0.<cfhider.WordCount$IntSumReducer: org.apache.hadoop.io.IntWritable result>Stmt if value:$z0 == 0the value=$z0
the value=0
maintainValues.size0
ifValues1
20210427node :$r7 = r0.<cfhider.WordCount$IntSumReducer: org.apache.hadoop.io.IntWritable result>
20210427node in :[]
普通复制语句1112:$r7 = r0.<cfhider.WordCount$IntSumReducer: org.apache.hadoop.io.IntWritable result>
[taint source] u:r0
SourceList:[]
[taint source] u:r0.<cfhider.WordCount$IntSumReducer: org.apache.hadoop.io.IntWritable result>
SourceList:[]
20210427node out :[]
20210427node :virtualinvoke $r7.<org.apache.hadoop.io.IntWritable: void set(int)>(i0)
20210427node in :[]
20210427node out :[]
[taint329]i invoke virtualinvoke $r7.<org.apache.hadoop.io.IntWritable: void set(int)>(i0)
[taint328]i invoke <org.apache.hadoop.io.IntWritable: void set(int)>
[taint328]i invoke 1
value:i0
isoutSetContains  false value:i0 index:0
20210427node :$r8 = r0.<cfhider.WordCount$IntSumReducer: org.apache.hadoop.io.IntWritable result>
20210427node in :[]
普通复制语句1112:$r8 = r0.<cfhider.WordCount$IntSumReducer: org.apache.hadoop.io.IntWritable result>
[taint source] u:r0
SourceList:[]
[taint source] u:r0.<cfhider.WordCount$IntSumReducer: org.apache.hadoop.io.IntWritable result>
SourceList:[]
20210427node out :[]
20210427node :virtualinvoke r3.<org.apache.hadoop.mapreduce.Reducer$Context: void write(java.lang.Object,java.lang.Object)>(r1, $r8)
20210427node in :[]
20210427node out :[]
[taint329]i invoke virtualinvoke r3.<org.apache.hadoop.mapreduce.Reducer$Context: void write(java.lang.Object,java.lang.Object)>(r1, $r8)
[taint328]i invoke <org.apache.hadoop.mapreduce.TaskInputOutputContext: void write(java.lang.Object,java.lang.Object)>
[taint328]i invoke 2
value:r1
isoutSetContains  false value:r1 index:0
value:$r8
isoutSetContains  false value:$r8 index:1
20210427node :return
20210427node in :[]
20210427node out :[]
20210427node :$r6 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>()
20210427node in :[]
调用语句赋值给变量:$r6 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>()
20210427node out :[]
[taint328]a invoke <java.util.Iterator: java.lang.Object next()>
[taint328]a invoke 0
20210427node :r5 = (org.apache.hadoop.io.IntWritable) $r6
20210427node in :[]
普通复制语句1112:r5 = (org.apache.hadoop.io.IntWritable) $r6
[taint source] u:$r6
SourceList:[]
[taint source] u:(org.apache.hadoop.io.IntWritable) $r6
SourceList:[]
20210427node out :[]
20210427node :$i1 = virtualinvoke r5.<org.apache.hadoop.io.IntWritable: int get()>()
20210427node in :[]
调用语句赋值给变量:$i1 = virtualinvoke r5.<org.apache.hadoop.io.IntWritable: int get()>()
20210427node out :[]
[taint328]a invoke <org.apache.hadoop.io.IntWritable: int get()>
[taint328]a invoke 0
20210427node :i0 = i0 + $i1
20210427node in :[]
普通复制语句1112:i0 = i0 + $i1
[taint source] u:i0
SourceList:[]
[taint source] u:$i1
SourceList:[]
[taint source] u:i0 + $i1
SourceList:[]
20210427node out :[]
20210427node :goto [?= $z0 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>()]
20210427node in :[]
20210427node out :[]
analysis.outSet.size():0
[CFMAP]2021 After taintAnalysis:{cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}
The data isgggg 
<cfhider.WordCount$IntSumReducer: void reduce(org.apache.hadoop.io.Text,java.lang.Iterable,org.apache.hadoop.mapreduce.Reducer$Context)>
The data isgggg cfhider.WordCount$IntSumReducer reduce [] {cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}  {cfhider.WordCount$IntSumReducer={reduce=[I@5b077f8a}, cfhider.WordCount$TokenizerMapper={map=[I@4b59c01c}, cfhider.WordCount={main=[I@31aed88a}, invoker.SnowFlake={<init>=[I@548fe222, getNextMill=[I@3247518d, getNewstmp=[I@18c852}}
Coming...
doAnalysis Startingqqqqqqqq.....
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:i0 = i0 + $i1
currStmt left value20210420:i0
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$i1 = virtualinvoke r5.<org.apache.hadoop.io.IntWritable: int get()>()
currStmt left value20210420:$i1
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:r5 = (org.apache.hadoop.io.IntWritable) $r6
currStmt left value20210420:r5
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$r6 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>()
currStmt left value20210420:$r6
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
[taint329]i invoke virtualinvoke r3.<org.apache.hadoop.mapreduce.Reducer$Context: void write(java.lang.Object,java.lang.Object)>(r1, $r8)
[taint328]i invoke <org.apache.hadoop.mapreduce.TaskInputOutputContext: void write(java.lang.Object,java.lang.Object)>
[taint328]i invoke 2
value:r1
value:$r8
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$r8 = r0.<cfhider.WordCount$IntSumReducer: org.apache.hadoop.io.IntWritable result>
currStmt left value20210420:$r8
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
[taint329]i invoke virtualinvoke $r7.<org.apache.hadoop.io.IntWritable: void set(int)>(i0)
[taint328]i invoke <org.apache.hadoop.io.IntWritable: void set(int)>
[taint328]i invoke 1
value:i0
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$r7 = r0.<cfhider.WordCount$IntSumReducer: org.apache.hadoop.io.IntWritable result>
currStmt left value20210420:$r7
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
Have
the value=$z0
the value=0
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$z0 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>()
currStmt left value20210420:$z0
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:r4 = interfaceinvoke r2.<java.lang.Iterable: java.util.Iterator iterator()>()
currStmt left value20210420:r4
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:i0 = 0
currStmt left value20210420:i0
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
doAnalysis endqqqqqqq.....
come here
[CFMAP]2021 After BackwardAnalysis:{cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}
[taint into] sootMethod: reduce
[]
class name :cfhider.WordCount$IntSumReducer
method name :reduce
method list :[]
clasname=cfhider.WordCount$IntSumReducer
methodname=reduce
sourcelist2021=[]
20210427node :r0 := @this: cfhider.WordCount$IntSumReducer
20210427node in :[]
20210427node out :[]
currStmt20210423:r0 := @this: cfhider.WordCount$IntSumReducer
20210427node :r1 := @parameter0: java.lang.Object
20210427node in :[]
[idStmt]iiiiiii r1 := @parameter0: java.lang.Object  index:0
ClassName:cfhider.WordCount$IntSumReducer
MethodName:reduce
aaaa:0
20210427node out :[]
currStmt20210423:r1 := @parameter0: java.lang.Object
20210427node :r2 := @parameter1: java.lang.Iterable
20210427node in :[]
[idStmt]iiiiiii r2 := @parameter1: java.lang.Iterable  index:1
ClassName:cfhider.WordCount$IntSumReducer
MethodName:reduce
aaaa:0
20210427node out :[]
currStmt20210423:r2 := @parameter1: java.lang.Iterable
20210427node :r3 := @parameter2: org.apache.hadoop.mapreduce.Reducer$Context
20210427node in :[]
[idStmt]iiiiiii r3 := @parameter2: org.apache.hadoop.mapreduce.Reducer$Context  index:2
ClassName:cfhider.WordCount$IntSumReducer
MethodName:reduce
aaaa:0
20210427node out :[]
currStmt20210423:r3 := @parameter2: org.apache.hadoop.mapreduce.Reducer$Context
20210427node :$r4 = (org.apache.hadoop.io.Text) r1
20210427node in :[]
普通复制语句1112:$r4 = (org.apache.hadoop.io.Text) r1
[taint source] u:r1
SourceList:[]
[taint source] u:(org.apache.hadoop.io.Text) r1
SourceList:[]
20210427node out :[]
20210427node :virtualinvoke r0.<cfhider.WordCount$IntSumReducer: void reduce(org.apache.hadoop.io.Text,java.lang.Iterable,org.apache.hadoop.mapreduce.Reducer$Context)>($r4, r2, r3)
20210427node in :[]
20210427node out :[]
[taint329]i invoke virtualinvoke r0.<cfhider.WordCount$IntSumReducer: void reduce(org.apache.hadoop.io.Text,java.lang.Iterable,org.apache.hadoop.mapreduce.Reducer$Context)>($r4, r2, r3)
[taint328]i invoke <cfhider.WordCount$IntSumReducer: void reduce(org.apache.hadoop.io.Text,java.lang.Iterable,org.apache.hadoop.mapreduce.Reducer$Context)>
[taint328]i invoke 3
value:$r4
isoutSetContains  false value:$r4 index:0
value:r2
isoutSetContains  false value:r2 index:1
value:r3
isoutSetContains  false value:r3 index:2
[invokemap]invoke:reduce  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
20210427node :return
20210427node in :[]
20210427node out :[]
analysis.outSet.size():0
[CFMAP]2021 After taintAnalysis:{cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}
The data isgggg 
<cfhider.WordCount$IntSumReducer: void reduce(java.lang.Object,java.lang.Iterable,org.apache.hadoop.mapreduce.Reducer$Context)>
The data isgggg cfhider.WordCount$IntSumReducer reduce [] {cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}  {cfhider.WordCount$IntSumReducer={reduce=[I@49466bb6}, cfhider.WordCount$TokenizerMapper={map=[I@4b59c01c}, cfhider.WordCount={main=[I@31aed88a}, invoker.SnowFlake={<init>=[I@548fe222, getNextMill=[I@3247518d, getNewstmp=[I@18c852}}
Coming...
doAnalysis Startingqqqqqqqq.....
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
[taint329]i invoke virtualinvoke r0.<cfhider.WordCount$IntSumReducer: void reduce(org.apache.hadoop.io.Text,java.lang.Iterable,org.apache.hadoop.mapreduce.Reducer$Context)>($r4, r2, r3)
[taint328]i invoke <cfhider.WordCount$IntSumReducer: void reduce(org.apache.hadoop.io.Text,java.lang.Iterable,org.apache.hadoop.mapreduce.Reducer$Context)>
[taint328]i invoke 3
value:$r4
in here:[I@2e499f4f
[invokemap]invoke:reduce  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
value:r2
in here:[I@2e499f4f
[invokemap]invoke:reduce  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
value:r3
in here:[I@2e499f4f
[invokemap]invoke:reduce  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$r4 = (org.apache.hadoop.io.Text) r1
currStmt left value20210420:$r4
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
doAnalysis endqqqqqqq.....
come here
[CFMAP]2021 After BackwardAnalysis:{cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}
[taint into] sootMethod: <init>
[]
class name :cfhider.WordCount$IntSumReducer
method name :<init>
method list :[]
clasname=cfhider.WordCount$IntSumReducer
methodname=<init>
sourcelist2021=[]
20210427node :r0 := @this: cfhider.WordCount$IntSumReducer
20210427node in :[]
20210427node out :[]
currStmt20210423:r0 := @this: cfhider.WordCount$IntSumReducer
20210427node :specialinvoke r0.<org.apache.hadoop.mapreduce.Reducer: void <init>()>()
20210427node in :[]
20210427node out :[]
[taint329]i invoke specialinvoke r0.<org.apache.hadoop.mapreduce.Reducer: void <init>()>()
[taint328]i invoke <org.apache.hadoop.mapreduce.Reducer: void <init>()>
[taint328]i invoke 0
20210427node :$r1 = new org.apache.hadoop.io.IntWritable
20210427node in :[]
普通复制语句1112:$r1 = new org.apache.hadoop.io.IntWritable
[taint source] u:new org.apache.hadoop.io.IntWritable
SourceList:[]
20210427node out :[]
20210427node :specialinvoke $r1.<org.apache.hadoop.io.IntWritable: void <init>()>()
20210427node in :[]
20210427node out :[]
[taint329]i invoke specialinvoke $r1.<org.apache.hadoop.io.IntWritable: void <init>()>()
[taint328]i invoke <org.apache.hadoop.io.IntWritable: void <init>()>
[taint328]i invoke 0
20210427node :r0.<cfhider.WordCount$IntSumReducer: org.apache.hadoop.io.IntWritable result> = $r1
20210427node in :[]
普通复制语句1112:r0.<cfhider.WordCount$IntSumReducer: org.apache.hadoop.io.IntWritable result> = $r1
[taint source] u:r0
SourceList:[]
[taint source] u:$r1
SourceList:[]
20210427node out :[]
20210427node :return
20210427node in :[]
20210427node out :[]
analysis.outSet.size():0
[CFMAP]2021 After taintAnalysis:{cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}
The data isgggg 
<cfhider.WordCount$IntSumReducer: void <init>()>
The data isgggg cfhider.WordCount$IntSumReducer <init> [] {cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}  {cfhider.WordCount$IntSumReducer={reduce=[I@49466bb6}, cfhider.WordCount$TokenizerMapper={map=[I@4b59c01c}, cfhider.WordCount={main=[I@31aed88a}, invoker.SnowFlake={<init>=[I@548fe222, getNextMill=[I@3247518d, getNewstmp=[I@18c852}}
Coming...
doAnalysis Startingqqqqqqqq.....
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:r0.<cfhider.WordCount$IntSumReducer: org.apache.hadoop.io.IntWritable result> = $r1
currStmt left value20210420:r0.<cfhider.WordCount$IntSumReducer: org.apache.hadoop.io.IntWritable result>
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
[taint329]i invoke specialinvoke $r1.<org.apache.hadoop.io.IntWritable: void <init>()>()
[taint328]i invoke <org.apache.hadoop.io.IntWritable: void <init>()>
[taint328]i invoke 0
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$r1 = new org.apache.hadoop.io.IntWritable
currStmt left value20210420:$r1
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
[taint329]i invoke specialinvoke r0.<org.apache.hadoop.mapreduce.Reducer: void <init>()>()
[taint328]i invoke <org.apache.hadoop.mapreduce.Reducer: void <init>()>
[taint328]i invoke 0
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
doAnalysis endqqqqqqq.....
come here
[CFMAP]2021 After BackwardAnalysis:{cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}
[taint into] sootMethod: reduce
[]
class name :cfhider.WordCount$IntSumReducer
method name :reduce
method list :[]
clasname=cfhider.WordCount$IntSumReducer
methodname=reduce
sourcelist2021=[]
20210427node :r0 := @this: cfhider.WordCount$IntSumReducer
20210427node in :[]
20210427node out :[]
currStmt20210423:r0 := @this: cfhider.WordCount$IntSumReducer
20210427node :r1 := @parameter0: org.apache.hadoop.io.Text
20210427node in :[]
[idStmt]iiiiiii r1 := @parameter0: org.apache.hadoop.io.Text  index:0
ClassName:cfhider.WordCount$IntSumReducer
MethodName:reduce
aaaa:0
20210427node out :[]
currStmt20210423:r1 := @parameter0: org.apache.hadoop.io.Text
20210427node :r2 := @parameter1: java.lang.Iterable
20210427node in :[]
[idStmt]iiiiiii r2 := @parameter1: java.lang.Iterable  index:1
ClassName:cfhider.WordCount$IntSumReducer
MethodName:reduce
aaaa:0
20210427node out :[]
currStmt20210423:r2 := @parameter1: java.lang.Iterable
20210427node :r3 := @parameter2: org.apache.hadoop.mapreduce.Reducer$Context
20210427node in :[]
[idStmt]iiiiiii r3 := @parameter2: org.apache.hadoop.mapreduce.Reducer$Context  index:2
ClassName:cfhider.WordCount$IntSumReducer
MethodName:reduce
aaaa:0
20210427node out :[]
currStmt20210423:r3 := @parameter2: org.apache.hadoop.mapreduce.Reducer$Context
20210427node :i0 = 0
20210427node in :[]
普通复制语句1112:i0 = 0
[taint source] u:0
SourceList:[]
20210427node out :[]
20210427node :r4 = interfaceinvoke r2.<java.lang.Iterable: java.util.Iterator iterator()>()
20210427node in :[]
调用语句赋值给变量:r4 = interfaceinvoke r2.<java.lang.Iterable: java.util.Iterator iterator()>()
20210427node out :[]
[taint328]a invoke <java.lang.Iterable: java.util.Iterator iterator()>
[taint328]a invoke 0
20210427node :$z0 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>()
20210427node in :[]
调用语句赋值给变量:$z0 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>()
20210427node out :[]
[taint328]a invoke <java.util.Iterator: boolean hasNext()>
[taint328]a invoke 0
20210427node :if $z0 == 0 goto $r7 = r0.<cfhider.WordCount$IntSumReducer: org.apache.hadoop.io.IntWritable result>
20210427node in :[]
20210427node out :[]
Have
Stmt if :if $z0 == 0 goto $r7 = r0.<cfhider.WordCount$IntSumReducer: org.apache.hadoop.io.IntWritable result>Stmt if value:$z0 == 0the value=$z0
the value=0
maintainValues.size0
ifValues1
20210427node :$r7 = r0.<cfhider.WordCount$IntSumReducer: org.apache.hadoop.io.IntWritable result>
20210427node in :[]
普通复制语句1112:$r7 = r0.<cfhider.WordCount$IntSumReducer: org.apache.hadoop.io.IntWritable result>
[taint source] u:r0
SourceList:[]
[taint source] u:r0.<cfhider.WordCount$IntSumReducer: org.apache.hadoop.io.IntWritable result>
SourceList:[]
20210427node out :[]
20210427node :virtualinvoke $r7.<org.apache.hadoop.io.IntWritable: void set(int)>(i0)
20210427node in :[]
20210427node out :[]
[taint329]i invoke virtualinvoke $r7.<org.apache.hadoop.io.IntWritable: void set(int)>(i0)
[taint328]i invoke <org.apache.hadoop.io.IntWritable: void set(int)>
[taint328]i invoke 1
value:i0
isoutSetContains  false value:i0 index:0
20210427node :$r8 = r0.<cfhider.WordCount$IntSumReducer: org.apache.hadoop.io.IntWritable result>
20210427node in :[]
普通复制语句1112:$r8 = r0.<cfhider.WordCount$IntSumReducer: org.apache.hadoop.io.IntWritable result>
[taint source] u:r0
SourceList:[]
[taint source] u:r0.<cfhider.WordCount$IntSumReducer: org.apache.hadoop.io.IntWritable result>
SourceList:[]
20210427node out :[]
20210427node :virtualinvoke r3.<org.apache.hadoop.mapreduce.Reducer$Context: void write(java.lang.Object,java.lang.Object)>(r1, $r8)
20210427node in :[]
20210427node out :[]
[taint329]i invoke virtualinvoke r3.<org.apache.hadoop.mapreduce.Reducer$Context: void write(java.lang.Object,java.lang.Object)>(r1, $r8)
[taint328]i invoke <org.apache.hadoop.mapreduce.TaskInputOutputContext: void write(java.lang.Object,java.lang.Object)>
[taint328]i invoke 2
value:r1
isoutSetContains  false value:r1 index:0
value:$r8
isoutSetContains  false value:$r8 index:1
20210427node :return
20210427node in :[]
20210427node out :[]
20210427node :$r6 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>()
20210427node in :[]
调用语句赋值给变量:$r6 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>()
20210427node out :[]
[taint328]a invoke <java.util.Iterator: java.lang.Object next()>
[taint328]a invoke 0
20210427node :r5 = (org.apache.hadoop.io.IntWritable) $r6
20210427node in :[]
普通复制语句1112:r5 = (org.apache.hadoop.io.IntWritable) $r6
[taint source] u:$r6
SourceList:[]
[taint source] u:(org.apache.hadoop.io.IntWritable) $r6
SourceList:[]
20210427node out :[]
20210427node :$i1 = virtualinvoke r5.<org.apache.hadoop.io.IntWritable: int get()>()
20210427node in :[]
调用语句赋值给变量:$i1 = virtualinvoke r5.<org.apache.hadoop.io.IntWritable: int get()>()
20210427node out :[]
[taint328]a invoke <org.apache.hadoop.io.IntWritable: int get()>
[taint328]a invoke 0
20210427node :i0 = i0 + $i1
20210427node in :[]
普通复制语句1112:i0 = i0 + $i1
[taint source] u:i0
SourceList:[]
[taint source] u:$i1
SourceList:[]
[taint source] u:i0 + $i1
SourceList:[]
20210427node out :[]
20210427node :goto [?= $z0 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>()]
20210427node in :[]
20210427node out :[]
analysis.outSet.size():0
[CFMAP]2021 After taintAnalysis:{cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}
The data isgggg 
<cfhider.WordCount$IntSumReducer: void reduce(org.apache.hadoop.io.Text,java.lang.Iterable,org.apache.hadoop.mapreduce.Reducer$Context)>
The data isgggg cfhider.WordCount$IntSumReducer reduce [] {cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}  {cfhider.WordCount$IntSumReducer={reduce=[I@637a1346}, cfhider.WordCount$TokenizerMapper={map=[I@4b59c01c}, cfhider.WordCount={main=[I@31aed88a}, invoker.SnowFlake={<init>=[I@548fe222, getNextMill=[I@3247518d, getNewstmp=[I@18c852}}
Coming...
doAnalysis Startingqqqqqqqq.....
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:i0 = i0 + $i1
currStmt left value20210420:i0
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$i1 = virtualinvoke r5.<org.apache.hadoop.io.IntWritable: int get()>()
currStmt left value20210420:$i1
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:r5 = (org.apache.hadoop.io.IntWritable) $r6
currStmt left value20210420:r5
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$r6 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>()
currStmt left value20210420:$r6
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
[taint329]i invoke virtualinvoke r3.<org.apache.hadoop.mapreduce.Reducer$Context: void write(java.lang.Object,java.lang.Object)>(r1, $r8)
[taint328]i invoke <org.apache.hadoop.mapreduce.TaskInputOutputContext: void write(java.lang.Object,java.lang.Object)>
[taint328]i invoke 2
value:r1
value:$r8
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$r8 = r0.<cfhider.WordCount$IntSumReducer: org.apache.hadoop.io.IntWritable result>
currStmt left value20210420:$r8
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
[taint329]i invoke virtualinvoke $r7.<org.apache.hadoop.io.IntWritable: void set(int)>(i0)
[taint328]i invoke <org.apache.hadoop.io.IntWritable: void set(int)>
[taint328]i invoke 1
value:i0
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$r7 = r0.<cfhider.WordCount$IntSumReducer: org.apache.hadoop.io.IntWritable result>
currStmt left value20210420:$r7
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
Have
the value=$z0
the value=0
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$z0 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>()
currStmt left value20210420:$z0
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:r4 = interfaceinvoke r2.<java.lang.Iterable: java.util.Iterator iterator()>()
currStmt left value20210420:r4
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:i0 = 0
currStmt left value20210420:i0
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
doAnalysis endqqqqqqq.....
come here
[CFMAP]2021 After BackwardAnalysis:{cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}
[taint into] sootMethod: reduce
[]
class name :cfhider.WordCount$IntSumReducer
method name :reduce
method list :[]
clasname=cfhider.WordCount$IntSumReducer
methodname=reduce
sourcelist2021=[]
20210427node :r0 := @this: cfhider.WordCount$IntSumReducer
20210427node in :[]
20210427node out :[]
currStmt20210423:r0 := @this: cfhider.WordCount$IntSumReducer
20210427node :r1 := @parameter0: java.lang.Object
20210427node in :[]
[idStmt]iiiiiii r1 := @parameter0: java.lang.Object  index:0
ClassName:cfhider.WordCount$IntSumReducer
MethodName:reduce
aaaa:0
20210427node out :[]
currStmt20210423:r1 := @parameter0: java.lang.Object
20210427node :r2 := @parameter1: java.lang.Iterable
20210427node in :[]
[idStmt]iiiiiii r2 := @parameter1: java.lang.Iterable  index:1
ClassName:cfhider.WordCount$IntSumReducer
MethodName:reduce
aaaa:0
20210427node out :[]
currStmt20210423:r2 := @parameter1: java.lang.Iterable
20210427node :r3 := @parameter2: org.apache.hadoop.mapreduce.Reducer$Context
20210427node in :[]
[idStmt]iiiiiii r3 := @parameter2: org.apache.hadoop.mapreduce.Reducer$Context  index:2
ClassName:cfhider.WordCount$IntSumReducer
MethodName:reduce
aaaa:0
20210427node out :[]
currStmt20210423:r3 := @parameter2: org.apache.hadoop.mapreduce.Reducer$Context
20210427node :$r4 = (org.apache.hadoop.io.Text) r1
20210427node in :[]
普通复制语句1112:$r4 = (org.apache.hadoop.io.Text) r1
[taint source] u:r1
SourceList:[]
[taint source] u:(org.apache.hadoop.io.Text) r1
SourceList:[]
20210427node out :[]
20210427node :virtualinvoke r0.<cfhider.WordCount$IntSumReducer: void reduce(org.apache.hadoop.io.Text,java.lang.Iterable,org.apache.hadoop.mapreduce.Reducer$Context)>($r4, r2, r3)
20210427node in :[]
20210427node out :[]
[taint329]i invoke virtualinvoke r0.<cfhider.WordCount$IntSumReducer: void reduce(org.apache.hadoop.io.Text,java.lang.Iterable,org.apache.hadoop.mapreduce.Reducer$Context)>($r4, r2, r3)
[taint328]i invoke <cfhider.WordCount$IntSumReducer: void reduce(org.apache.hadoop.io.Text,java.lang.Iterable,org.apache.hadoop.mapreduce.Reducer$Context)>
[taint328]i invoke 3
value:$r4
isoutSetContains  false value:$r4 index:0
value:r2
isoutSetContains  false value:r2 index:1
value:r3
isoutSetContains  false value:r3 index:2
[invokemap]invoke:reduce  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
20210427node :return
20210427node in :[]
20210427node out :[]
analysis.outSet.size():0
[CFMAP]2021 After taintAnalysis:{cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}
The data isgggg 
<cfhider.WordCount$IntSumReducer: void reduce(java.lang.Object,java.lang.Iterable,org.apache.hadoop.mapreduce.Reducer$Context)>
The data isgggg cfhider.WordCount$IntSumReducer reduce [] {cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}  {cfhider.WordCount$IntSumReducer={reduce=[I@63878baf}, cfhider.WordCount$TokenizerMapper={map=[I@4b59c01c}, cfhider.WordCount={main=[I@31aed88a}, invoker.SnowFlake={<init>=[I@548fe222, getNextMill=[I@3247518d, getNewstmp=[I@18c852}}
Coming...
doAnalysis Startingqqqqqqqq.....
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
[taint329]i invoke virtualinvoke r0.<cfhider.WordCount$IntSumReducer: void reduce(org.apache.hadoop.io.Text,java.lang.Iterable,org.apache.hadoop.mapreduce.Reducer$Context)>($r4, r2, r3)
[taint328]i invoke <cfhider.WordCount$IntSumReducer: void reduce(org.apache.hadoop.io.Text,java.lang.Iterable,org.apache.hadoop.mapreduce.Reducer$Context)>
[taint328]i invoke 3
value:$r4
in here:[I@57e3c135
[invokemap]invoke:reduce  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
value:r2
in here:[I@57e3c135
[invokemap]invoke:reduce  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
value:r3
in here:[I@57e3c135
[invokemap]invoke:reduce  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$r4 = (org.apache.hadoop.io.Text) r1
currStmt left value20210420:$r4
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
doAnalysis endqqqqqqq.....
come here
[CFMAP]2021 After BackwardAnalysis:{cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}
[taint into] sootMethod: <init>
[]
class name :cfhider.WordCount$IntSumReducer
method name :<init>
method list :[]
clasname=cfhider.WordCount$IntSumReducer
methodname=<init>
sourcelist2021=[]
20210427node :r0 := @this: cfhider.WordCount$IntSumReducer
20210427node in :[]
20210427node out :[]
currStmt20210423:r0 := @this: cfhider.WordCount$IntSumReducer
20210427node :specialinvoke r0.<org.apache.hadoop.mapreduce.Reducer: void <init>()>()
20210427node in :[]
20210427node out :[]
[taint329]i invoke specialinvoke r0.<org.apache.hadoop.mapreduce.Reducer: void <init>()>()
[taint328]i invoke <org.apache.hadoop.mapreduce.Reducer: void <init>()>
[taint328]i invoke 0
20210427node :$r1 = new org.apache.hadoop.io.IntWritable
20210427node in :[]
普通复制语句1112:$r1 = new org.apache.hadoop.io.IntWritable
[taint source] u:new org.apache.hadoop.io.IntWritable
SourceList:[]
20210427node out :[]
20210427node :specialinvoke $r1.<org.apache.hadoop.io.IntWritable: void <init>()>()
20210427node in :[]
20210427node out :[]
[taint329]i invoke specialinvoke $r1.<org.apache.hadoop.io.IntWritable: void <init>()>()
[taint328]i invoke <org.apache.hadoop.io.IntWritable: void <init>()>
[taint328]i invoke 0
20210427node :r0.<cfhider.WordCount$IntSumReducer: org.apache.hadoop.io.IntWritable result> = $r1
20210427node in :[]
普通复制语句1112:r0.<cfhider.WordCount$IntSumReducer: org.apache.hadoop.io.IntWritable result> = $r1
[taint source] u:r0
SourceList:[]
[taint source] u:$r1
SourceList:[]
20210427node out :[]
20210427node :return
20210427node in :[]
20210427node out :[]
analysis.outSet.size():0
[CFMAP]2021 After taintAnalysis:{cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}
The data isgggg 
<cfhider.WordCount$IntSumReducer: void <init>()>
The data isgggg cfhider.WordCount$IntSumReducer <init> [] {cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}  {cfhider.WordCount$IntSumReducer={reduce=[I@63878baf}, cfhider.WordCount$TokenizerMapper={map=[I@4b59c01c}, cfhider.WordCount={main=[I@31aed88a}, invoker.SnowFlake={<init>=[I@548fe222, getNextMill=[I@3247518d, getNewstmp=[I@18c852}}
Coming...
doAnalysis Startingqqqqqqqq.....
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:r0.<cfhider.WordCount$IntSumReducer: org.apache.hadoop.io.IntWritable result> = $r1
currStmt left value20210420:r0.<cfhider.WordCount$IntSumReducer: org.apache.hadoop.io.IntWritable result>
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
[taint329]i invoke specialinvoke $r1.<org.apache.hadoop.io.IntWritable: void <init>()>()
[taint328]i invoke <org.apache.hadoop.io.IntWritable: void <init>()>
[taint328]i invoke 0
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$r1 = new org.apache.hadoop.io.IntWritable
currStmt left value20210420:$r1
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
[taint329]i invoke specialinvoke r0.<org.apache.hadoop.mapreduce.Reducer: void <init>()>()
[taint328]i invoke <org.apache.hadoop.mapreduce.Reducer: void <init>()>
[taint328]i invoke 0
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
doAnalysis endqqqqqqq.....
come here
[CFMAP]2021 After BackwardAnalysis:{cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}
[taint into] sootMethod: reduce
[]
class name :cfhider.WordCount$IntSumReducer
method name :reduce
method list :[]
clasname=cfhider.WordCount$IntSumReducer
methodname=reduce
sourcelist2021=[]
20210427node :r0 := @this: cfhider.WordCount$IntSumReducer
20210427node in :[]
20210427node out :[]
currStmt20210423:r0 := @this: cfhider.WordCount$IntSumReducer
20210427node :r1 := @parameter0: org.apache.hadoop.io.Text
20210427node in :[]
[idStmt]iiiiiii r1 := @parameter0: org.apache.hadoop.io.Text  index:0
ClassName:cfhider.WordCount$IntSumReducer
MethodName:reduce
aaaa:0
20210427node out :[]
currStmt20210423:r1 := @parameter0: org.apache.hadoop.io.Text
20210427node :r2 := @parameter1: java.lang.Iterable
20210427node in :[]
[idStmt]iiiiiii r2 := @parameter1: java.lang.Iterable  index:1
ClassName:cfhider.WordCount$IntSumReducer
MethodName:reduce
aaaa:0
20210427node out :[]
currStmt20210423:r2 := @parameter1: java.lang.Iterable
20210427node :r3 := @parameter2: org.apache.hadoop.mapreduce.Reducer$Context
20210427node in :[]
[idStmt]iiiiiii r3 := @parameter2: org.apache.hadoop.mapreduce.Reducer$Context  index:2
ClassName:cfhider.WordCount$IntSumReducer
MethodName:reduce
aaaa:0
20210427node out :[]
currStmt20210423:r3 := @parameter2: org.apache.hadoop.mapreduce.Reducer$Context
20210427node :i0 = 0
20210427node in :[]
普通复制语句1112:i0 = 0
[taint source] u:0
SourceList:[]
20210427node out :[]
20210427node :r4 = interfaceinvoke r2.<java.lang.Iterable: java.util.Iterator iterator()>()
20210427node in :[]
调用语句赋值给变量:r4 = interfaceinvoke r2.<java.lang.Iterable: java.util.Iterator iterator()>()
20210427node out :[]
[taint328]a invoke <java.lang.Iterable: java.util.Iterator iterator()>
[taint328]a invoke 0
20210427node :$z0 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>()
20210427node in :[]
调用语句赋值给变量:$z0 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>()
20210427node out :[]
[taint328]a invoke <java.util.Iterator: boolean hasNext()>
[taint328]a invoke 0
20210427node :if $z0 == 0 goto $r7 = r0.<cfhider.WordCount$IntSumReducer: org.apache.hadoop.io.IntWritable result>
20210427node in :[]
20210427node out :[]
Have
Stmt if :if $z0 == 0 goto $r7 = r0.<cfhider.WordCount$IntSumReducer: org.apache.hadoop.io.IntWritable result>Stmt if value:$z0 == 0the value=$z0
the value=0
maintainValues.size0
ifValues1
20210427node :$r7 = r0.<cfhider.WordCount$IntSumReducer: org.apache.hadoop.io.IntWritable result>
20210427node in :[]
普通复制语句1112:$r7 = r0.<cfhider.WordCount$IntSumReducer: org.apache.hadoop.io.IntWritable result>
[taint source] u:r0
SourceList:[]
[taint source] u:r0.<cfhider.WordCount$IntSumReducer: org.apache.hadoop.io.IntWritable result>
SourceList:[]
20210427node out :[]
20210427node :virtualinvoke $r7.<org.apache.hadoop.io.IntWritable: void set(int)>(i0)
20210427node in :[]
20210427node out :[]
[taint329]i invoke virtualinvoke $r7.<org.apache.hadoop.io.IntWritable: void set(int)>(i0)
[taint328]i invoke <org.apache.hadoop.io.IntWritable: void set(int)>
[taint328]i invoke 1
value:i0
isoutSetContains  false value:i0 index:0
20210427node :$r8 = r0.<cfhider.WordCount$IntSumReducer: org.apache.hadoop.io.IntWritable result>
20210427node in :[]
普通复制语句1112:$r8 = r0.<cfhider.WordCount$IntSumReducer: org.apache.hadoop.io.IntWritable result>
[taint source] u:r0
SourceList:[]
[taint source] u:r0.<cfhider.WordCount$IntSumReducer: org.apache.hadoop.io.IntWritable result>
SourceList:[]
20210427node out :[]
20210427node :virtualinvoke r3.<org.apache.hadoop.mapreduce.Reducer$Context: void write(java.lang.Object,java.lang.Object)>(r1, $r8)
20210427node in :[]
20210427node out :[]
[taint329]i invoke virtualinvoke r3.<org.apache.hadoop.mapreduce.Reducer$Context: void write(java.lang.Object,java.lang.Object)>(r1, $r8)
[taint328]i invoke <org.apache.hadoop.mapreduce.TaskInputOutputContext: void write(java.lang.Object,java.lang.Object)>
[taint328]i invoke 2
value:r1
isoutSetContains  false value:r1 index:0
value:$r8
isoutSetContains  false value:$r8 index:1
20210427node :return
20210427node in :[]
20210427node out :[]
20210427node :$r6 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>()
20210427node in :[]
调用语句赋值给变量:$r6 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>()
20210427node out :[]
[taint328]a invoke <java.util.Iterator: java.lang.Object next()>
[taint328]a invoke 0
20210427node :r5 = (org.apache.hadoop.io.IntWritable) $r6
20210427node in :[]
普通复制语句1112:r5 = (org.apache.hadoop.io.IntWritable) $r6
[taint source] u:$r6
SourceList:[]
[taint source] u:(org.apache.hadoop.io.IntWritable) $r6
SourceList:[]
20210427node out :[]
20210427node :$i1 = virtualinvoke r5.<org.apache.hadoop.io.IntWritable: int get()>()
20210427node in :[]
调用语句赋值给变量:$i1 = virtualinvoke r5.<org.apache.hadoop.io.IntWritable: int get()>()
20210427node out :[]
[taint328]a invoke <org.apache.hadoop.io.IntWritable: int get()>
[taint328]a invoke 0
20210427node :i0 = i0 + $i1
20210427node in :[]
普通复制语句1112:i0 = i0 + $i1
[taint source] u:i0
SourceList:[]
[taint source] u:$i1
SourceList:[]
[taint source] u:i0 + $i1
SourceList:[]
20210427node out :[]
20210427node :goto [?= $z0 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>()]
20210427node in :[]
20210427node out :[]
analysis.outSet.size():0
[CFMAP]2021 After taintAnalysis:{cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}
The data isgggg 
<cfhider.WordCount$IntSumReducer: void reduce(org.apache.hadoop.io.Text,java.lang.Iterable,org.apache.hadoop.mapreduce.Reducer$Context)>
The data isgggg cfhider.WordCount$IntSumReducer reduce [] {cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}  {cfhider.WordCount$IntSumReducer={reduce=[I@29a1aba7}, cfhider.WordCount$TokenizerMapper={map=[I@4b59c01c}, cfhider.WordCount={main=[I@31aed88a}, invoker.SnowFlake={<init>=[I@548fe222, getNextMill=[I@3247518d, getNewstmp=[I@18c852}}
Coming...
doAnalysis Startingqqqqqqqq.....
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:i0 = i0 + $i1
currStmt left value20210420:i0
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$i1 = virtualinvoke r5.<org.apache.hadoop.io.IntWritable: int get()>()
currStmt left value20210420:$i1
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:r5 = (org.apache.hadoop.io.IntWritable) $r6
currStmt left value20210420:r5
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$r6 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>()
currStmt left value20210420:$r6
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
[taint329]i invoke virtualinvoke r3.<org.apache.hadoop.mapreduce.Reducer$Context: void write(java.lang.Object,java.lang.Object)>(r1, $r8)
[taint328]i invoke <org.apache.hadoop.mapreduce.TaskInputOutputContext: void write(java.lang.Object,java.lang.Object)>
[taint328]i invoke 2
value:r1
value:$r8
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$r8 = r0.<cfhider.WordCount$IntSumReducer: org.apache.hadoop.io.IntWritable result>
currStmt left value20210420:$r8
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
[taint329]i invoke virtualinvoke $r7.<org.apache.hadoop.io.IntWritable: void set(int)>(i0)
[taint328]i invoke <org.apache.hadoop.io.IntWritable: void set(int)>
[taint328]i invoke 1
value:i0
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$r7 = r0.<cfhider.WordCount$IntSumReducer: org.apache.hadoop.io.IntWritable result>
currStmt left value20210420:$r7
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
Have
the value=$z0
the value=0
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$z0 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>()
currStmt left value20210420:$z0
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:r4 = interfaceinvoke r2.<java.lang.Iterable: java.util.Iterator iterator()>()
currStmt left value20210420:r4
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:i0 = 0
currStmt left value20210420:i0
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
doAnalysis endqqqqqqq.....
come here
[CFMAP]2021 After BackwardAnalysis:{cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}
[taint into] sootMethod: reduce
[]
class name :cfhider.WordCount$IntSumReducer
method name :reduce
method list :[]
clasname=cfhider.WordCount$IntSumReducer
methodname=reduce
sourcelist2021=[]
20210427node :r0 := @this: cfhider.WordCount$IntSumReducer
20210427node in :[]
20210427node out :[]
currStmt20210423:r0 := @this: cfhider.WordCount$IntSumReducer
20210427node :r1 := @parameter0: java.lang.Object
20210427node in :[]
[idStmt]iiiiiii r1 := @parameter0: java.lang.Object  index:0
ClassName:cfhider.WordCount$IntSumReducer
MethodName:reduce
aaaa:0
20210427node out :[]
currStmt20210423:r1 := @parameter0: java.lang.Object
20210427node :r2 := @parameter1: java.lang.Iterable
20210427node in :[]
[idStmt]iiiiiii r2 := @parameter1: java.lang.Iterable  index:1
ClassName:cfhider.WordCount$IntSumReducer
MethodName:reduce
aaaa:0
20210427node out :[]
currStmt20210423:r2 := @parameter1: java.lang.Iterable
20210427node :r3 := @parameter2: org.apache.hadoop.mapreduce.Reducer$Context
20210427node in :[]
[idStmt]iiiiiii r3 := @parameter2: org.apache.hadoop.mapreduce.Reducer$Context  index:2
ClassName:cfhider.WordCount$IntSumReducer
MethodName:reduce
aaaa:0
20210427node out :[]
currStmt20210423:r3 := @parameter2: org.apache.hadoop.mapreduce.Reducer$Context
20210427node :$r4 = (org.apache.hadoop.io.Text) r1
20210427node in :[]
普通复制语句1112:$r4 = (org.apache.hadoop.io.Text) r1
[taint source] u:r1
SourceList:[]
[taint source] u:(org.apache.hadoop.io.Text) r1
SourceList:[]
20210427node out :[]
20210427node :virtualinvoke r0.<cfhider.WordCount$IntSumReducer: void reduce(org.apache.hadoop.io.Text,java.lang.Iterable,org.apache.hadoop.mapreduce.Reducer$Context)>($r4, r2, r3)
20210427node in :[]
20210427node out :[]
[taint329]i invoke virtualinvoke r0.<cfhider.WordCount$IntSumReducer: void reduce(org.apache.hadoop.io.Text,java.lang.Iterable,org.apache.hadoop.mapreduce.Reducer$Context)>($r4, r2, r3)
[taint328]i invoke <cfhider.WordCount$IntSumReducer: void reduce(org.apache.hadoop.io.Text,java.lang.Iterable,org.apache.hadoop.mapreduce.Reducer$Context)>
[taint328]i invoke 3
value:$r4
isoutSetContains  false value:$r4 index:0
value:r2
isoutSetContains  false value:r2 index:1
value:r3
isoutSetContains  false value:r3 index:2
[invokemap]invoke:reduce  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
20210427node :return
20210427node in :[]
20210427node out :[]
analysis.outSet.size():0
[CFMAP]2021 After taintAnalysis:{cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}
The data isgggg 
<cfhider.WordCount$IntSumReducer: void reduce(java.lang.Object,java.lang.Iterable,org.apache.hadoop.mapreduce.Reducer$Context)>
The data isgggg cfhider.WordCount$IntSumReducer reduce [] {cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}  {cfhider.WordCount$IntSumReducer={reduce=[I@350c764b}, cfhider.WordCount$TokenizerMapper={map=[I@4b59c01c}, cfhider.WordCount={main=[I@31aed88a}, invoker.SnowFlake={<init>=[I@548fe222, getNextMill=[I@3247518d, getNewstmp=[I@18c852}}
Coming...
doAnalysis Startingqqqqqqqq.....
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
[taint329]i invoke virtualinvoke r0.<cfhider.WordCount$IntSumReducer: void reduce(org.apache.hadoop.io.Text,java.lang.Iterable,org.apache.hadoop.mapreduce.Reducer$Context)>($r4, r2, r3)
[taint328]i invoke <cfhider.WordCount$IntSumReducer: void reduce(org.apache.hadoop.io.Text,java.lang.Iterable,org.apache.hadoop.mapreduce.Reducer$Context)>
[taint328]i invoke 3
value:$r4
in here:[I@452a5122
[invokemap]invoke:reduce  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
value:r2
in here:[I@452a5122
[invokemap]invoke:reduce  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
value:r3
in here:[I@452a5122
[invokemap]invoke:reduce  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$r4 = (org.apache.hadoop.io.Text) r1
currStmt left value20210420:$r4
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
doAnalysis endqqqqqqq.....
come here
[CFMAP]2021 After BackwardAnalysis:{cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}
[taint]SooClass:cfhider.WordCount
[taint] class: cfhider.WordCount
methList :{<init>=[], main=[]}
[taint into] sootMethod: <init>
[]
class name :cfhider.WordCount
method name :<init>
method list :[]
clasname=cfhider.WordCount
methodname=<init>
sourcelist2021=[]
20210427node :r0 := @this: cfhider.WordCount
20210427node in :[]
20210427node out :[]
currStmt20210423:r0 := @this: cfhider.WordCount
20210427node :specialinvoke r0.<java.lang.Object: void <init>()>()
20210427node in :[]
20210427node out :[]
[taint329]i invoke specialinvoke r0.<java.lang.Object: void <init>()>()
[taint328]i invoke <java.lang.Object: void <init>()>
[taint328]i invoke 0
20210427node :return
20210427node in :[]
20210427node out :[]
analysis.outSet.size():0
[CFMAP]2021 After taintAnalysis:{cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}
The data isgggg 
<cfhider.WordCount: void <init>()>
The data isgggg cfhider.WordCount <init> [] {cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}  {cfhider.WordCount$IntSumReducer={reduce=[I@350c764b}, cfhider.WordCount$TokenizerMapper={map=[I@4b59c01c}, cfhider.WordCount={main=[I@31aed88a}, invoker.SnowFlake={<init>=[I@548fe222, getNextMill=[I@3247518d, getNewstmp=[I@18c852}}
Coming...
doAnalysis Startingqqqqqqqq.....
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
[taint329]i invoke specialinvoke r0.<java.lang.Object: void <init>()>()
[taint328]i invoke <java.lang.Object: void <init>()>
[taint328]i invoke 0
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
doAnalysis endqqqqqqq.....
come here
[CFMAP]2021 After BackwardAnalysis:{cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}
[taint into] sootMethod: main
[]
class name :cfhider.WordCount
method name :main
method list :[]
clasname=cfhider.WordCount
methodname=main
sourcelist2021=[]
20210427node :r0 := @parameter0: java.lang.String[]
20210427node in :[]
[idStmt]iiiiiii r0 := @parameter0: java.lang.String[]  index:0
ClassName:cfhider.WordCount
MethodName:main
aaaa:0
20210427node out :[]
currStmt20210423:r0 := @parameter0: java.lang.String[]
20210427node :$r1 = <java.lang.System: java.io.PrintStream out>
20210427node in :[]
普通复制语句1112:$r1 = <java.lang.System: java.io.PrintStream out>
[taint source] u:<java.lang.System: java.io.PrintStream out>
SourceList:[]
20210427node out :[]
20210427node :virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>("In this project, we test wordcount with SGX!\n")
20210427node in :[]
20210427node out :[]
[taint329]i invoke virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>("In this project, we test wordcount with SGX!\n")
[taint328]i invoke <java.io.PrintStream: void println(java.lang.String)>
[taint328]i invoke 1
value:"In this project, we test wordcount with SGX!\n"
isoutSetContains  false value:"In this project, we test wordcount with SGX!\n" index:0
20210427node :$r6 = new org.apache.hadoop.conf.Configuration
20210427node in :[]
普通复制语句1112:$r6 = new org.apache.hadoop.conf.Configuration
[taint source] u:new org.apache.hadoop.conf.Configuration
SourceList:[]
20210427node out :[]
20210427node :specialinvoke $r6.<org.apache.hadoop.conf.Configuration: void <init>()>()
20210427node in :[]
20210427node out :[]
[taint329]i invoke specialinvoke $r6.<org.apache.hadoop.conf.Configuration: void <init>()>()
[taint328]i invoke <org.apache.hadoop.conf.Configuration: void <init>()>
[taint328]i invoke 0
20210427node :r2 = $r6
20210427node in :[]
普通复制语句1112:r2 = $r6
[taint source] u:$r6
SourceList:[]
20210427node out :[]
20210427node :$r7 = new org.apache.hadoop.util.GenericOptionsParser
20210427node in :[]
普通复制语句1112:$r7 = new org.apache.hadoop.util.GenericOptionsParser
[taint source] u:new org.apache.hadoop.util.GenericOptionsParser
SourceList:[]
20210427node out :[]
20210427node :specialinvoke $r7.<org.apache.hadoop.util.GenericOptionsParser: void <init>(org.apache.hadoop.conf.Configuration,java.lang.String[])>(r2, r0)
20210427node in :[]
20210427node out :[]
[taint329]i invoke specialinvoke $r7.<org.apache.hadoop.util.GenericOptionsParser: void <init>(org.apache.hadoop.conf.Configuration,java.lang.String[])>(r2, r0)
[taint328]i invoke <org.apache.hadoop.util.GenericOptionsParser: void <init>(org.apache.hadoop.conf.Configuration,java.lang.String[])>
[taint328]i invoke 2
value:r2
isoutSetContains  false value:r2 index:0
value:r0
isoutSetContains  false value:r0 index:1
20210427node :r3 = $r7
20210427node in :[]
普通复制语句1112:r3 = $r7
[taint source] u:$r7
SourceList:[]
20210427node out :[]
20210427node :r4 = virtualinvoke r3.<org.apache.hadoop.util.GenericOptionsParser: java.lang.String[] getRemainingArgs()>()
20210427node in :[]
调用语句赋值给变量:r4 = virtualinvoke r3.<org.apache.hadoop.util.GenericOptionsParser: java.lang.String[] getRemainingArgs()>()
20210427node out :[]
[taint328]a invoke <org.apache.hadoop.util.GenericOptionsParser: java.lang.String[] getRemainingArgs()>
[taint328]a invoke 0
20210427node :l0 = staticinvoke <java.lang.System: long currentTimeMillis()>()
20210427node in :[]
调用语句赋值给变量:l0 = staticinvoke <java.lang.System: long currentTimeMillis()>()
20210427node out :[]
[taint328]a invoke <java.lang.System: long currentTimeMillis()>
[taint328]a invoke 0
20210427node :$r8 = new org.apache.hadoop.mapreduce.Job
20210427node in :[]
普通复制语句1112:$r8 = new org.apache.hadoop.mapreduce.Job
[taint source] u:new org.apache.hadoop.mapreduce.Job
SourceList:[]
20210427node out :[]
20210427node :specialinvoke $r8.<org.apache.hadoop.mapreduce.Job: void <init>(org.apache.hadoop.conf.Configuration,java.lang.String)>(r2, "word count")
20210427node in :[]
20210427node out :[]
[taint329]i invoke specialinvoke $r8.<org.apache.hadoop.mapreduce.Job: void <init>(org.apache.hadoop.conf.Configuration,java.lang.String)>(r2, "word count")
[taint328]i invoke <org.apache.hadoop.mapreduce.Job: void <init>(org.apache.hadoop.conf.Configuration,java.lang.String)>
[taint328]i invoke 2
value:r2
isoutSetContains  false value:r2 index:0
value:"word count"
isoutSetContains  false value:"word count" index:1
20210427node :r5 = $r8
20210427node in :[]
普通复制语句1112:r5 = $r8
[taint source] u:$r8
SourceList:[]
20210427node out :[]
20210427node :virtualinvoke r5.<org.apache.hadoop.mapreduce.Job: void setJarByClass(java.lang.Class)>(class "cfhider/WordCount")
20210427node in :[]
20210427node out :[]
[taint329]i invoke virtualinvoke r5.<org.apache.hadoop.mapreduce.Job: void setJarByClass(java.lang.Class)>(class "cfhider/WordCount")
[taint328]i invoke <org.apache.hadoop.mapreduce.Job: void setJarByClass(java.lang.Class)>
[taint328]i invoke 1
value:class "cfhider/WordCount"
isoutSetContains  false value:class "cfhider/WordCount" index:0
20210427node :virtualinvoke r5.<org.apache.hadoop.mapreduce.Job: void setMapperClass(java.lang.Class)>(class "cfhider/WordCount$TokenizerMapper")
20210427node in :[]
20210427node out :[]
[taint329]i invoke virtualinvoke r5.<org.apache.hadoop.mapreduce.Job: void setMapperClass(java.lang.Class)>(class "cfhider/WordCount$TokenizerMapper")
[taint328]i invoke <org.apache.hadoop.mapreduce.Job: void setMapperClass(java.lang.Class)>
[taint328]i invoke 1
value:class "cfhider/WordCount$TokenizerMapper"
isoutSetContains  false value:class "cfhider/WordCount$TokenizerMapper" index:0
20210427node :virtualinvoke r5.<org.apache.hadoop.mapreduce.Job: void setCombinerClass(java.lang.Class)>(class "cfhider/WordCount$IntSumReducer")
20210427node in :[]
20210427node out :[]
[taint329]i invoke virtualinvoke r5.<org.apache.hadoop.mapreduce.Job: void setCombinerClass(java.lang.Class)>(class "cfhider/WordCount$IntSumReducer")
[taint328]i invoke <org.apache.hadoop.mapreduce.Job: void setCombinerClass(java.lang.Class)>
[taint328]i invoke 1
value:class "cfhider/WordCount$IntSumReducer"
isoutSetContains  false value:class "cfhider/WordCount$IntSumReducer" index:0
20210427node :virtualinvoke r5.<org.apache.hadoop.mapreduce.Job: void setReducerClass(java.lang.Class)>(class "cfhider/WordCount$IntSumReducer")
20210427node in :[]
20210427node out :[]
[taint329]i invoke virtualinvoke r5.<org.apache.hadoop.mapreduce.Job: void setReducerClass(java.lang.Class)>(class "cfhider/WordCount$IntSumReducer")
[taint328]i invoke <org.apache.hadoop.mapreduce.Job: void setReducerClass(java.lang.Class)>
[taint328]i invoke 1
value:class "cfhider/WordCount$IntSumReducer"
isoutSetContains  false value:class "cfhider/WordCount$IntSumReducer" index:0
20210427node :virtualinvoke r5.<org.apache.hadoop.mapreduce.Job: void setOutputKeyClass(java.lang.Class)>(class "org/apache/hadoop/io/Text")
20210427node in :[]
20210427node out :[]
[taint329]i invoke virtualinvoke r5.<org.apache.hadoop.mapreduce.Job: void setOutputKeyClass(java.lang.Class)>(class "org/apache/hadoop/io/Text")
[taint328]i invoke <org.apache.hadoop.mapreduce.Job: void setOutputKeyClass(java.lang.Class)>
[taint328]i invoke 1
value:class "org/apache/hadoop/io/Text"
isoutSetContains  false value:class "org/apache/hadoop/io/Text" index:0
20210427node :virtualinvoke r5.<org.apache.hadoop.mapreduce.Job: void setOutputValueClass(java.lang.Class)>(class "org/apache/hadoop/io/IntWritable")
20210427node in :[]
20210427node out :[]
[taint329]i invoke virtualinvoke r5.<org.apache.hadoop.mapreduce.Job: void setOutputValueClass(java.lang.Class)>(class "org/apache/hadoop/io/IntWritable")
[taint328]i invoke <org.apache.hadoop.mapreduce.Job: void setOutputValueClass(java.lang.Class)>
[taint328]i invoke 1
value:class "org/apache/hadoop/io/IntWritable"
isoutSetContains  false value:class "org/apache/hadoop/io/IntWritable" index:0
20210427node :$r9 = new org.apache.hadoop.fs.Path
20210427node in :[]
普通复制语句1112:$r9 = new org.apache.hadoop.fs.Path
[taint source] u:new org.apache.hadoop.fs.Path
SourceList:[]
20210427node out :[]
20210427node :$r10 = r4[0]
20210427node in :[]
普通复制语句1112:$r10 = r4[0]
[taint source] u:r4
SourceList:[]
[taint source] u:0
SourceList:[]
[taint source] u:r4[0]
SourceList:[]
20210427node out :[]
20210427node :specialinvoke $r9.<org.apache.hadoop.fs.Path: void <init>(java.lang.String)>($r10)
20210427node in :[]
20210427node out :[]
[taint329]i invoke specialinvoke $r9.<org.apache.hadoop.fs.Path: void <init>(java.lang.String)>($r10)
[taint328]i invoke <org.apache.hadoop.fs.Path: void <init>(java.lang.String)>
[taint328]i invoke 1
value:$r10
isoutSetContains  false value:$r10 index:0
20210427node :staticinvoke <org.apache.hadoop.mapreduce.lib.input.FileInputFormat: void addInputPath(org.apache.hadoop.mapreduce.Job,org.apache.hadoop.fs.Path)>(r5, $r9)
20210427node in :[]
20210427node out :[]
[taint329]i invoke staticinvoke <org.apache.hadoop.mapreduce.lib.input.FileInputFormat: void addInputPath(org.apache.hadoop.mapreduce.Job,org.apache.hadoop.fs.Path)>(r5, $r9)
[taint328]i invoke <org.apache.hadoop.mapreduce.lib.input.FileInputFormat: void addInputPath(org.apache.hadoop.mapreduce.Job,org.apache.hadoop.fs.Path)>
[taint328]i invoke 2
value:r5
isoutSetContains  false value:r5 index:0
value:$r9
isoutSetContains  false value:$r9 index:1
20210427node :$r11 = new org.apache.hadoop.fs.Path
20210427node in :[]
普通复制语句1112:$r11 = new org.apache.hadoop.fs.Path
[taint source] u:new org.apache.hadoop.fs.Path
SourceList:[]
20210427node out :[]
20210427node :$r12 = r4[1]
20210427node in :[]
普通复制语句1112:$r12 = r4[1]
[taint source] u:r4
SourceList:[]
[taint source] u:1
SourceList:[]
[taint source] u:r4[1]
SourceList:[]
20210427node out :[]
20210427node :specialinvoke $r11.<org.apache.hadoop.fs.Path: void <init>(java.lang.String)>($r12)
20210427node in :[]
20210427node out :[]
[taint329]i invoke specialinvoke $r11.<org.apache.hadoop.fs.Path: void <init>(java.lang.String)>($r12)
[taint328]i invoke <org.apache.hadoop.fs.Path: void <init>(java.lang.String)>
[taint328]i invoke 1
value:$r12
isoutSetContains  false value:$r12 index:0
20210427node :staticinvoke <org.apache.hadoop.mapreduce.lib.output.FileOutputFormat: void setOutputPath(org.apache.hadoop.mapreduce.Job,org.apache.hadoop.fs.Path)>(r5, $r11)
20210427node in :[]
20210427node out :[]
[taint329]i invoke staticinvoke <org.apache.hadoop.mapreduce.lib.output.FileOutputFormat: void setOutputPath(org.apache.hadoop.mapreduce.Job,org.apache.hadoop.fs.Path)>(r5, $r11)
[taint328]i invoke <org.apache.hadoop.mapreduce.lib.output.FileOutputFormat: void setOutputPath(org.apache.hadoop.mapreduce.Job,org.apache.hadoop.fs.Path)>
[taint328]i invoke 2
value:r5
isoutSetContains  false value:r5 index:0
value:$r11
isoutSetContains  false value:$r11 index:1
20210427node :$z0 = virtualinvoke r5.<org.apache.hadoop.mapreduce.Job: boolean waitForCompletion(boolean)>(1)
20210427node in :[]
调用语句赋值给变量:$z0 = virtualinvoke r5.<org.apache.hadoop.mapreduce.Job: boolean waitForCompletion(boolean)>(1)
20210427node out :[]
[taint328]a invoke <org.apache.hadoop.mapreduce.Job: boolean waitForCompletion(boolean)>
[taint328]a invoke 1
assi isoutSet  false value:1 index:0
20210427node :if $z0 == 0 goto $b2 = 1
20210427node in :[]
20210427node out :[]
Have
Stmt if :if $z0 == 0 goto $b2 = 1Stmt if value:$z0 == 0the value=$z0
the value=0
maintainValues.size0
ifValues1
20210427node :$b2 = 1
20210427node in :[]
普通复制语句1112:$b2 = 1
[taint source] u:1
SourceList:[]
20210427node out :[]
20210427node :$b2 = 0
20210427node in :[]
普通复制语句1112:$b2 = 0
[taint source] u:0
SourceList:[]
20210427node out :[]
20210427node :goto [?= b1 = $b2]
20210427node in :[]
20210427node out :[]
20210427node :b1 = $b2
20210427node in :[]
普通复制语句1112:b1 = $b2
[taint source] u:$b2
SourceList:[]
20210427node out :[]
20210427node :$l3 = staticinvoke <java.lang.System: long currentTimeMillis()>()
20210427node in :[]
调用语句赋值给变量:$l3 = staticinvoke <java.lang.System: long currentTimeMillis()>()
20210427node out :[]
[taint328]a invoke <java.lang.System: long currentTimeMillis()>
[taint328]a invoke 0
20210427node :$l4 = $l3 - l0
20210427node in :[]
普通复制语句1112:$l4 = $l3 - l0
[taint source] u:$l3
SourceList:[]
[taint source] u:l0
SourceList:[]
[taint source] u:$l3 - l0
SourceList:[]
20210427node out :[]
20210427node :$d1 = (double) $l4
20210427node in :[]
普通复制语句1112:$d1 = (double) $l4
[taint source] u:$l4
SourceList:[]
[taint source] u:(double) $l4
SourceList:[]
20210427node out :[]
20210427node :d0 = $d1 / 1000.0
20210427node in :[]
普通复制语句1112:d0 = $d1 / 1000.0
[taint source] u:$d1
SourceList:[]
[taint source] u:1000.0
SourceList:[]
[taint source] u:$d1 / 1000.0
SourceList:[]
20210427node out :[]
20210427node :$r13 = <java.lang.System: java.io.PrintStream out>
20210427node in :[]
普通复制语句1112:$r13 = <java.lang.System: java.io.PrintStream out>
[taint source] u:<java.lang.System: java.io.PrintStream out>
SourceList:[]
20210427node out :[]
20210427node :$r14 = new java.lang.StringBuilder
20210427node in :[]
普通复制语句1112:$r14 = new java.lang.StringBuilder
[taint source] u:new java.lang.StringBuilder
SourceList:[]
20210427node out :[]
20210427node :specialinvoke $r14.<java.lang.StringBuilder: void <init>()>()
20210427node in :[]
20210427node out :[]
[taint329]i invoke specialinvoke $r14.<java.lang.StringBuilder: void <init>()>()
[taint328]i invoke <java.lang.StringBuilder: void <init>()>
[taint328]i invoke 0
20210427node :$r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Job Finished in ")
20210427node in :[]
调用语句赋值给变量:$r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Job Finished in ")
20210427node out :[]
[taint328]a invoke <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
[taint328]a invoke 1
assi isoutSet  false value:"Job Finished in " index:0
20210427node :$r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(double)>(d0)
20210427node in :[]
调用语句赋值给变量:$r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(double)>(d0)
20210427node out :[]
[taint328]a invoke <java.lang.StringBuilder: java.lang.StringBuilder append(double)>
[taint328]a invoke 1
assi isoutSet  false value:d0 index:0
20210427node :$r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" seconds")
20210427node in :[]
调用语句赋值给变量:$r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" seconds")
20210427node out :[]
[taint328]a invoke <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
[taint328]a invoke 1
assi isoutSet  false value:" seconds" index:0
20210427node :$r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>()
20210427node in :[]
调用语句赋值给变量:$r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>()
20210427node out :[]
[taint328]a invoke <java.lang.StringBuilder: java.lang.String toString()>
[taint328]a invoke 0
20210427node :virtualinvoke $r13.<java.io.PrintStream: void println(java.lang.String)>($r18)
20210427node in :[]
20210427node out :[]
[taint329]i invoke virtualinvoke $r13.<java.io.PrintStream: void println(java.lang.String)>($r18)
[taint328]i invoke <java.io.PrintStream: void println(java.lang.String)>
[taint328]i invoke 1
value:$r18
isoutSetContains  false value:$r18 index:0
20210427node :staticinvoke <java.lang.System: void exit(int)>(b1)
20210427node in :[]
20210427node out :[]
[taint329]i invoke staticinvoke <java.lang.System: void exit(int)>(b1)
[taint328]i invoke <java.lang.System: void exit(int)>
[taint328]i invoke 1
value:b1
isoutSetContains  false value:b1 index:0
20210427node :return
20210427node in :[]
20210427node out :[]
analysis.outSet.size():0
[CFMAP]2021 After taintAnalysis:{cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}
The data isgggg 
<cfhider.WordCount: void main(java.lang.String[])>
The data isgggg cfhider.WordCount main [] {cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}  {cfhider.WordCount$IntSumReducer={reduce=[I@350c764b}, cfhider.WordCount$TokenizerMapper={map=[I@4b59c01c}, cfhider.WordCount={main=[I@5d34b2a7}, invoker.SnowFlake={<init>=[I@548fe222, getNextMill=[I@3247518d, getNewstmp=[I@18c852}}
Coming...
doAnalysis Startingqqqqqqqq.....
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
[taint329]i invoke staticinvoke <java.lang.System: void exit(int)>(b1)
[taint328]i invoke <java.lang.System: void exit(int)>
[taint328]i invoke 1
value:b1
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
[taint329]i invoke virtualinvoke $r13.<java.io.PrintStream: void println(java.lang.String)>($r18)
[taint328]i invoke <java.io.PrintStream: void println(java.lang.String)>
[taint328]i invoke 1
value:$r18
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>()
currStmt left value20210420:$r18
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" seconds")
currStmt left value20210420:$r17
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(double)>(d0)
currStmt left value20210420:$r16
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Job Finished in ")
currStmt left value20210420:$r15
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
[taint329]i invoke specialinvoke $r14.<java.lang.StringBuilder: void <init>()>()
[taint328]i invoke <java.lang.StringBuilder: void <init>()>
[taint328]i invoke 0
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$r14 = new java.lang.StringBuilder
currStmt left value20210420:$r14
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$r13 = <java.lang.System: java.io.PrintStream out>
currStmt left value20210420:$r13
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:d0 = $d1 / 1000.0
currStmt left value20210420:d0
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$d1 = (double) $l4
currStmt left value20210420:$d1
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$l4 = $l3 - l0
currStmt left value20210420:$l4
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$l3 = staticinvoke <java.lang.System: long currentTimeMillis()>()
currStmt left value20210420:$l3
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:b1 = $b2
currStmt left value20210420:b1
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$b2 = 0
currStmt left value20210420:$b2
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$b2 = 1
currStmt left value20210420:$b2
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
Have
the value=$z0
the value=0
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$z0 = virtualinvoke r5.<org.apache.hadoop.mapreduce.Job: boolean waitForCompletion(boolean)>(1)
currStmt left value20210420:$z0
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
[taint329]i invoke staticinvoke <org.apache.hadoop.mapreduce.lib.output.FileOutputFormat: void setOutputPath(org.apache.hadoop.mapreduce.Job,org.apache.hadoop.fs.Path)>(r5, $r11)
[taint328]i invoke <org.apache.hadoop.mapreduce.lib.output.FileOutputFormat: void setOutputPath(org.apache.hadoop.mapreduce.Job,org.apache.hadoop.fs.Path)>
[taint328]i invoke 2
value:r5
value:$r11
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
[taint329]i invoke specialinvoke $r11.<org.apache.hadoop.fs.Path: void <init>(java.lang.String)>($r12)
[taint328]i invoke <org.apache.hadoop.fs.Path: void <init>(java.lang.String)>
[taint328]i invoke 1
value:$r12
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$r12 = r4[1]
currStmt left value20210420:$r12
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$r11 = new org.apache.hadoop.fs.Path
currStmt left value20210420:$r11
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
[taint329]i invoke staticinvoke <org.apache.hadoop.mapreduce.lib.input.FileInputFormat: void addInputPath(org.apache.hadoop.mapreduce.Job,org.apache.hadoop.fs.Path)>(r5, $r9)
[taint328]i invoke <org.apache.hadoop.mapreduce.lib.input.FileInputFormat: void addInputPath(org.apache.hadoop.mapreduce.Job,org.apache.hadoop.fs.Path)>
[taint328]i invoke 2
value:r5
value:$r9
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
[taint329]i invoke specialinvoke $r9.<org.apache.hadoop.fs.Path: void <init>(java.lang.String)>($r10)
[taint328]i invoke <org.apache.hadoop.fs.Path: void <init>(java.lang.String)>
[taint328]i invoke 1
value:$r10
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$r10 = r4[0]
currStmt left value20210420:$r10
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$r9 = new org.apache.hadoop.fs.Path
currStmt left value20210420:$r9
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
[taint329]i invoke virtualinvoke r5.<org.apache.hadoop.mapreduce.Job: void setOutputValueClass(java.lang.Class)>(class "org/apache/hadoop/io/IntWritable")
[taint328]i invoke <org.apache.hadoop.mapreduce.Job: void setOutputValueClass(java.lang.Class)>
[taint328]i invoke 1
value:class "org/apache/hadoop/io/IntWritable"
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
[taint329]i invoke virtualinvoke r5.<org.apache.hadoop.mapreduce.Job: void setOutputKeyClass(java.lang.Class)>(class "org/apache/hadoop/io/Text")
[taint328]i invoke <org.apache.hadoop.mapreduce.Job: void setOutputKeyClass(java.lang.Class)>
[taint328]i invoke 1
value:class "org/apache/hadoop/io/Text"
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
[taint329]i invoke virtualinvoke r5.<org.apache.hadoop.mapreduce.Job: void setReducerClass(java.lang.Class)>(class "cfhider/WordCount$IntSumReducer")
[taint328]i invoke <org.apache.hadoop.mapreduce.Job: void setReducerClass(java.lang.Class)>
[taint328]i invoke 1
value:class "cfhider/WordCount$IntSumReducer"
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
[taint329]i invoke virtualinvoke r5.<org.apache.hadoop.mapreduce.Job: void setCombinerClass(java.lang.Class)>(class "cfhider/WordCount$IntSumReducer")
[taint328]i invoke <org.apache.hadoop.mapreduce.Job: void setCombinerClass(java.lang.Class)>
[taint328]i invoke 1
value:class "cfhider/WordCount$IntSumReducer"
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
[taint329]i invoke virtualinvoke r5.<org.apache.hadoop.mapreduce.Job: void setMapperClass(java.lang.Class)>(class "cfhider/WordCount$TokenizerMapper")
[taint328]i invoke <org.apache.hadoop.mapreduce.Job: void setMapperClass(java.lang.Class)>
[taint328]i invoke 1
value:class "cfhider/WordCount$TokenizerMapper"
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
[taint329]i invoke virtualinvoke r5.<org.apache.hadoop.mapreduce.Job: void setJarByClass(java.lang.Class)>(class "cfhider/WordCount")
[taint328]i invoke <org.apache.hadoop.mapreduce.Job: void setJarByClass(java.lang.Class)>
[taint328]i invoke 1
value:class "cfhider/WordCount"
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:r5 = $r8
currStmt left value20210420:r5
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
[taint329]i invoke specialinvoke $r8.<org.apache.hadoop.mapreduce.Job: void <init>(org.apache.hadoop.conf.Configuration,java.lang.String)>(r2, "word count")
[taint328]i invoke <org.apache.hadoop.mapreduce.Job: void <init>(org.apache.hadoop.conf.Configuration,java.lang.String)>
[taint328]i invoke 2
value:r2
value:"word count"
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$r8 = new org.apache.hadoop.mapreduce.Job
currStmt left value20210420:$r8
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:l0 = staticinvoke <java.lang.System: long currentTimeMillis()>()
currStmt left value20210420:l0
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:r4 = virtualinvoke r3.<org.apache.hadoop.util.GenericOptionsParser: java.lang.String[] getRemainingArgs()>()
currStmt left value20210420:r4
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:r3 = $r7
currStmt left value20210420:r3
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
[taint329]i invoke specialinvoke $r7.<org.apache.hadoop.util.GenericOptionsParser: void <init>(org.apache.hadoop.conf.Configuration,java.lang.String[])>(r2, r0)
[taint328]i invoke <org.apache.hadoop.util.GenericOptionsParser: void <init>(org.apache.hadoop.conf.Configuration,java.lang.String[])>
[taint328]i invoke 2
value:r2
value:r0
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$r7 = new org.apache.hadoop.util.GenericOptionsParser
currStmt left value20210420:$r7
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:r2 = $r6
currStmt left value20210420:r2
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
[taint329]i invoke specialinvoke $r6.<org.apache.hadoop.conf.Configuration: void <init>()>()
[taint328]i invoke <org.apache.hadoop.conf.Configuration: void <init>()>
[taint328]i invoke 0
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$r6 = new org.apache.hadoop.conf.Configuration
currStmt left value20210420:$r6
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
[taint329]i invoke virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>("In this project, we test wordcount with SGX!\n")
[taint328]i invoke <java.io.PrintStream: void println(java.lang.String)>
[taint328]i invoke 1
value:"In this project, we test wordcount with SGX!\n"
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$r1 = <java.lang.System: java.io.PrintStream out>
currStmt left value20210420:$r1
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
doAnalysis endqqqqqqq.....
come here
[CFMAP]2021 After BackwardAnalysis:{cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}
[taint into] sootMethod: <init>
[]
class name :cfhider.WordCount
method name :<init>
method list :[]
clasname=cfhider.WordCount
methodname=<init>
sourcelist2021=[]
20210427node :r0 := @this: cfhider.WordCount
20210427node in :[]
20210427node out :[]
currStmt20210423:r0 := @this: cfhider.WordCount
20210427node :specialinvoke r0.<java.lang.Object: void <init>()>()
20210427node in :[]
20210427node out :[]
[taint329]i invoke specialinvoke r0.<java.lang.Object: void <init>()>()
[taint328]i invoke <java.lang.Object: void <init>()>
[taint328]i invoke 0
20210427node :return
20210427node in :[]
20210427node out :[]
analysis.outSet.size():0
[CFMAP]2021 After taintAnalysis:{cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}
The data isgggg 
<cfhider.WordCount: void <init>()>
The data isgggg cfhider.WordCount <init> [] {cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}  {cfhider.WordCount$IntSumReducer={reduce=[I@350c764b}, cfhider.WordCount$TokenizerMapper={map=[I@4b59c01c}, cfhider.WordCount={main=[I@5d34b2a7}, invoker.SnowFlake={<init>=[I@548fe222, getNextMill=[I@3247518d, getNewstmp=[I@18c852}}
Coming...
doAnalysis Startingqqqqqqqq.....
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
[taint329]i invoke specialinvoke r0.<java.lang.Object: void <init>()>()
[taint328]i invoke <java.lang.Object: void <init>()>
[taint328]i invoke 0
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
doAnalysis endqqqqqqq.....
come here
[CFMAP]2021 After BackwardAnalysis:{cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}
[taint into] sootMethod: main
[]
class name :cfhider.WordCount
method name :main
method list :[]
clasname=cfhider.WordCount
methodname=main
sourcelist2021=[]
20210427node :r0 := @parameter0: java.lang.String[]
20210427node in :[]
[idStmt]iiiiiii r0 := @parameter0: java.lang.String[]  index:0
ClassName:cfhider.WordCount
MethodName:main
aaaa:0
20210427node out :[]
currStmt20210423:r0 := @parameter0: java.lang.String[]
20210427node :$r1 = <java.lang.System: java.io.PrintStream out>
20210427node in :[]
普通复制语句1112:$r1 = <java.lang.System: java.io.PrintStream out>
[taint source] u:<java.lang.System: java.io.PrintStream out>
SourceList:[]
20210427node out :[]
20210427node :virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>("In this project, we test wordcount with SGX!\n")
20210427node in :[]
20210427node out :[]
[taint329]i invoke virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>("In this project, we test wordcount with SGX!\n")
[taint328]i invoke <java.io.PrintStream: void println(java.lang.String)>
[taint328]i invoke 1
value:"In this project, we test wordcount with SGX!\n"
isoutSetContains  false value:"In this project, we test wordcount with SGX!\n" index:0
20210427node :$r6 = new org.apache.hadoop.conf.Configuration
20210427node in :[]
普通复制语句1112:$r6 = new org.apache.hadoop.conf.Configuration
[taint source] u:new org.apache.hadoop.conf.Configuration
SourceList:[]
20210427node out :[]
20210427node :specialinvoke $r6.<org.apache.hadoop.conf.Configuration: void <init>()>()
20210427node in :[]
20210427node out :[]
[taint329]i invoke specialinvoke $r6.<org.apache.hadoop.conf.Configuration: void <init>()>()
[taint328]i invoke <org.apache.hadoop.conf.Configuration: void <init>()>
[taint328]i invoke 0
20210427node :r2 = $r6
20210427node in :[]
普通复制语句1112:r2 = $r6
[taint source] u:$r6
SourceList:[]
20210427node out :[]
20210427node :$r7 = new org.apache.hadoop.util.GenericOptionsParser
20210427node in :[]
普通复制语句1112:$r7 = new org.apache.hadoop.util.GenericOptionsParser
[taint source] u:new org.apache.hadoop.util.GenericOptionsParser
SourceList:[]
20210427node out :[]
20210427node :specialinvoke $r7.<org.apache.hadoop.util.GenericOptionsParser: void <init>(org.apache.hadoop.conf.Configuration,java.lang.String[])>(r2, r0)
20210427node in :[]
20210427node out :[]
[taint329]i invoke specialinvoke $r7.<org.apache.hadoop.util.GenericOptionsParser: void <init>(org.apache.hadoop.conf.Configuration,java.lang.String[])>(r2, r0)
[taint328]i invoke <org.apache.hadoop.util.GenericOptionsParser: void <init>(org.apache.hadoop.conf.Configuration,java.lang.String[])>
[taint328]i invoke 2
value:r2
isoutSetContains  false value:r2 index:0
value:r0
isoutSetContains  false value:r0 index:1
20210427node :r3 = $r7
20210427node in :[]
普通复制语句1112:r3 = $r7
[taint source] u:$r7
SourceList:[]
20210427node out :[]
20210427node :r4 = virtualinvoke r3.<org.apache.hadoop.util.GenericOptionsParser: java.lang.String[] getRemainingArgs()>()
20210427node in :[]
调用语句赋值给变量:r4 = virtualinvoke r3.<org.apache.hadoop.util.GenericOptionsParser: java.lang.String[] getRemainingArgs()>()
20210427node out :[]
[taint328]a invoke <org.apache.hadoop.util.GenericOptionsParser: java.lang.String[] getRemainingArgs()>
[taint328]a invoke 0
20210427node :l0 = staticinvoke <java.lang.System: long currentTimeMillis()>()
20210427node in :[]
调用语句赋值给变量:l0 = staticinvoke <java.lang.System: long currentTimeMillis()>()
20210427node out :[]
[taint328]a invoke <java.lang.System: long currentTimeMillis()>
[taint328]a invoke 0
20210427node :$r8 = new org.apache.hadoop.mapreduce.Job
20210427node in :[]
普通复制语句1112:$r8 = new org.apache.hadoop.mapreduce.Job
[taint source] u:new org.apache.hadoop.mapreduce.Job
SourceList:[]
20210427node out :[]
20210427node :specialinvoke $r8.<org.apache.hadoop.mapreduce.Job: void <init>(org.apache.hadoop.conf.Configuration,java.lang.String)>(r2, "word count")
20210427node in :[]
20210427node out :[]
[taint329]i invoke specialinvoke $r8.<org.apache.hadoop.mapreduce.Job: void <init>(org.apache.hadoop.conf.Configuration,java.lang.String)>(r2, "word count")
[taint328]i invoke <org.apache.hadoop.mapreduce.Job: void <init>(org.apache.hadoop.conf.Configuration,java.lang.String)>
[taint328]i invoke 2
value:r2
isoutSetContains  false value:r2 index:0
value:"word count"
isoutSetContains  false value:"word count" index:1
20210427node :r5 = $r8
20210427node in :[]
普通复制语句1112:r5 = $r8
[taint source] u:$r8
SourceList:[]
20210427node out :[]
20210427node :virtualinvoke r5.<org.apache.hadoop.mapreduce.Job: void setJarByClass(java.lang.Class)>(class "cfhider/WordCount")
20210427node in :[]
20210427node out :[]
[taint329]i invoke virtualinvoke r5.<org.apache.hadoop.mapreduce.Job: void setJarByClass(java.lang.Class)>(class "cfhider/WordCount")
[taint328]i invoke <org.apache.hadoop.mapreduce.Job: void setJarByClass(java.lang.Class)>
[taint328]i invoke 1
value:class "cfhider/WordCount"
isoutSetContains  false value:class "cfhider/WordCount" index:0
20210427node :virtualinvoke r5.<org.apache.hadoop.mapreduce.Job: void setMapperClass(java.lang.Class)>(class "cfhider/WordCount$TokenizerMapper")
20210427node in :[]
20210427node out :[]
[taint329]i invoke virtualinvoke r5.<org.apache.hadoop.mapreduce.Job: void setMapperClass(java.lang.Class)>(class "cfhider/WordCount$TokenizerMapper")
[taint328]i invoke <org.apache.hadoop.mapreduce.Job: void setMapperClass(java.lang.Class)>
[taint328]i invoke 1
value:class "cfhider/WordCount$TokenizerMapper"
isoutSetContains  false value:class "cfhider/WordCount$TokenizerMapper" index:0
20210427node :virtualinvoke r5.<org.apache.hadoop.mapreduce.Job: void setCombinerClass(java.lang.Class)>(class "cfhider/WordCount$IntSumReducer")
20210427node in :[]
20210427node out :[]
[taint329]i invoke virtualinvoke r5.<org.apache.hadoop.mapreduce.Job: void setCombinerClass(java.lang.Class)>(class "cfhider/WordCount$IntSumReducer")
[taint328]i invoke <org.apache.hadoop.mapreduce.Job: void setCombinerClass(java.lang.Class)>
[taint328]i invoke 1
value:class "cfhider/WordCount$IntSumReducer"
isoutSetContains  false value:class "cfhider/WordCount$IntSumReducer" index:0
20210427node :virtualinvoke r5.<org.apache.hadoop.mapreduce.Job: void setReducerClass(java.lang.Class)>(class "cfhider/WordCount$IntSumReducer")
20210427node in :[]
20210427node out :[]
[taint329]i invoke virtualinvoke r5.<org.apache.hadoop.mapreduce.Job: void setReducerClass(java.lang.Class)>(class "cfhider/WordCount$IntSumReducer")
[taint328]i invoke <org.apache.hadoop.mapreduce.Job: void setReducerClass(java.lang.Class)>
[taint328]i invoke 1
value:class "cfhider/WordCount$IntSumReducer"
isoutSetContains  false value:class "cfhider/WordCount$IntSumReducer" index:0
20210427node :virtualinvoke r5.<org.apache.hadoop.mapreduce.Job: void setOutputKeyClass(java.lang.Class)>(class "org/apache/hadoop/io/Text")
20210427node in :[]
20210427node out :[]
[taint329]i invoke virtualinvoke r5.<org.apache.hadoop.mapreduce.Job: void setOutputKeyClass(java.lang.Class)>(class "org/apache/hadoop/io/Text")
[taint328]i invoke <org.apache.hadoop.mapreduce.Job: void setOutputKeyClass(java.lang.Class)>
[taint328]i invoke 1
value:class "org/apache/hadoop/io/Text"
isoutSetContains  false value:class "org/apache/hadoop/io/Text" index:0
20210427node :virtualinvoke r5.<org.apache.hadoop.mapreduce.Job: void setOutputValueClass(java.lang.Class)>(class "org/apache/hadoop/io/IntWritable")
20210427node in :[]
20210427node out :[]
[taint329]i invoke virtualinvoke r5.<org.apache.hadoop.mapreduce.Job: void setOutputValueClass(java.lang.Class)>(class "org/apache/hadoop/io/IntWritable")
[taint328]i invoke <org.apache.hadoop.mapreduce.Job: void setOutputValueClass(java.lang.Class)>
[taint328]i invoke 1
value:class "org/apache/hadoop/io/IntWritable"
isoutSetContains  false value:class "org/apache/hadoop/io/IntWritable" index:0
20210427node :$r9 = new org.apache.hadoop.fs.Path
20210427node in :[]
普通复制语句1112:$r9 = new org.apache.hadoop.fs.Path
[taint source] u:new org.apache.hadoop.fs.Path
SourceList:[]
20210427node out :[]
20210427node :$r10 = r4[0]
20210427node in :[]
普通复制语句1112:$r10 = r4[0]
[taint source] u:r4
SourceList:[]
[taint source] u:0
SourceList:[]
[taint source] u:r4[0]
SourceList:[]
20210427node out :[]
20210427node :specialinvoke $r9.<org.apache.hadoop.fs.Path: void <init>(java.lang.String)>($r10)
20210427node in :[]
20210427node out :[]
[taint329]i invoke specialinvoke $r9.<org.apache.hadoop.fs.Path: void <init>(java.lang.String)>($r10)
[taint328]i invoke <org.apache.hadoop.fs.Path: void <init>(java.lang.String)>
[taint328]i invoke 1
value:$r10
isoutSetContains  false value:$r10 index:0
20210427node :staticinvoke <org.apache.hadoop.mapreduce.lib.input.FileInputFormat: void addInputPath(org.apache.hadoop.mapreduce.Job,org.apache.hadoop.fs.Path)>(r5, $r9)
20210427node in :[]
20210427node out :[]
[taint329]i invoke staticinvoke <org.apache.hadoop.mapreduce.lib.input.FileInputFormat: void addInputPath(org.apache.hadoop.mapreduce.Job,org.apache.hadoop.fs.Path)>(r5, $r9)
[taint328]i invoke <org.apache.hadoop.mapreduce.lib.input.FileInputFormat: void addInputPath(org.apache.hadoop.mapreduce.Job,org.apache.hadoop.fs.Path)>
[taint328]i invoke 2
value:r5
isoutSetContains  false value:r5 index:0
value:$r9
isoutSetContains  false value:$r9 index:1
20210427node :$r11 = new org.apache.hadoop.fs.Path
20210427node in :[]
普通复制语句1112:$r11 = new org.apache.hadoop.fs.Path
[taint source] u:new org.apache.hadoop.fs.Path
SourceList:[]
20210427node out :[]
20210427node :$r12 = r4[1]
20210427node in :[]
普通复制语句1112:$r12 = r4[1]
[taint source] u:r4
SourceList:[]
[taint source] u:1
SourceList:[]
[taint source] u:r4[1]
SourceList:[]
20210427node out :[]
20210427node :specialinvoke $r11.<org.apache.hadoop.fs.Path: void <init>(java.lang.String)>($r12)
20210427node in :[]
20210427node out :[]
[taint329]i invoke specialinvoke $r11.<org.apache.hadoop.fs.Path: void <init>(java.lang.String)>($r12)
[taint328]i invoke <org.apache.hadoop.fs.Path: void <init>(java.lang.String)>
[taint328]i invoke 1
value:$r12
isoutSetContains  false value:$r12 index:0
20210427node :staticinvoke <org.apache.hadoop.mapreduce.lib.output.FileOutputFormat: void setOutputPath(org.apache.hadoop.mapreduce.Job,org.apache.hadoop.fs.Path)>(r5, $r11)
20210427node in :[]
20210427node out :[]
[taint329]i invoke staticinvoke <org.apache.hadoop.mapreduce.lib.output.FileOutputFormat: void setOutputPath(org.apache.hadoop.mapreduce.Job,org.apache.hadoop.fs.Path)>(r5, $r11)
[taint328]i invoke <org.apache.hadoop.mapreduce.lib.output.FileOutputFormat: void setOutputPath(org.apache.hadoop.mapreduce.Job,org.apache.hadoop.fs.Path)>
[taint328]i invoke 2
value:r5
isoutSetContains  false value:r5 index:0
value:$r11
isoutSetContains  false value:$r11 index:1
20210427node :$z0 = virtualinvoke r5.<org.apache.hadoop.mapreduce.Job: boolean waitForCompletion(boolean)>(1)
20210427node in :[]
调用语句赋值给变量:$z0 = virtualinvoke r5.<org.apache.hadoop.mapreduce.Job: boolean waitForCompletion(boolean)>(1)
20210427node out :[]
[taint328]a invoke <org.apache.hadoop.mapreduce.Job: boolean waitForCompletion(boolean)>
[taint328]a invoke 1
assi isoutSet  false value:1 index:0
20210427node :if $z0 == 0 goto $b2 = 1
20210427node in :[]
20210427node out :[]
Have
Stmt if :if $z0 == 0 goto $b2 = 1Stmt if value:$z0 == 0the value=$z0
the value=0
maintainValues.size0
ifValues1
20210427node :$b2 = 1
20210427node in :[]
普通复制语句1112:$b2 = 1
[taint source] u:1
SourceList:[]
20210427node out :[]
20210427node :$b2 = 0
20210427node in :[]
普通复制语句1112:$b2 = 0
[taint source] u:0
SourceList:[]
20210427node out :[]
20210427node :goto [?= b1 = $b2]
20210427node in :[]
20210427node out :[]
20210427node :b1 = $b2
20210427node in :[]
普通复制语句1112:b1 = $b2
[taint source] u:$b2
SourceList:[]
20210427node out :[]
20210427node :$l3 = staticinvoke <java.lang.System: long currentTimeMillis()>()
20210427node in :[]
调用语句赋值给变量:$l3 = staticinvoke <java.lang.System: long currentTimeMillis()>()
20210427node out :[]
[taint328]a invoke <java.lang.System: long currentTimeMillis()>
[taint328]a invoke 0
20210427node :$l4 = $l3 - l0
20210427node in :[]
普通复制语句1112:$l4 = $l3 - l0
[taint source] u:$l3
SourceList:[]
[taint source] u:l0
SourceList:[]
[taint source] u:$l3 - l0
SourceList:[]
20210427node out :[]
20210427node :$d1 = (double) $l4
20210427node in :[]
普通复制语句1112:$d1 = (double) $l4
[taint source] u:$l4
SourceList:[]
[taint source] u:(double) $l4
SourceList:[]
20210427node out :[]
20210427node :d0 = $d1 / 1000.0
20210427node in :[]
普通复制语句1112:d0 = $d1 / 1000.0
[taint source] u:$d1
SourceList:[]
[taint source] u:1000.0
SourceList:[]
[taint source] u:$d1 / 1000.0
SourceList:[]
20210427node out :[]
20210427node :$r13 = <java.lang.System: java.io.PrintStream out>
20210427node in :[]
普通复制语句1112:$r13 = <java.lang.System: java.io.PrintStream out>
[taint source] u:<java.lang.System: java.io.PrintStream out>
SourceList:[]
20210427node out :[]
20210427node :$r14 = new java.lang.StringBuilder
20210427node in :[]
普通复制语句1112:$r14 = new java.lang.StringBuilder
[taint source] u:new java.lang.StringBuilder
SourceList:[]
20210427node out :[]
20210427node :specialinvoke $r14.<java.lang.StringBuilder: void <init>()>()
20210427node in :[]
20210427node out :[]
[taint329]i invoke specialinvoke $r14.<java.lang.StringBuilder: void <init>()>()
[taint328]i invoke <java.lang.StringBuilder: void <init>()>
[taint328]i invoke 0
20210427node :$r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Job Finished in ")
20210427node in :[]
调用语句赋值给变量:$r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Job Finished in ")
20210427node out :[]
[taint328]a invoke <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
[taint328]a invoke 1
assi isoutSet  false value:"Job Finished in " index:0
20210427node :$r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(double)>(d0)
20210427node in :[]
调用语句赋值给变量:$r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(double)>(d0)
20210427node out :[]
[taint328]a invoke <java.lang.StringBuilder: java.lang.StringBuilder append(double)>
[taint328]a invoke 1
assi isoutSet  false value:d0 index:0
20210427node :$r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" seconds")
20210427node in :[]
调用语句赋值给变量:$r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" seconds")
20210427node out :[]
[taint328]a invoke <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
[taint328]a invoke 1
assi isoutSet  false value:" seconds" index:0
20210427node :$r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>()
20210427node in :[]
调用语句赋值给变量:$r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>()
20210427node out :[]
[taint328]a invoke <java.lang.StringBuilder: java.lang.String toString()>
[taint328]a invoke 0
20210427node :virtualinvoke $r13.<java.io.PrintStream: void println(java.lang.String)>($r18)
20210427node in :[]
20210427node out :[]
[taint329]i invoke virtualinvoke $r13.<java.io.PrintStream: void println(java.lang.String)>($r18)
[taint328]i invoke <java.io.PrintStream: void println(java.lang.String)>
[taint328]i invoke 1
value:$r18
isoutSetContains  false value:$r18 index:0
20210427node :staticinvoke <java.lang.System: void exit(int)>(b1)
20210427node in :[]
20210427node out :[]
[taint329]i invoke staticinvoke <java.lang.System: void exit(int)>(b1)
[taint328]i invoke <java.lang.System: void exit(int)>
[taint328]i invoke 1
value:b1
isoutSetContains  false value:b1 index:0
20210427node :return
20210427node in :[]
20210427node out :[]
analysis.outSet.size():0
[CFMAP]2021 After taintAnalysis:{cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}
The data isgggg 
<cfhider.WordCount: void main(java.lang.String[])>
The data isgggg cfhider.WordCount main [] {cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}  {cfhider.WordCount$IntSumReducer={reduce=[I@350c764b}, cfhider.WordCount$TokenizerMapper={map=[I@4b59c01c}, cfhider.WordCount={main=[I@2ebd21bf}, invoker.SnowFlake={<init>=[I@548fe222, getNextMill=[I@3247518d, getNewstmp=[I@18c852}}
Coming...
doAnalysis Startingqqqqqqqq.....
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
[taint329]i invoke staticinvoke <java.lang.System: void exit(int)>(b1)
[taint328]i invoke <java.lang.System: void exit(int)>
[taint328]i invoke 1
value:b1
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
[taint329]i invoke virtualinvoke $r13.<java.io.PrintStream: void println(java.lang.String)>($r18)
[taint328]i invoke <java.io.PrintStream: void println(java.lang.String)>
[taint328]i invoke 1
value:$r18
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>()
currStmt left value20210420:$r18
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" seconds")
currStmt left value20210420:$r17
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(double)>(d0)
currStmt left value20210420:$r16
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Job Finished in ")
currStmt left value20210420:$r15
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
[taint329]i invoke specialinvoke $r14.<java.lang.StringBuilder: void <init>()>()
[taint328]i invoke <java.lang.StringBuilder: void <init>()>
[taint328]i invoke 0
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$r14 = new java.lang.StringBuilder
currStmt left value20210420:$r14
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$r13 = <java.lang.System: java.io.PrintStream out>
currStmt left value20210420:$r13
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:d0 = $d1 / 1000.0
currStmt left value20210420:d0
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$d1 = (double) $l4
currStmt left value20210420:$d1
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$l4 = $l3 - l0
currStmt left value20210420:$l4
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$l3 = staticinvoke <java.lang.System: long currentTimeMillis()>()
currStmt left value20210420:$l3
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:b1 = $b2
currStmt left value20210420:b1
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$b2 = 0
currStmt left value20210420:$b2
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$b2 = 1
currStmt left value20210420:$b2
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
Have
the value=$z0
the value=0
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$z0 = virtualinvoke r5.<org.apache.hadoop.mapreduce.Job: boolean waitForCompletion(boolean)>(1)
currStmt left value20210420:$z0
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
[taint329]i invoke staticinvoke <org.apache.hadoop.mapreduce.lib.output.FileOutputFormat: void setOutputPath(org.apache.hadoop.mapreduce.Job,org.apache.hadoop.fs.Path)>(r5, $r11)
[taint328]i invoke <org.apache.hadoop.mapreduce.lib.output.FileOutputFormat: void setOutputPath(org.apache.hadoop.mapreduce.Job,org.apache.hadoop.fs.Path)>
[taint328]i invoke 2
value:r5
value:$r11
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
[taint329]i invoke specialinvoke $r11.<org.apache.hadoop.fs.Path: void <init>(java.lang.String)>($r12)
[taint328]i invoke <org.apache.hadoop.fs.Path: void <init>(java.lang.String)>
[taint328]i invoke 1
value:$r12
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$r12 = r4[1]
currStmt left value20210420:$r12
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$r11 = new org.apache.hadoop.fs.Path
currStmt left value20210420:$r11
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
[taint329]i invoke staticinvoke <org.apache.hadoop.mapreduce.lib.input.FileInputFormat: void addInputPath(org.apache.hadoop.mapreduce.Job,org.apache.hadoop.fs.Path)>(r5, $r9)
[taint328]i invoke <org.apache.hadoop.mapreduce.lib.input.FileInputFormat: void addInputPath(org.apache.hadoop.mapreduce.Job,org.apache.hadoop.fs.Path)>
[taint328]i invoke 2
value:r5
value:$r9
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
[taint329]i invoke specialinvoke $r9.<org.apache.hadoop.fs.Path: void <init>(java.lang.String)>($r10)
[taint328]i invoke <org.apache.hadoop.fs.Path: void <init>(java.lang.String)>
[taint328]i invoke 1
value:$r10
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$r10 = r4[0]
currStmt left value20210420:$r10
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$r9 = new org.apache.hadoop.fs.Path
currStmt left value20210420:$r9
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
[taint329]i invoke virtualinvoke r5.<org.apache.hadoop.mapreduce.Job: void setOutputValueClass(java.lang.Class)>(class "org/apache/hadoop/io/IntWritable")
[taint328]i invoke <org.apache.hadoop.mapreduce.Job: void setOutputValueClass(java.lang.Class)>
[taint328]i invoke 1
value:class "org/apache/hadoop/io/IntWritable"
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
[taint329]i invoke virtualinvoke r5.<org.apache.hadoop.mapreduce.Job: void setOutputKeyClass(java.lang.Class)>(class "org/apache/hadoop/io/Text")
[taint328]i invoke <org.apache.hadoop.mapreduce.Job: void setOutputKeyClass(java.lang.Class)>
[taint328]i invoke 1
value:class "org/apache/hadoop/io/Text"
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
[taint329]i invoke virtualinvoke r5.<org.apache.hadoop.mapreduce.Job: void setReducerClass(java.lang.Class)>(class "cfhider/WordCount$IntSumReducer")
[taint328]i invoke <org.apache.hadoop.mapreduce.Job: void setReducerClass(java.lang.Class)>
[taint328]i invoke 1
value:class "cfhider/WordCount$IntSumReducer"
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
[taint329]i invoke virtualinvoke r5.<org.apache.hadoop.mapreduce.Job: void setCombinerClass(java.lang.Class)>(class "cfhider/WordCount$IntSumReducer")
[taint328]i invoke <org.apache.hadoop.mapreduce.Job: void setCombinerClass(java.lang.Class)>
[taint328]i invoke 1
value:class "cfhider/WordCount$IntSumReducer"
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
[taint329]i invoke virtualinvoke r5.<org.apache.hadoop.mapreduce.Job: void setMapperClass(java.lang.Class)>(class "cfhider/WordCount$TokenizerMapper")
[taint328]i invoke <org.apache.hadoop.mapreduce.Job: void setMapperClass(java.lang.Class)>
[taint328]i invoke 1
value:class "cfhider/WordCount$TokenizerMapper"
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
[taint329]i invoke virtualinvoke r5.<org.apache.hadoop.mapreduce.Job: void setJarByClass(java.lang.Class)>(class "cfhider/WordCount")
[taint328]i invoke <org.apache.hadoop.mapreduce.Job: void setJarByClass(java.lang.Class)>
[taint328]i invoke 1
value:class "cfhider/WordCount"
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:r5 = $r8
currStmt left value20210420:r5
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
[taint329]i invoke specialinvoke $r8.<org.apache.hadoop.mapreduce.Job: void <init>(org.apache.hadoop.conf.Configuration,java.lang.String)>(r2, "word count")
[taint328]i invoke <org.apache.hadoop.mapreduce.Job: void <init>(org.apache.hadoop.conf.Configuration,java.lang.String)>
[taint328]i invoke 2
value:r2
value:"word count"
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$r8 = new org.apache.hadoop.mapreduce.Job
currStmt left value20210420:$r8
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:l0 = staticinvoke <java.lang.System: long currentTimeMillis()>()
currStmt left value20210420:l0
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:r4 = virtualinvoke r3.<org.apache.hadoop.util.GenericOptionsParser: java.lang.String[] getRemainingArgs()>()
currStmt left value20210420:r4
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:r3 = $r7
currStmt left value20210420:r3
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
[taint329]i invoke specialinvoke $r7.<org.apache.hadoop.util.GenericOptionsParser: void <init>(org.apache.hadoop.conf.Configuration,java.lang.String[])>(r2, r0)
[taint328]i invoke <org.apache.hadoop.util.GenericOptionsParser: void <init>(org.apache.hadoop.conf.Configuration,java.lang.String[])>
[taint328]i invoke 2
value:r2
value:r0
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$r7 = new org.apache.hadoop.util.GenericOptionsParser
currStmt left value20210420:$r7
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:r2 = $r6
currStmt left value20210420:r2
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
[taint329]i invoke specialinvoke $r6.<org.apache.hadoop.conf.Configuration: void <init>()>()
[taint328]i invoke <org.apache.hadoop.conf.Configuration: void <init>()>
[taint328]i invoke 0
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$r6 = new org.apache.hadoop.conf.Configuration
currStmt left value20210420:$r6
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
[taint329]i invoke virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>("In this project, we test wordcount with SGX!\n")
[taint328]i invoke <java.io.PrintStream: void println(java.lang.String)>
[taint328]i invoke 1
value:"In this project, we test wordcount with SGX!\n"
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$r1 = <java.lang.System: java.io.PrintStream out>
currStmt left value20210420:$r1
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
doAnalysis endqqqqqqq.....
come here
[CFMAP]2021 After BackwardAnalysis:{cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}
[taint]SooClass:cfhider.WordCount$TokenizerMapper
[taint] class: cfhider.WordCount$TokenizerMapper
methList :{<init>=[], <clinit>=[], map=[$z0]}
[taint into] sootMethod: <init>
[]
class name :cfhider.WordCount$TokenizerMapper
method name :<init>
method list :[]
clasname=cfhider.WordCount$TokenizerMapper
methodname=<init>
sourcelist2021=[]
20210427node :r0 := @this: cfhider.WordCount$TokenizerMapper
20210427node in :[]
20210427node out :[]
currStmt20210423:r0 := @this: cfhider.WordCount$TokenizerMapper
20210427node :specialinvoke r0.<org.apache.hadoop.mapreduce.Mapper: void <init>()>()
20210427node in :[]
20210427node out :[]
[taint329]i invoke specialinvoke r0.<org.apache.hadoop.mapreduce.Mapper: void <init>()>()
[taint328]i invoke <org.apache.hadoop.mapreduce.Mapper: void <init>()>
[taint328]i invoke 0
20210427node :$r1 = new org.apache.hadoop.io.Text
20210427node in :[]
普通复制语句1112:$r1 = new org.apache.hadoop.io.Text
[taint source] u:new org.apache.hadoop.io.Text
SourceList:[]
20210427node out :[]
20210427node :specialinvoke $r1.<org.apache.hadoop.io.Text: void <init>()>()
20210427node in :[]
20210427node out :[]
[taint329]i invoke specialinvoke $r1.<org.apache.hadoop.io.Text: void <init>()>()
[taint328]i invoke <org.apache.hadoop.io.Text: void <init>()>
[taint328]i invoke 0
20210427node :r0.<cfhider.WordCount$TokenizerMapper: org.apache.hadoop.io.Text word> = $r1
20210427node in :[]
普通复制语句1112:r0.<cfhider.WordCount$TokenizerMapper: org.apache.hadoop.io.Text word> = $r1
[taint source] u:r0
SourceList:[]
[taint source] u:$r1
SourceList:[]
20210427node out :[]
20210427node :return
20210427node in :[]
20210427node out :[]
analysis.outSet.size():0
[CFMAP]2021 After taintAnalysis:{cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}
The data isgggg 
<cfhider.WordCount$TokenizerMapper: void <init>()>
The data isgggg cfhider.WordCount$TokenizerMapper <init> [] {cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}  {cfhider.WordCount$IntSumReducer={reduce=[I@350c764b}, cfhider.WordCount$TokenizerMapper={map=[I@4b59c01c}, cfhider.WordCount={main=[I@2ebd21bf}, invoker.SnowFlake={<init>=[I@548fe222, getNextMill=[I@3247518d, getNewstmp=[I@18c852}}
Coming...
doAnalysis Startingqqqqqqqq.....
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:r0.<cfhider.WordCount$TokenizerMapper: org.apache.hadoop.io.Text word> = $r1
currStmt left value20210420:r0.<cfhider.WordCount$TokenizerMapper: org.apache.hadoop.io.Text word>
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
[taint329]i invoke specialinvoke $r1.<org.apache.hadoop.io.Text: void <init>()>()
[taint328]i invoke <org.apache.hadoop.io.Text: void <init>()>
[taint328]i invoke 0
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$r1 = new org.apache.hadoop.io.Text
currStmt left value20210420:$r1
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
[taint329]i invoke specialinvoke r0.<org.apache.hadoop.mapreduce.Mapper: void <init>()>()
[taint328]i invoke <org.apache.hadoop.mapreduce.Mapper: void <init>()>
[taint328]i invoke 0
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
doAnalysis endqqqqqqq.....
come here
[CFMAP]2021 After BackwardAnalysis:{cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}
[taint into] sootMethod: map
[$z0]
class name :cfhider.WordCount$TokenizerMapper
method name :map
method list :[$z0]
clasname=cfhider.WordCount$TokenizerMapper
methodname=map
sourcelist2021=[$z0]
20210427node :r0 := @this: cfhider.WordCount$TokenizerMapper
20210427node in :[]
20210427node out :[]
currStmt20210423:r0 := @this: cfhider.WordCount$TokenizerMapper
20210427node :r1 := @parameter0: java.lang.Object
20210427node in :[]
[idStmt]iiiiiii r1 := @parameter0: java.lang.Object  index:0
ClassName:cfhider.WordCount$TokenizerMapper
MethodName:map
aaaa:0
20210427node out :[]
currStmt20210423:r1 := @parameter0: java.lang.Object
20210427node :r2 := @parameter1: org.apache.hadoop.io.Text
20210427node in :[]
[idStmt]iiiiiii r2 := @parameter1: org.apache.hadoop.io.Text  index:1
ClassName:cfhider.WordCount$TokenizerMapper
MethodName:map
aaaa:0
20210427node out :[]
currStmt20210423:r2 := @parameter1: org.apache.hadoop.io.Text
20210427node :r3 := @parameter2: org.apache.hadoop.mapreduce.Mapper$Context
20210427node in :[]
[idStmt]iiiiiii r3 := @parameter2: org.apache.hadoop.mapreduce.Mapper$Context  index:2
ClassName:cfhider.WordCount$TokenizerMapper
MethodName:map
aaaa:0
20210427node out :[]
currStmt20210423:r3 := @parameter2: org.apache.hadoop.mapreduce.Mapper$Context
20210427node :$r4 = new java.util.StringTokenizer
20210427node in :[]
普通复制语句1112:$r4 = new java.util.StringTokenizer
[taint source] u:new java.util.StringTokenizer
SourceList:[$z0]
20210427node out :[]
20210427node :$r6 = virtualinvoke r2.<org.apache.hadoop.io.Text: java.lang.String toString()>()
20210427node in :[]
调用语句赋值给变量:$r6 = virtualinvoke r2.<org.apache.hadoop.io.Text: java.lang.String toString()>()
20210427node out :[]
[taint328]a invoke <org.apache.hadoop.io.Text: java.lang.String toString()>
[taint328]a invoke 0
20210427node :specialinvoke $r4.<java.util.StringTokenizer: void <init>(java.lang.String)>($r6)
20210427node in :[]
20210427node out :[]
[taint329]i invoke specialinvoke $r4.<java.util.StringTokenizer: void <init>(java.lang.String)>($r6)
[taint328]i invoke <java.util.StringTokenizer: void <init>(java.lang.String)>
[taint328]i invoke 1
value:$r6
isoutSetContains  false value:$r6 index:0
20210427node :r5 = $r4
20210427node in :[]
普通复制语句1112:r5 = $r4
[taint source] u:$r4
SourceList:[$z0]
20210427node out :[]
20210427node :$z0 = virtualinvoke r5.<java.util.StringTokenizer: boolean hasMoreTokens()>()
20210427node in :[]
调用语句赋值给变量:$z0 = virtualinvoke r5.<java.util.StringTokenizer: boolean hasMoreTokens()>()
20210427node out :[]
[taint328]a invoke <java.util.StringTokenizer: boolean hasMoreTokens()>
[taint328]a invoke 0
20210427node :if $z0 == 0 goto return
20210427node in :[]
20210427node out :[]
Have
Stmt if :if $z0 == 0 goto returnStmt if value:$z0 == 0the value=$z0
the value=0
maintainValues.size1
ifValues1
20210427node :return
20210427node in :[]
20210427node out :[]
20210427node :$r7 = r0.<cfhider.WordCount$TokenizerMapper: org.apache.hadoop.io.Text word>
20210427node in :[]
普通复制语句1112:$r7 = r0.<cfhider.WordCount$TokenizerMapper: org.apache.hadoop.io.Text word>
[taint source] u:r0
SourceList:[$z0]
[taint source] u:r0.<cfhider.WordCount$TokenizerMapper: org.apache.hadoop.io.Text word>
SourceList:[$z0]
20210427node out :[]
20210427node :$r8 = virtualinvoke r5.<java.util.StringTokenizer: java.lang.String nextToken()>()
20210427node in :[]
调用语句赋值给变量:$r8 = virtualinvoke r5.<java.util.StringTokenizer: java.lang.String nextToken()>()
20210427node out :[]
[taint328]a invoke <java.util.StringTokenizer: java.lang.String nextToken()>
[taint328]a invoke 0
20210427node :virtualinvoke $r7.<org.apache.hadoop.io.Text: void set(java.lang.String)>($r8)
20210427node in :[]
20210427node out :[]
[taint329]i invoke virtualinvoke $r7.<org.apache.hadoop.io.Text: void set(java.lang.String)>($r8)
[taint328]i invoke <org.apache.hadoop.io.Text: void set(java.lang.String)>
[taint328]i invoke 1
value:$r8
isoutSetContains  false value:$r8 index:0
20210427node :$r9 = r0.<cfhider.WordCount$TokenizerMapper: org.apache.hadoop.io.Text word>
20210427node in :[]
普通复制语句1112:$r9 = r0.<cfhider.WordCount$TokenizerMapper: org.apache.hadoop.io.Text word>
[taint source] u:r0
SourceList:[$z0]
[taint source] u:r0.<cfhider.WordCount$TokenizerMapper: org.apache.hadoop.io.Text word>
SourceList:[$z0]
20210427node out :[]
20210427node :$r10 = <cfhider.WordCount$TokenizerMapper: org.apache.hadoop.io.IntWritable one>
20210427node in :[]
普通复制语句1112:$r10 = <cfhider.WordCount$TokenizerMapper: org.apache.hadoop.io.IntWritable one>
[taint source] u:<cfhider.WordCount$TokenizerMapper: org.apache.hadoop.io.IntWritable one>
SourceList:[$z0]
20210427node out :[]
20210427node :virtualinvoke r3.<org.apache.hadoop.mapreduce.Mapper$Context: void write(java.lang.Object,java.lang.Object)>($r9, $r10)
20210427node in :[]
20210427node out :[]
[taint329]i invoke virtualinvoke r3.<org.apache.hadoop.mapreduce.Mapper$Context: void write(java.lang.Object,java.lang.Object)>($r9, $r10)
[taint328]i invoke <org.apache.hadoop.mapreduce.TaskInputOutputContext: void write(java.lang.Object,java.lang.Object)>
[taint328]i invoke 2
value:$r9
isoutSetContains  false value:$r9 index:0
value:$r10
isoutSetContains  false value:$r10 index:1
20210427node :goto [?= $z0 = virtualinvoke r5.<java.util.StringTokenizer: boolean hasMoreTokens()>()]
20210427node in :[]
20210427node out :[]
analysis.outSet.size():0
[CFMAP]2021 After taintAnalysis:{cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}
The data isgggg 
<cfhider.WordCount$TokenizerMapper: void map(java.lang.Object,org.apache.hadoop.io.Text,org.apache.hadoop.mapreduce.Mapper$Context)>
The data isgggg cfhider.WordCount$TokenizerMapper map [$z0] {cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}  {cfhider.WordCount$IntSumReducer={reduce=[I@350c764b}, cfhider.WordCount$TokenizerMapper={map=[I@2f29a92}, cfhider.WordCount={main=[I@2ebd21bf}, invoker.SnowFlake={<init>=[I@548fe222, getNextMill=[I@3247518d, getNewstmp=[I@18c852}}
Coming...
doAnalysis Startingqqqqqqqq.....
srcValue=[]
destValue:[]
taint data:[$z0]
Coming in Backward Analysis
srcValue=[]
destValue:[]
taint data:[$z0]
Coming in Backward Analysis
[taint329]i invoke virtualinvoke r3.<org.apache.hadoop.mapreduce.Mapper$Context: void write(java.lang.Object,java.lang.Object)>($r9, $r10)
[taint328]i invoke <org.apache.hadoop.mapreduce.TaskInputOutputContext: void write(java.lang.Object,java.lang.Object)>
[taint328]i invoke 2
value:$r9
value:$r10
srcValue=[]
destValue:[]
taint data:[$z0]
Coming in Backward Analysis
currStmt20210420:$r10 = <cfhider.WordCount$TokenizerMapper: org.apache.hadoop.io.IntWritable one>
currStmt left value20210420:$r10
srcValue=[]
destValue:[]
taint data:[$z0]
Coming in Backward Analysis
currStmt20210420:$r9 = r0.<cfhider.WordCount$TokenizerMapper: org.apache.hadoop.io.Text word>
currStmt left value20210420:$r9
srcValue=[]
destValue:[]
taint data:[$z0]
Coming in Backward Analysis
[taint329]i invoke virtualinvoke $r7.<org.apache.hadoop.io.Text: void set(java.lang.String)>($r8)
[taint328]i invoke <org.apache.hadoop.io.Text: void set(java.lang.String)>
[taint328]i invoke 1
value:$r8
srcValue=[]
destValue:[]
taint data:[$z0]
Coming in Backward Analysis
currStmt20210420:$r8 = virtualinvoke r5.<java.util.StringTokenizer: java.lang.String nextToken()>()
currStmt left value20210420:$r8
srcValue=[]
destValue:[]
taint data:[$z0]
Coming in Backward Analysis
currStmt20210420:$r7 = r0.<cfhider.WordCount$TokenizerMapper: org.apache.hadoop.io.Text word>
currStmt left value20210420:$r7
srcValue=[]
destValue:[]
taint data:[$z0]
Coming in Backward Analysis
srcValue=[]
destValue:[]
taint data:[$z0]
Coming in Backward Analysis
Have
the value=$z0
the value=0
srcValue=[]
destValue:[]
taint data:[$z0]
Coming in Backward Analysis
currStmt20210420:$z0 = virtualinvoke r5.<java.util.StringTokenizer: boolean hasMoreTokens()>()
currStmt left value20210420:$z0
BackWard 20210419===virtualinvoke r5.<java.util.StringTokenizer: boolean hasMoreTokens()>()
[BackWard taint329]i invoke $z0 = virtualinvoke r5.<java.util.StringTokenizer: boolean hasMoreTokens()>()
[BackWard taint328]i invoke <java.util.StringTokenizer: boolean hasMoreTokens()>
srcValue=[]
destValue:[]
taint data:[$z0]
Coming in Backward Analysis
currStmt20210420:r5 = $r4
currStmt left value20210420:r5
srcValue=[]
destValue:[]
taint data:[$z0]
Coming in Backward Analysis
[taint329]i invoke specialinvoke $r4.<java.util.StringTokenizer: void <init>(java.lang.String)>($r6)
[taint328]i invoke <java.util.StringTokenizer: void <init>(java.lang.String)>
[taint328]i invoke 1
value:$r6
srcValue=[]
destValue:[]
taint data:[$z0]
Coming in Backward Analysis
currStmt20210420:$r6 = virtualinvoke r2.<org.apache.hadoop.io.Text: java.lang.String toString()>()
currStmt left value20210420:$r6
srcValue=[]
destValue:[]
taint data:[$z0]
Coming in Backward Analysis
currStmt20210420:$r4 = new java.util.StringTokenizer
currStmt left value20210420:$r4
srcValue=[]
destValue:[]
taint data:[$z0]
Coming in Backward Analysis
srcValue=[]
destValue:[]
taint data:[$z0]
Coming in Backward Analysis
srcValue=[]
destValue:[]
taint data:[$z0]
Coming in Backward Analysis
srcValue=[]
destValue:[]
taint data:[$z0]
Coming in Backward Analysis
doAnalysis endqqqqqqq.....
come here
[CFMAP]2021 After BackwardAnalysis:{cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}
[taint into] sootMethod: map
[$z0]
class name :cfhider.WordCount$TokenizerMapper
method name :map
method list :[$z0]
clasname=cfhider.WordCount$TokenizerMapper
methodname=map
sourcelist2021=[$z0]
20210427node :r0 := @this: cfhider.WordCount$TokenizerMapper
20210427node in :[]
20210427node out :[]
currStmt20210423:r0 := @this: cfhider.WordCount$TokenizerMapper
20210427node :r1 := @parameter0: java.lang.Object
20210427node in :[]
[idStmt]iiiiiii r1 := @parameter0: java.lang.Object  index:0
ClassName:cfhider.WordCount$TokenizerMapper
MethodName:map
aaaa:0
20210427node out :[]
currStmt20210423:r1 := @parameter0: java.lang.Object
20210427node :r2 := @parameter1: java.lang.Object
20210427node in :[]
[idStmt]iiiiiii r2 := @parameter1: java.lang.Object  index:1
ClassName:cfhider.WordCount$TokenizerMapper
MethodName:map
aaaa:0
20210427node out :[]
currStmt20210423:r2 := @parameter1: java.lang.Object
20210427node :r3 := @parameter2: org.apache.hadoop.mapreduce.Mapper$Context
20210427node in :[]
[idStmt]iiiiiii r3 := @parameter2: org.apache.hadoop.mapreduce.Mapper$Context  index:2
ClassName:cfhider.WordCount$TokenizerMapper
MethodName:map
aaaa:0
20210427node out :[]
currStmt20210423:r3 := @parameter2: org.apache.hadoop.mapreduce.Mapper$Context
20210427node :$r4 = (org.apache.hadoop.io.Text) r2
20210427node in :[]
普通复制语句1112:$r4 = (org.apache.hadoop.io.Text) r2
[taint source] u:r2
SourceList:[$z0]
[taint source] u:(org.apache.hadoop.io.Text) r2
SourceList:[$z0]
20210427node out :[]
20210427node :virtualinvoke r0.<cfhider.WordCount$TokenizerMapper: void map(java.lang.Object,org.apache.hadoop.io.Text,org.apache.hadoop.mapreduce.Mapper$Context)>(r1, $r4, r3)
20210427node in :[]
20210427node out :[]
[taint329]i invoke virtualinvoke r0.<cfhider.WordCount$TokenizerMapper: void map(java.lang.Object,org.apache.hadoop.io.Text,org.apache.hadoop.mapreduce.Mapper$Context)>(r1, $r4, r3)
[taint328]i invoke <cfhider.WordCount$TokenizerMapper: void map(java.lang.Object,org.apache.hadoop.io.Text,org.apache.hadoop.mapreduce.Mapper$Context)>
[taint328]i invoke 3
value:r1
isoutSetContains  false value:r1 index:0
value:$r4
isoutSetContains  false value:$r4 index:1
value:r3
isoutSetContains  false value:r3 index:2
[invokemap]invoke:map  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
20210427node :return
20210427node in :[]
20210427node out :[]
analysis.outSet.size():0
[CFMAP]2021 After taintAnalysis:{cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}
The data isgggg 
<cfhider.WordCount$TokenizerMapper: void map(java.lang.Object,java.lang.Object,org.apache.hadoop.mapreduce.Mapper$Context)>
The data isgggg cfhider.WordCount$TokenizerMapper map [$z0] {cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}  {cfhider.WordCount$IntSumReducer={reduce=[I@350c764b}, cfhider.WordCount$TokenizerMapper={map=[I@581e8c1}, cfhider.WordCount={main=[I@2ebd21bf}, invoker.SnowFlake={<init>=[I@548fe222, getNextMill=[I@3247518d, getNewstmp=[I@18c852}}
Coming...
doAnalysis Startingqqqqqqqq.....
srcValue=[]
destValue:[]
taint data:[$z0]
Coming in Backward Analysis
srcValue=[]
destValue:[]
taint data:[$z0]
Coming in Backward Analysis
[taint329]i invoke virtualinvoke r0.<cfhider.WordCount$TokenizerMapper: void map(java.lang.Object,org.apache.hadoop.io.Text,org.apache.hadoop.mapreduce.Mapper$Context)>(r1, $r4, r3)
[taint328]i invoke <cfhider.WordCount$TokenizerMapper: void map(java.lang.Object,org.apache.hadoop.io.Text,org.apache.hadoop.mapreduce.Mapper$Context)>
[taint328]i invoke 3
value:r1
in here:[I@13d7d9ba
[invokemap]invoke:map  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
value:$r4
in here:[I@13d7d9ba
[invokemap]invoke:map  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
value:r3
in here:[I@13d7d9ba
[invokemap]invoke:map  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
srcValue=[]
destValue:[]
taint data:[$z0]
Coming in Backward Analysis
currStmt20210420:$r4 = (org.apache.hadoop.io.Text) r2
currStmt left value20210420:$r4
srcValue=[]
destValue:[]
taint data:[$z0]
Coming in Backward Analysis
srcValue=[]
destValue:[]
taint data:[$z0]
Coming in Backward Analysis
srcValue=[]
destValue:[]
taint data:[$z0]
Coming in Backward Analysis
srcValue=[]
destValue:[]
taint data:[$z0]
Coming in Backward Analysis
doAnalysis endqqqqqqq.....
come here
[CFMAP]2021 After BackwardAnalysis:{cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}
[taint into] sootMethod: <clinit>
[]
class name :cfhider.WordCount$TokenizerMapper
method name :<clinit>
method list :[]
clasname=cfhider.WordCount$TokenizerMapper
methodname=<clinit>
sourcelist2021=[]
20210427node :$r0 = new org.apache.hadoop.io.IntWritable
20210427node in :[]
普通复制语句1112:$r0 = new org.apache.hadoop.io.IntWritable
[taint source] u:new org.apache.hadoop.io.IntWritable
SourceList:[]
20210427node out :[]
20210427node :specialinvoke $r0.<org.apache.hadoop.io.IntWritable: void <init>(int)>(1)
20210427node in :[]
20210427node out :[]
[taint329]i invoke specialinvoke $r0.<org.apache.hadoop.io.IntWritable: void <init>(int)>(1)
[taint328]i invoke <org.apache.hadoop.io.IntWritable: void <init>(int)>
[taint328]i invoke 1
value:1
isoutSetContains  false value:1 index:0
20210427node :<cfhider.WordCount$TokenizerMapper: org.apache.hadoop.io.IntWritable one> = $r0
20210427node in :[]
普通复制语句1112:<cfhider.WordCount$TokenizerMapper: org.apache.hadoop.io.IntWritable one> = $r0
[taint source] u:$r0
SourceList:[]
20210427node out :[]
20210427node :return
20210427node in :[]
20210427node out :[]
analysis.outSet.size():0
[CFMAP]2021 After taintAnalysis:{cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}
The data isgggg 
<cfhider.WordCount$TokenizerMapper: void <clinit>()>
The data isgggg cfhider.WordCount$TokenizerMapper <clinit> [] {cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}  {cfhider.WordCount$IntSumReducer={reduce=[I@350c764b}, cfhider.WordCount$TokenizerMapper={map=[I@581e8c1}, cfhider.WordCount={main=[I@2ebd21bf}, invoker.SnowFlake={<init>=[I@548fe222, getNextMill=[I@3247518d, getNewstmp=[I@18c852}}
Coming...
doAnalysis Startingqqqqqqqq.....
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:<cfhider.WordCount$TokenizerMapper: org.apache.hadoop.io.IntWritable one> = $r0
currStmt left value20210420:<cfhider.WordCount$TokenizerMapper: org.apache.hadoop.io.IntWritable one>
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
[taint329]i invoke specialinvoke $r0.<org.apache.hadoop.io.IntWritable: void <init>(int)>(1)
[taint328]i invoke <org.apache.hadoop.io.IntWritable: void <init>(int)>
[taint328]i invoke 1
value:1
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$r0 = new org.apache.hadoop.io.IntWritable
currStmt left value20210420:$r0
doAnalysis endqqqqqqq.....
come here
[CFMAP]2021 After BackwardAnalysis:{cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}
[taint into] sootMethod: <init>
[]
class name :cfhider.WordCount$TokenizerMapper
method name :<init>
method list :[]
clasname=cfhider.WordCount$TokenizerMapper
methodname=<init>
sourcelist2021=[]
20210427node :r0 := @this: cfhider.WordCount$TokenizerMapper
20210427node in :[]
20210427node out :[]
currStmt20210423:r0 := @this: cfhider.WordCount$TokenizerMapper
20210427node :specialinvoke r0.<org.apache.hadoop.mapreduce.Mapper: void <init>()>()
20210427node in :[]
20210427node out :[]
[taint329]i invoke specialinvoke r0.<org.apache.hadoop.mapreduce.Mapper: void <init>()>()
[taint328]i invoke <org.apache.hadoop.mapreduce.Mapper: void <init>()>
[taint328]i invoke 0
20210427node :$r1 = new org.apache.hadoop.io.Text
20210427node in :[]
普通复制语句1112:$r1 = new org.apache.hadoop.io.Text
[taint source] u:new org.apache.hadoop.io.Text
SourceList:[]
20210427node out :[]
20210427node :specialinvoke $r1.<org.apache.hadoop.io.Text: void <init>()>()
20210427node in :[]
20210427node out :[]
[taint329]i invoke specialinvoke $r1.<org.apache.hadoop.io.Text: void <init>()>()
[taint328]i invoke <org.apache.hadoop.io.Text: void <init>()>
[taint328]i invoke 0
20210427node :r0.<cfhider.WordCount$TokenizerMapper: org.apache.hadoop.io.Text word> = $r1
20210427node in :[]
普通复制语句1112:r0.<cfhider.WordCount$TokenizerMapper: org.apache.hadoop.io.Text word> = $r1
[taint source] u:r0
SourceList:[]
[taint source] u:$r1
SourceList:[]
20210427node out :[]
20210427node :return
20210427node in :[]
20210427node out :[]
analysis.outSet.size():0
[CFMAP]2021 After taintAnalysis:{cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}
The data isgggg 
<cfhider.WordCount$TokenizerMapper: void <init>()>
The data isgggg cfhider.WordCount$TokenizerMapper <init> [] {cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}  {cfhider.WordCount$IntSumReducer={reduce=[I@350c764b}, cfhider.WordCount$TokenizerMapper={map=[I@581e8c1}, cfhider.WordCount={main=[I@2ebd21bf}, invoker.SnowFlake={<init>=[I@548fe222, getNextMill=[I@3247518d, getNewstmp=[I@18c852}}
Coming...
doAnalysis Startingqqqqqqqq.....
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:r0.<cfhider.WordCount$TokenizerMapper: org.apache.hadoop.io.Text word> = $r1
currStmt left value20210420:r0.<cfhider.WordCount$TokenizerMapper: org.apache.hadoop.io.Text word>
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
[taint329]i invoke specialinvoke $r1.<org.apache.hadoop.io.Text: void <init>()>()
[taint328]i invoke <org.apache.hadoop.io.Text: void <init>()>
[taint328]i invoke 0
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$r1 = new org.apache.hadoop.io.Text
currStmt left value20210420:$r1
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
[taint329]i invoke specialinvoke r0.<org.apache.hadoop.mapreduce.Mapper: void <init>()>()
[taint328]i invoke <org.apache.hadoop.mapreduce.Mapper: void <init>()>
[taint328]i invoke 0
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
doAnalysis endqqqqqqq.....
come here
[CFMAP]2021 After BackwardAnalysis:{cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}
[taint into] sootMethod: map
[$z0]
class name :cfhider.WordCount$TokenizerMapper
method name :map
method list :[$z0]
clasname=cfhider.WordCount$TokenizerMapper
methodname=map
sourcelist2021=[$z0]
20210427node :r0 := @this: cfhider.WordCount$TokenizerMapper
20210427node in :[]
20210427node out :[]
currStmt20210423:r0 := @this: cfhider.WordCount$TokenizerMapper
20210427node :r1 := @parameter0: java.lang.Object
20210427node in :[]
[idStmt]iiiiiii r1 := @parameter0: java.lang.Object  index:0
ClassName:cfhider.WordCount$TokenizerMapper
MethodName:map
aaaa:0
20210427node out :[]
currStmt20210423:r1 := @parameter0: java.lang.Object
20210427node :r2 := @parameter1: org.apache.hadoop.io.Text
20210427node in :[]
[idStmt]iiiiiii r2 := @parameter1: org.apache.hadoop.io.Text  index:1
ClassName:cfhider.WordCount$TokenizerMapper
MethodName:map
aaaa:0
20210427node out :[]
currStmt20210423:r2 := @parameter1: org.apache.hadoop.io.Text
20210427node :r3 := @parameter2: org.apache.hadoop.mapreduce.Mapper$Context
20210427node in :[]
[idStmt]iiiiiii r3 := @parameter2: org.apache.hadoop.mapreduce.Mapper$Context  index:2
ClassName:cfhider.WordCount$TokenizerMapper
MethodName:map
aaaa:0
20210427node out :[]
currStmt20210423:r3 := @parameter2: org.apache.hadoop.mapreduce.Mapper$Context
20210427node :$r4 = new java.util.StringTokenizer
20210427node in :[]
普通复制语句1112:$r4 = new java.util.StringTokenizer
[taint source] u:new java.util.StringTokenizer
SourceList:[$z0]
20210427node out :[]
20210427node :$r6 = virtualinvoke r2.<org.apache.hadoop.io.Text: java.lang.String toString()>()
20210427node in :[]
调用语句赋值给变量:$r6 = virtualinvoke r2.<org.apache.hadoop.io.Text: java.lang.String toString()>()
20210427node out :[]
[taint328]a invoke <org.apache.hadoop.io.Text: java.lang.String toString()>
[taint328]a invoke 0
20210427node :specialinvoke $r4.<java.util.StringTokenizer: void <init>(java.lang.String)>($r6)
20210427node in :[]
20210427node out :[]
[taint329]i invoke specialinvoke $r4.<java.util.StringTokenizer: void <init>(java.lang.String)>($r6)
[taint328]i invoke <java.util.StringTokenizer: void <init>(java.lang.String)>
[taint328]i invoke 1
value:$r6
isoutSetContains  false value:$r6 index:0
20210427node :r5 = $r4
20210427node in :[]
普通复制语句1112:r5 = $r4
[taint source] u:$r4
SourceList:[$z0]
20210427node out :[]
20210427node :$z0 = virtualinvoke r5.<java.util.StringTokenizer: boolean hasMoreTokens()>()
20210427node in :[]
调用语句赋值给变量:$z0 = virtualinvoke r5.<java.util.StringTokenizer: boolean hasMoreTokens()>()
20210427node out :[]
[taint328]a invoke <java.util.StringTokenizer: boolean hasMoreTokens()>
[taint328]a invoke 0
20210427node :if $z0 == 0 goto return
20210427node in :[]
20210427node out :[]
Have
Stmt if :if $z0 == 0 goto returnStmt if value:$z0 == 0the value=$z0
the value=0
maintainValues.size1
ifValues1
20210427node :return
20210427node in :[]
20210427node out :[]
20210427node :$r7 = r0.<cfhider.WordCount$TokenizerMapper: org.apache.hadoop.io.Text word>
20210427node in :[]
普通复制语句1112:$r7 = r0.<cfhider.WordCount$TokenizerMapper: org.apache.hadoop.io.Text word>
[taint source] u:r0
SourceList:[$z0]
[taint source] u:r0.<cfhider.WordCount$TokenizerMapper: org.apache.hadoop.io.Text word>
SourceList:[$z0]
20210427node out :[]
20210427node :$r8 = virtualinvoke r5.<java.util.StringTokenizer: java.lang.String nextToken()>()
20210427node in :[]
调用语句赋值给变量:$r8 = virtualinvoke r5.<java.util.StringTokenizer: java.lang.String nextToken()>()
20210427node out :[]
[taint328]a invoke <java.util.StringTokenizer: java.lang.String nextToken()>
[taint328]a invoke 0
20210427node :virtualinvoke $r7.<org.apache.hadoop.io.Text: void set(java.lang.String)>($r8)
20210427node in :[]
20210427node out :[]
[taint329]i invoke virtualinvoke $r7.<org.apache.hadoop.io.Text: void set(java.lang.String)>($r8)
[taint328]i invoke <org.apache.hadoop.io.Text: void set(java.lang.String)>
[taint328]i invoke 1
value:$r8
isoutSetContains  false value:$r8 index:0
20210427node :$r9 = r0.<cfhider.WordCount$TokenizerMapper: org.apache.hadoop.io.Text word>
20210427node in :[]
普通复制语句1112:$r9 = r0.<cfhider.WordCount$TokenizerMapper: org.apache.hadoop.io.Text word>
[taint source] u:r0
SourceList:[$z0]
[taint source] u:r0.<cfhider.WordCount$TokenizerMapper: org.apache.hadoop.io.Text word>
SourceList:[$z0]
20210427node out :[]
20210427node :$r10 = <cfhider.WordCount$TokenizerMapper: org.apache.hadoop.io.IntWritable one>
20210427node in :[]
普通复制语句1112:$r10 = <cfhider.WordCount$TokenizerMapper: org.apache.hadoop.io.IntWritable one>
[taint source] u:<cfhider.WordCount$TokenizerMapper: org.apache.hadoop.io.IntWritable one>
SourceList:[$z0]
20210427node out :[]
20210427node :virtualinvoke r3.<org.apache.hadoop.mapreduce.Mapper$Context: void write(java.lang.Object,java.lang.Object)>($r9, $r10)
20210427node in :[]
20210427node out :[]
[taint329]i invoke virtualinvoke r3.<org.apache.hadoop.mapreduce.Mapper$Context: void write(java.lang.Object,java.lang.Object)>($r9, $r10)
[taint328]i invoke <org.apache.hadoop.mapreduce.TaskInputOutputContext: void write(java.lang.Object,java.lang.Object)>
[taint328]i invoke 2
value:$r9
isoutSetContains  false value:$r9 index:0
value:$r10
isoutSetContains  false value:$r10 index:1
20210427node :goto [?= $z0 = virtualinvoke r5.<java.util.StringTokenizer: boolean hasMoreTokens()>()]
20210427node in :[]
20210427node out :[]
analysis.outSet.size():0
[CFMAP]2021 After taintAnalysis:{cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}
The data isgggg 
<cfhider.WordCount$TokenizerMapper: void map(java.lang.Object,org.apache.hadoop.io.Text,org.apache.hadoop.mapreduce.Mapper$Context)>
The data isgggg cfhider.WordCount$TokenizerMapper map [$z0] {cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}  {cfhider.WordCount$IntSumReducer={reduce=[I@350c764b}, cfhider.WordCount$TokenizerMapper={map=[I@40174c83}, cfhider.WordCount={main=[I@2ebd21bf}, invoker.SnowFlake={<init>=[I@548fe222, getNextMill=[I@3247518d, getNewstmp=[I@18c852}}
Coming...
doAnalysis Startingqqqqqqqq.....
srcValue=[]
destValue:[]
taint data:[$z0]
Coming in Backward Analysis
srcValue=[]
destValue:[]
taint data:[$z0]
Coming in Backward Analysis
[taint329]i invoke virtualinvoke r3.<org.apache.hadoop.mapreduce.Mapper$Context: void write(java.lang.Object,java.lang.Object)>($r9, $r10)
[taint328]i invoke <org.apache.hadoop.mapreduce.TaskInputOutputContext: void write(java.lang.Object,java.lang.Object)>
[taint328]i invoke 2
value:$r9
value:$r10
srcValue=[]
destValue:[]
taint data:[$z0]
Coming in Backward Analysis
currStmt20210420:$r10 = <cfhider.WordCount$TokenizerMapper: org.apache.hadoop.io.IntWritable one>
currStmt left value20210420:$r10
srcValue=[]
destValue:[]
taint data:[$z0]
Coming in Backward Analysis
currStmt20210420:$r9 = r0.<cfhider.WordCount$TokenizerMapper: org.apache.hadoop.io.Text word>
currStmt left value20210420:$r9
srcValue=[]
destValue:[]
taint data:[$z0]
Coming in Backward Analysis
[taint329]i invoke virtualinvoke $r7.<org.apache.hadoop.io.Text: void set(java.lang.String)>($r8)
[taint328]i invoke <org.apache.hadoop.io.Text: void set(java.lang.String)>
[taint328]i invoke 1
value:$r8
srcValue=[]
destValue:[]
taint data:[$z0]
Coming in Backward Analysis
currStmt20210420:$r8 = virtualinvoke r5.<java.util.StringTokenizer: java.lang.String nextToken()>()
currStmt left value20210420:$r8
srcValue=[]
destValue:[]
taint data:[$z0]
Coming in Backward Analysis
currStmt20210420:$r7 = r0.<cfhider.WordCount$TokenizerMapper: org.apache.hadoop.io.Text word>
currStmt left value20210420:$r7
srcValue=[]
destValue:[]
taint data:[$z0]
Coming in Backward Analysis
srcValue=[]
destValue:[]
taint data:[$z0]
Coming in Backward Analysis
Have
the value=$z0
the value=0
srcValue=[]
destValue:[]
taint data:[$z0]
Coming in Backward Analysis
currStmt20210420:$z0 = virtualinvoke r5.<java.util.StringTokenizer: boolean hasMoreTokens()>()
currStmt left value20210420:$z0
BackWard 20210419===virtualinvoke r5.<java.util.StringTokenizer: boolean hasMoreTokens()>()
[BackWard taint329]i invoke $z0 = virtualinvoke r5.<java.util.StringTokenizer: boolean hasMoreTokens()>()
[BackWard taint328]i invoke <java.util.StringTokenizer: boolean hasMoreTokens()>
srcValue=[]
destValue:[]
taint data:[$z0]
Coming in Backward Analysis
currStmt20210420:r5 = $r4
currStmt left value20210420:r5
srcValue=[]
destValue:[]
taint data:[$z0]
Coming in Backward Analysis
[taint329]i invoke specialinvoke $r4.<java.util.StringTokenizer: void <init>(java.lang.String)>($r6)
[taint328]i invoke <java.util.StringTokenizer: void <init>(java.lang.String)>
[taint328]i invoke 1
value:$r6
srcValue=[]
destValue:[]
taint data:[$z0]
Coming in Backward Analysis
currStmt20210420:$r6 = virtualinvoke r2.<org.apache.hadoop.io.Text: java.lang.String toString()>()
currStmt left value20210420:$r6
srcValue=[]
destValue:[]
taint data:[$z0]
Coming in Backward Analysis
currStmt20210420:$r4 = new java.util.StringTokenizer
currStmt left value20210420:$r4
srcValue=[]
destValue:[]
taint data:[$z0]
Coming in Backward Analysis
srcValue=[]
destValue:[]
taint data:[$z0]
Coming in Backward Analysis
srcValue=[]
destValue:[]
taint data:[$z0]
Coming in Backward Analysis
srcValue=[]
destValue:[]
taint data:[$z0]
Coming in Backward Analysis
doAnalysis endqqqqqqq.....
come here
[CFMAP]2021 After BackwardAnalysis:{cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}
[taint into] sootMethod: map
[$z0]
class name :cfhider.WordCount$TokenizerMapper
method name :map
method list :[$z0]
clasname=cfhider.WordCount$TokenizerMapper
methodname=map
sourcelist2021=[$z0]
20210427node :r0 := @this: cfhider.WordCount$TokenizerMapper
20210427node in :[]
20210427node out :[]
currStmt20210423:r0 := @this: cfhider.WordCount$TokenizerMapper
20210427node :r1 := @parameter0: java.lang.Object
20210427node in :[]
[idStmt]iiiiiii r1 := @parameter0: java.lang.Object  index:0
ClassName:cfhider.WordCount$TokenizerMapper
MethodName:map
aaaa:0
20210427node out :[]
currStmt20210423:r1 := @parameter0: java.lang.Object
20210427node :r2 := @parameter1: java.lang.Object
20210427node in :[]
[idStmt]iiiiiii r2 := @parameter1: java.lang.Object  index:1
ClassName:cfhider.WordCount$TokenizerMapper
MethodName:map
aaaa:0
20210427node out :[]
currStmt20210423:r2 := @parameter1: java.lang.Object
20210427node :r3 := @parameter2: org.apache.hadoop.mapreduce.Mapper$Context
20210427node in :[]
[idStmt]iiiiiii r3 := @parameter2: org.apache.hadoop.mapreduce.Mapper$Context  index:2
ClassName:cfhider.WordCount$TokenizerMapper
MethodName:map
aaaa:0
20210427node out :[]
currStmt20210423:r3 := @parameter2: org.apache.hadoop.mapreduce.Mapper$Context
20210427node :$r4 = (org.apache.hadoop.io.Text) r2
20210427node in :[]
普通复制语句1112:$r4 = (org.apache.hadoop.io.Text) r2
[taint source] u:r2
SourceList:[$z0]
[taint source] u:(org.apache.hadoop.io.Text) r2
SourceList:[$z0]
20210427node out :[]
20210427node :virtualinvoke r0.<cfhider.WordCount$TokenizerMapper: void map(java.lang.Object,org.apache.hadoop.io.Text,org.apache.hadoop.mapreduce.Mapper$Context)>(r1, $r4, r3)
20210427node in :[]
20210427node out :[]
[taint329]i invoke virtualinvoke r0.<cfhider.WordCount$TokenizerMapper: void map(java.lang.Object,org.apache.hadoop.io.Text,org.apache.hadoop.mapreduce.Mapper$Context)>(r1, $r4, r3)
[taint328]i invoke <cfhider.WordCount$TokenizerMapper: void map(java.lang.Object,org.apache.hadoop.io.Text,org.apache.hadoop.mapreduce.Mapper$Context)>
[taint328]i invoke 3
value:r1
isoutSetContains  false value:r1 index:0
value:$r4
isoutSetContains  false value:$r4 index:1
value:r3
isoutSetContains  false value:r3 index:2
[invokemap]invoke:map  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
20210427node :return
20210427node in :[]
20210427node out :[]
analysis.outSet.size():0
[CFMAP]2021 After taintAnalysis:{cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}
The data isgggg 
<cfhider.WordCount$TokenizerMapper: void map(java.lang.Object,java.lang.Object,org.apache.hadoop.mapreduce.Mapper$Context)>
The data isgggg cfhider.WordCount$TokenizerMapper map [$z0] {cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}  {cfhider.WordCount$IntSumReducer={reduce=[I@350c764b}, cfhider.WordCount$TokenizerMapper={map=[I@39a04d54}, cfhider.WordCount={main=[I@2ebd21bf}, invoker.SnowFlake={<init>=[I@548fe222, getNextMill=[I@3247518d, getNewstmp=[I@18c852}}
Coming...
doAnalysis Startingqqqqqqqq.....
srcValue=[]
destValue:[]
taint data:[$z0]
Coming in Backward Analysis
srcValue=[]
destValue:[]
taint data:[$z0]
Coming in Backward Analysis
[taint329]i invoke virtualinvoke r0.<cfhider.WordCount$TokenizerMapper: void map(java.lang.Object,org.apache.hadoop.io.Text,org.apache.hadoop.mapreduce.Mapper$Context)>(r1, $r4, r3)
[taint328]i invoke <cfhider.WordCount$TokenizerMapper: void map(java.lang.Object,org.apache.hadoop.io.Text,org.apache.hadoop.mapreduce.Mapper$Context)>
[taint328]i invoke 3
value:r1
in here:[I@4b34e35a
[invokemap]invoke:map  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
value:$r4
in here:[I@4b34e35a
[invokemap]invoke:map  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
value:r3
in here:[I@4b34e35a
[invokemap]invoke:map  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
srcValue=[]
destValue:[]
taint data:[$z0]
Coming in Backward Analysis
currStmt20210420:$r4 = (org.apache.hadoop.io.Text) r2
currStmt left value20210420:$r4
srcValue=[]
destValue:[]
taint data:[$z0]
Coming in Backward Analysis
srcValue=[]
destValue:[]
taint data:[$z0]
Coming in Backward Analysis
srcValue=[]
destValue:[]
taint data:[$z0]
Coming in Backward Analysis
srcValue=[]
destValue:[]
taint data:[$z0]
Coming in Backward Analysis
doAnalysis endqqqqqqq.....
come here
[CFMAP]2021 After BackwardAnalysis:{cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}
[taint into] sootMethod: <clinit>
[]
class name :cfhider.WordCount$TokenizerMapper
method name :<clinit>
method list :[]
clasname=cfhider.WordCount$TokenizerMapper
methodname=<clinit>
sourcelist2021=[]
20210427node :$r0 = new org.apache.hadoop.io.IntWritable
20210427node in :[]
普通复制语句1112:$r0 = new org.apache.hadoop.io.IntWritable
[taint source] u:new org.apache.hadoop.io.IntWritable
SourceList:[]
20210427node out :[]
20210427node :specialinvoke $r0.<org.apache.hadoop.io.IntWritable: void <init>(int)>(1)
20210427node in :[]
20210427node out :[]
[taint329]i invoke specialinvoke $r0.<org.apache.hadoop.io.IntWritable: void <init>(int)>(1)
[taint328]i invoke <org.apache.hadoop.io.IntWritable: void <init>(int)>
[taint328]i invoke 1
value:1
isoutSetContains  false value:1 index:0
20210427node :<cfhider.WordCount$TokenizerMapper: org.apache.hadoop.io.IntWritable one> = $r0
20210427node in :[]
普通复制语句1112:<cfhider.WordCount$TokenizerMapper: org.apache.hadoop.io.IntWritable one> = $r0
[taint source] u:$r0
SourceList:[]
20210427node out :[]
20210427node :return
20210427node in :[]
20210427node out :[]
analysis.outSet.size():0
[CFMAP]2021 After taintAnalysis:{cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}
The data isgggg 
<cfhider.WordCount$TokenizerMapper: void <clinit>()>
The data isgggg cfhider.WordCount$TokenizerMapper <clinit> [] {cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}  {cfhider.WordCount$IntSumReducer={reduce=[I@350c764b}, cfhider.WordCount$TokenizerMapper={map=[I@39a04d54}, cfhider.WordCount={main=[I@2ebd21bf}, invoker.SnowFlake={<init>=[I@548fe222, getNextMill=[I@3247518d, getNewstmp=[I@18c852}}
Coming...
doAnalysis Startingqqqqqqqq.....
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:<cfhider.WordCount$TokenizerMapper: org.apache.hadoop.io.IntWritable one> = $r0
currStmt left value20210420:<cfhider.WordCount$TokenizerMapper: org.apache.hadoop.io.IntWritable one>
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
[taint329]i invoke specialinvoke $r0.<org.apache.hadoop.io.IntWritable: void <init>(int)>(1)
[taint328]i invoke <org.apache.hadoop.io.IntWritable: void <init>(int)>
[taint328]i invoke 1
value:1
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$r0 = new org.apache.hadoop.io.IntWritable
currStmt left value20210420:$r0
doAnalysis endqqqqqqq.....
come here
[CFMAP]2021 After BackwardAnalysis:{cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}
[taint into] sootMethod: <init>
[]
class name :cfhider.WordCount$TokenizerMapper
method name :<init>
method list :[]
clasname=cfhider.WordCount$TokenizerMapper
methodname=<init>
sourcelist2021=[]
20210427node :r0 := @this: cfhider.WordCount$TokenizerMapper
20210427node in :[]
20210427node out :[]
currStmt20210423:r0 := @this: cfhider.WordCount$TokenizerMapper
20210427node :specialinvoke r0.<org.apache.hadoop.mapreduce.Mapper: void <init>()>()
20210427node in :[]
20210427node out :[]
[taint329]i invoke specialinvoke r0.<org.apache.hadoop.mapreduce.Mapper: void <init>()>()
[taint328]i invoke <org.apache.hadoop.mapreduce.Mapper: void <init>()>
[taint328]i invoke 0
20210427node :$r1 = new org.apache.hadoop.io.Text
20210427node in :[]
普通复制语句1112:$r1 = new org.apache.hadoop.io.Text
[taint source] u:new org.apache.hadoop.io.Text
SourceList:[]
20210427node out :[]
20210427node :specialinvoke $r1.<org.apache.hadoop.io.Text: void <init>()>()
20210427node in :[]
20210427node out :[]
[taint329]i invoke specialinvoke $r1.<org.apache.hadoop.io.Text: void <init>()>()
[taint328]i invoke <org.apache.hadoop.io.Text: void <init>()>
[taint328]i invoke 0
20210427node :r0.<cfhider.WordCount$TokenizerMapper: org.apache.hadoop.io.Text word> = $r1
20210427node in :[]
普通复制语句1112:r0.<cfhider.WordCount$TokenizerMapper: org.apache.hadoop.io.Text word> = $r1
[taint source] u:r0
SourceList:[]
[taint source] u:$r1
SourceList:[]
20210427node out :[]
20210427node :return
20210427node in :[]
20210427node out :[]
analysis.outSet.size():0
[CFMAP]2021 After taintAnalysis:{cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}
The data isgggg 
<cfhider.WordCount$TokenizerMapper: void <init>()>
The data isgggg cfhider.WordCount$TokenizerMapper <init> [] {cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}  {cfhider.WordCount$IntSumReducer={reduce=[I@350c764b}, cfhider.WordCount$TokenizerMapper={map=[I@39a04d54}, cfhider.WordCount={main=[I@2ebd21bf}, invoker.SnowFlake={<init>=[I@548fe222, getNextMill=[I@3247518d, getNewstmp=[I@18c852}}
Coming...
doAnalysis Startingqqqqqqqq.....
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:r0.<cfhider.WordCount$TokenizerMapper: org.apache.hadoop.io.Text word> = $r1
currStmt left value20210420:r0.<cfhider.WordCount$TokenizerMapper: org.apache.hadoop.io.Text word>
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
[taint329]i invoke specialinvoke $r1.<org.apache.hadoop.io.Text: void <init>()>()
[taint328]i invoke <org.apache.hadoop.io.Text: void <init>()>
[taint328]i invoke 0
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$r1 = new org.apache.hadoop.io.Text
currStmt left value20210420:$r1
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
[taint329]i invoke specialinvoke r0.<org.apache.hadoop.mapreduce.Mapper: void <init>()>()
[taint328]i invoke <org.apache.hadoop.mapreduce.Mapper: void <init>()>
[taint328]i invoke 0
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
doAnalysis endqqqqqqq.....
come here
[CFMAP]2021 After BackwardAnalysis:{cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}
[taint into] sootMethod: map
[$z0]
class name :cfhider.WordCount$TokenizerMapper
method name :map
method list :[$z0]
clasname=cfhider.WordCount$TokenizerMapper
methodname=map
sourcelist2021=[$z0]
20210427node :r0 := @this: cfhider.WordCount$TokenizerMapper
20210427node in :[]
20210427node out :[]
currStmt20210423:r0 := @this: cfhider.WordCount$TokenizerMapper
20210427node :r1 := @parameter0: java.lang.Object
20210427node in :[]
[idStmt]iiiiiii r1 := @parameter0: java.lang.Object  index:0
ClassName:cfhider.WordCount$TokenizerMapper
MethodName:map
aaaa:0
20210427node out :[]
currStmt20210423:r1 := @parameter0: java.lang.Object
20210427node :r2 := @parameter1: org.apache.hadoop.io.Text
20210427node in :[]
[idStmt]iiiiiii r2 := @parameter1: org.apache.hadoop.io.Text  index:1
ClassName:cfhider.WordCount$TokenizerMapper
MethodName:map
aaaa:0
20210427node out :[]
currStmt20210423:r2 := @parameter1: org.apache.hadoop.io.Text
20210427node :r3 := @parameter2: org.apache.hadoop.mapreduce.Mapper$Context
20210427node in :[]
[idStmt]iiiiiii r3 := @parameter2: org.apache.hadoop.mapreduce.Mapper$Context  index:2
ClassName:cfhider.WordCount$TokenizerMapper
MethodName:map
aaaa:0
20210427node out :[]
currStmt20210423:r3 := @parameter2: org.apache.hadoop.mapreduce.Mapper$Context
20210427node :$r4 = new java.util.StringTokenizer
20210427node in :[]
普通复制语句1112:$r4 = new java.util.StringTokenizer
[taint source] u:new java.util.StringTokenizer
SourceList:[$z0]
20210427node out :[]
20210427node :$r6 = virtualinvoke r2.<org.apache.hadoop.io.Text: java.lang.String toString()>()
20210427node in :[]
调用语句赋值给变量:$r6 = virtualinvoke r2.<org.apache.hadoop.io.Text: java.lang.String toString()>()
20210427node out :[]
[taint328]a invoke <org.apache.hadoop.io.Text: java.lang.String toString()>
[taint328]a invoke 0
20210427node :specialinvoke $r4.<java.util.StringTokenizer: void <init>(java.lang.String)>($r6)
20210427node in :[]
20210427node out :[]
[taint329]i invoke specialinvoke $r4.<java.util.StringTokenizer: void <init>(java.lang.String)>($r6)
[taint328]i invoke <java.util.StringTokenizer: void <init>(java.lang.String)>
[taint328]i invoke 1
value:$r6
isoutSetContains  false value:$r6 index:0
20210427node :r5 = $r4
20210427node in :[]
普通复制语句1112:r5 = $r4
[taint source] u:$r4
SourceList:[$z0]
20210427node out :[]
20210427node :$z0 = virtualinvoke r5.<java.util.StringTokenizer: boolean hasMoreTokens()>()
20210427node in :[]
调用语句赋值给变量:$z0 = virtualinvoke r5.<java.util.StringTokenizer: boolean hasMoreTokens()>()
20210427node out :[]
[taint328]a invoke <java.util.StringTokenizer: boolean hasMoreTokens()>
[taint328]a invoke 0
20210427node :if $z0 == 0 goto return
20210427node in :[]
20210427node out :[]
Have
Stmt if :if $z0 == 0 goto returnStmt if value:$z0 == 0the value=$z0
the value=0
maintainValues.size1
ifValues1
20210427node :return
20210427node in :[]
20210427node out :[]
20210427node :$r7 = r0.<cfhider.WordCount$TokenizerMapper: org.apache.hadoop.io.Text word>
20210427node in :[]
普通复制语句1112:$r7 = r0.<cfhider.WordCount$TokenizerMapper: org.apache.hadoop.io.Text word>
[taint source] u:r0
SourceList:[$z0]
[taint source] u:r0.<cfhider.WordCount$TokenizerMapper: org.apache.hadoop.io.Text word>
SourceList:[$z0]
20210427node out :[]
20210427node :$r8 = virtualinvoke r5.<java.util.StringTokenizer: java.lang.String nextToken()>()
20210427node in :[]
调用语句赋值给变量:$r8 = virtualinvoke r5.<java.util.StringTokenizer: java.lang.String nextToken()>()
20210427node out :[]
[taint328]a invoke <java.util.StringTokenizer: java.lang.String nextToken()>
[taint328]a invoke 0
20210427node :virtualinvoke $r7.<org.apache.hadoop.io.Text: void set(java.lang.String)>($r8)
20210427node in :[]
20210427node out :[]
[taint329]i invoke virtualinvoke $r7.<org.apache.hadoop.io.Text: void set(java.lang.String)>($r8)
[taint328]i invoke <org.apache.hadoop.io.Text: void set(java.lang.String)>
[taint328]i invoke 1
value:$r8
isoutSetContains  false value:$r8 index:0
20210427node :$r9 = r0.<cfhider.WordCount$TokenizerMapper: org.apache.hadoop.io.Text word>
20210427node in :[]
普通复制语句1112:$r9 = r0.<cfhider.WordCount$TokenizerMapper: org.apache.hadoop.io.Text word>
[taint source] u:r0
SourceList:[$z0]
[taint source] u:r0.<cfhider.WordCount$TokenizerMapper: org.apache.hadoop.io.Text word>
SourceList:[$z0]
20210427node out :[]
20210427node :$r10 = <cfhider.WordCount$TokenizerMapper: org.apache.hadoop.io.IntWritable one>
20210427node in :[]
普通复制语句1112:$r10 = <cfhider.WordCount$TokenizerMapper: org.apache.hadoop.io.IntWritable one>
[taint source] u:<cfhider.WordCount$TokenizerMapper: org.apache.hadoop.io.IntWritable one>
SourceList:[$z0]
20210427node out :[]
20210427node :virtualinvoke r3.<org.apache.hadoop.mapreduce.Mapper$Context: void write(java.lang.Object,java.lang.Object)>($r9, $r10)
20210427node in :[]
20210427node out :[]
[taint329]i invoke virtualinvoke r3.<org.apache.hadoop.mapreduce.Mapper$Context: void write(java.lang.Object,java.lang.Object)>($r9, $r10)
[taint328]i invoke <org.apache.hadoop.mapreduce.TaskInputOutputContext: void write(java.lang.Object,java.lang.Object)>
[taint328]i invoke 2
value:$r9
isoutSetContains  false value:$r9 index:0
value:$r10
isoutSetContains  false value:$r10 index:1
20210427node :goto [?= $z0 = virtualinvoke r5.<java.util.StringTokenizer: boolean hasMoreTokens()>()]
20210427node in :[]
20210427node out :[]
analysis.outSet.size():0
[CFMAP]2021 After taintAnalysis:{cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}
The data isgggg 
<cfhider.WordCount$TokenizerMapper: void map(java.lang.Object,org.apache.hadoop.io.Text,org.apache.hadoop.mapreduce.Mapper$Context)>
The data isgggg cfhider.WordCount$TokenizerMapper map [$z0] {cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}  {cfhider.WordCount$IntSumReducer={reduce=[I@350c764b}, cfhider.WordCount$TokenizerMapper={map=[I@7d3a5048}, cfhider.WordCount={main=[I@2ebd21bf}, invoker.SnowFlake={<init>=[I@548fe222, getNextMill=[I@3247518d, getNewstmp=[I@18c852}}
Coming...
doAnalysis Startingqqqqqqqq.....
srcValue=[]
destValue:[]
taint data:[$z0]
Coming in Backward Analysis
srcValue=[]
destValue:[]
taint data:[$z0]
Coming in Backward Analysis
[taint329]i invoke virtualinvoke r3.<org.apache.hadoop.mapreduce.Mapper$Context: void write(java.lang.Object,java.lang.Object)>($r9, $r10)
[taint328]i invoke <org.apache.hadoop.mapreduce.TaskInputOutputContext: void write(java.lang.Object,java.lang.Object)>
[taint328]i invoke 2
value:$r9
value:$r10
srcValue=[]
destValue:[]
taint data:[$z0]
Coming in Backward Analysis
currStmt20210420:$r10 = <cfhider.WordCount$TokenizerMapper: org.apache.hadoop.io.IntWritable one>
currStmt left value20210420:$r10
srcValue=[]
destValue:[]
taint data:[$z0]
Coming in Backward Analysis
currStmt20210420:$r9 = r0.<cfhider.WordCount$TokenizerMapper: org.apache.hadoop.io.Text word>
currStmt left value20210420:$r9
srcValue=[]
destValue:[]
taint data:[$z0]
Coming in Backward Analysis
[taint329]i invoke virtualinvoke $r7.<org.apache.hadoop.io.Text: void set(java.lang.String)>($r8)
[taint328]i invoke <org.apache.hadoop.io.Text: void set(java.lang.String)>
[taint328]i invoke 1
value:$r8
srcValue=[]
destValue:[]
taint data:[$z0]
Coming in Backward Analysis
currStmt20210420:$r8 = virtualinvoke r5.<java.util.StringTokenizer: java.lang.String nextToken()>()
currStmt left value20210420:$r8
srcValue=[]
destValue:[]
taint data:[$z0]
Coming in Backward Analysis
currStmt20210420:$r7 = r0.<cfhider.WordCount$TokenizerMapper: org.apache.hadoop.io.Text word>
currStmt left value20210420:$r7
srcValue=[]
destValue:[]
taint data:[$z0]
Coming in Backward Analysis
srcValue=[]
destValue:[]
taint data:[$z0]
Coming in Backward Analysis
Have
the value=$z0
the value=0
srcValue=[]
destValue:[]
taint data:[$z0]
Coming in Backward Analysis
currStmt20210420:$z0 = virtualinvoke r5.<java.util.StringTokenizer: boolean hasMoreTokens()>()
currStmt left value20210420:$z0
BackWard 20210419===virtualinvoke r5.<java.util.StringTokenizer: boolean hasMoreTokens()>()
[BackWard taint329]i invoke $z0 = virtualinvoke r5.<java.util.StringTokenizer: boolean hasMoreTokens()>()
[BackWard taint328]i invoke <java.util.StringTokenizer: boolean hasMoreTokens()>
srcValue=[]
destValue:[]
taint data:[$z0]
Coming in Backward Analysis
currStmt20210420:r5 = $r4
currStmt left value20210420:r5
srcValue=[]
destValue:[]
taint data:[$z0]
Coming in Backward Analysis
[taint329]i invoke specialinvoke $r4.<java.util.StringTokenizer: void <init>(java.lang.String)>($r6)
[taint328]i invoke <java.util.StringTokenizer: void <init>(java.lang.String)>
[taint328]i invoke 1
value:$r6
srcValue=[]
destValue:[]
taint data:[$z0]
Coming in Backward Analysis
currStmt20210420:$r6 = virtualinvoke r2.<org.apache.hadoop.io.Text: java.lang.String toString()>()
currStmt left value20210420:$r6
srcValue=[]
destValue:[]
taint data:[$z0]
Coming in Backward Analysis
currStmt20210420:$r4 = new java.util.StringTokenizer
currStmt left value20210420:$r4
srcValue=[]
destValue:[]
taint data:[$z0]
Coming in Backward Analysis
srcValue=[]
destValue:[]
taint data:[$z0]
Coming in Backward Analysis
srcValue=[]
destValue:[]
taint data:[$z0]
Coming in Backward Analysis
srcValue=[]
destValue:[]
taint data:[$z0]
Coming in Backward Analysis
doAnalysis endqqqqqqq.....
come here
[CFMAP]2021 After BackwardAnalysis:{cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}
[taint into] sootMethod: map
[$z0]
class name :cfhider.WordCount$TokenizerMapper
method name :map
method list :[$z0]
clasname=cfhider.WordCount$TokenizerMapper
methodname=map
sourcelist2021=[$z0]
20210427node :r0 := @this: cfhider.WordCount$TokenizerMapper
20210427node in :[]
20210427node out :[]
currStmt20210423:r0 := @this: cfhider.WordCount$TokenizerMapper
20210427node :r1 := @parameter0: java.lang.Object
20210427node in :[]
[idStmt]iiiiiii r1 := @parameter0: java.lang.Object  index:0
ClassName:cfhider.WordCount$TokenizerMapper
MethodName:map
aaaa:0
20210427node out :[]
currStmt20210423:r1 := @parameter0: java.lang.Object
20210427node :r2 := @parameter1: java.lang.Object
20210427node in :[]
[idStmt]iiiiiii r2 := @parameter1: java.lang.Object  index:1
ClassName:cfhider.WordCount$TokenizerMapper
MethodName:map
aaaa:0
20210427node out :[]
currStmt20210423:r2 := @parameter1: java.lang.Object
20210427node :r3 := @parameter2: org.apache.hadoop.mapreduce.Mapper$Context
20210427node in :[]
[idStmt]iiiiiii r3 := @parameter2: org.apache.hadoop.mapreduce.Mapper$Context  index:2
ClassName:cfhider.WordCount$TokenizerMapper
MethodName:map
aaaa:0
20210427node out :[]
currStmt20210423:r3 := @parameter2: org.apache.hadoop.mapreduce.Mapper$Context
20210427node :$r4 = (org.apache.hadoop.io.Text) r2
20210427node in :[]
普通复制语句1112:$r4 = (org.apache.hadoop.io.Text) r2
[taint source] u:r2
SourceList:[$z0]
[taint source] u:(org.apache.hadoop.io.Text) r2
SourceList:[$z0]
20210427node out :[]
20210427node :virtualinvoke r0.<cfhider.WordCount$TokenizerMapper: void map(java.lang.Object,org.apache.hadoop.io.Text,org.apache.hadoop.mapreduce.Mapper$Context)>(r1, $r4, r3)
20210427node in :[]
20210427node out :[]
[taint329]i invoke virtualinvoke r0.<cfhider.WordCount$TokenizerMapper: void map(java.lang.Object,org.apache.hadoop.io.Text,org.apache.hadoop.mapreduce.Mapper$Context)>(r1, $r4, r3)
[taint328]i invoke <cfhider.WordCount$TokenizerMapper: void map(java.lang.Object,org.apache.hadoop.io.Text,org.apache.hadoop.mapreduce.Mapper$Context)>
[taint328]i invoke 3
value:r1
isoutSetContains  false value:r1 index:0
value:$r4
isoutSetContains  false value:$r4 index:1
value:r3
isoutSetContains  false value:r3 index:2
[invokemap]invoke:map  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
20210427node :return
20210427node in :[]
20210427node out :[]
analysis.outSet.size():0
[CFMAP]2021 After taintAnalysis:{cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}
The data isgggg 
<cfhider.WordCount$TokenizerMapper: void map(java.lang.Object,java.lang.Object,org.apache.hadoop.mapreduce.Mapper$Context)>
The data isgggg cfhider.WordCount$TokenizerMapper map [$z0] {cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}  {cfhider.WordCount$IntSumReducer={reduce=[I@350c764b}, cfhider.WordCount$TokenizerMapper={map=[I@7f6ce732}, cfhider.WordCount={main=[I@2ebd21bf}, invoker.SnowFlake={<init>=[I@548fe222, getNextMill=[I@3247518d, getNewstmp=[I@18c852}}
Coming...
doAnalysis Startingqqqqqqqq.....
srcValue=[]
destValue:[]
taint data:[$z0]
Coming in Backward Analysis
srcValue=[]
destValue:[]
taint data:[$z0]
Coming in Backward Analysis
[taint329]i invoke virtualinvoke r0.<cfhider.WordCount$TokenizerMapper: void map(java.lang.Object,org.apache.hadoop.io.Text,org.apache.hadoop.mapreduce.Mapper$Context)>(r1, $r4, r3)
[taint328]i invoke <cfhider.WordCount$TokenizerMapper: void map(java.lang.Object,org.apache.hadoop.io.Text,org.apache.hadoop.mapreduce.Mapper$Context)>
[taint328]i invoke 3
value:r1
in here:[I@46bec4f9
[invokemap]invoke:map  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
value:$r4
in here:[I@46bec4f9
[invokemap]invoke:map  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
value:r3
in here:[I@46bec4f9
[invokemap]invoke:map  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
srcValue=[]
destValue:[]
taint data:[$z0]
Coming in Backward Analysis
currStmt20210420:$r4 = (org.apache.hadoop.io.Text) r2
currStmt left value20210420:$r4
srcValue=[]
destValue:[]
taint data:[$z0]
Coming in Backward Analysis
srcValue=[]
destValue:[]
taint data:[$z0]
Coming in Backward Analysis
srcValue=[]
destValue:[]
taint data:[$z0]
Coming in Backward Analysis
srcValue=[]
destValue:[]
taint data:[$z0]
Coming in Backward Analysis
doAnalysis endqqqqqqq.....
come here
[CFMAP]2021 After BackwardAnalysis:{cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}
[taint into] sootMethod: <clinit>
[]
class name :cfhider.WordCount$TokenizerMapper
method name :<clinit>
method list :[]
clasname=cfhider.WordCount$TokenizerMapper
methodname=<clinit>
sourcelist2021=[]
20210427node :$r0 = new org.apache.hadoop.io.IntWritable
20210427node in :[]
普通复制语句1112:$r0 = new org.apache.hadoop.io.IntWritable
[taint source] u:new org.apache.hadoop.io.IntWritable
SourceList:[]
20210427node out :[]
20210427node :specialinvoke $r0.<org.apache.hadoop.io.IntWritable: void <init>(int)>(1)
20210427node in :[]
20210427node out :[]
[taint329]i invoke specialinvoke $r0.<org.apache.hadoop.io.IntWritable: void <init>(int)>(1)
[taint328]i invoke <org.apache.hadoop.io.IntWritable: void <init>(int)>
[taint328]i invoke 1
value:1
isoutSetContains  false value:1 index:0
20210427node :<cfhider.WordCount$TokenizerMapper: org.apache.hadoop.io.IntWritable one> = $r0
20210427node in :[]
普通复制语句1112:<cfhider.WordCount$TokenizerMapper: org.apache.hadoop.io.IntWritable one> = $r0
[taint source] u:$r0
SourceList:[]
20210427node out :[]
20210427node :return
20210427node in :[]
20210427node out :[]
analysis.outSet.size():0
[CFMAP]2021 After taintAnalysis:{cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}
The data isgggg 
<cfhider.WordCount$TokenizerMapper: void <clinit>()>
The data isgggg cfhider.WordCount$TokenizerMapper <clinit> [] {cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}  {cfhider.WordCount$IntSumReducer={reduce=[I@350c764b}, cfhider.WordCount$TokenizerMapper={map=[I@7f6ce732}, cfhider.WordCount={main=[I@2ebd21bf}, invoker.SnowFlake={<init>=[I@548fe222, getNextMill=[I@3247518d, getNewstmp=[I@18c852}}
Coming...
doAnalysis Startingqqqqqqqq.....
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:<cfhider.WordCount$TokenizerMapper: org.apache.hadoop.io.IntWritable one> = $r0
currStmt left value20210420:<cfhider.WordCount$TokenizerMapper: org.apache.hadoop.io.IntWritable one>
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
[taint329]i invoke specialinvoke $r0.<org.apache.hadoop.io.IntWritable: void <init>(int)>(1)
[taint328]i invoke <org.apache.hadoop.io.IntWritable: void <init>(int)>
[taint328]i invoke 1
value:1
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$r0 = new org.apache.hadoop.io.IntWritable
currStmt left value20210420:$r0
doAnalysis endqqqqqqq.....
come here
[CFMAP]2021 After BackwardAnalysis:{cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}
[taint into] sootMethod: <init>
[]
class name :cfhider.WordCount$TokenizerMapper
method name :<init>
method list :[]
clasname=cfhider.WordCount$TokenizerMapper
methodname=<init>
sourcelist2021=[]
20210427node :r0 := @this: cfhider.WordCount$TokenizerMapper
20210427node in :[]
20210427node out :[]
currStmt20210423:r0 := @this: cfhider.WordCount$TokenizerMapper
20210427node :specialinvoke r0.<org.apache.hadoop.mapreduce.Mapper: void <init>()>()
20210427node in :[]
20210427node out :[]
[taint329]i invoke specialinvoke r0.<org.apache.hadoop.mapreduce.Mapper: void <init>()>()
[taint328]i invoke <org.apache.hadoop.mapreduce.Mapper: void <init>()>
[taint328]i invoke 0
20210427node :$r1 = new org.apache.hadoop.io.Text
20210427node in :[]
普通复制语句1112:$r1 = new org.apache.hadoop.io.Text
[taint source] u:new org.apache.hadoop.io.Text
SourceList:[]
20210427node out :[]
20210427node :specialinvoke $r1.<org.apache.hadoop.io.Text: void <init>()>()
20210427node in :[]
20210427node out :[]
[taint329]i invoke specialinvoke $r1.<org.apache.hadoop.io.Text: void <init>()>()
[taint328]i invoke <org.apache.hadoop.io.Text: void <init>()>
[taint328]i invoke 0
20210427node :r0.<cfhider.WordCount$TokenizerMapper: org.apache.hadoop.io.Text word> = $r1
20210427node in :[]
普通复制语句1112:r0.<cfhider.WordCount$TokenizerMapper: org.apache.hadoop.io.Text word> = $r1
[taint source] u:r0
SourceList:[]
[taint source] u:$r1
SourceList:[]
20210427node out :[]
20210427node :return
20210427node in :[]
20210427node out :[]
analysis.outSet.size():0
[CFMAP]2021 After taintAnalysis:{cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}
The data isgggg 
<cfhider.WordCount$TokenizerMapper: void <init>()>
The data isgggg cfhider.WordCount$TokenizerMapper <init> [] {cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}  {cfhider.WordCount$IntSumReducer={reduce=[I@350c764b}, cfhider.WordCount$TokenizerMapper={map=[I@7f6ce732}, cfhider.WordCount={main=[I@2ebd21bf}, invoker.SnowFlake={<init>=[I@548fe222, getNextMill=[I@3247518d, getNewstmp=[I@18c852}}
Coming...
doAnalysis Startingqqqqqqqq.....
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:r0.<cfhider.WordCount$TokenizerMapper: org.apache.hadoop.io.Text word> = $r1
currStmt left value20210420:r0.<cfhider.WordCount$TokenizerMapper: org.apache.hadoop.io.Text word>
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
[taint329]i invoke specialinvoke $r1.<org.apache.hadoop.io.Text: void <init>()>()
[taint328]i invoke <org.apache.hadoop.io.Text: void <init>()>
[taint328]i invoke 0
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$r1 = new org.apache.hadoop.io.Text
currStmt left value20210420:$r1
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
[taint329]i invoke specialinvoke r0.<org.apache.hadoop.mapreduce.Mapper: void <init>()>()
[taint328]i invoke <org.apache.hadoop.mapreduce.Mapper: void <init>()>
[taint328]i invoke 0
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
doAnalysis endqqqqqqq.....
come here
[CFMAP]2021 After BackwardAnalysis:{cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}
[taint into] sootMethod: map
[$z0]
class name :cfhider.WordCount$TokenizerMapper
method name :map
method list :[$z0]
clasname=cfhider.WordCount$TokenizerMapper
methodname=map
sourcelist2021=[$z0]
20210427node :r0 := @this: cfhider.WordCount$TokenizerMapper
20210427node in :[]
20210427node out :[]
currStmt20210423:r0 := @this: cfhider.WordCount$TokenizerMapper
20210427node :r1 := @parameter0: java.lang.Object
20210427node in :[]
[idStmt]iiiiiii r1 := @parameter0: java.lang.Object  index:0
ClassName:cfhider.WordCount$TokenizerMapper
MethodName:map
aaaa:0
20210427node out :[]
currStmt20210423:r1 := @parameter0: java.lang.Object
20210427node :r2 := @parameter1: org.apache.hadoop.io.Text
20210427node in :[]
[idStmt]iiiiiii r2 := @parameter1: org.apache.hadoop.io.Text  index:1
ClassName:cfhider.WordCount$TokenizerMapper
MethodName:map
aaaa:0
20210427node out :[]
currStmt20210423:r2 := @parameter1: org.apache.hadoop.io.Text
20210427node :r3 := @parameter2: org.apache.hadoop.mapreduce.Mapper$Context
20210427node in :[]
[idStmt]iiiiiii r3 := @parameter2: org.apache.hadoop.mapreduce.Mapper$Context  index:2
ClassName:cfhider.WordCount$TokenizerMapper
MethodName:map
aaaa:0
20210427node out :[]
currStmt20210423:r3 := @parameter2: org.apache.hadoop.mapreduce.Mapper$Context
20210427node :$r4 = new java.util.StringTokenizer
20210427node in :[]
普通复制语句1112:$r4 = new java.util.StringTokenizer
[taint source] u:new java.util.StringTokenizer
SourceList:[$z0]
20210427node out :[]
20210427node :$r6 = virtualinvoke r2.<org.apache.hadoop.io.Text: java.lang.String toString()>()
20210427node in :[]
调用语句赋值给变量:$r6 = virtualinvoke r2.<org.apache.hadoop.io.Text: java.lang.String toString()>()
20210427node out :[]
[taint328]a invoke <org.apache.hadoop.io.Text: java.lang.String toString()>
[taint328]a invoke 0
20210427node :specialinvoke $r4.<java.util.StringTokenizer: void <init>(java.lang.String)>($r6)
20210427node in :[]
20210427node out :[]
[taint329]i invoke specialinvoke $r4.<java.util.StringTokenizer: void <init>(java.lang.String)>($r6)
[taint328]i invoke <java.util.StringTokenizer: void <init>(java.lang.String)>
[taint328]i invoke 1
value:$r6
isoutSetContains  false value:$r6 index:0
20210427node :r5 = $r4
20210427node in :[]
普通复制语句1112:r5 = $r4
[taint source] u:$r4
SourceList:[$z0]
20210427node out :[]
20210427node :$z0 = virtualinvoke r5.<java.util.StringTokenizer: boolean hasMoreTokens()>()
20210427node in :[]
调用语句赋值给变量:$z0 = virtualinvoke r5.<java.util.StringTokenizer: boolean hasMoreTokens()>()
20210427node out :[]
[taint328]a invoke <java.util.StringTokenizer: boolean hasMoreTokens()>
[taint328]a invoke 0
20210427node :if $z0 == 0 goto return
20210427node in :[]
20210427node out :[]
Have
Stmt if :if $z0 == 0 goto returnStmt if value:$z0 == 0the value=$z0
the value=0
maintainValues.size1
ifValues1
20210427node :return
20210427node in :[]
20210427node out :[]
20210427node :$r7 = r0.<cfhider.WordCount$TokenizerMapper: org.apache.hadoop.io.Text word>
20210427node in :[]
普通复制语句1112:$r7 = r0.<cfhider.WordCount$TokenizerMapper: org.apache.hadoop.io.Text word>
[taint source] u:r0
SourceList:[$z0]
[taint source] u:r0.<cfhider.WordCount$TokenizerMapper: org.apache.hadoop.io.Text word>
SourceList:[$z0]
20210427node out :[]
20210427node :$r8 = virtualinvoke r5.<java.util.StringTokenizer: java.lang.String nextToken()>()
20210427node in :[]
调用语句赋值给变量:$r8 = virtualinvoke r5.<java.util.StringTokenizer: java.lang.String nextToken()>()
20210427node out :[]
[taint328]a invoke <java.util.StringTokenizer: java.lang.String nextToken()>
[taint328]a invoke 0
20210427node :virtualinvoke $r7.<org.apache.hadoop.io.Text: void set(java.lang.String)>($r8)
20210427node in :[]
20210427node out :[]
[taint329]i invoke virtualinvoke $r7.<org.apache.hadoop.io.Text: void set(java.lang.String)>($r8)
[taint328]i invoke <org.apache.hadoop.io.Text: void set(java.lang.String)>
[taint328]i invoke 1
value:$r8
isoutSetContains  false value:$r8 index:0
20210427node :$r9 = r0.<cfhider.WordCount$TokenizerMapper: org.apache.hadoop.io.Text word>
20210427node in :[]
普通复制语句1112:$r9 = r0.<cfhider.WordCount$TokenizerMapper: org.apache.hadoop.io.Text word>
[taint source] u:r0
SourceList:[$z0]
[taint source] u:r0.<cfhider.WordCount$TokenizerMapper: org.apache.hadoop.io.Text word>
SourceList:[$z0]
20210427node out :[]
20210427node :$r10 = <cfhider.WordCount$TokenizerMapper: org.apache.hadoop.io.IntWritable one>
20210427node in :[]
普通复制语句1112:$r10 = <cfhider.WordCount$TokenizerMapper: org.apache.hadoop.io.IntWritable one>
[taint source] u:<cfhider.WordCount$TokenizerMapper: org.apache.hadoop.io.IntWritable one>
SourceList:[$z0]
20210427node out :[]
20210427node :virtualinvoke r3.<org.apache.hadoop.mapreduce.Mapper$Context: void write(java.lang.Object,java.lang.Object)>($r9, $r10)
20210427node in :[]
20210427node out :[]
[taint329]i invoke virtualinvoke r3.<org.apache.hadoop.mapreduce.Mapper$Context: void write(java.lang.Object,java.lang.Object)>($r9, $r10)
[taint328]i invoke <org.apache.hadoop.mapreduce.TaskInputOutputContext: void write(java.lang.Object,java.lang.Object)>
[taint328]i invoke 2
value:$r9
isoutSetContains  false value:$r9 index:0
value:$r10
isoutSetContains  false value:$r10 index:1
20210427node :goto [?= $z0 = virtualinvoke r5.<java.util.StringTokenizer: boolean hasMoreTokens()>()]
20210427node in :[]
20210427node out :[]
analysis.outSet.size():0
[CFMAP]2021 After taintAnalysis:{cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}
The data isgggg 
<cfhider.WordCount$TokenizerMapper: void map(java.lang.Object,org.apache.hadoop.io.Text,org.apache.hadoop.mapreduce.Mapper$Context)>
The data isgggg cfhider.WordCount$TokenizerMapper map [$z0] {cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}  {cfhider.WordCount$IntSumReducer={reduce=[I@350c764b}, cfhider.WordCount$TokenizerMapper={map=[I@1675dbb8}, cfhider.WordCount={main=[I@2ebd21bf}, invoker.SnowFlake={<init>=[I@548fe222, getNextMill=[I@3247518d, getNewstmp=[I@18c852}}
Coming...
doAnalysis Startingqqqqqqqq.....
srcValue=[]
destValue:[]
taint data:[$z0]
Coming in Backward Analysis
srcValue=[]
destValue:[]
taint data:[$z0]
Coming in Backward Analysis
[taint329]i invoke virtualinvoke r3.<org.apache.hadoop.mapreduce.Mapper$Context: void write(java.lang.Object,java.lang.Object)>($r9, $r10)
[taint328]i invoke <org.apache.hadoop.mapreduce.TaskInputOutputContext: void write(java.lang.Object,java.lang.Object)>
[taint328]i invoke 2
value:$r9
value:$r10
srcValue=[]
destValue:[]
taint data:[$z0]
Coming in Backward Analysis
currStmt20210420:$r10 = <cfhider.WordCount$TokenizerMapper: org.apache.hadoop.io.IntWritable one>
currStmt left value20210420:$r10
srcValue=[]
destValue:[]
taint data:[$z0]
Coming in Backward Analysis
currStmt20210420:$r9 = r0.<cfhider.WordCount$TokenizerMapper: org.apache.hadoop.io.Text word>
currStmt left value20210420:$r9
srcValue=[]
destValue:[]
taint data:[$z0]
Coming in Backward Analysis
[taint329]i invoke virtualinvoke $r7.<org.apache.hadoop.io.Text: void set(java.lang.String)>($r8)
[taint328]i invoke <org.apache.hadoop.io.Text: void set(java.lang.String)>
[taint328]i invoke 1
value:$r8
srcValue=[]
destValue:[]
taint data:[$z0]
Coming in Backward Analysis
currStmt20210420:$r8 = virtualinvoke r5.<java.util.StringTokenizer: java.lang.String nextToken()>()
currStmt left value20210420:$r8
srcValue=[]
destValue:[]
taint data:[$z0]
Coming in Backward Analysis
currStmt20210420:$r7 = r0.<cfhider.WordCount$TokenizerMapper: org.apache.hadoop.io.Text word>
currStmt left value20210420:$r7
srcValue=[]
destValue:[]
taint data:[$z0]
Coming in Backward Analysis
srcValue=[]
destValue:[]
taint data:[$z0]
Coming in Backward Analysis
Have
the value=$z0
the value=0
srcValue=[]
destValue:[]
taint data:[$z0]
Coming in Backward Analysis
currStmt20210420:$z0 = virtualinvoke r5.<java.util.StringTokenizer: boolean hasMoreTokens()>()
currStmt left value20210420:$z0
BackWard 20210419===virtualinvoke r5.<java.util.StringTokenizer: boolean hasMoreTokens()>()
[BackWard taint329]i invoke $z0 = virtualinvoke r5.<java.util.StringTokenizer: boolean hasMoreTokens()>()
[BackWard taint328]i invoke <java.util.StringTokenizer: boolean hasMoreTokens()>
srcValue=[]
destValue:[]
taint data:[$z0]
Coming in Backward Analysis
currStmt20210420:r5 = $r4
currStmt left value20210420:r5
srcValue=[]
destValue:[]
taint data:[$z0]
Coming in Backward Analysis
[taint329]i invoke specialinvoke $r4.<java.util.StringTokenizer: void <init>(java.lang.String)>($r6)
[taint328]i invoke <java.util.StringTokenizer: void <init>(java.lang.String)>
[taint328]i invoke 1
value:$r6
srcValue=[]
destValue:[]
taint data:[$z0]
Coming in Backward Analysis
currStmt20210420:$r6 = virtualinvoke r2.<org.apache.hadoop.io.Text: java.lang.String toString()>()
currStmt left value20210420:$r6
srcValue=[]
destValue:[]
taint data:[$z0]
Coming in Backward Analysis
currStmt20210420:$r4 = new java.util.StringTokenizer
currStmt left value20210420:$r4
srcValue=[]
destValue:[]
taint data:[$z0]
Coming in Backward Analysis
srcValue=[]
destValue:[]
taint data:[$z0]
Coming in Backward Analysis
srcValue=[]
destValue:[]
taint data:[$z0]
Coming in Backward Analysis
srcValue=[]
destValue:[]
taint data:[$z0]
Coming in Backward Analysis
doAnalysis endqqqqqqq.....
come here
[CFMAP]2021 After BackwardAnalysis:{cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}
[taint into] sootMethod: map
[$z0]
class name :cfhider.WordCount$TokenizerMapper
method name :map
method list :[$z0]
clasname=cfhider.WordCount$TokenizerMapper
methodname=map
sourcelist2021=[$z0]
20210427node :r0 := @this: cfhider.WordCount$TokenizerMapper
20210427node in :[]
20210427node out :[]
currStmt20210423:r0 := @this: cfhider.WordCount$TokenizerMapper
20210427node :r1 := @parameter0: java.lang.Object
20210427node in :[]
[idStmt]iiiiiii r1 := @parameter0: java.lang.Object  index:0
ClassName:cfhider.WordCount$TokenizerMapper
MethodName:map
aaaa:0
20210427node out :[]
currStmt20210423:r1 := @parameter0: java.lang.Object
20210427node :r2 := @parameter1: java.lang.Object
20210427node in :[]
[idStmt]iiiiiii r2 := @parameter1: java.lang.Object  index:1
ClassName:cfhider.WordCount$TokenizerMapper
MethodName:map
aaaa:0
20210427node out :[]
currStmt20210423:r2 := @parameter1: java.lang.Object
20210427node :r3 := @parameter2: org.apache.hadoop.mapreduce.Mapper$Context
20210427node in :[]
[idStmt]iiiiiii r3 := @parameter2: org.apache.hadoop.mapreduce.Mapper$Context  index:2
ClassName:cfhider.WordCount$TokenizerMapper
MethodName:map
aaaa:0
20210427node out :[]
currStmt20210423:r3 := @parameter2: org.apache.hadoop.mapreduce.Mapper$Context
20210427node :$r4 = (org.apache.hadoop.io.Text) r2
20210427node in :[]
普通复制语句1112:$r4 = (org.apache.hadoop.io.Text) r2
[taint source] u:r2
SourceList:[$z0]
[taint source] u:(org.apache.hadoop.io.Text) r2
SourceList:[$z0]
20210427node out :[]
20210427node :virtualinvoke r0.<cfhider.WordCount$TokenizerMapper: void map(java.lang.Object,org.apache.hadoop.io.Text,org.apache.hadoop.mapreduce.Mapper$Context)>(r1, $r4, r3)
20210427node in :[]
20210427node out :[]
[taint329]i invoke virtualinvoke r0.<cfhider.WordCount$TokenizerMapper: void map(java.lang.Object,org.apache.hadoop.io.Text,org.apache.hadoop.mapreduce.Mapper$Context)>(r1, $r4, r3)
[taint328]i invoke <cfhider.WordCount$TokenizerMapper: void map(java.lang.Object,org.apache.hadoop.io.Text,org.apache.hadoop.mapreduce.Mapper$Context)>
[taint328]i invoke 3
value:r1
isoutSetContains  false value:r1 index:0
value:$r4
isoutSetContains  false value:$r4 index:1
value:r3
isoutSetContains  false value:r3 index:2
[invokemap]invoke:map  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
20210427node :return
20210427node in :[]
20210427node out :[]
analysis.outSet.size():0
[CFMAP]2021 After taintAnalysis:{cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}
The data isgggg 
<cfhider.WordCount$TokenizerMapper: void map(java.lang.Object,java.lang.Object,org.apache.hadoop.mapreduce.Mapper$Context)>
The data isgggg cfhider.WordCount$TokenizerMapper map [$z0] {cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}  {cfhider.WordCount$IntSumReducer={reduce=[I@350c764b}, cfhider.WordCount$TokenizerMapper={map=[I@13ac188d}, cfhider.WordCount={main=[I@2ebd21bf}, invoker.SnowFlake={<init>=[I@548fe222, getNextMill=[I@3247518d, getNewstmp=[I@18c852}}
Coming...
doAnalysis Startingqqqqqqqq.....
srcValue=[]
destValue:[]
taint data:[$z0]
Coming in Backward Analysis
srcValue=[]
destValue:[]
taint data:[$z0]
Coming in Backward Analysis
[taint329]i invoke virtualinvoke r0.<cfhider.WordCount$TokenizerMapper: void map(java.lang.Object,org.apache.hadoop.io.Text,org.apache.hadoop.mapreduce.Mapper$Context)>(r1, $r4, r3)
[taint328]i invoke <cfhider.WordCount$TokenizerMapper: void map(java.lang.Object,org.apache.hadoop.io.Text,org.apache.hadoop.mapreduce.Mapper$Context)>
[taint328]i invoke 3
value:r1
in here:[I@77fdb12
[invokemap]invoke:map  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
value:$r4
in here:[I@77fdb12
[invokemap]invoke:map  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
value:r3
in here:[I@77fdb12
[invokemap]invoke:map  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
srcValue=[]
destValue:[]
taint data:[$z0]
Coming in Backward Analysis
currStmt20210420:$r4 = (org.apache.hadoop.io.Text) r2
currStmt left value20210420:$r4
srcValue=[]
destValue:[]
taint data:[$z0]
Coming in Backward Analysis
srcValue=[]
destValue:[]
taint data:[$z0]
Coming in Backward Analysis
srcValue=[]
destValue:[]
taint data:[$z0]
Coming in Backward Analysis
srcValue=[]
destValue:[]
taint data:[$z0]
Coming in Backward Analysis
doAnalysis endqqqqqqq.....
come here
[CFMAP]2021 After BackwardAnalysis:{cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}
[taint into] sootMethod: <clinit>
[]
class name :cfhider.WordCount$TokenizerMapper
method name :<clinit>
method list :[]
clasname=cfhider.WordCount$TokenizerMapper
methodname=<clinit>
sourcelist2021=[]
20210427node :$r0 = new org.apache.hadoop.io.IntWritable
20210427node in :[]
普通复制语句1112:$r0 = new org.apache.hadoop.io.IntWritable
[taint source] u:new org.apache.hadoop.io.IntWritable
SourceList:[]
20210427node out :[]
20210427node :specialinvoke $r0.<org.apache.hadoop.io.IntWritable: void <init>(int)>(1)
20210427node in :[]
20210427node out :[]
[taint329]i invoke specialinvoke $r0.<org.apache.hadoop.io.IntWritable: void <init>(int)>(1)
[taint328]i invoke <org.apache.hadoop.io.IntWritable: void <init>(int)>
[taint328]i invoke 1
value:1
isoutSetContains  false value:1 index:0
20210427node :<cfhider.WordCount$TokenizerMapper: org.apache.hadoop.io.IntWritable one> = $r0
20210427node in :[]
普通复制语句1112:<cfhider.WordCount$TokenizerMapper: org.apache.hadoop.io.IntWritable one> = $r0
[taint source] u:$r0
SourceList:[]
20210427node out :[]
20210427node :return
20210427node in :[]
20210427node out :[]
analysis.outSet.size():0
[CFMAP]2021 After taintAnalysis:{cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}
The data isgggg 
<cfhider.WordCount$TokenizerMapper: void <clinit>()>
The data isgggg cfhider.WordCount$TokenizerMapper <clinit> [] {cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}  {cfhider.WordCount$IntSumReducer={reduce=[I@350c764b}, cfhider.WordCount$TokenizerMapper={map=[I@13ac188d}, cfhider.WordCount={main=[I@2ebd21bf}, invoker.SnowFlake={<init>=[I@548fe222, getNextMill=[I@3247518d, getNewstmp=[I@18c852}}
Coming...
doAnalysis Startingqqqqqqqq.....
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:<cfhider.WordCount$TokenizerMapper: org.apache.hadoop.io.IntWritable one> = $r0
currStmt left value20210420:<cfhider.WordCount$TokenizerMapper: org.apache.hadoop.io.IntWritable one>
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
[taint329]i invoke specialinvoke $r0.<org.apache.hadoop.io.IntWritable: void <init>(int)>(1)
[taint328]i invoke <org.apache.hadoop.io.IntWritable: void <init>(int)>
[taint328]i invoke 1
value:1
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$r0 = new org.apache.hadoop.io.IntWritable
currStmt left value20210420:$r0
doAnalysis endqqqqqqq.....
come here
[CFMAP]2021 After BackwardAnalysis:{cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}
[taint]SooClass:invoker.SnowFlake
[taint] class: invoker.SnowFlake
methList :{<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}
[taint into] sootMethod: <init>
[]
class name :invoker.SnowFlake
method name :<init>
method list :[]
clasname=invoker.SnowFlake
methodname=<init>
sourcelist2021=[]
20210427node :r0 := @this: invoker.SnowFlake
20210427node in :[]
20210427node out :[]
currStmt20210423:r0 := @this: invoker.SnowFlake
20210427node :l0 := @parameter0: long
20210427node in :[]
[idStmt]iiiiiii l0 := @parameter0: long  index:0
ClassName:invoker.SnowFlake
MethodName:<init>
aaaa:0
20210427node out :[]
currStmt20210423:l0 := @parameter0: long
20210427node :l1 := @parameter1: long
20210427node in :[]
[idStmt]iiiiiii l1 := @parameter1: long  index:1
ClassName:invoker.SnowFlake
MethodName:<init>
aaaa:0
20210427node out :[]
currStmt20210423:l1 := @parameter1: long
20210427node :specialinvoke r0.<java.lang.Object: void <init>()>()
20210427node in :[]
20210427node out :[]
[taint329]i invoke specialinvoke r0.<java.lang.Object: void <init>()>()
[taint328]i invoke <java.lang.Object: void <init>()>
[taint328]i invoke 0
20210427node :$b2 = l0 cmp 31L
20210427node in :[]
普通复制语句1112:$b2 = l0 cmp 31L
[taint source] u:l0
SourceList:[]
[taint source] u:31L
SourceList:[]
[taint source] u:l0 cmp 31L
SourceList:[]
20210427node out :[]
20210427node :if $b2 > 0 goto $r1 = new java.lang.IllegalArgumentException
20210427node in :[]
20210427node out :[]
Have
Stmt if :if $b2 > 0 goto $r1 = new java.lang.IllegalArgumentExceptionStmt if value:$b2 > 0the value=$b2
the value=0
maintainValues.size0
ifValues1
20210427node :$b3 = l0 cmp 0L
20210427node in :[]
普通复制语句1112:$b3 = l0 cmp 0L
[taint source] u:l0
SourceList:[]
[taint source] u:0L
SourceList:[]
[taint source] u:l0 cmp 0L
SourceList:[]
20210427node out :[]
20210427node :if $b3 >= 0 goto $b4 = l1 cmp 31L
20210427node in :[]
20210427node out :[]
Have
Stmt if :if $b3 >= 0 goto $b4 = l1 cmp 31LStmt if value:$b3 >= 0the value=$b3
the value=0
maintainValues.size0
ifValues1
20210427node :$b4 = l1 cmp 31L
20210427node in :[]
普通复制语句1112:$b4 = l1 cmp 31L
[taint source] u:l1
SourceList:[]
[taint source] u:31L
SourceList:[]
[taint source] u:l1 cmp 31L
SourceList:[]
20210427node out :[]
20210427node :if $b4 > 0 goto $r2 = new java.lang.IllegalArgumentException
20210427node in :[]
20210427node out :[]
Have
Stmt if :if $b4 > 0 goto $r2 = new java.lang.IllegalArgumentExceptionStmt if value:$b4 > 0the value=$b4
the value=0
maintainValues.size0
ifValues1
20210427node :$b5 = l1 cmp 0L
20210427node in :[]
普通复制语句1112:$b5 = l1 cmp 0L
[taint source] u:l1
SourceList:[]
[taint source] u:0L
SourceList:[]
[taint source] u:l1 cmp 0L
SourceList:[]
20210427node out :[]
20210427node :if $b5 >= 0 goto <invoker.SnowFlake: long datacenterId> = 0L
20210427node in :[]
20210427node out :[]
Have
Stmt if :if $b5 >= 0 goto <invoker.SnowFlake: long datacenterId> = 0LStmt if value:$b5 >= 0the value=$b5
the value=0
maintainValues.size0
ifValues1
20210427node :<invoker.SnowFlake: long datacenterId> = 0L
20210427node in :[]
普通复制语句1112:<invoker.SnowFlake: long datacenterId> = 0L
[taint source] u:0L
SourceList:[]
20210427node out :[]
20210427node :<invoker.SnowFlake: long machineId> = 0L
20210427node in :[]
普通复制语句1112:<invoker.SnowFlake: long machineId> = 0L
[taint source] u:0L
SourceList:[]
20210427node out :[]
20210427node :return
20210427node in :[]
20210427node out :[]
20210427node :$r2 = new java.lang.IllegalArgumentException
20210427node in :[]
普通复制语句1112:$r2 = new java.lang.IllegalArgumentException
[taint source] u:new java.lang.IllegalArgumentException
SourceList:[]
20210427node out :[]
20210427node :specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("machineId can\'t be greater than MAX_MACHINE_NUM or less than 0")
20210427node in :[]
20210427node out :[]
[taint329]i invoke specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("machineId can\'t be greater than MAX_MACHINE_NUM or less than 0")
[taint328]i invoke <java.lang.IllegalArgumentException: void <init>(java.lang.String)>
[taint328]i invoke 1
value:"machineId can\'t be greater than MAX_MACHINE_NUM or less than 0"
isoutSetContains  false value:"machineId can\'t be greater than MAX_MACHINE_NUM or less than 0" index:0
20210427node :throw $r2
20210427node in :[]
20210427node out :[]
20210427node :$r1 = new java.lang.IllegalArgumentException
20210427node in :[]
普通复制语句1112:$r1 = new java.lang.IllegalArgumentException
[taint source] u:new java.lang.IllegalArgumentException
SourceList:[]
20210427node out :[]
20210427node :specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("datacenterId can\'t be greater than MAX_DATACENTER_NUM or less than 0")
20210427node in :[]
20210427node out :[]
[taint329]i invoke specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("datacenterId can\'t be greater than MAX_DATACENTER_NUM or less than 0")
[taint328]i invoke <java.lang.IllegalArgumentException: void <init>(java.lang.String)>
[taint328]i invoke 1
value:"datacenterId can\'t be greater than MAX_DATACENTER_NUM or less than 0"
isoutSetContains  false value:"datacenterId can\'t be greater than MAX_DATACENTER_NUM or less than 0" index:0
20210427node :throw $r1
20210427node in :[]
20210427node out :[]
analysis.outSet.size():0
[CFMAP]2021 After taintAnalysis:{cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}
The data isgggg 
<invoker.SnowFlake: void <init>(long,long)>
The data isgggg invoker.SnowFlake <init> [] {cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}  {cfhider.WordCount$IntSumReducer={reduce=[I@350c764b}, cfhider.WordCount$TokenizerMapper={map=[I@13ac188d}, cfhider.WordCount={main=[I@2ebd21bf}, invoker.SnowFlake={<init>=[I@5b077e96, getNextMill=[I@3247518d, getNewstmp=[I@18c852}}
Coming...
doAnalysis Startingqqqqqqqq.....
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
[taint329]i invoke specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("datacenterId can\'t be greater than MAX_DATACENTER_NUM or less than 0")
[taint328]i invoke <java.lang.IllegalArgumentException: void <init>(java.lang.String)>
[taint328]i invoke 1
value:"datacenterId can\'t be greater than MAX_DATACENTER_NUM or less than 0"
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$r1 = new java.lang.IllegalArgumentException
currStmt left value20210420:$r1
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
[taint329]i invoke specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("machineId can\'t be greater than MAX_MACHINE_NUM or less than 0")
[taint328]i invoke <java.lang.IllegalArgumentException: void <init>(java.lang.String)>
[taint328]i invoke 1
value:"machineId can\'t be greater than MAX_MACHINE_NUM or less than 0"
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$r2 = new java.lang.IllegalArgumentException
currStmt left value20210420:$r2
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:<invoker.SnowFlake: long machineId> = 0L
currStmt left value20210420:<invoker.SnowFlake: long machineId>
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:<invoker.SnowFlake: long datacenterId> = 0L
currStmt left value20210420:<invoker.SnowFlake: long datacenterId>
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
Have
the value=$b5
the value=0
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$b5 = l1 cmp 0L
currStmt left value20210420:$b5
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
Have
the value=$b4
the value=0
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$b4 = l1 cmp 31L
currStmt left value20210420:$b4
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
Have
the value=$b3
the value=0
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$b3 = l0 cmp 0L
currStmt left value20210420:$b3
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
Have
the value=$b2
the value=0
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$b2 = l0 cmp 31L
currStmt left value20210420:$b2
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
[taint329]i invoke specialinvoke r0.<java.lang.Object: void <init>()>()
[taint328]i invoke <java.lang.Object: void <init>()>
[taint328]i invoke 0
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
doAnalysis endqqqqqqq.....
come here
[CFMAP]2021 After BackwardAnalysis:{cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}
[taint into] sootMethod: nextId
[]
class name :invoker.SnowFlake
method name :nextId
method list :[]
clasname=invoker.SnowFlake
methodname=nextId
sourcelist2021=[]
20210427node :l0 = staticinvoke <invoker.SnowFlake: long getNewstmp()>()
20210427node in :[]
调用语句赋值给变量:l0 = staticinvoke <invoker.SnowFlake: long getNewstmp()>()
Invokestmt:getNewstmp
20210427node out :[]
[taint328]a invoke <invoker.SnowFlake: long getNewstmp()>
[taint328]a invoke 0
[invokemap]invoke:getNewstmp  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
20210427node :$l1 = <invoker.SnowFlake: long lastStmp>
20210427node in :[]
普通复制语句1112:$l1 = <invoker.SnowFlake: long lastStmp>
[taint source] u:<invoker.SnowFlake: long lastStmp>
SourceList:[]
20210427node out :[]
20210427node :$b2 = l0 cmp $l1
20210427node in :[]
普通复制语句1112:$b2 = l0 cmp $l1
[taint source] u:l0
SourceList:[]
[taint source] u:$l1
SourceList:[]
[taint source] u:l0 cmp $l1
SourceList:[]
20210427node out :[]
20210427node :if $b2 >= 0 goto $l3 = <invoker.SnowFlake: long lastStmp>
20210427node in :[]
20210427node out :[]
Have
Stmt if :if $b2 >= 0 goto $l3 = <invoker.SnowFlake: long lastStmp>Stmt if value:$b2 >= 0the value=$b2
the value=0
maintainValues.size0
ifValues1
20210427node :$l3 = <invoker.SnowFlake: long lastStmp>
20210427node in :[]
普通复制语句1112:$l3 = <invoker.SnowFlake: long lastStmp>
[taint source] u:<invoker.SnowFlake: long lastStmp>
SourceList:[]
20210427node out :[]
20210427node :$b4 = l0 cmp $l3
20210427node in :[]
普通复制语句1112:$b4 = l0 cmp $l3
[taint source] u:l0
SourceList:[]
[taint source] u:$l3
SourceList:[]
[taint source] u:l0 cmp $l3
SourceList:[]
20210427node out :[]
20210427node :if $b4 != 0 goto <invoker.SnowFlake: long sequence> = 0L
20210427node in :[]
20210427node out :[]
Have
Stmt if :if $b4 != 0 goto <invoker.SnowFlake: long sequence> = 0LStmt if value:$b4 != 0the value=$b4
the value=0
maintainValues.size0
ifValues1
20210427node :<invoker.SnowFlake: long sequence> = 0L
20210427node in :[]
普通复制语句1112:<invoker.SnowFlake: long sequence> = 0L
[taint source] u:0L
SourceList:[]
20210427node out :[]
20210427node :$l5 = <invoker.SnowFlake: long sequence>
20210427node in :[]
普通复制语句1112:$l5 = <invoker.SnowFlake: long sequence>
[taint source] u:<invoker.SnowFlake: long sequence>
SourceList:[]
20210427node out :[]
20210427node :$l6 = $l5 + 1L
20210427node in :[]
普通复制语句1112:$l6 = $l5 + 1L
[taint source] u:$l5
SourceList:[]
[taint source] u:1L
SourceList:[]
[taint source] u:$l5 + 1L
SourceList:[]
20210427node out :[]
20210427node :$l7 = $l6 & 4095L
20210427node in :[]
普通复制语句1112:$l7 = $l6 & 4095L
[taint source] u:$l6
SourceList:[]
[taint source] u:4095L
SourceList:[]
[taint source] u:$l6 & 4095L
SourceList:[]
20210427node out :[]
20210427node :<invoker.SnowFlake: long sequence> = $l7
20210427node in :[]
普通复制语句1112:<invoker.SnowFlake: long sequence> = $l7
[taint source] u:$l7
SourceList:[]
20210427node out :[]
20210427node :$l8 = <invoker.SnowFlake: long sequence>
20210427node in :[]
普通复制语句1112:$l8 = <invoker.SnowFlake: long sequence>
[taint source] u:<invoker.SnowFlake: long sequence>
SourceList:[]
20210427node out :[]
20210427node :$b9 = $l8 cmp 0L
20210427node in :[]
普通复制语句1112:$b9 = $l8 cmp 0L
[taint source] u:$l8
SourceList:[]
[taint source] u:0L
SourceList:[]
[taint source] u:$l8 cmp 0L
SourceList:[]
20210427node out :[]
20210427node :if $b9 != 0 goto <invoker.SnowFlake: long lastStmp> = l0
20210427node in :[]
20210427node out :[]
Have
Stmt if :if $b9 != 0 goto <invoker.SnowFlake: long lastStmp> = l0Stmt if value:$b9 != 0the value=$b9
the value=0
maintainValues.size0
ifValues1
20210427node :l0 = staticinvoke <invoker.SnowFlake: long getNextMill()>()
20210427node in :[]
调用语句赋值给变量:l0 = staticinvoke <invoker.SnowFlake: long getNextMill()>()
Invokestmt:getNextMill
20210427node out :[]
[taint328]a invoke <invoker.SnowFlake: long getNextMill()>
[taint328]a invoke 0
[invokemap]invoke:getNextMill  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
20210427node :goto [?= <invoker.SnowFlake: long lastStmp> = l0]
20210427node in :[]
20210427node out :[]
20210427node :<invoker.SnowFlake: long lastStmp> = l0
20210427node in :[]
普通复制语句1112:<invoker.SnowFlake: long lastStmp> = l0
[taint source] u:l0
SourceList:[]
20210427node out :[]
20210427node :$l10 = l0 - 1480166465631L
20210427node in :[]
普通复制语句1112:$l10 = l0 - 1480166465631L
[taint source] u:l0
SourceList:[]
[taint source] u:1480166465631L
SourceList:[]
[taint source] u:l0 - 1480166465631L
SourceList:[]
20210427node out :[]
20210427node :$l11 = $l10 << 22
20210427node in :[]
普通复制语句1112:$l11 = $l10 << 22
[taint source] u:$l10
SourceList:[]
[taint source] u:22
SourceList:[]
[taint source] u:$l10 << 22
SourceList:[]
20210427node out :[]
20210427node :$l12 = <invoker.SnowFlake: long datacenterId>
20210427node in :[]
普通复制语句1112:$l12 = <invoker.SnowFlake: long datacenterId>
[taint source] u:<invoker.SnowFlake: long datacenterId>
SourceList:[]
20210427node out :[]
20210427node :$l13 = $l12 << 17
20210427node in :[]
普通复制语句1112:$l13 = $l12 << 17
[taint source] u:$l12
SourceList:[]
[taint source] u:17
SourceList:[]
[taint source] u:$l12 << 17
SourceList:[]
20210427node out :[]
20210427node :$l14 = $l11 | $l13
20210427node in :[]
普通复制语句1112:$l14 = $l11 | $l13
[taint source] u:$l11
SourceList:[]
[taint source] u:$l13
SourceList:[]
[taint source] u:$l11 | $l13
SourceList:[]
20210427node out :[]
20210427node :$l15 = <invoker.SnowFlake: long machineId>
20210427node in :[]
普通复制语句1112:$l15 = <invoker.SnowFlake: long machineId>
[taint source] u:<invoker.SnowFlake: long machineId>
SourceList:[]
20210427node out :[]
20210427node :$l16 = $l15 << 12
20210427node in :[]
普通复制语句1112:$l16 = $l15 << 12
[taint source] u:$l15
SourceList:[]
[taint source] u:12
SourceList:[]
[taint source] u:$l15 << 12
SourceList:[]
20210427node out :[]
20210427node :$l17 = $l14 | $l16
20210427node in :[]
普通复制语句1112:$l17 = $l14 | $l16
[taint source] u:$l14
SourceList:[]
[taint source] u:$l16
SourceList:[]
[taint source] u:$l14 | $l16
SourceList:[]
20210427node out :[]
20210427node :$l18 = <invoker.SnowFlake: long sequence>
20210427node in :[]
普通复制语句1112:$l18 = <invoker.SnowFlake: long sequence>
[taint source] u:<invoker.SnowFlake: long sequence>
SourceList:[]
20210427node out :[]
20210427node :$l19 = $l17 | $l18
20210427node in :[]
普通复制语句1112:$l19 = $l17 | $l18
[taint source] u:$l17
SourceList:[]
[taint source] u:$l18
SourceList:[]
[taint source] u:$l17 | $l18
SourceList:[]
20210427node out :[]
20210427node :return $l19
20210427node in :[]
20210427node out :[]
20210427node :$r0 = new java.lang.RuntimeException
20210427node in :[]
普通复制语句1112:$r0 = new java.lang.RuntimeException
[taint source] u:new java.lang.RuntimeException
SourceList:[]
20210427node out :[]
20210427node :specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Clock moved backwards.  Refusing to generate id")
20210427node in :[]
20210427node out :[]
[taint329]i invoke specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Clock moved backwards.  Refusing to generate id")
[taint328]i invoke <java.lang.RuntimeException: void <init>(java.lang.String)>
[taint328]i invoke 1
value:"Clock moved backwards.  Refusing to generate id"
isoutSetContains  false value:"Clock moved backwards.  Refusing to generate id" index:0
20210427node :throw $r0
20210427node in :[]
20210427node out :[]
analysis.outSet.size():0
[CFMAP]2021 After taintAnalysis:{cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}
The data isgggg 
<invoker.SnowFlake: long nextId()>
The data isgggg invoker.SnowFlake nextId [] {cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}  {cfhider.WordCount$IntSumReducer={reduce=[I@350c764b}, cfhider.WordCount$TokenizerMapper={map=[I@13ac188d}, cfhider.WordCount={main=[I@2ebd21bf}, invoker.SnowFlake={<init>=[I@5b077e96, getNextMill=[I@4907d88a, getNewstmp=[I@2219717b}}
Coming...
doAnalysis Startingqqqqqqqq.....
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
[taint329]i invoke specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Clock moved backwards.  Refusing to generate id")
[taint328]i invoke <java.lang.RuntimeException: void <init>(java.lang.String)>
[taint328]i invoke 1
value:"Clock moved backwards.  Refusing to generate id"
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$r0 = new java.lang.RuntimeException
currStmt left value20210420:$r0
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$l19 = $l17 | $l18
currStmt left value20210420:$l19
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$l18 = <invoker.SnowFlake: long sequence>
currStmt left value20210420:$l18
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$l17 = $l14 | $l16
currStmt left value20210420:$l17
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$l16 = $l15 << 12
currStmt left value20210420:$l16
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$l15 = <invoker.SnowFlake: long machineId>
currStmt left value20210420:$l15
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$l14 = $l11 | $l13
currStmt left value20210420:$l14
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$l13 = $l12 << 17
currStmt left value20210420:$l13
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$l12 = <invoker.SnowFlake: long datacenterId>
currStmt left value20210420:$l12
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$l11 = $l10 << 22
currStmt left value20210420:$l11
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$l10 = l0 - 1480166465631L
currStmt left value20210420:$l10
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:<invoker.SnowFlake: long lastStmp> = l0
currStmt left value20210420:<invoker.SnowFlake: long lastStmp>
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:l0 = staticinvoke <invoker.SnowFlake: long getNextMill()>()
currStmt left value20210420:l0
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
Have
the value=$b9
the value=0
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$b9 = $l8 cmp 0L
currStmt left value20210420:$b9
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$l8 = <invoker.SnowFlake: long sequence>
currStmt left value20210420:$l8
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:<invoker.SnowFlake: long sequence> = $l7
currStmt left value20210420:<invoker.SnowFlake: long sequence>
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$l7 = $l6 & 4095L
currStmt left value20210420:$l7
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$l6 = $l5 + 1L
currStmt left value20210420:$l6
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$l5 = <invoker.SnowFlake: long sequence>
currStmt left value20210420:$l5
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:<invoker.SnowFlake: long sequence> = 0L
currStmt left value20210420:<invoker.SnowFlake: long sequence>
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
Have
the value=$b4
the value=0
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$b4 = l0 cmp $l3
currStmt left value20210420:$b4
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$l3 = <invoker.SnowFlake: long lastStmp>
currStmt left value20210420:$l3
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
Have
the value=$b2
the value=0
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$b2 = l0 cmp $l1
currStmt left value20210420:$b2
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$l1 = <invoker.SnowFlake: long lastStmp>
currStmt left value20210420:$l1
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:l0 = staticinvoke <invoker.SnowFlake: long getNewstmp()>()
currStmt left value20210420:l0
doAnalysis endqqqqqqq.....
come here
[CFMAP]2021 After BackwardAnalysis:{cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}
[taint into] sootMethod: getNextMill
[]
class name :invoker.SnowFlake
method name :getNextMill
method list :[]
clasname=invoker.SnowFlake
methodname=getNextMill
sourcelist2021=[]
20210427node :l0 = staticinvoke <invoker.SnowFlake: long getNewstmp()>()
20210427node in :[]
调用语句赋值给变量:l0 = staticinvoke <invoker.SnowFlake: long getNewstmp()>()
Invokestmt:getNewstmp
20210427node out :[]
[taint328]a invoke <invoker.SnowFlake: long getNewstmp()>
[taint328]a invoke 0
[invokemap]invoke:getNewstmp  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
20210427node :$l1 = <invoker.SnowFlake: long lastStmp>
20210427node in :[]
普通复制语句1112:$l1 = <invoker.SnowFlake: long lastStmp>
[taint source] u:<invoker.SnowFlake: long lastStmp>
SourceList:[]
20210427node out :[]
20210427node :$b2 = l0 cmp $l1
20210427node in :[]
普通复制语句1112:$b2 = l0 cmp $l1
[taint source] u:l0
SourceList:[]
[taint source] u:$l1
SourceList:[]
[taint source] u:l0 cmp $l1
SourceList:[]
20210427node out :[]
20210427node :if $b2 > 0 goto return l0
20210427node in :[]
20210427node out :[]
Have
Stmt if :if $b2 > 0 goto return l0Stmt if value:$b2 > 0the value=$b2
the value=0
maintainValues.size0
ifValues1
20210427node :return l0
20210427node in :[]
20210427node out :[]
20210427node :l0 = staticinvoke <invoker.SnowFlake: long getNewstmp()>()
20210427node in :[]
调用语句赋值给变量:l0 = staticinvoke <invoker.SnowFlake: long getNewstmp()>()
Invokestmt:getNewstmp
20210427node out :[]
[taint328]a invoke <invoker.SnowFlake: long getNewstmp()>
[taint328]a invoke 0
[invokemap]invoke:getNewstmp  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
20210427node :goto [?= $l1 = <invoker.SnowFlake: long lastStmp>]
20210427node in :[]
20210427node out :[]
analysis.outSet.size():0
[CFMAP]2021 After taintAnalysis:{cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}
The data isgggg 
<invoker.SnowFlake: long getNextMill()>
The data isgggg invoker.SnowFlake getNextMill [] {cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}  {cfhider.WordCount$IntSumReducer={reduce=[I@350c764b}, cfhider.WordCount$TokenizerMapper={map=[I@13ac188d}, cfhider.WordCount={main=[I@2ebd21bf}, invoker.SnowFlake={<init>=[I@5b077e96, getNextMill=[I@4907d88a, getNewstmp=[I@346953ba}}
Coming...
doAnalysis Startingqqqqqqqq.....
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:l0 = staticinvoke <invoker.SnowFlake: long getNewstmp()>()
currStmt left value20210420:l0
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
Have
the value=$b2
the value=0
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$b2 = l0 cmp $l1
currStmt left value20210420:$b2
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$l1 = <invoker.SnowFlake: long lastStmp>
currStmt left value20210420:$l1
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:l0 = staticinvoke <invoker.SnowFlake: long getNewstmp()>()
currStmt left value20210420:l0
doAnalysis endqqqqqqq.....
come here
[CFMAP]2021 After BackwardAnalysis:{cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}
[taint into] sootMethod: getNewstmp
[]
class name :invoker.SnowFlake
method name :getNewstmp
method list :[]
clasname=invoker.SnowFlake
methodname=getNewstmp
sourcelist2021=[]
20210427node :$l0 = staticinvoke <java.lang.System: long currentTimeMillis()>()
20210427node in :[]
调用语句赋值给变量:$l0 = staticinvoke <java.lang.System: long currentTimeMillis()>()
20210427node out :[]
[taint328]a invoke <java.lang.System: long currentTimeMillis()>
[taint328]a invoke 0
20210427node :return $l0
20210427node in :[]
20210427node out :[]
analysis.outSet.size():0
[CFMAP]2021 After taintAnalysis:{cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}
The data isgggg 
<invoker.SnowFlake: long getNewstmp()>
The data isgggg invoker.SnowFlake getNewstmp [] {cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}  {cfhider.WordCount$IntSumReducer={reduce=[I@350c764b}, cfhider.WordCount$TokenizerMapper={map=[I@13ac188d}, cfhider.WordCount={main=[I@2ebd21bf}, invoker.SnowFlake={<init>=[I@5b077e96, getNextMill=[I@4907d88a, getNewstmp=[I@346953ba}}
Coming...
doAnalysis Startingqqqqqqqq.....
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$l0 = staticinvoke <java.lang.System: long currentTimeMillis()>()
currStmt left value20210420:$l0
doAnalysis endqqqqqqq.....
come here
[CFMAP]2021 After BackwardAnalysis:{cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}
[taint into] sootMethod: <clinit>
[]
class name :invoker.SnowFlake
method name :<clinit>
method list :[]
clasname=invoker.SnowFlake
methodname=<clinit>
sourcelist2021=[]
20210427node :<invoker.SnowFlake: long sequence> = 0L
20210427node in :[]
普通复制语句1112:<invoker.SnowFlake: long sequence> = 0L
[taint source] u:0L
SourceList:[]
20210427node out :[]
20210427node :<invoker.SnowFlake: long lastStmp> = -1L
20210427node in :[]
普通复制语句1112:<invoker.SnowFlake: long lastStmp> = -1L
[taint source] u:-1L
SourceList:[]
20210427node out :[]
20210427node :return
20210427node in :[]
20210427node out :[]
analysis.outSet.size():0
[CFMAP]2021 After taintAnalysis:{cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}
The data isgggg 
<invoker.SnowFlake: void <clinit>()>
The data isgggg invoker.SnowFlake <clinit> [] {cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}  {cfhider.WordCount$IntSumReducer={reduce=[I@350c764b}, cfhider.WordCount$TokenizerMapper={map=[I@13ac188d}, cfhider.WordCount={main=[I@2ebd21bf}, invoker.SnowFlake={<init>=[I@5b077e96, getNextMill=[I@4907d88a, getNewstmp=[I@346953ba}}
Coming...
doAnalysis Startingqqqqqqqq.....
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:<invoker.SnowFlake: long lastStmp> = -1L
currStmt left value20210420:<invoker.SnowFlake: long lastStmp>
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:<invoker.SnowFlake: long sequence> = 0L
currStmt left value20210420:<invoker.SnowFlake: long sequence>
doAnalysis endqqqqqqq.....
come here
[CFMAP]2021 After BackwardAnalysis:{cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}
[taint into] sootMethod: <init>
[]
class name :invoker.SnowFlake
method name :<init>
method list :[]
clasname=invoker.SnowFlake
methodname=<init>
sourcelist2021=[]
20210427node :r0 := @this: invoker.SnowFlake
20210427node in :[]
20210427node out :[]
currStmt20210423:r0 := @this: invoker.SnowFlake
20210427node :l0 := @parameter0: long
20210427node in :[]
[idStmt]iiiiiii l0 := @parameter0: long  index:0
ClassName:invoker.SnowFlake
MethodName:<init>
aaaa:0
20210427node out :[]
currStmt20210423:l0 := @parameter0: long
20210427node :l1 := @parameter1: long
20210427node in :[]
[idStmt]iiiiiii l1 := @parameter1: long  index:1
ClassName:invoker.SnowFlake
MethodName:<init>
aaaa:0
20210427node out :[]
currStmt20210423:l1 := @parameter1: long
20210427node :specialinvoke r0.<java.lang.Object: void <init>()>()
20210427node in :[]
20210427node out :[]
[taint329]i invoke specialinvoke r0.<java.lang.Object: void <init>()>()
[taint328]i invoke <java.lang.Object: void <init>()>
[taint328]i invoke 0
20210427node :$b2 = l0 cmp 31L
20210427node in :[]
普通复制语句1112:$b2 = l0 cmp 31L
[taint source] u:l0
SourceList:[]
[taint source] u:31L
SourceList:[]
[taint source] u:l0 cmp 31L
SourceList:[]
20210427node out :[]
20210427node :if $b2 > 0 goto $r1 = new java.lang.IllegalArgumentException
20210427node in :[]
20210427node out :[]
Have
Stmt if :if $b2 > 0 goto $r1 = new java.lang.IllegalArgumentExceptionStmt if value:$b2 > 0the value=$b2
the value=0
maintainValues.size0
ifValues1
20210427node :$b3 = l0 cmp 0L
20210427node in :[]
普通复制语句1112:$b3 = l0 cmp 0L
[taint source] u:l0
SourceList:[]
[taint source] u:0L
SourceList:[]
[taint source] u:l0 cmp 0L
SourceList:[]
20210427node out :[]
20210427node :if $b3 >= 0 goto $b4 = l1 cmp 31L
20210427node in :[]
20210427node out :[]
Have
Stmt if :if $b3 >= 0 goto $b4 = l1 cmp 31LStmt if value:$b3 >= 0the value=$b3
the value=0
maintainValues.size0
ifValues1
20210427node :$b4 = l1 cmp 31L
20210427node in :[]
普通复制语句1112:$b4 = l1 cmp 31L
[taint source] u:l1
SourceList:[]
[taint source] u:31L
SourceList:[]
[taint source] u:l1 cmp 31L
SourceList:[]
20210427node out :[]
20210427node :if $b4 > 0 goto $r2 = new java.lang.IllegalArgumentException
20210427node in :[]
20210427node out :[]
Have
Stmt if :if $b4 > 0 goto $r2 = new java.lang.IllegalArgumentExceptionStmt if value:$b4 > 0the value=$b4
the value=0
maintainValues.size0
ifValues1
20210427node :$b5 = l1 cmp 0L
20210427node in :[]
普通复制语句1112:$b5 = l1 cmp 0L
[taint source] u:l1
SourceList:[]
[taint source] u:0L
SourceList:[]
[taint source] u:l1 cmp 0L
SourceList:[]
20210427node out :[]
20210427node :if $b5 >= 0 goto <invoker.SnowFlake: long datacenterId> = 0L
20210427node in :[]
20210427node out :[]
Have
Stmt if :if $b5 >= 0 goto <invoker.SnowFlake: long datacenterId> = 0LStmt if value:$b5 >= 0the value=$b5
the value=0
maintainValues.size0
ifValues1
20210427node :<invoker.SnowFlake: long datacenterId> = 0L
20210427node in :[]
普通复制语句1112:<invoker.SnowFlake: long datacenterId> = 0L
[taint source] u:0L
SourceList:[]
20210427node out :[]
20210427node :<invoker.SnowFlake: long machineId> = 0L
20210427node in :[]
普通复制语句1112:<invoker.SnowFlake: long machineId> = 0L
[taint source] u:0L
SourceList:[]
20210427node out :[]
20210427node :return
20210427node in :[]
20210427node out :[]
20210427node :$r2 = new java.lang.IllegalArgumentException
20210427node in :[]
普通复制语句1112:$r2 = new java.lang.IllegalArgumentException
[taint source] u:new java.lang.IllegalArgumentException
SourceList:[]
20210427node out :[]
20210427node :specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("machineId can\'t be greater than MAX_MACHINE_NUM or less than 0")
20210427node in :[]
20210427node out :[]
[taint329]i invoke specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("machineId can\'t be greater than MAX_MACHINE_NUM or less than 0")
[taint328]i invoke <java.lang.IllegalArgumentException: void <init>(java.lang.String)>
[taint328]i invoke 1
value:"machineId can\'t be greater than MAX_MACHINE_NUM or less than 0"
isoutSetContains  false value:"machineId can\'t be greater than MAX_MACHINE_NUM or less than 0" index:0
20210427node :throw $r2
20210427node in :[]
20210427node out :[]
20210427node :$r1 = new java.lang.IllegalArgumentException
20210427node in :[]
普通复制语句1112:$r1 = new java.lang.IllegalArgumentException
[taint source] u:new java.lang.IllegalArgumentException
SourceList:[]
20210427node out :[]
20210427node :specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("datacenterId can\'t be greater than MAX_DATACENTER_NUM or less than 0")
20210427node in :[]
20210427node out :[]
[taint329]i invoke specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("datacenterId can\'t be greater than MAX_DATACENTER_NUM or less than 0")
[taint328]i invoke <java.lang.IllegalArgumentException: void <init>(java.lang.String)>
[taint328]i invoke 1
value:"datacenterId can\'t be greater than MAX_DATACENTER_NUM or less than 0"
isoutSetContains  false value:"datacenterId can\'t be greater than MAX_DATACENTER_NUM or less than 0" index:0
20210427node :throw $r1
20210427node in :[]
20210427node out :[]
analysis.outSet.size():0
[CFMAP]2021 After taintAnalysis:{cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}
The data isgggg 
<invoker.SnowFlake: void <init>(long,long)>
The data isgggg invoker.SnowFlake <init> [] {cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}  {cfhider.WordCount$IntSumReducer={reduce=[I@350c764b}, cfhider.WordCount$TokenizerMapper={map=[I@13ac188d}, cfhider.WordCount={main=[I@2ebd21bf}, invoker.SnowFlake={<init>=[I@6ef7f337, getNextMill=[I@4907d88a, getNewstmp=[I@346953ba}}
Coming...
doAnalysis Startingqqqqqqqq.....
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
[taint329]i invoke specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("datacenterId can\'t be greater than MAX_DATACENTER_NUM or less than 0")
[taint328]i invoke <java.lang.IllegalArgumentException: void <init>(java.lang.String)>
[taint328]i invoke 1
value:"datacenterId can\'t be greater than MAX_DATACENTER_NUM or less than 0"
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$r1 = new java.lang.IllegalArgumentException
currStmt left value20210420:$r1
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
[taint329]i invoke specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("machineId can\'t be greater than MAX_MACHINE_NUM or less than 0")
[taint328]i invoke <java.lang.IllegalArgumentException: void <init>(java.lang.String)>
[taint328]i invoke 1
value:"machineId can\'t be greater than MAX_MACHINE_NUM or less than 0"
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$r2 = new java.lang.IllegalArgumentException
currStmt left value20210420:$r2
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:<invoker.SnowFlake: long machineId> = 0L
currStmt left value20210420:<invoker.SnowFlake: long machineId>
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:<invoker.SnowFlake: long datacenterId> = 0L
currStmt left value20210420:<invoker.SnowFlake: long datacenterId>
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
Have
the value=$b5
the value=0
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$b5 = l1 cmp 0L
currStmt left value20210420:$b5
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
Have
the value=$b4
the value=0
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$b4 = l1 cmp 31L
currStmt left value20210420:$b4
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
Have
the value=$b3
the value=0
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$b3 = l0 cmp 0L
currStmt left value20210420:$b3
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
Have
the value=$b2
the value=0
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$b2 = l0 cmp 31L
currStmt left value20210420:$b2
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
[taint329]i invoke specialinvoke r0.<java.lang.Object: void <init>()>()
[taint328]i invoke <java.lang.Object: void <init>()>
[taint328]i invoke 0
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
doAnalysis endqqqqqqq.....
come here
[CFMAP]2021 After BackwardAnalysis:{cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}
[taint into] sootMethod: nextId
[]
class name :invoker.SnowFlake
method name :nextId
method list :[]
clasname=invoker.SnowFlake
methodname=nextId
sourcelist2021=[]
20210427node :l0 = staticinvoke <invoker.SnowFlake: long getNewstmp()>()
20210427node in :[]
调用语句赋值给变量:l0 = staticinvoke <invoker.SnowFlake: long getNewstmp()>()
Invokestmt:getNewstmp
20210427node out :[]
[taint328]a invoke <invoker.SnowFlake: long getNewstmp()>
[taint328]a invoke 0
[invokemap]invoke:getNewstmp  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
20210427node :$l1 = <invoker.SnowFlake: long lastStmp>
20210427node in :[]
普通复制语句1112:$l1 = <invoker.SnowFlake: long lastStmp>
[taint source] u:<invoker.SnowFlake: long lastStmp>
SourceList:[]
20210427node out :[]
20210427node :$b2 = l0 cmp $l1
20210427node in :[]
普通复制语句1112:$b2 = l0 cmp $l1
[taint source] u:l0
SourceList:[]
[taint source] u:$l1
SourceList:[]
[taint source] u:l0 cmp $l1
SourceList:[]
20210427node out :[]
20210427node :if $b2 >= 0 goto $l3 = <invoker.SnowFlake: long lastStmp>
20210427node in :[]
20210427node out :[]
Have
Stmt if :if $b2 >= 0 goto $l3 = <invoker.SnowFlake: long lastStmp>Stmt if value:$b2 >= 0the value=$b2
the value=0
maintainValues.size0
ifValues1
20210427node :$l3 = <invoker.SnowFlake: long lastStmp>
20210427node in :[]
普通复制语句1112:$l3 = <invoker.SnowFlake: long lastStmp>
[taint source] u:<invoker.SnowFlake: long lastStmp>
SourceList:[]
20210427node out :[]
20210427node :$b4 = l0 cmp $l3
20210427node in :[]
普通复制语句1112:$b4 = l0 cmp $l3
[taint source] u:l0
SourceList:[]
[taint source] u:$l3
SourceList:[]
[taint source] u:l0 cmp $l3
SourceList:[]
20210427node out :[]
20210427node :if $b4 != 0 goto <invoker.SnowFlake: long sequence> = 0L
20210427node in :[]
20210427node out :[]
Have
Stmt if :if $b4 != 0 goto <invoker.SnowFlake: long sequence> = 0LStmt if value:$b4 != 0the value=$b4
the value=0
maintainValues.size0
ifValues1
20210427node :<invoker.SnowFlake: long sequence> = 0L
20210427node in :[]
普通复制语句1112:<invoker.SnowFlake: long sequence> = 0L
[taint source] u:0L
SourceList:[]
20210427node out :[]
20210427node :$l5 = <invoker.SnowFlake: long sequence>
20210427node in :[]
普通复制语句1112:$l5 = <invoker.SnowFlake: long sequence>
[taint source] u:<invoker.SnowFlake: long sequence>
SourceList:[]
20210427node out :[]
20210427node :$l6 = $l5 + 1L
20210427node in :[]
普通复制语句1112:$l6 = $l5 + 1L
[taint source] u:$l5
SourceList:[]
[taint source] u:1L
SourceList:[]
[taint source] u:$l5 + 1L
SourceList:[]
20210427node out :[]
20210427node :$l7 = $l6 & 4095L
20210427node in :[]
普通复制语句1112:$l7 = $l6 & 4095L
[taint source] u:$l6
SourceList:[]
[taint source] u:4095L
SourceList:[]
[taint source] u:$l6 & 4095L
SourceList:[]
20210427node out :[]
20210427node :<invoker.SnowFlake: long sequence> = $l7
20210427node in :[]
普通复制语句1112:<invoker.SnowFlake: long sequence> = $l7
[taint source] u:$l7
SourceList:[]
20210427node out :[]
20210427node :$l8 = <invoker.SnowFlake: long sequence>
20210427node in :[]
普通复制语句1112:$l8 = <invoker.SnowFlake: long sequence>
[taint source] u:<invoker.SnowFlake: long sequence>
SourceList:[]
20210427node out :[]
20210427node :$b9 = $l8 cmp 0L
20210427node in :[]
普通复制语句1112:$b9 = $l8 cmp 0L
[taint source] u:$l8
SourceList:[]
[taint source] u:0L
SourceList:[]
[taint source] u:$l8 cmp 0L
SourceList:[]
20210427node out :[]
20210427node :if $b9 != 0 goto <invoker.SnowFlake: long lastStmp> = l0
20210427node in :[]
20210427node out :[]
Have
Stmt if :if $b9 != 0 goto <invoker.SnowFlake: long lastStmp> = l0Stmt if value:$b9 != 0the value=$b9
the value=0
maintainValues.size0
ifValues1
20210427node :l0 = staticinvoke <invoker.SnowFlake: long getNextMill()>()
20210427node in :[]
调用语句赋值给变量:l0 = staticinvoke <invoker.SnowFlake: long getNextMill()>()
Invokestmt:getNextMill
20210427node out :[]
[taint328]a invoke <invoker.SnowFlake: long getNextMill()>
[taint328]a invoke 0
[invokemap]invoke:getNextMill  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
20210427node :goto [?= <invoker.SnowFlake: long lastStmp> = l0]
20210427node in :[]
20210427node out :[]
20210427node :<invoker.SnowFlake: long lastStmp> = l0
20210427node in :[]
普通复制语句1112:<invoker.SnowFlake: long lastStmp> = l0
[taint source] u:l0
SourceList:[]
20210427node out :[]
20210427node :$l10 = l0 - 1480166465631L
20210427node in :[]
普通复制语句1112:$l10 = l0 - 1480166465631L
[taint source] u:l0
SourceList:[]
[taint source] u:1480166465631L
SourceList:[]
[taint source] u:l0 - 1480166465631L
SourceList:[]
20210427node out :[]
20210427node :$l11 = $l10 << 22
20210427node in :[]
普通复制语句1112:$l11 = $l10 << 22
[taint source] u:$l10
SourceList:[]
[taint source] u:22
SourceList:[]
[taint source] u:$l10 << 22
SourceList:[]
20210427node out :[]
20210427node :$l12 = <invoker.SnowFlake: long datacenterId>
20210427node in :[]
普通复制语句1112:$l12 = <invoker.SnowFlake: long datacenterId>
[taint source] u:<invoker.SnowFlake: long datacenterId>
SourceList:[]
20210427node out :[]
20210427node :$l13 = $l12 << 17
20210427node in :[]
普通复制语句1112:$l13 = $l12 << 17
[taint source] u:$l12
SourceList:[]
[taint source] u:17
SourceList:[]
[taint source] u:$l12 << 17
SourceList:[]
20210427node out :[]
20210427node :$l14 = $l11 | $l13
20210427node in :[]
普通复制语句1112:$l14 = $l11 | $l13
[taint source] u:$l11
SourceList:[]
[taint source] u:$l13
SourceList:[]
[taint source] u:$l11 | $l13
SourceList:[]
20210427node out :[]
20210427node :$l15 = <invoker.SnowFlake: long machineId>
20210427node in :[]
普通复制语句1112:$l15 = <invoker.SnowFlake: long machineId>
[taint source] u:<invoker.SnowFlake: long machineId>
SourceList:[]
20210427node out :[]
20210427node :$l16 = $l15 << 12
20210427node in :[]
普通复制语句1112:$l16 = $l15 << 12
[taint source] u:$l15
SourceList:[]
[taint source] u:12
SourceList:[]
[taint source] u:$l15 << 12
SourceList:[]
20210427node out :[]
20210427node :$l17 = $l14 | $l16
20210427node in :[]
普通复制语句1112:$l17 = $l14 | $l16
[taint source] u:$l14
SourceList:[]
[taint source] u:$l16
SourceList:[]
[taint source] u:$l14 | $l16
SourceList:[]
20210427node out :[]
20210427node :$l18 = <invoker.SnowFlake: long sequence>
20210427node in :[]
普通复制语句1112:$l18 = <invoker.SnowFlake: long sequence>
[taint source] u:<invoker.SnowFlake: long sequence>
SourceList:[]
20210427node out :[]
20210427node :$l19 = $l17 | $l18
20210427node in :[]
普通复制语句1112:$l19 = $l17 | $l18
[taint source] u:$l17
SourceList:[]
[taint source] u:$l18
SourceList:[]
[taint source] u:$l17 | $l18
SourceList:[]
20210427node out :[]
20210427node :return $l19
20210427node in :[]
20210427node out :[]
20210427node :$r0 = new java.lang.RuntimeException
20210427node in :[]
普通复制语句1112:$r0 = new java.lang.RuntimeException
[taint source] u:new java.lang.RuntimeException
SourceList:[]
20210427node out :[]
20210427node :specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Clock moved backwards.  Refusing to generate id")
20210427node in :[]
20210427node out :[]
[taint329]i invoke specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Clock moved backwards.  Refusing to generate id")
[taint328]i invoke <java.lang.RuntimeException: void <init>(java.lang.String)>
[taint328]i invoke 1
value:"Clock moved backwards.  Refusing to generate id"
isoutSetContains  false value:"Clock moved backwards.  Refusing to generate id" index:0
20210427node :throw $r0
20210427node in :[]
20210427node out :[]
analysis.outSet.size():0
[CFMAP]2021 After taintAnalysis:{cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}
The data isgggg 
<invoker.SnowFlake: long nextId()>
The data isgggg invoker.SnowFlake nextId [] {cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}  {cfhider.WordCount$IntSumReducer={reduce=[I@350c764b}, cfhider.WordCount$TokenizerMapper={map=[I@13ac188d}, cfhider.WordCount={main=[I@2ebd21bf}, invoker.SnowFlake={<init>=[I@6ef7f337, getNextMill=[I@5880d8cb, getNewstmp=[I@731924d1}}
Coming...
doAnalysis Startingqqqqqqqq.....
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
[taint329]i invoke specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Clock moved backwards.  Refusing to generate id")
[taint328]i invoke <java.lang.RuntimeException: void <init>(java.lang.String)>
[taint328]i invoke 1
value:"Clock moved backwards.  Refusing to generate id"
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$r0 = new java.lang.RuntimeException
currStmt left value20210420:$r0
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$l19 = $l17 | $l18
currStmt left value20210420:$l19
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$l18 = <invoker.SnowFlake: long sequence>
currStmt left value20210420:$l18
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$l17 = $l14 | $l16
currStmt left value20210420:$l17
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$l16 = $l15 << 12
currStmt left value20210420:$l16
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$l15 = <invoker.SnowFlake: long machineId>
currStmt left value20210420:$l15
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$l14 = $l11 | $l13
currStmt left value20210420:$l14
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$l13 = $l12 << 17
currStmt left value20210420:$l13
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$l12 = <invoker.SnowFlake: long datacenterId>
currStmt left value20210420:$l12
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$l11 = $l10 << 22
currStmt left value20210420:$l11
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$l10 = l0 - 1480166465631L
currStmt left value20210420:$l10
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:<invoker.SnowFlake: long lastStmp> = l0
currStmt left value20210420:<invoker.SnowFlake: long lastStmp>
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:l0 = staticinvoke <invoker.SnowFlake: long getNextMill()>()
currStmt left value20210420:l0
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
Have
the value=$b9
the value=0
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$b9 = $l8 cmp 0L
currStmt left value20210420:$b9
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$l8 = <invoker.SnowFlake: long sequence>
currStmt left value20210420:$l8
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:<invoker.SnowFlake: long sequence> = $l7
currStmt left value20210420:<invoker.SnowFlake: long sequence>
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$l7 = $l6 & 4095L
currStmt left value20210420:$l7
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$l6 = $l5 + 1L
currStmt left value20210420:$l6
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$l5 = <invoker.SnowFlake: long sequence>
currStmt left value20210420:$l5
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:<invoker.SnowFlake: long sequence> = 0L
currStmt left value20210420:<invoker.SnowFlake: long sequence>
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
Have
the value=$b4
the value=0
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$b4 = l0 cmp $l3
currStmt left value20210420:$b4
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$l3 = <invoker.SnowFlake: long lastStmp>
currStmt left value20210420:$l3
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
Have
the value=$b2
the value=0
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$b2 = l0 cmp $l1
currStmt left value20210420:$b2
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$l1 = <invoker.SnowFlake: long lastStmp>
currStmt left value20210420:$l1
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:l0 = staticinvoke <invoker.SnowFlake: long getNewstmp()>()
currStmt left value20210420:l0
doAnalysis endqqqqqqq.....
come here
[CFMAP]2021 After BackwardAnalysis:{cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}
[taint into] sootMethod: getNextMill
[]
class name :invoker.SnowFlake
method name :getNextMill
method list :[]
clasname=invoker.SnowFlake
methodname=getNextMill
sourcelist2021=[]
20210427node :l0 = staticinvoke <invoker.SnowFlake: long getNewstmp()>()
20210427node in :[]
调用语句赋值给变量:l0 = staticinvoke <invoker.SnowFlake: long getNewstmp()>()
Invokestmt:getNewstmp
20210427node out :[]
[taint328]a invoke <invoker.SnowFlake: long getNewstmp()>
[taint328]a invoke 0
[invokemap]invoke:getNewstmp  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
20210427node :$l1 = <invoker.SnowFlake: long lastStmp>
20210427node in :[]
普通复制语句1112:$l1 = <invoker.SnowFlake: long lastStmp>
[taint source] u:<invoker.SnowFlake: long lastStmp>
SourceList:[]
20210427node out :[]
20210427node :$b2 = l0 cmp $l1
20210427node in :[]
普通复制语句1112:$b2 = l0 cmp $l1
[taint source] u:l0
SourceList:[]
[taint source] u:$l1
SourceList:[]
[taint source] u:l0 cmp $l1
SourceList:[]
20210427node out :[]
20210427node :if $b2 > 0 goto return l0
20210427node in :[]
20210427node out :[]
Have
Stmt if :if $b2 > 0 goto return l0Stmt if value:$b2 > 0the value=$b2
the value=0
maintainValues.size0
ifValues1
20210427node :return l0
20210427node in :[]
20210427node out :[]
20210427node :l0 = staticinvoke <invoker.SnowFlake: long getNewstmp()>()
20210427node in :[]
调用语句赋值给变量:l0 = staticinvoke <invoker.SnowFlake: long getNewstmp()>()
Invokestmt:getNewstmp
20210427node out :[]
[taint328]a invoke <invoker.SnowFlake: long getNewstmp()>
[taint328]a invoke 0
[invokemap]invoke:getNewstmp  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
20210427node :goto [?= $l1 = <invoker.SnowFlake: long lastStmp>]
20210427node in :[]
20210427node out :[]
analysis.outSet.size():0
[CFMAP]2021 After taintAnalysis:{cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}
The data isgggg 
<invoker.SnowFlake: long getNextMill()>
The data isgggg invoker.SnowFlake getNextMill [] {cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}  {cfhider.WordCount$IntSumReducer={reduce=[I@350c764b}, cfhider.WordCount$TokenizerMapper={map=[I@13ac188d}, cfhider.WordCount={main=[I@2ebd21bf}, invoker.SnowFlake={<init>=[I@6ef7f337, getNextMill=[I@5880d8cb, getNewstmp=[I@77c0505f}}
Coming...
doAnalysis Startingqqqqqqqq.....
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:l0 = staticinvoke <invoker.SnowFlake: long getNewstmp()>()
currStmt left value20210420:l0
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
Have
the value=$b2
the value=0
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$b2 = l0 cmp $l1
currStmt left value20210420:$b2
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$l1 = <invoker.SnowFlake: long lastStmp>
currStmt left value20210420:$l1
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:l0 = staticinvoke <invoker.SnowFlake: long getNewstmp()>()
currStmt left value20210420:l0
doAnalysis endqqqqqqq.....
come here
[CFMAP]2021 After BackwardAnalysis:{cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}
[taint into] sootMethod: getNewstmp
[]
class name :invoker.SnowFlake
method name :getNewstmp
method list :[]
clasname=invoker.SnowFlake
methodname=getNewstmp
sourcelist2021=[]
20210427node :$l0 = staticinvoke <java.lang.System: long currentTimeMillis()>()
20210427node in :[]
调用语句赋值给变量:$l0 = staticinvoke <java.lang.System: long currentTimeMillis()>()
20210427node out :[]
[taint328]a invoke <java.lang.System: long currentTimeMillis()>
[taint328]a invoke 0
20210427node :return $l0
20210427node in :[]
20210427node out :[]
analysis.outSet.size():0
[CFMAP]2021 After taintAnalysis:{cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}
The data isgggg 
<invoker.SnowFlake: long getNewstmp()>
The data isgggg invoker.SnowFlake getNewstmp [] {cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}  {cfhider.WordCount$IntSumReducer={reduce=[I@350c764b}, cfhider.WordCount$TokenizerMapper={map=[I@13ac188d}, cfhider.WordCount={main=[I@2ebd21bf}, invoker.SnowFlake={<init>=[I@6ef7f337, getNextMill=[I@5880d8cb, getNewstmp=[I@77c0505f}}
Coming...
doAnalysis Startingqqqqqqqq.....
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$l0 = staticinvoke <java.lang.System: long currentTimeMillis()>()
currStmt left value20210420:$l0
doAnalysis endqqqqqqq.....
come here
[CFMAP]2021 After BackwardAnalysis:{cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}
[taint into] sootMethod: <clinit>
[]
class name :invoker.SnowFlake
method name :<clinit>
method list :[]
clasname=invoker.SnowFlake
methodname=<clinit>
sourcelist2021=[]
20210427node :<invoker.SnowFlake: long sequence> = 0L
20210427node in :[]
普通复制语句1112:<invoker.SnowFlake: long sequence> = 0L
[taint source] u:0L
SourceList:[]
20210427node out :[]
20210427node :<invoker.SnowFlake: long lastStmp> = -1L
20210427node in :[]
普通复制语句1112:<invoker.SnowFlake: long lastStmp> = -1L
[taint source] u:-1L
SourceList:[]
20210427node out :[]
20210427node :return
20210427node in :[]
20210427node out :[]
analysis.outSet.size():0
[CFMAP]2021 After taintAnalysis:{cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}
The data isgggg 
<invoker.SnowFlake: void <clinit>()>
The data isgggg invoker.SnowFlake <clinit> [] {cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}  {cfhider.WordCount$IntSumReducer={reduce=[I@350c764b}, cfhider.WordCount$TokenizerMapper={map=[I@13ac188d}, cfhider.WordCount={main=[I@2ebd21bf}, invoker.SnowFlake={<init>=[I@6ef7f337, getNextMill=[I@5880d8cb, getNewstmp=[I@77c0505f}}
Coming...
doAnalysis Startingqqqqqqqq.....
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:<invoker.SnowFlake: long lastStmp> = -1L
currStmt left value20210420:<invoker.SnowFlake: long lastStmp>
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:<invoker.SnowFlake: long sequence> = 0L
currStmt left value20210420:<invoker.SnowFlake: long sequence>
doAnalysis endqqqqqqq.....
come here
[CFMAP]2021 After BackwardAnalysis:{cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}
[taint into] sootMethod: <init>
[]
class name :invoker.SnowFlake
method name :<init>
method list :[]
clasname=invoker.SnowFlake
methodname=<init>
sourcelist2021=[]
20210427node :r0 := @this: invoker.SnowFlake
20210427node in :[]
20210427node out :[]
currStmt20210423:r0 := @this: invoker.SnowFlake
20210427node :l0 := @parameter0: long
20210427node in :[]
[idStmt]iiiiiii l0 := @parameter0: long  index:0
ClassName:invoker.SnowFlake
MethodName:<init>
aaaa:0
20210427node out :[]
currStmt20210423:l0 := @parameter0: long
20210427node :l1 := @parameter1: long
20210427node in :[]
[idStmt]iiiiiii l1 := @parameter1: long  index:1
ClassName:invoker.SnowFlake
MethodName:<init>
aaaa:0
20210427node out :[]
currStmt20210423:l1 := @parameter1: long
20210427node :specialinvoke r0.<java.lang.Object: void <init>()>()
20210427node in :[]
20210427node out :[]
[taint329]i invoke specialinvoke r0.<java.lang.Object: void <init>()>()
[taint328]i invoke <java.lang.Object: void <init>()>
[taint328]i invoke 0
20210427node :$b2 = l0 cmp 31L
20210427node in :[]
普通复制语句1112:$b2 = l0 cmp 31L
[taint source] u:l0
SourceList:[]
[taint source] u:31L
SourceList:[]
[taint source] u:l0 cmp 31L
SourceList:[]
20210427node out :[]
20210427node :if $b2 > 0 goto $r1 = new java.lang.IllegalArgumentException
20210427node in :[]
20210427node out :[]
Have
Stmt if :if $b2 > 0 goto $r1 = new java.lang.IllegalArgumentExceptionStmt if value:$b2 > 0the value=$b2
the value=0
maintainValues.size0
ifValues1
20210427node :$b3 = l0 cmp 0L
20210427node in :[]
普通复制语句1112:$b3 = l0 cmp 0L
[taint source] u:l0
SourceList:[]
[taint source] u:0L
SourceList:[]
[taint source] u:l0 cmp 0L
SourceList:[]
20210427node out :[]
20210427node :if $b3 >= 0 goto $b4 = l1 cmp 31L
20210427node in :[]
20210427node out :[]
Have
Stmt if :if $b3 >= 0 goto $b4 = l1 cmp 31LStmt if value:$b3 >= 0the value=$b3
the value=0
maintainValues.size0
ifValues1
20210427node :$b4 = l1 cmp 31L
20210427node in :[]
普通复制语句1112:$b4 = l1 cmp 31L
[taint source] u:l1
SourceList:[]
[taint source] u:31L
SourceList:[]
[taint source] u:l1 cmp 31L
SourceList:[]
20210427node out :[]
20210427node :if $b4 > 0 goto $r2 = new java.lang.IllegalArgumentException
20210427node in :[]
20210427node out :[]
Have
Stmt if :if $b4 > 0 goto $r2 = new java.lang.IllegalArgumentExceptionStmt if value:$b4 > 0the value=$b4
the value=0
maintainValues.size0
ifValues1
20210427node :$b5 = l1 cmp 0L
20210427node in :[]
普通复制语句1112:$b5 = l1 cmp 0L
[taint source] u:l1
SourceList:[]
[taint source] u:0L
SourceList:[]
[taint source] u:l1 cmp 0L
SourceList:[]
20210427node out :[]
20210427node :if $b5 >= 0 goto <invoker.SnowFlake: long datacenterId> = 0L
20210427node in :[]
20210427node out :[]
Have
Stmt if :if $b5 >= 0 goto <invoker.SnowFlake: long datacenterId> = 0LStmt if value:$b5 >= 0the value=$b5
the value=0
maintainValues.size0
ifValues1
20210427node :<invoker.SnowFlake: long datacenterId> = 0L
20210427node in :[]
普通复制语句1112:<invoker.SnowFlake: long datacenterId> = 0L
[taint source] u:0L
SourceList:[]
20210427node out :[]
20210427node :<invoker.SnowFlake: long machineId> = 0L
20210427node in :[]
普通复制语句1112:<invoker.SnowFlake: long machineId> = 0L
[taint source] u:0L
SourceList:[]
20210427node out :[]
20210427node :return
20210427node in :[]
20210427node out :[]
20210427node :$r2 = new java.lang.IllegalArgumentException
20210427node in :[]
普通复制语句1112:$r2 = new java.lang.IllegalArgumentException
[taint source] u:new java.lang.IllegalArgumentException
SourceList:[]
20210427node out :[]
20210427node :specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("machineId can\'t be greater than MAX_MACHINE_NUM or less than 0")
20210427node in :[]
20210427node out :[]
[taint329]i invoke specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("machineId can\'t be greater than MAX_MACHINE_NUM or less than 0")
[taint328]i invoke <java.lang.IllegalArgumentException: void <init>(java.lang.String)>
[taint328]i invoke 1
value:"machineId can\'t be greater than MAX_MACHINE_NUM or less than 0"
isoutSetContains  false value:"machineId can\'t be greater than MAX_MACHINE_NUM or less than 0" index:0
20210427node :throw $r2
20210427node in :[]
20210427node out :[]
20210427node :$r1 = new java.lang.IllegalArgumentException
20210427node in :[]
普通复制语句1112:$r1 = new java.lang.IllegalArgumentException
[taint source] u:new java.lang.IllegalArgumentException
SourceList:[]
20210427node out :[]
20210427node :specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("datacenterId can\'t be greater than MAX_DATACENTER_NUM or less than 0")
20210427node in :[]
20210427node out :[]
[taint329]i invoke specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("datacenterId can\'t be greater than MAX_DATACENTER_NUM or less than 0")
[taint328]i invoke <java.lang.IllegalArgumentException: void <init>(java.lang.String)>
[taint328]i invoke 1
value:"datacenterId can\'t be greater than MAX_DATACENTER_NUM or less than 0"
isoutSetContains  false value:"datacenterId can\'t be greater than MAX_DATACENTER_NUM or less than 0" index:0
20210427node :throw $r1
20210427node in :[]
20210427node out :[]
analysis.outSet.size():0
[CFMAP]2021 After taintAnalysis:{cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}
The data isgggg 
<invoker.SnowFlake: void <init>(long,long)>
The data isgggg invoker.SnowFlake <init> [] {cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}  {cfhider.WordCount$IntSumReducer={reduce=[I@350c764b}, cfhider.WordCount$TokenizerMapper={map=[I@13ac188d}, cfhider.WordCount={main=[I@2ebd21bf}, invoker.SnowFlake={<init>=[I@72dcca64, getNextMill=[I@5880d8cb, getNewstmp=[I@77c0505f}}
Coming...
doAnalysis Startingqqqqqqqq.....
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
[taint329]i invoke specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("datacenterId can\'t be greater than MAX_DATACENTER_NUM or less than 0")
[taint328]i invoke <java.lang.IllegalArgumentException: void <init>(java.lang.String)>
[taint328]i invoke 1
value:"datacenterId can\'t be greater than MAX_DATACENTER_NUM or less than 0"
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$r1 = new java.lang.IllegalArgumentException
currStmt left value20210420:$r1
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
[taint329]i invoke specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("machineId can\'t be greater than MAX_MACHINE_NUM or less than 0")
[taint328]i invoke <java.lang.IllegalArgumentException: void <init>(java.lang.String)>
[taint328]i invoke 1
value:"machineId can\'t be greater than MAX_MACHINE_NUM or less than 0"
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$r2 = new java.lang.IllegalArgumentException
currStmt left value20210420:$r2
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:<invoker.SnowFlake: long machineId> = 0L
currStmt left value20210420:<invoker.SnowFlake: long machineId>
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:<invoker.SnowFlake: long datacenterId> = 0L
currStmt left value20210420:<invoker.SnowFlake: long datacenterId>
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
Have
the value=$b5
the value=0
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$b5 = l1 cmp 0L
currStmt left value20210420:$b5
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
Have
the value=$b4
the value=0
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$b4 = l1 cmp 31L
currStmt left value20210420:$b4
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
Have
the value=$b3
the value=0
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$b3 = l0 cmp 0L
currStmt left value20210420:$b3
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
Have
the value=$b2
the value=0
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$b2 = l0 cmp 31L
currStmt left value20210420:$b2
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
[taint329]i invoke specialinvoke r0.<java.lang.Object: void <init>()>()
[taint328]i invoke <java.lang.Object: void <init>()>
[taint328]i invoke 0
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
doAnalysis endqqqqqqq.....
come here
[CFMAP]2021 After BackwardAnalysis:{cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}
[taint into] sootMethod: nextId
[]
class name :invoker.SnowFlake
method name :nextId
method list :[]
clasname=invoker.SnowFlake
methodname=nextId
sourcelist2021=[]
20210427node :l0 = staticinvoke <invoker.SnowFlake: long getNewstmp()>()
20210427node in :[]
调用语句赋值给变量:l0 = staticinvoke <invoker.SnowFlake: long getNewstmp()>()
Invokestmt:getNewstmp
20210427node out :[]
[taint328]a invoke <invoker.SnowFlake: long getNewstmp()>
[taint328]a invoke 0
[invokemap]invoke:getNewstmp  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
20210427node :$l1 = <invoker.SnowFlake: long lastStmp>
20210427node in :[]
普通复制语句1112:$l1 = <invoker.SnowFlake: long lastStmp>
[taint source] u:<invoker.SnowFlake: long lastStmp>
SourceList:[]
20210427node out :[]
20210427node :$b2 = l0 cmp $l1
20210427node in :[]
普通复制语句1112:$b2 = l0 cmp $l1
[taint source] u:l0
SourceList:[]
[taint source] u:$l1
SourceList:[]
[taint source] u:l0 cmp $l1
SourceList:[]
20210427node out :[]
20210427node :if $b2 >= 0 goto $l3 = <invoker.SnowFlake: long lastStmp>
20210427node in :[]
20210427node out :[]
Have
Stmt if :if $b2 >= 0 goto $l3 = <invoker.SnowFlake: long lastStmp>Stmt if value:$b2 >= 0the value=$b2
the value=0
maintainValues.size0
ifValues1
20210427node :$l3 = <invoker.SnowFlake: long lastStmp>
20210427node in :[]
普通复制语句1112:$l3 = <invoker.SnowFlake: long lastStmp>
[taint source] u:<invoker.SnowFlake: long lastStmp>
SourceList:[]
20210427node out :[]
20210427node :$b4 = l0 cmp $l3
20210427node in :[]
普通复制语句1112:$b4 = l0 cmp $l3
[taint source] u:l0
SourceList:[]
[taint source] u:$l3
SourceList:[]
[taint source] u:l0 cmp $l3
SourceList:[]
20210427node out :[]
20210427node :if $b4 != 0 goto <invoker.SnowFlake: long sequence> = 0L
20210427node in :[]
20210427node out :[]
Have
Stmt if :if $b4 != 0 goto <invoker.SnowFlake: long sequence> = 0LStmt if value:$b4 != 0the value=$b4
the value=0
maintainValues.size0
ifValues1
20210427node :<invoker.SnowFlake: long sequence> = 0L
20210427node in :[]
普通复制语句1112:<invoker.SnowFlake: long sequence> = 0L
[taint source] u:0L
SourceList:[]
20210427node out :[]
20210427node :$l5 = <invoker.SnowFlake: long sequence>
20210427node in :[]
普通复制语句1112:$l5 = <invoker.SnowFlake: long sequence>
[taint source] u:<invoker.SnowFlake: long sequence>
SourceList:[]
20210427node out :[]
20210427node :$l6 = $l5 + 1L
20210427node in :[]
普通复制语句1112:$l6 = $l5 + 1L
[taint source] u:$l5
SourceList:[]
[taint source] u:1L
SourceList:[]
[taint source] u:$l5 + 1L
SourceList:[]
20210427node out :[]
20210427node :$l7 = $l6 & 4095L
20210427node in :[]
普通复制语句1112:$l7 = $l6 & 4095L
[taint source] u:$l6
SourceList:[]
[taint source] u:4095L
SourceList:[]
[taint source] u:$l6 & 4095L
SourceList:[]
20210427node out :[]
20210427node :<invoker.SnowFlake: long sequence> = $l7
20210427node in :[]
普通复制语句1112:<invoker.SnowFlake: long sequence> = $l7
[taint source] u:$l7
SourceList:[]
20210427node out :[]
20210427node :$l8 = <invoker.SnowFlake: long sequence>
20210427node in :[]
普通复制语句1112:$l8 = <invoker.SnowFlake: long sequence>
[taint source] u:<invoker.SnowFlake: long sequence>
SourceList:[]
20210427node out :[]
20210427node :$b9 = $l8 cmp 0L
20210427node in :[]
普通复制语句1112:$b9 = $l8 cmp 0L
[taint source] u:$l8
SourceList:[]
[taint source] u:0L
SourceList:[]
[taint source] u:$l8 cmp 0L
SourceList:[]
20210427node out :[]
20210427node :if $b9 != 0 goto <invoker.SnowFlake: long lastStmp> = l0
20210427node in :[]
20210427node out :[]
Have
Stmt if :if $b9 != 0 goto <invoker.SnowFlake: long lastStmp> = l0Stmt if value:$b9 != 0the value=$b9
the value=0
maintainValues.size0
ifValues1
20210427node :l0 = staticinvoke <invoker.SnowFlake: long getNextMill()>()
20210427node in :[]
调用语句赋值给变量:l0 = staticinvoke <invoker.SnowFlake: long getNextMill()>()
Invokestmt:getNextMill
20210427node out :[]
[taint328]a invoke <invoker.SnowFlake: long getNextMill()>
[taint328]a invoke 0
[invokemap]invoke:getNextMill  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
20210427node :goto [?= <invoker.SnowFlake: long lastStmp> = l0]
20210427node in :[]
20210427node out :[]
20210427node :<invoker.SnowFlake: long lastStmp> = l0
20210427node in :[]
普通复制语句1112:<invoker.SnowFlake: long lastStmp> = l0
[taint source] u:l0
SourceList:[]
20210427node out :[]
20210427node :$l10 = l0 - 1480166465631L
20210427node in :[]
普通复制语句1112:$l10 = l0 - 1480166465631L
[taint source] u:l0
SourceList:[]
[taint source] u:1480166465631L
SourceList:[]
[taint source] u:l0 - 1480166465631L
SourceList:[]
20210427node out :[]
20210427node :$l11 = $l10 << 22
20210427node in :[]
普通复制语句1112:$l11 = $l10 << 22
[taint source] u:$l10
SourceList:[]
[taint source] u:22
SourceList:[]
[taint source] u:$l10 << 22
SourceList:[]
20210427node out :[]
20210427node :$l12 = <invoker.SnowFlake: long datacenterId>
20210427node in :[]
普通复制语句1112:$l12 = <invoker.SnowFlake: long datacenterId>
[taint source] u:<invoker.SnowFlake: long datacenterId>
SourceList:[]
20210427node out :[]
20210427node :$l13 = $l12 << 17
20210427node in :[]
普通复制语句1112:$l13 = $l12 << 17
[taint source] u:$l12
SourceList:[]
[taint source] u:17
SourceList:[]
[taint source] u:$l12 << 17
SourceList:[]
20210427node out :[]
20210427node :$l14 = $l11 | $l13
20210427node in :[]
普通复制语句1112:$l14 = $l11 | $l13
[taint source] u:$l11
SourceList:[]
[taint source] u:$l13
SourceList:[]
[taint source] u:$l11 | $l13
SourceList:[]
20210427node out :[]
20210427node :$l15 = <invoker.SnowFlake: long machineId>
20210427node in :[]
普通复制语句1112:$l15 = <invoker.SnowFlake: long machineId>
[taint source] u:<invoker.SnowFlake: long machineId>
SourceList:[]
20210427node out :[]
20210427node :$l16 = $l15 << 12
20210427node in :[]
普通复制语句1112:$l16 = $l15 << 12
[taint source] u:$l15
SourceList:[]
[taint source] u:12
SourceList:[]
[taint source] u:$l15 << 12
SourceList:[]
20210427node out :[]
20210427node :$l17 = $l14 | $l16
20210427node in :[]
普通复制语句1112:$l17 = $l14 | $l16
[taint source] u:$l14
SourceList:[]
[taint source] u:$l16
SourceList:[]
[taint source] u:$l14 | $l16
SourceList:[]
20210427node out :[]
20210427node :$l18 = <invoker.SnowFlake: long sequence>
20210427node in :[]
普通复制语句1112:$l18 = <invoker.SnowFlake: long sequence>
[taint source] u:<invoker.SnowFlake: long sequence>
SourceList:[]
20210427node out :[]
20210427node :$l19 = $l17 | $l18
20210427node in :[]
普通复制语句1112:$l19 = $l17 | $l18
[taint source] u:$l17
SourceList:[]
[taint source] u:$l18
SourceList:[]
[taint source] u:$l17 | $l18
SourceList:[]
20210427node out :[]
20210427node :return $l19
20210427node in :[]
20210427node out :[]
20210427node :$r0 = new java.lang.RuntimeException
20210427node in :[]
普通复制语句1112:$r0 = new java.lang.RuntimeException
[taint source] u:new java.lang.RuntimeException
SourceList:[]
20210427node out :[]
20210427node :specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Clock moved backwards.  Refusing to generate id")
20210427node in :[]
20210427node out :[]
[taint329]i invoke specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Clock moved backwards.  Refusing to generate id")
[taint328]i invoke <java.lang.RuntimeException: void <init>(java.lang.String)>
[taint328]i invoke 1
value:"Clock moved backwards.  Refusing to generate id"
isoutSetContains  false value:"Clock moved backwards.  Refusing to generate id" index:0
20210427node :throw $r0
20210427node in :[]
20210427node out :[]
analysis.outSet.size():0
[CFMAP]2021 After taintAnalysis:{cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}
The data isgggg 
<invoker.SnowFlake: long nextId()>
The data isgggg invoker.SnowFlake nextId [] {cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}  {cfhider.WordCount$IntSumReducer={reduce=[I@350c764b}, cfhider.WordCount$TokenizerMapper={map=[I@13ac188d}, cfhider.WordCount={main=[I@2ebd21bf}, invoker.SnowFlake={<init>=[I@72dcca64, getNextMill=[I@7d6ba625, getNewstmp=[I@26690777}}
Coming...
doAnalysis Startingqqqqqqqq.....
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
[taint329]i invoke specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Clock moved backwards.  Refusing to generate id")
[taint328]i invoke <java.lang.RuntimeException: void <init>(java.lang.String)>
[taint328]i invoke 1
value:"Clock moved backwards.  Refusing to generate id"
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$r0 = new java.lang.RuntimeException
currStmt left value20210420:$r0
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$l19 = $l17 | $l18
currStmt left value20210420:$l19
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$l18 = <invoker.SnowFlake: long sequence>
currStmt left value20210420:$l18
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$l17 = $l14 | $l16
currStmt left value20210420:$l17
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$l16 = $l15 << 12
currStmt left value20210420:$l16
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$l15 = <invoker.SnowFlake: long machineId>
currStmt left value20210420:$l15
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$l14 = $l11 | $l13
currStmt left value20210420:$l14
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$l13 = $l12 << 17
currStmt left value20210420:$l13
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$l12 = <invoker.SnowFlake: long datacenterId>
currStmt left value20210420:$l12
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$l11 = $l10 << 22
currStmt left value20210420:$l11
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$l10 = l0 - 1480166465631L
currStmt left value20210420:$l10
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:<invoker.SnowFlake: long lastStmp> = l0
currStmt left value20210420:<invoker.SnowFlake: long lastStmp>
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:l0 = staticinvoke <invoker.SnowFlake: long getNextMill()>()
currStmt left value20210420:l0
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
Have
the value=$b9
the value=0
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$b9 = $l8 cmp 0L
currStmt left value20210420:$b9
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$l8 = <invoker.SnowFlake: long sequence>
currStmt left value20210420:$l8
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:<invoker.SnowFlake: long sequence> = $l7
currStmt left value20210420:<invoker.SnowFlake: long sequence>
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$l7 = $l6 & 4095L
currStmt left value20210420:$l7
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$l6 = $l5 + 1L
currStmt left value20210420:$l6
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$l5 = <invoker.SnowFlake: long sequence>
currStmt left value20210420:$l5
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:<invoker.SnowFlake: long sequence> = 0L
currStmt left value20210420:<invoker.SnowFlake: long sequence>
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
Have
the value=$b4
the value=0
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$b4 = l0 cmp $l3
currStmt left value20210420:$b4
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$l3 = <invoker.SnowFlake: long lastStmp>
currStmt left value20210420:$l3
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
Have
the value=$b2
the value=0
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$b2 = l0 cmp $l1
currStmt left value20210420:$b2
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$l1 = <invoker.SnowFlake: long lastStmp>
currStmt left value20210420:$l1
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:l0 = staticinvoke <invoker.SnowFlake: long getNewstmp()>()
currStmt left value20210420:l0
doAnalysis endqqqqqqq.....
come here
[CFMAP]2021 After BackwardAnalysis:{cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}
[taint into] sootMethod: getNextMill
[]
class name :invoker.SnowFlake
method name :getNextMill
method list :[]
clasname=invoker.SnowFlake
methodname=getNextMill
sourcelist2021=[]
20210427node :l0 = staticinvoke <invoker.SnowFlake: long getNewstmp()>()
20210427node in :[]
调用语句赋值给变量:l0 = staticinvoke <invoker.SnowFlake: long getNewstmp()>()
Invokestmt:getNewstmp
20210427node out :[]
[taint328]a invoke <invoker.SnowFlake: long getNewstmp()>
[taint328]a invoke 0
[invokemap]invoke:getNewstmp  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
20210427node :$l1 = <invoker.SnowFlake: long lastStmp>
20210427node in :[]
普通复制语句1112:$l1 = <invoker.SnowFlake: long lastStmp>
[taint source] u:<invoker.SnowFlake: long lastStmp>
SourceList:[]
20210427node out :[]
20210427node :$b2 = l0 cmp $l1
20210427node in :[]
普通复制语句1112:$b2 = l0 cmp $l1
[taint source] u:l0
SourceList:[]
[taint source] u:$l1
SourceList:[]
[taint source] u:l0 cmp $l1
SourceList:[]
20210427node out :[]
20210427node :if $b2 > 0 goto return l0
20210427node in :[]
20210427node out :[]
Have
Stmt if :if $b2 > 0 goto return l0Stmt if value:$b2 > 0the value=$b2
the value=0
maintainValues.size0
ifValues1
20210427node :return l0
20210427node in :[]
20210427node out :[]
20210427node :l0 = staticinvoke <invoker.SnowFlake: long getNewstmp()>()
20210427node in :[]
调用语句赋值给变量:l0 = staticinvoke <invoker.SnowFlake: long getNewstmp()>()
Invokestmt:getNewstmp
20210427node out :[]
[taint328]a invoke <invoker.SnowFlake: long getNewstmp()>
[taint328]a invoke 0
[invokemap]invoke:getNewstmp  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
20210427node :goto [?= $l1 = <invoker.SnowFlake: long lastStmp>]
20210427node in :[]
20210427node out :[]
analysis.outSet.size():0
[CFMAP]2021 After taintAnalysis:{cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}
The data isgggg 
<invoker.SnowFlake: long getNextMill()>
The data isgggg invoker.SnowFlake getNextMill [] {cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}  {cfhider.WordCount$IntSumReducer={reduce=[I@350c764b}, cfhider.WordCount$TokenizerMapper={map=[I@13ac188d}, cfhider.WordCount={main=[I@2ebd21bf}, invoker.SnowFlake={<init>=[I@72dcca64, getNextMill=[I@7d6ba625, getNewstmp=[I@39692954}}
Coming...
doAnalysis Startingqqqqqqqq.....
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:l0 = staticinvoke <invoker.SnowFlake: long getNewstmp()>()
currStmt left value20210420:l0
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
Have
the value=$b2
the value=0
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$b2 = l0 cmp $l1
currStmt left value20210420:$b2
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$l1 = <invoker.SnowFlake: long lastStmp>
currStmt left value20210420:$l1
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:l0 = staticinvoke <invoker.SnowFlake: long getNewstmp()>()
currStmt left value20210420:l0
doAnalysis endqqqqqqq.....
come here
[CFMAP]2021 After BackwardAnalysis:{cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}
[taint into] sootMethod: getNewstmp
[]
class name :invoker.SnowFlake
method name :getNewstmp
method list :[]
clasname=invoker.SnowFlake
methodname=getNewstmp
sourcelist2021=[]
20210427node :$l0 = staticinvoke <java.lang.System: long currentTimeMillis()>()
20210427node in :[]
调用语句赋值给变量:$l0 = staticinvoke <java.lang.System: long currentTimeMillis()>()
20210427node out :[]
[taint328]a invoke <java.lang.System: long currentTimeMillis()>
[taint328]a invoke 0
20210427node :return $l0
20210427node in :[]
20210427node out :[]
analysis.outSet.size():0
[CFMAP]2021 After taintAnalysis:{cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}
The data isgggg 
<invoker.SnowFlake: long getNewstmp()>
The data isgggg invoker.SnowFlake getNewstmp [] {cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}  {cfhider.WordCount$IntSumReducer={reduce=[I@350c764b}, cfhider.WordCount$TokenizerMapper={map=[I@13ac188d}, cfhider.WordCount={main=[I@2ebd21bf}, invoker.SnowFlake={<init>=[I@72dcca64, getNextMill=[I@7d6ba625, getNewstmp=[I@39692954}}
Coming...
doAnalysis Startingqqqqqqqq.....
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$l0 = staticinvoke <java.lang.System: long currentTimeMillis()>()
currStmt left value20210420:$l0
doAnalysis endqqqqqqq.....
come here
[CFMAP]2021 After BackwardAnalysis:{cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}
[taint into] sootMethod: <clinit>
[]
class name :invoker.SnowFlake
method name :<clinit>
method list :[]
clasname=invoker.SnowFlake
methodname=<clinit>
sourcelist2021=[]
20210427node :<invoker.SnowFlake: long sequence> = 0L
20210427node in :[]
普通复制语句1112:<invoker.SnowFlake: long sequence> = 0L
[taint source] u:0L
SourceList:[]
20210427node out :[]
20210427node :<invoker.SnowFlake: long lastStmp> = -1L
20210427node in :[]
普通复制语句1112:<invoker.SnowFlake: long lastStmp> = -1L
[taint source] u:-1L
SourceList:[]
20210427node out :[]
20210427node :return
20210427node in :[]
20210427node out :[]
analysis.outSet.size():0
[CFMAP]2021 After taintAnalysis:{cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}
The data isgggg 
<invoker.SnowFlake: void <clinit>()>
The data isgggg invoker.SnowFlake <clinit> [] {cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}  {cfhider.WordCount$IntSumReducer={reduce=[I@350c764b}, cfhider.WordCount$TokenizerMapper={map=[I@13ac188d}, cfhider.WordCount={main=[I@2ebd21bf}, invoker.SnowFlake={<init>=[I@72dcca64, getNextMill=[I@7d6ba625, getNewstmp=[I@39692954}}
Coming...
doAnalysis Startingqqqqqqqq.....
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:<invoker.SnowFlake: long lastStmp> = -1L
currStmt left value20210420:<invoker.SnowFlake: long lastStmp>
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:<invoker.SnowFlake: long sequence> = 0L
currStmt left value20210420:<invoker.SnowFlake: long sequence>
doAnalysis endqqqqqqq.....
come here
[CFMAP]2021 After BackwardAnalysis:{cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}
[taint into] sootMethod: <init>
[]
class name :invoker.SnowFlake
method name :<init>
method list :[]
clasname=invoker.SnowFlake
methodname=<init>
sourcelist2021=[]
20210427node :r0 := @this: invoker.SnowFlake
20210427node in :[]
20210427node out :[]
currStmt20210423:r0 := @this: invoker.SnowFlake
20210427node :l0 := @parameter0: long
20210427node in :[]
[idStmt]iiiiiii l0 := @parameter0: long  index:0
ClassName:invoker.SnowFlake
MethodName:<init>
aaaa:0
20210427node out :[]
currStmt20210423:l0 := @parameter0: long
20210427node :l1 := @parameter1: long
20210427node in :[]
[idStmt]iiiiiii l1 := @parameter1: long  index:1
ClassName:invoker.SnowFlake
MethodName:<init>
aaaa:0
20210427node out :[]
currStmt20210423:l1 := @parameter1: long
20210427node :specialinvoke r0.<java.lang.Object: void <init>()>()
20210427node in :[]
20210427node out :[]
[taint329]i invoke specialinvoke r0.<java.lang.Object: void <init>()>()
[taint328]i invoke <java.lang.Object: void <init>()>
[taint328]i invoke 0
20210427node :$b2 = l0 cmp 31L
20210427node in :[]
普通复制语句1112:$b2 = l0 cmp 31L
[taint source] u:l0
SourceList:[]
[taint source] u:31L
SourceList:[]
[taint source] u:l0 cmp 31L
SourceList:[]
20210427node out :[]
20210427node :if $b2 > 0 goto $r1 = new java.lang.IllegalArgumentException
20210427node in :[]
20210427node out :[]
Have
Stmt if :if $b2 > 0 goto $r1 = new java.lang.IllegalArgumentExceptionStmt if value:$b2 > 0the value=$b2
the value=0
maintainValues.size0
ifValues1
20210427node :$b3 = l0 cmp 0L
20210427node in :[]
普通复制语句1112:$b3 = l0 cmp 0L
[taint source] u:l0
SourceList:[]
[taint source] u:0L
SourceList:[]
[taint source] u:l0 cmp 0L
SourceList:[]
20210427node out :[]
20210427node :if $b3 >= 0 goto $b4 = l1 cmp 31L
20210427node in :[]
20210427node out :[]
Have
Stmt if :if $b3 >= 0 goto $b4 = l1 cmp 31LStmt if value:$b3 >= 0the value=$b3
the value=0
maintainValues.size0
ifValues1
20210427node :$b4 = l1 cmp 31L
20210427node in :[]
普通复制语句1112:$b4 = l1 cmp 31L
[taint source] u:l1
SourceList:[]
[taint source] u:31L
SourceList:[]
[taint source] u:l1 cmp 31L
SourceList:[]
20210427node out :[]
20210427node :if $b4 > 0 goto $r2 = new java.lang.IllegalArgumentException
20210427node in :[]
20210427node out :[]
Have
Stmt if :if $b4 > 0 goto $r2 = new java.lang.IllegalArgumentExceptionStmt if value:$b4 > 0the value=$b4
the value=0
maintainValues.size0
ifValues1
20210427node :$b5 = l1 cmp 0L
20210427node in :[]
普通复制语句1112:$b5 = l1 cmp 0L
[taint source] u:l1
SourceList:[]
[taint source] u:0L
SourceList:[]
[taint source] u:l1 cmp 0L
SourceList:[]
20210427node out :[]
20210427node :if $b5 >= 0 goto <invoker.SnowFlake: long datacenterId> = 0L
20210427node in :[]
20210427node out :[]
Have
Stmt if :if $b5 >= 0 goto <invoker.SnowFlake: long datacenterId> = 0LStmt if value:$b5 >= 0the value=$b5
the value=0
maintainValues.size0
ifValues1
20210427node :<invoker.SnowFlake: long datacenterId> = 0L
20210427node in :[]
普通复制语句1112:<invoker.SnowFlake: long datacenterId> = 0L
[taint source] u:0L
SourceList:[]
20210427node out :[]
20210427node :<invoker.SnowFlake: long machineId> = 0L
20210427node in :[]
普通复制语句1112:<invoker.SnowFlake: long machineId> = 0L
[taint source] u:0L
SourceList:[]
20210427node out :[]
20210427node :return
20210427node in :[]
20210427node out :[]
20210427node :$r2 = new java.lang.IllegalArgumentException
20210427node in :[]
普通复制语句1112:$r2 = new java.lang.IllegalArgumentException
[taint source] u:new java.lang.IllegalArgumentException
SourceList:[]
20210427node out :[]
20210427node :specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("machineId can\'t be greater than MAX_MACHINE_NUM or less than 0")
20210427node in :[]
20210427node out :[]
[taint329]i invoke specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("machineId can\'t be greater than MAX_MACHINE_NUM or less than 0")
[taint328]i invoke <java.lang.IllegalArgumentException: void <init>(java.lang.String)>
[taint328]i invoke 1
value:"machineId can\'t be greater than MAX_MACHINE_NUM or less than 0"
isoutSetContains  false value:"machineId can\'t be greater than MAX_MACHINE_NUM or less than 0" index:0
20210427node :throw $r2
20210427node in :[]
20210427node out :[]
20210427node :$r1 = new java.lang.IllegalArgumentException
20210427node in :[]
普通复制语句1112:$r1 = new java.lang.IllegalArgumentException
[taint source] u:new java.lang.IllegalArgumentException
SourceList:[]
20210427node out :[]
20210427node :specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("datacenterId can\'t be greater than MAX_DATACENTER_NUM or less than 0")
20210427node in :[]
20210427node out :[]
[taint329]i invoke specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("datacenterId can\'t be greater than MAX_DATACENTER_NUM or less than 0")
[taint328]i invoke <java.lang.IllegalArgumentException: void <init>(java.lang.String)>
[taint328]i invoke 1
value:"datacenterId can\'t be greater than MAX_DATACENTER_NUM or less than 0"
isoutSetContains  false value:"datacenterId can\'t be greater than MAX_DATACENTER_NUM or less than 0" index:0
20210427node :throw $r1
20210427node in :[]
20210427node out :[]
analysis.outSet.size():0
[CFMAP]2021 After taintAnalysis:{cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}
The data isgggg 
<invoker.SnowFlake: void <init>(long,long)>
The data isgggg invoker.SnowFlake <init> [] {cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}  {cfhider.WordCount$IntSumReducer={reduce=[I@350c764b}, cfhider.WordCount$TokenizerMapper={map=[I@13ac188d}, cfhider.WordCount={main=[I@2ebd21bf}, invoker.SnowFlake={<init>=[I@2718673e, getNextMill=[I@7d6ba625, getNewstmp=[I@39692954}}
Coming...
doAnalysis Startingqqqqqqqq.....
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
[taint329]i invoke specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("datacenterId can\'t be greater than MAX_DATACENTER_NUM or less than 0")
[taint328]i invoke <java.lang.IllegalArgumentException: void <init>(java.lang.String)>
[taint328]i invoke 1
value:"datacenterId can\'t be greater than MAX_DATACENTER_NUM or less than 0"
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$r1 = new java.lang.IllegalArgumentException
currStmt left value20210420:$r1
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
[taint329]i invoke specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("machineId can\'t be greater than MAX_MACHINE_NUM or less than 0")
[taint328]i invoke <java.lang.IllegalArgumentException: void <init>(java.lang.String)>
[taint328]i invoke 1
value:"machineId can\'t be greater than MAX_MACHINE_NUM or less than 0"
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$r2 = new java.lang.IllegalArgumentException
currStmt left value20210420:$r2
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:<invoker.SnowFlake: long machineId> = 0L
currStmt left value20210420:<invoker.SnowFlake: long machineId>
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:<invoker.SnowFlake: long datacenterId> = 0L
currStmt left value20210420:<invoker.SnowFlake: long datacenterId>
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
Have
the value=$b5
the value=0
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$b5 = l1 cmp 0L
currStmt left value20210420:$b5
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
Have
the value=$b4
the value=0
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$b4 = l1 cmp 31L
currStmt left value20210420:$b4
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
Have
the value=$b3
the value=0
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$b3 = l0 cmp 0L
currStmt left value20210420:$b3
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
Have
the value=$b2
the value=0
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$b2 = l0 cmp 31L
currStmt left value20210420:$b2
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
[taint329]i invoke specialinvoke r0.<java.lang.Object: void <init>()>()
[taint328]i invoke <java.lang.Object: void <init>()>
[taint328]i invoke 0
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
doAnalysis endqqqqqqq.....
come here
[CFMAP]2021 After BackwardAnalysis:{cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}
[taint into] sootMethod: nextId
[]
class name :invoker.SnowFlake
method name :nextId
method list :[]
clasname=invoker.SnowFlake
methodname=nextId
sourcelist2021=[]
20210427node :l0 = staticinvoke <invoker.SnowFlake: long getNewstmp()>()
20210427node in :[]
调用语句赋值给变量:l0 = staticinvoke <invoker.SnowFlake: long getNewstmp()>()
Invokestmt:getNewstmp
20210427node out :[]
[taint328]a invoke <invoker.SnowFlake: long getNewstmp()>
[taint328]a invoke 0
[invokemap]invoke:getNewstmp  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
20210427node :$l1 = <invoker.SnowFlake: long lastStmp>
20210427node in :[]
普通复制语句1112:$l1 = <invoker.SnowFlake: long lastStmp>
[taint source] u:<invoker.SnowFlake: long lastStmp>
SourceList:[]
20210427node out :[]
20210427node :$b2 = l0 cmp $l1
20210427node in :[]
普通复制语句1112:$b2 = l0 cmp $l1
[taint source] u:l0
SourceList:[]
[taint source] u:$l1
SourceList:[]
[taint source] u:l0 cmp $l1
SourceList:[]
20210427node out :[]
20210427node :if $b2 >= 0 goto $l3 = <invoker.SnowFlake: long lastStmp>
20210427node in :[]
20210427node out :[]
Have
Stmt if :if $b2 >= 0 goto $l3 = <invoker.SnowFlake: long lastStmp>Stmt if value:$b2 >= 0the value=$b2
the value=0
maintainValues.size0
ifValues1
20210427node :$l3 = <invoker.SnowFlake: long lastStmp>
20210427node in :[]
普通复制语句1112:$l3 = <invoker.SnowFlake: long lastStmp>
[taint source] u:<invoker.SnowFlake: long lastStmp>
SourceList:[]
20210427node out :[]
20210427node :$b4 = l0 cmp $l3
20210427node in :[]
普通复制语句1112:$b4 = l0 cmp $l3
[taint source] u:l0
SourceList:[]
[taint source] u:$l3
SourceList:[]
[taint source] u:l0 cmp $l3
SourceList:[]
20210427node out :[]
20210427node :if $b4 != 0 goto <invoker.SnowFlake: long sequence> = 0L
20210427node in :[]
20210427node out :[]
Have
Stmt if :if $b4 != 0 goto <invoker.SnowFlake: long sequence> = 0LStmt if value:$b4 != 0the value=$b4
the value=0
maintainValues.size0
ifValues1
20210427node :<invoker.SnowFlake: long sequence> = 0L
20210427node in :[]
普通复制语句1112:<invoker.SnowFlake: long sequence> = 0L
[taint source] u:0L
SourceList:[]
20210427node out :[]
20210427node :$l5 = <invoker.SnowFlake: long sequence>
20210427node in :[]
普通复制语句1112:$l5 = <invoker.SnowFlake: long sequence>
[taint source] u:<invoker.SnowFlake: long sequence>
SourceList:[]
20210427node out :[]
20210427node :$l6 = $l5 + 1L
20210427node in :[]
普通复制语句1112:$l6 = $l5 + 1L
[taint source] u:$l5
SourceList:[]
[taint source] u:1L
SourceList:[]
[taint source] u:$l5 + 1L
SourceList:[]
20210427node out :[]
20210427node :$l7 = $l6 & 4095L
20210427node in :[]
普通复制语句1112:$l7 = $l6 & 4095L
[taint source] u:$l6
SourceList:[]
[taint source] u:4095L
SourceList:[]
[taint source] u:$l6 & 4095L
SourceList:[]
20210427node out :[]
20210427node :<invoker.SnowFlake: long sequence> = $l7
20210427node in :[]
普通复制语句1112:<invoker.SnowFlake: long sequence> = $l7
[taint source] u:$l7
SourceList:[]
20210427node out :[]
20210427node :$l8 = <invoker.SnowFlake: long sequence>
20210427node in :[]
普通复制语句1112:$l8 = <invoker.SnowFlake: long sequence>
[taint source] u:<invoker.SnowFlake: long sequence>
SourceList:[]
20210427node out :[]
20210427node :$b9 = $l8 cmp 0L
20210427node in :[]
普通复制语句1112:$b9 = $l8 cmp 0L
[taint source] u:$l8
SourceList:[]
[taint source] u:0L
SourceList:[]
[taint source] u:$l8 cmp 0L
SourceList:[]
20210427node out :[]
20210427node :if $b9 != 0 goto <invoker.SnowFlake: long lastStmp> = l0
20210427node in :[]
20210427node out :[]
Have
Stmt if :if $b9 != 0 goto <invoker.SnowFlake: long lastStmp> = l0Stmt if value:$b9 != 0the value=$b9
the value=0
maintainValues.size0
ifValues1
20210427node :l0 = staticinvoke <invoker.SnowFlake: long getNextMill()>()
20210427node in :[]
调用语句赋值给变量:l0 = staticinvoke <invoker.SnowFlake: long getNextMill()>()
Invokestmt:getNextMill
20210427node out :[]
[taint328]a invoke <invoker.SnowFlake: long getNextMill()>
[taint328]a invoke 0
[invokemap]invoke:getNextMill  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
20210427node :goto [?= <invoker.SnowFlake: long lastStmp> = l0]
20210427node in :[]
20210427node out :[]
20210427node :<invoker.SnowFlake: long lastStmp> = l0
20210427node in :[]
普通复制语句1112:<invoker.SnowFlake: long lastStmp> = l0
[taint source] u:l0
SourceList:[]
20210427node out :[]
20210427node :$l10 = l0 - 1480166465631L
20210427node in :[]
普通复制语句1112:$l10 = l0 - 1480166465631L
[taint source] u:l0
SourceList:[]
[taint source] u:1480166465631L
SourceList:[]
[taint source] u:l0 - 1480166465631L
SourceList:[]
20210427node out :[]
20210427node :$l11 = $l10 << 22
20210427node in :[]
普通复制语句1112:$l11 = $l10 << 22
[taint source] u:$l10
SourceList:[]
[taint source] u:22
SourceList:[]
[taint source] u:$l10 << 22
SourceList:[]
20210427node out :[]
20210427node :$l12 = <invoker.SnowFlake: long datacenterId>
20210427node in :[]
普通复制语句1112:$l12 = <invoker.SnowFlake: long datacenterId>
[taint source] u:<invoker.SnowFlake: long datacenterId>
SourceList:[]
20210427node out :[]
20210427node :$l13 = $l12 << 17
20210427node in :[]
普通复制语句1112:$l13 = $l12 << 17
[taint source] u:$l12
SourceList:[]
[taint source] u:17
SourceList:[]
[taint source] u:$l12 << 17
SourceList:[]
20210427node out :[]
20210427node :$l14 = $l11 | $l13
20210427node in :[]
普通复制语句1112:$l14 = $l11 | $l13
[taint source] u:$l11
SourceList:[]
[taint source] u:$l13
SourceList:[]
[taint source] u:$l11 | $l13
SourceList:[]
20210427node out :[]
20210427node :$l15 = <invoker.SnowFlake: long machineId>
20210427node in :[]
普通复制语句1112:$l15 = <invoker.SnowFlake: long machineId>
[taint source] u:<invoker.SnowFlake: long machineId>
SourceList:[]
20210427node out :[]
20210427node :$l16 = $l15 << 12
20210427node in :[]
普通复制语句1112:$l16 = $l15 << 12
[taint source] u:$l15
SourceList:[]
[taint source] u:12
SourceList:[]
[taint source] u:$l15 << 12
SourceList:[]
20210427node out :[]
20210427node :$l17 = $l14 | $l16
20210427node in :[]
普通复制语句1112:$l17 = $l14 | $l16
[taint source] u:$l14
SourceList:[]
[taint source] u:$l16
SourceList:[]
[taint source] u:$l14 | $l16
SourceList:[]
20210427node out :[]
20210427node :$l18 = <invoker.SnowFlake: long sequence>
20210427node in :[]
普通复制语句1112:$l18 = <invoker.SnowFlake: long sequence>
[taint source] u:<invoker.SnowFlake: long sequence>
SourceList:[]
20210427node out :[]
20210427node :$l19 = $l17 | $l18
20210427node in :[]
普通复制语句1112:$l19 = $l17 | $l18
[taint source] u:$l17
SourceList:[]
[taint source] u:$l18
SourceList:[]
[taint source] u:$l17 | $l18
SourceList:[]
20210427node out :[]
20210427node :return $l19
20210427node in :[]
20210427node out :[]
20210427node :$r0 = new java.lang.RuntimeException
20210427node in :[]
普通复制语句1112:$r0 = new java.lang.RuntimeException
[taint source] u:new java.lang.RuntimeException
SourceList:[]
20210427node out :[]
20210427node :specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Clock moved backwards.  Refusing to generate id")
20210427node in :[]
20210427node out :[]
[taint329]i invoke specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Clock moved backwards.  Refusing to generate id")
[taint328]i invoke <java.lang.RuntimeException: void <init>(java.lang.String)>
[taint328]i invoke 1
value:"Clock moved backwards.  Refusing to generate id"
isoutSetContains  false value:"Clock moved backwards.  Refusing to generate id" index:0
20210427node :throw $r0
20210427node in :[]
20210427node out :[]
analysis.outSet.size():0
[CFMAP]2021 After taintAnalysis:{cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}
The data isgggg 
<invoker.SnowFlake: long nextId()>
The data isgggg invoker.SnowFlake nextId [] {cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}  {cfhider.WordCount$IntSumReducer={reduce=[I@350c764b}, cfhider.WordCount$TokenizerMapper={map=[I@13ac188d}, cfhider.WordCount={main=[I@2ebd21bf}, invoker.SnowFlake={<init>=[I@2718673e, getNextMill=[I@33222b7f, getNewstmp=[I@855b913}}
Coming...
doAnalysis Startingqqqqqqqq.....
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
[taint329]i invoke specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Clock moved backwards.  Refusing to generate id")
[taint328]i invoke <java.lang.RuntimeException: void <init>(java.lang.String)>
[taint328]i invoke 1
value:"Clock moved backwards.  Refusing to generate id"
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$r0 = new java.lang.RuntimeException
currStmt left value20210420:$r0
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$l19 = $l17 | $l18
currStmt left value20210420:$l19
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$l18 = <invoker.SnowFlake: long sequence>
currStmt left value20210420:$l18
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$l17 = $l14 | $l16
currStmt left value20210420:$l17
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$l16 = $l15 << 12
currStmt left value20210420:$l16
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$l15 = <invoker.SnowFlake: long machineId>
currStmt left value20210420:$l15
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$l14 = $l11 | $l13
currStmt left value20210420:$l14
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$l13 = $l12 << 17
currStmt left value20210420:$l13
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$l12 = <invoker.SnowFlake: long datacenterId>
currStmt left value20210420:$l12
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$l11 = $l10 << 22
currStmt left value20210420:$l11
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$l10 = l0 - 1480166465631L
currStmt left value20210420:$l10
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:<invoker.SnowFlake: long lastStmp> = l0
currStmt left value20210420:<invoker.SnowFlake: long lastStmp>
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:l0 = staticinvoke <invoker.SnowFlake: long getNextMill()>()
currStmt left value20210420:l0
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
Have
the value=$b9
the value=0
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$b9 = $l8 cmp 0L
currStmt left value20210420:$b9
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$l8 = <invoker.SnowFlake: long sequence>
currStmt left value20210420:$l8
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:<invoker.SnowFlake: long sequence> = $l7
currStmt left value20210420:<invoker.SnowFlake: long sequence>
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$l7 = $l6 & 4095L
currStmt left value20210420:$l7
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$l6 = $l5 + 1L
currStmt left value20210420:$l6
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$l5 = <invoker.SnowFlake: long sequence>
currStmt left value20210420:$l5
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:<invoker.SnowFlake: long sequence> = 0L
currStmt left value20210420:<invoker.SnowFlake: long sequence>
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
Have
the value=$b4
the value=0
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$b4 = l0 cmp $l3
currStmt left value20210420:$b4
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$l3 = <invoker.SnowFlake: long lastStmp>
currStmt left value20210420:$l3
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
Have
the value=$b2
the value=0
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$b2 = l0 cmp $l1
currStmt left value20210420:$b2
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$l1 = <invoker.SnowFlake: long lastStmp>
currStmt left value20210420:$l1
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:l0 = staticinvoke <invoker.SnowFlake: long getNewstmp()>()
currStmt left value20210420:l0
doAnalysis endqqqqqqq.....
come here
[CFMAP]2021 After BackwardAnalysis:{cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}
[taint into] sootMethod: getNextMill
[]
class name :invoker.SnowFlake
method name :getNextMill
method list :[]
clasname=invoker.SnowFlake
methodname=getNextMill
sourcelist2021=[]
20210427node :l0 = staticinvoke <invoker.SnowFlake: long getNewstmp()>()
20210427node in :[]
调用语句赋值给变量:l0 = staticinvoke <invoker.SnowFlake: long getNewstmp()>()
Invokestmt:getNewstmp
20210427node out :[]
[taint328]a invoke <invoker.SnowFlake: long getNewstmp()>
[taint328]a invoke 0
[invokemap]invoke:getNewstmp  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
20210427node :$l1 = <invoker.SnowFlake: long lastStmp>
20210427node in :[]
普通复制语句1112:$l1 = <invoker.SnowFlake: long lastStmp>
[taint source] u:<invoker.SnowFlake: long lastStmp>
SourceList:[]
20210427node out :[]
20210427node :$b2 = l0 cmp $l1
20210427node in :[]
普通复制语句1112:$b2 = l0 cmp $l1
[taint source] u:l0
SourceList:[]
[taint source] u:$l1
SourceList:[]
[taint source] u:l0 cmp $l1
SourceList:[]
20210427node out :[]
20210427node :if $b2 > 0 goto return l0
20210427node in :[]
20210427node out :[]
Have
Stmt if :if $b2 > 0 goto return l0Stmt if value:$b2 > 0the value=$b2
the value=0
maintainValues.size0
ifValues1
20210427node :return l0
20210427node in :[]
20210427node out :[]
20210427node :l0 = staticinvoke <invoker.SnowFlake: long getNewstmp()>()
20210427node in :[]
调用语句赋值给变量:l0 = staticinvoke <invoker.SnowFlake: long getNewstmp()>()
Invokestmt:getNewstmp
20210427node out :[]
[taint328]a invoke <invoker.SnowFlake: long getNewstmp()>
[taint328]a invoke 0
[invokemap]invoke:getNewstmp  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
20210427node :goto [?= $l1 = <invoker.SnowFlake: long lastStmp>]
20210427node in :[]
20210427node out :[]
analysis.outSet.size():0
[CFMAP]2021 After taintAnalysis:{cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}
The data isgggg 
<invoker.SnowFlake: long getNextMill()>
The data isgggg invoker.SnowFlake getNextMill [] {cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}  {cfhider.WordCount$IntSumReducer={reduce=[I@350c764b}, cfhider.WordCount$TokenizerMapper={map=[I@13ac188d}, cfhider.WordCount={main=[I@2ebd21bf}, invoker.SnowFlake={<init>=[I@2718673e, getNextMill=[I@33222b7f, getNewstmp=[I@33e992ab}}
Coming...
doAnalysis Startingqqqqqqqq.....
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:l0 = staticinvoke <invoker.SnowFlake: long getNewstmp()>()
currStmt left value20210420:l0
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
Have
the value=$b2
the value=0
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$b2 = l0 cmp $l1
currStmt left value20210420:$b2
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$l1 = <invoker.SnowFlake: long lastStmp>
currStmt left value20210420:$l1
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:l0 = staticinvoke <invoker.SnowFlake: long getNewstmp()>()
currStmt left value20210420:l0
doAnalysis endqqqqqqq.....
come here
[CFMAP]2021 After BackwardAnalysis:{cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}
[taint into] sootMethod: getNewstmp
[]
class name :invoker.SnowFlake
method name :getNewstmp
method list :[]
clasname=invoker.SnowFlake
methodname=getNewstmp
sourcelist2021=[]
20210427node :$l0 = staticinvoke <java.lang.System: long currentTimeMillis()>()
20210427node in :[]
调用语句赋值给变量:$l0 = staticinvoke <java.lang.System: long currentTimeMillis()>()
20210427node out :[]
[taint328]a invoke <java.lang.System: long currentTimeMillis()>
[taint328]a invoke 0
20210427node :return $l0
20210427node in :[]
20210427node out :[]
analysis.outSet.size():0
[CFMAP]2021 After taintAnalysis:{cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}
The data isgggg 
<invoker.SnowFlake: long getNewstmp()>
The data isgggg invoker.SnowFlake getNewstmp [] {cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}  {cfhider.WordCount$IntSumReducer={reduce=[I@350c764b}, cfhider.WordCount$TokenizerMapper={map=[I@13ac188d}, cfhider.WordCount={main=[I@2ebd21bf}, invoker.SnowFlake={<init>=[I@2718673e, getNextMill=[I@33222b7f, getNewstmp=[I@33e992ab}}
Coming...
doAnalysis Startingqqqqqqqq.....
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$l0 = staticinvoke <java.lang.System: long currentTimeMillis()>()
currStmt left value20210420:$l0
doAnalysis endqqqqqqq.....
come here
[CFMAP]2021 After BackwardAnalysis:{cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}
[taint into] sootMethod: <clinit>
[]
class name :invoker.SnowFlake
method name :<clinit>
method list :[]
clasname=invoker.SnowFlake
methodname=<clinit>
sourcelist2021=[]
20210427node :<invoker.SnowFlake: long sequence> = 0L
20210427node in :[]
普通复制语句1112:<invoker.SnowFlake: long sequence> = 0L
[taint source] u:0L
SourceList:[]
20210427node out :[]
20210427node :<invoker.SnowFlake: long lastStmp> = -1L
20210427node in :[]
普通复制语句1112:<invoker.SnowFlake: long lastStmp> = -1L
[taint source] u:-1L
SourceList:[]
20210427node out :[]
20210427node :return
20210427node in :[]
20210427node out :[]
analysis.outSet.size():0
[CFMAP]2021 After taintAnalysis:{cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}
The data isgggg 
<invoker.SnowFlake: void <clinit>()>
The data isgggg invoker.SnowFlake <clinit> [] {cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}  {cfhider.WordCount$IntSumReducer={reduce=[I@350c764b}, cfhider.WordCount$TokenizerMapper={map=[I@13ac188d}, cfhider.WordCount={main=[I@2ebd21bf}, invoker.SnowFlake={<init>=[I@2718673e, getNextMill=[I@33222b7f, getNewstmp=[I@33e992ab}}
Coming...
doAnalysis Startingqqqqqqqq.....
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:<invoker.SnowFlake: long lastStmp> = -1L
currStmt left value20210420:<invoker.SnowFlake: long lastStmp>
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:<invoker.SnowFlake: long sequence> = 0L
currStmt left value20210420:<invoker.SnowFlake: long sequence>
doAnalysis endqqqqqqq.....
come here
[CFMAP]2021 After BackwardAnalysis:{cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}
[taint into] sootMethod: <init>
[]
class name :invoker.SnowFlake
method name :<init>
method list :[]
clasname=invoker.SnowFlake
methodname=<init>
sourcelist2021=[]
20210427node :r0 := @this: invoker.SnowFlake
20210427node in :[]
20210427node out :[]
currStmt20210423:r0 := @this: invoker.SnowFlake
20210427node :l0 := @parameter0: long
20210427node in :[]
[idStmt]iiiiiii l0 := @parameter0: long  index:0
ClassName:invoker.SnowFlake
MethodName:<init>
aaaa:0
20210427node out :[]
currStmt20210423:l0 := @parameter0: long
20210427node :l1 := @parameter1: long
20210427node in :[]
[idStmt]iiiiiii l1 := @parameter1: long  index:1
ClassName:invoker.SnowFlake
MethodName:<init>
aaaa:0
20210427node out :[]
currStmt20210423:l1 := @parameter1: long
20210427node :specialinvoke r0.<java.lang.Object: void <init>()>()
20210427node in :[]
20210427node out :[]
[taint329]i invoke specialinvoke r0.<java.lang.Object: void <init>()>()
[taint328]i invoke <java.lang.Object: void <init>()>
[taint328]i invoke 0
20210427node :$b2 = l0 cmp 31L
20210427node in :[]
普通复制语句1112:$b2 = l0 cmp 31L
[taint source] u:l0
SourceList:[]
[taint source] u:31L
SourceList:[]
[taint source] u:l0 cmp 31L
SourceList:[]
20210427node out :[]
20210427node :if $b2 > 0 goto $r1 = new java.lang.IllegalArgumentException
20210427node in :[]
20210427node out :[]
Have
Stmt if :if $b2 > 0 goto $r1 = new java.lang.IllegalArgumentExceptionStmt if value:$b2 > 0the value=$b2
the value=0
maintainValues.size0
ifValues1
20210427node :$b3 = l0 cmp 0L
20210427node in :[]
普通复制语句1112:$b3 = l0 cmp 0L
[taint source] u:l0
SourceList:[]
[taint source] u:0L
SourceList:[]
[taint source] u:l0 cmp 0L
SourceList:[]
20210427node out :[]
20210427node :if $b3 >= 0 goto $b4 = l1 cmp 31L
20210427node in :[]
20210427node out :[]
Have
Stmt if :if $b3 >= 0 goto $b4 = l1 cmp 31LStmt if value:$b3 >= 0the value=$b3
the value=0
maintainValues.size0
ifValues1
20210427node :$b4 = l1 cmp 31L
20210427node in :[]
普通复制语句1112:$b4 = l1 cmp 31L
[taint source] u:l1
SourceList:[]
[taint source] u:31L
SourceList:[]
[taint source] u:l1 cmp 31L
SourceList:[]
20210427node out :[]
20210427node :if $b4 > 0 goto $r2 = new java.lang.IllegalArgumentException
20210427node in :[]
20210427node out :[]
Have
Stmt if :if $b4 > 0 goto $r2 = new java.lang.IllegalArgumentExceptionStmt if value:$b4 > 0the value=$b4
the value=0
maintainValues.size0
ifValues1
20210427node :$b5 = l1 cmp 0L
20210427node in :[]
普通复制语句1112:$b5 = l1 cmp 0L
[taint source] u:l1
SourceList:[]
[taint source] u:0L
SourceList:[]
[taint source] u:l1 cmp 0L
SourceList:[]
20210427node out :[]
20210427node :if $b5 >= 0 goto <invoker.SnowFlake: long datacenterId> = 0L
20210427node in :[]
20210427node out :[]
Have
Stmt if :if $b5 >= 0 goto <invoker.SnowFlake: long datacenterId> = 0LStmt if value:$b5 >= 0the value=$b5
the value=0
maintainValues.size0
ifValues1
20210427node :<invoker.SnowFlake: long datacenterId> = 0L
20210427node in :[]
普通复制语句1112:<invoker.SnowFlake: long datacenterId> = 0L
[taint source] u:0L
SourceList:[]
20210427node out :[]
20210427node :<invoker.SnowFlake: long machineId> = 0L
20210427node in :[]
普通复制语句1112:<invoker.SnowFlake: long machineId> = 0L
[taint source] u:0L
SourceList:[]
20210427node out :[]
20210427node :return
20210427node in :[]
20210427node out :[]
20210427node :$r2 = new java.lang.IllegalArgumentException
20210427node in :[]
普通复制语句1112:$r2 = new java.lang.IllegalArgumentException
[taint source] u:new java.lang.IllegalArgumentException
SourceList:[]
20210427node out :[]
20210427node :specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("machineId can\'t be greater than MAX_MACHINE_NUM or less than 0")
20210427node in :[]
20210427node out :[]
[taint329]i invoke specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("machineId can\'t be greater than MAX_MACHINE_NUM or less than 0")
[taint328]i invoke <java.lang.IllegalArgumentException: void <init>(java.lang.String)>
[taint328]i invoke 1
value:"machineId can\'t be greater than MAX_MACHINE_NUM or less than 0"
isoutSetContains  false value:"machineId can\'t be greater than MAX_MACHINE_NUM or less than 0" index:0
20210427node :throw $r2
20210427node in :[]
20210427node out :[]
20210427node :$r1 = new java.lang.IllegalArgumentException
20210427node in :[]
普通复制语句1112:$r1 = new java.lang.IllegalArgumentException
[taint source] u:new java.lang.IllegalArgumentException
SourceList:[]
20210427node out :[]
20210427node :specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("datacenterId can\'t be greater than MAX_DATACENTER_NUM or less than 0")
20210427node in :[]
20210427node out :[]
[taint329]i invoke specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("datacenterId can\'t be greater than MAX_DATACENTER_NUM or less than 0")
[taint328]i invoke <java.lang.IllegalArgumentException: void <init>(java.lang.String)>
[taint328]i invoke 1
value:"datacenterId can\'t be greater than MAX_DATACENTER_NUM or less than 0"
isoutSetContains  false value:"datacenterId can\'t be greater than MAX_DATACENTER_NUM or less than 0" index:0
20210427node :throw $r1
20210427node in :[]
20210427node out :[]
analysis.outSet.size():0
[CFMAP]2021 After taintAnalysis:{cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}
The data isgggg 
<invoker.SnowFlake: void <init>(long,long)>
The data isgggg invoker.SnowFlake <init> [] {cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}  {cfhider.WordCount$IntSumReducer={reduce=[I@350c764b}, cfhider.WordCount$TokenizerMapper={map=[I@13ac188d}, cfhider.WordCount={main=[I@2ebd21bf}, invoker.SnowFlake={<init>=[I@2b9c332d, getNextMill=[I@33222b7f, getNewstmp=[I@33e992ab}}
Coming...
doAnalysis Startingqqqqqqqq.....
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
[taint329]i invoke specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("datacenterId can\'t be greater than MAX_DATACENTER_NUM or less than 0")
[taint328]i invoke <java.lang.IllegalArgumentException: void <init>(java.lang.String)>
[taint328]i invoke 1
value:"datacenterId can\'t be greater than MAX_DATACENTER_NUM or less than 0"
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$r1 = new java.lang.IllegalArgumentException
currStmt left value20210420:$r1
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
[taint329]i invoke specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("machineId can\'t be greater than MAX_MACHINE_NUM or less than 0")
[taint328]i invoke <java.lang.IllegalArgumentException: void <init>(java.lang.String)>
[taint328]i invoke 1
value:"machineId can\'t be greater than MAX_MACHINE_NUM or less than 0"
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$r2 = new java.lang.IllegalArgumentException
currStmt left value20210420:$r2
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:<invoker.SnowFlake: long machineId> = 0L
currStmt left value20210420:<invoker.SnowFlake: long machineId>
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:<invoker.SnowFlake: long datacenterId> = 0L
currStmt left value20210420:<invoker.SnowFlake: long datacenterId>
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
Have
the value=$b5
the value=0
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$b5 = l1 cmp 0L
currStmt left value20210420:$b5
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
Have
the value=$b4
the value=0
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$b4 = l1 cmp 31L
currStmt left value20210420:$b4
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
Have
the value=$b3
the value=0
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$b3 = l0 cmp 0L
currStmt left value20210420:$b3
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
Have
the value=$b2
the value=0
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$b2 = l0 cmp 31L
currStmt left value20210420:$b2
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
[taint329]i invoke specialinvoke r0.<java.lang.Object: void <init>()>()
[taint328]i invoke <java.lang.Object: void <init>()>
[taint328]i invoke 0
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
doAnalysis endqqqqqqq.....
come here
[CFMAP]2021 After BackwardAnalysis:{cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}
[taint into] sootMethod: nextId
[]
class name :invoker.SnowFlake
method name :nextId
method list :[]
clasname=invoker.SnowFlake
methodname=nextId
sourcelist2021=[]
20210427node :l0 = staticinvoke <invoker.SnowFlake: long getNewstmp()>()
20210427node in :[]
调用语句赋值给变量:l0 = staticinvoke <invoker.SnowFlake: long getNewstmp()>()
Invokestmt:getNewstmp
20210427node out :[]
[taint328]a invoke <invoker.SnowFlake: long getNewstmp()>
[taint328]a invoke 0
[invokemap]invoke:getNewstmp  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
20210427node :$l1 = <invoker.SnowFlake: long lastStmp>
20210427node in :[]
普通复制语句1112:$l1 = <invoker.SnowFlake: long lastStmp>
[taint source] u:<invoker.SnowFlake: long lastStmp>
SourceList:[]
20210427node out :[]
20210427node :$b2 = l0 cmp $l1
20210427node in :[]
普通复制语句1112:$b2 = l0 cmp $l1
[taint source] u:l0
SourceList:[]
[taint source] u:$l1
SourceList:[]
[taint source] u:l0 cmp $l1
SourceList:[]
20210427node out :[]
20210427node :if $b2 >= 0 goto $l3 = <invoker.SnowFlake: long lastStmp>
20210427node in :[]
20210427node out :[]
Have
Stmt if :if $b2 >= 0 goto $l3 = <invoker.SnowFlake: long lastStmp>Stmt if value:$b2 >= 0the value=$b2
the value=0
maintainValues.size0
ifValues1
20210427node :$l3 = <invoker.SnowFlake: long lastStmp>
20210427node in :[]
普通复制语句1112:$l3 = <invoker.SnowFlake: long lastStmp>
[taint source] u:<invoker.SnowFlake: long lastStmp>
SourceList:[]
20210427node out :[]
20210427node :$b4 = l0 cmp $l3
20210427node in :[]
普通复制语句1112:$b4 = l0 cmp $l3
[taint source] u:l0
SourceList:[]
[taint source] u:$l3
SourceList:[]
[taint source] u:l0 cmp $l3
SourceList:[]
20210427node out :[]
20210427node :if $b4 != 0 goto <invoker.SnowFlake: long sequence> = 0L
20210427node in :[]
20210427node out :[]
Have
Stmt if :if $b4 != 0 goto <invoker.SnowFlake: long sequence> = 0LStmt if value:$b4 != 0the value=$b4
the value=0
maintainValues.size0
ifValues1
20210427node :<invoker.SnowFlake: long sequence> = 0L
20210427node in :[]
普通复制语句1112:<invoker.SnowFlake: long sequence> = 0L
[taint source] u:0L
SourceList:[]
20210427node out :[]
20210427node :$l5 = <invoker.SnowFlake: long sequence>
20210427node in :[]
普通复制语句1112:$l5 = <invoker.SnowFlake: long sequence>
[taint source] u:<invoker.SnowFlake: long sequence>
SourceList:[]
20210427node out :[]
20210427node :$l6 = $l5 + 1L
20210427node in :[]
普通复制语句1112:$l6 = $l5 + 1L
[taint source] u:$l5
SourceList:[]
[taint source] u:1L
SourceList:[]
[taint source] u:$l5 + 1L
SourceList:[]
20210427node out :[]
20210427node :$l7 = $l6 & 4095L
20210427node in :[]
普通复制语句1112:$l7 = $l6 & 4095L
[taint source] u:$l6
SourceList:[]
[taint source] u:4095L
SourceList:[]
[taint source] u:$l6 & 4095L
SourceList:[]
20210427node out :[]
20210427node :<invoker.SnowFlake: long sequence> = $l7
20210427node in :[]
普通复制语句1112:<invoker.SnowFlake: long sequence> = $l7
[taint source] u:$l7
SourceList:[]
20210427node out :[]
20210427node :$l8 = <invoker.SnowFlake: long sequence>
20210427node in :[]
普通复制语句1112:$l8 = <invoker.SnowFlake: long sequence>
[taint source] u:<invoker.SnowFlake: long sequence>
SourceList:[]
20210427node out :[]
20210427node :$b9 = $l8 cmp 0L
20210427node in :[]
普通复制语句1112:$b9 = $l8 cmp 0L
[taint source] u:$l8
SourceList:[]
[taint source] u:0L
SourceList:[]
[taint source] u:$l8 cmp 0L
SourceList:[]
20210427node out :[]
20210427node :if $b9 != 0 goto <invoker.SnowFlake: long lastStmp> = l0
20210427node in :[]
20210427node out :[]
Have
Stmt if :if $b9 != 0 goto <invoker.SnowFlake: long lastStmp> = l0Stmt if value:$b9 != 0the value=$b9
the value=0
maintainValues.size0
ifValues1
20210427node :l0 = staticinvoke <invoker.SnowFlake: long getNextMill()>()
20210427node in :[]
调用语句赋值给变量:l0 = staticinvoke <invoker.SnowFlake: long getNextMill()>()
Invokestmt:getNextMill
20210427node out :[]
[taint328]a invoke <invoker.SnowFlake: long getNextMill()>
[taint328]a invoke 0
[invokemap]invoke:getNextMill  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
20210427node :goto [?= <invoker.SnowFlake: long lastStmp> = l0]
20210427node in :[]
20210427node out :[]
20210427node :<invoker.SnowFlake: long lastStmp> = l0
20210427node in :[]
普通复制语句1112:<invoker.SnowFlake: long lastStmp> = l0
[taint source] u:l0
SourceList:[]
20210427node out :[]
20210427node :$l10 = l0 - 1480166465631L
20210427node in :[]
普通复制语句1112:$l10 = l0 - 1480166465631L
[taint source] u:l0
SourceList:[]
[taint source] u:1480166465631L
SourceList:[]
[taint source] u:l0 - 1480166465631L
SourceList:[]
20210427node out :[]
20210427node :$l11 = $l10 << 22
20210427node in :[]
普通复制语句1112:$l11 = $l10 << 22
[taint source] u:$l10
SourceList:[]
[taint source] u:22
SourceList:[]
[taint source] u:$l10 << 22
SourceList:[]
20210427node out :[]
20210427node :$l12 = <invoker.SnowFlake: long datacenterId>
20210427node in :[]
普通复制语句1112:$l12 = <invoker.SnowFlake: long datacenterId>
[taint source] u:<invoker.SnowFlake: long datacenterId>
SourceList:[]
20210427node out :[]
20210427node :$l13 = $l12 << 17
20210427node in :[]
普通复制语句1112:$l13 = $l12 << 17
[taint source] u:$l12
SourceList:[]
[taint source] u:17
SourceList:[]
[taint source] u:$l12 << 17
SourceList:[]
20210427node out :[]
20210427node :$l14 = $l11 | $l13
20210427node in :[]
普通复制语句1112:$l14 = $l11 | $l13
[taint source] u:$l11
SourceList:[]
[taint source] u:$l13
SourceList:[]
[taint source] u:$l11 | $l13
SourceList:[]
20210427node out :[]
20210427node :$l15 = <invoker.SnowFlake: long machineId>
20210427node in :[]
普通复制语句1112:$l15 = <invoker.SnowFlake: long machineId>
[taint source] u:<invoker.SnowFlake: long machineId>
SourceList:[]
20210427node out :[]
20210427node :$l16 = $l15 << 12
20210427node in :[]
普通复制语句1112:$l16 = $l15 << 12
[taint source] u:$l15
SourceList:[]
[taint source] u:12
SourceList:[]
[taint source] u:$l15 << 12
SourceList:[]
20210427node out :[]
20210427node :$l17 = $l14 | $l16
20210427node in :[]
普通复制语句1112:$l17 = $l14 | $l16
[taint source] u:$l14
SourceList:[]
[taint source] u:$l16
SourceList:[]
[taint source] u:$l14 | $l16
SourceList:[]
20210427node out :[]
20210427node :$l18 = <invoker.SnowFlake: long sequence>
20210427node in :[]
普通复制语句1112:$l18 = <invoker.SnowFlake: long sequence>
[taint source] u:<invoker.SnowFlake: long sequence>
SourceList:[]
20210427node out :[]
20210427node :$l19 = $l17 | $l18
20210427node in :[]
普通复制语句1112:$l19 = $l17 | $l18
[taint source] u:$l17
SourceList:[]
[taint source] u:$l18
SourceList:[]
[taint source] u:$l17 | $l18
SourceList:[]
20210427node out :[]
20210427node :return $l19
20210427node in :[]
20210427node out :[]
20210427node :$r0 = new java.lang.RuntimeException
20210427node in :[]
普通复制语句1112:$r0 = new java.lang.RuntimeException
[taint source] u:new java.lang.RuntimeException
SourceList:[]
20210427node out :[]
20210427node :specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Clock moved backwards.  Refusing to generate id")
20210427node in :[]
20210427node out :[]
[taint329]i invoke specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Clock moved backwards.  Refusing to generate id")
[taint328]i invoke <java.lang.RuntimeException: void <init>(java.lang.String)>
[taint328]i invoke 1
value:"Clock moved backwards.  Refusing to generate id"
isoutSetContains  false value:"Clock moved backwards.  Refusing to generate id" index:0
20210427node :throw $r0
20210427node in :[]
20210427node out :[]
analysis.outSet.size():0
[CFMAP]2021 After taintAnalysis:{cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}
The data isgggg 
<invoker.SnowFlake: long nextId()>
The data isgggg invoker.SnowFlake nextId [] {cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}  {cfhider.WordCount$IntSumReducer={reduce=[I@350c764b}, cfhider.WordCount$TokenizerMapper={map=[I@13ac188d}, cfhider.WordCount={main=[I@2ebd21bf}, invoker.SnowFlake={<init>=[I@2b9c332d, getNextMill=[I@1be3e5b9, getNewstmp=[I@efee2fd}}
Coming...
doAnalysis Startingqqqqqqqq.....
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
[taint329]i invoke specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Clock moved backwards.  Refusing to generate id")
[taint328]i invoke <java.lang.RuntimeException: void <init>(java.lang.String)>
[taint328]i invoke 1
value:"Clock moved backwards.  Refusing to generate id"
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$r0 = new java.lang.RuntimeException
currStmt left value20210420:$r0
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$l19 = $l17 | $l18
currStmt left value20210420:$l19
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$l18 = <invoker.SnowFlake: long sequence>
currStmt left value20210420:$l18
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$l17 = $l14 | $l16
currStmt left value20210420:$l17
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$l16 = $l15 << 12
currStmt left value20210420:$l16
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$l15 = <invoker.SnowFlake: long machineId>
currStmt left value20210420:$l15
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$l14 = $l11 | $l13
currStmt left value20210420:$l14
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$l13 = $l12 << 17
currStmt left value20210420:$l13
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$l12 = <invoker.SnowFlake: long datacenterId>
currStmt left value20210420:$l12
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$l11 = $l10 << 22
currStmt left value20210420:$l11
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$l10 = l0 - 1480166465631L
currStmt left value20210420:$l10
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:<invoker.SnowFlake: long lastStmp> = l0
currStmt left value20210420:<invoker.SnowFlake: long lastStmp>
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:l0 = staticinvoke <invoker.SnowFlake: long getNextMill()>()
currStmt left value20210420:l0
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
Have
the value=$b9
the value=0
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$b9 = $l8 cmp 0L
currStmt left value20210420:$b9
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$l8 = <invoker.SnowFlake: long sequence>
currStmt left value20210420:$l8
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:<invoker.SnowFlake: long sequence> = $l7
currStmt left value20210420:<invoker.SnowFlake: long sequence>
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$l7 = $l6 & 4095L
currStmt left value20210420:$l7
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$l6 = $l5 + 1L
currStmt left value20210420:$l6
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$l5 = <invoker.SnowFlake: long sequence>
currStmt left value20210420:$l5
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:<invoker.SnowFlake: long sequence> = 0L
currStmt left value20210420:<invoker.SnowFlake: long sequence>
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
Have
the value=$b4
the value=0
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$b4 = l0 cmp $l3
currStmt left value20210420:$b4
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$l3 = <invoker.SnowFlake: long lastStmp>
currStmt left value20210420:$l3
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
Have
the value=$b2
the value=0
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$b2 = l0 cmp $l1
currStmt left value20210420:$b2
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$l1 = <invoker.SnowFlake: long lastStmp>
currStmt left value20210420:$l1
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:l0 = staticinvoke <invoker.SnowFlake: long getNewstmp()>()
currStmt left value20210420:l0
doAnalysis endqqqqqqq.....
come here
[CFMAP]2021 After BackwardAnalysis:{cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}
[taint into] sootMethod: getNextMill
[]
class name :invoker.SnowFlake
method name :getNextMill
method list :[]
clasname=invoker.SnowFlake
methodname=getNextMill
sourcelist2021=[]
20210427node :l0 = staticinvoke <invoker.SnowFlake: long getNewstmp()>()
20210427node in :[]
调用语句赋值给变量:l0 = staticinvoke <invoker.SnowFlake: long getNewstmp()>()
Invokestmt:getNewstmp
20210427node out :[]
[taint328]a invoke <invoker.SnowFlake: long getNewstmp()>
[taint328]a invoke 0
[invokemap]invoke:getNewstmp  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
20210427node :$l1 = <invoker.SnowFlake: long lastStmp>
20210427node in :[]
普通复制语句1112:$l1 = <invoker.SnowFlake: long lastStmp>
[taint source] u:<invoker.SnowFlake: long lastStmp>
SourceList:[]
20210427node out :[]
20210427node :$b2 = l0 cmp $l1
20210427node in :[]
普通复制语句1112:$b2 = l0 cmp $l1
[taint source] u:l0
SourceList:[]
[taint source] u:$l1
SourceList:[]
[taint source] u:l0 cmp $l1
SourceList:[]
20210427node out :[]
20210427node :if $b2 > 0 goto return l0
20210427node in :[]
20210427node out :[]
Have
Stmt if :if $b2 > 0 goto return l0Stmt if value:$b2 > 0the value=$b2
the value=0
maintainValues.size0
ifValues1
20210427node :return l0
20210427node in :[]
20210427node out :[]
20210427node :l0 = staticinvoke <invoker.SnowFlake: long getNewstmp()>()
20210427node in :[]
调用语句赋值给变量:l0 = staticinvoke <invoker.SnowFlake: long getNewstmp()>()
Invokestmt:getNewstmp
20210427node out :[]
[taint328]a invoke <invoker.SnowFlake: long getNewstmp()>
[taint328]a invoke 0
[invokemap]invoke:getNewstmp  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
20210427node :goto [?= $l1 = <invoker.SnowFlake: long lastStmp>]
20210427node in :[]
20210427node out :[]
analysis.outSet.size():0
[CFMAP]2021 After taintAnalysis:{cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}
The data isgggg 
<invoker.SnowFlake: long getNextMill()>
The data isgggg invoker.SnowFlake getNextMill [] {cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}  {cfhider.WordCount$IntSumReducer={reduce=[I@350c764b}, cfhider.WordCount$TokenizerMapper={map=[I@13ac188d}, cfhider.WordCount={main=[I@2ebd21bf}, invoker.SnowFlake={<init>=[I@2b9c332d, getNextMill=[I@1be3e5b9, getNewstmp=[I@7fe857bb}}
Coming...
doAnalysis Startingqqqqqqqq.....
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:l0 = staticinvoke <invoker.SnowFlake: long getNewstmp()>()
currStmt left value20210420:l0
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
Have
the value=$b2
the value=0
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$b2 = l0 cmp $l1
currStmt left value20210420:$b2
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$l1 = <invoker.SnowFlake: long lastStmp>
currStmt left value20210420:$l1
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:l0 = staticinvoke <invoker.SnowFlake: long getNewstmp()>()
currStmt left value20210420:l0
doAnalysis endqqqqqqq.....
come here
[CFMAP]2021 After BackwardAnalysis:{cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}
[taint into] sootMethod: getNewstmp
[]
class name :invoker.SnowFlake
method name :getNewstmp
method list :[]
clasname=invoker.SnowFlake
methodname=getNewstmp
sourcelist2021=[]
20210427node :$l0 = staticinvoke <java.lang.System: long currentTimeMillis()>()
20210427node in :[]
调用语句赋值给变量:$l0 = staticinvoke <java.lang.System: long currentTimeMillis()>()
20210427node out :[]
[taint328]a invoke <java.lang.System: long currentTimeMillis()>
[taint328]a invoke 0
20210427node :return $l0
20210427node in :[]
20210427node out :[]
analysis.outSet.size():0
[CFMAP]2021 After taintAnalysis:{cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}
The data isgggg 
<invoker.SnowFlake: long getNewstmp()>
The data isgggg invoker.SnowFlake getNewstmp [] {cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}  {cfhider.WordCount$IntSumReducer={reduce=[I@350c764b}, cfhider.WordCount$TokenizerMapper={map=[I@13ac188d}, cfhider.WordCount={main=[I@2ebd21bf}, invoker.SnowFlake={<init>=[I@2b9c332d, getNextMill=[I@1be3e5b9, getNewstmp=[I@7fe857bb}}
Coming...
doAnalysis Startingqqqqqqqq.....
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$l0 = staticinvoke <java.lang.System: long currentTimeMillis()>()
currStmt left value20210420:$l0
doAnalysis endqqqqqqq.....
come here
[CFMAP]2021 After BackwardAnalysis:{cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}
[taint into] sootMethod: <clinit>
[]
class name :invoker.SnowFlake
method name :<clinit>
method list :[]
clasname=invoker.SnowFlake
methodname=<clinit>
sourcelist2021=[]
20210427node :<invoker.SnowFlake: long sequence> = 0L
20210427node in :[]
普通复制语句1112:<invoker.SnowFlake: long sequence> = 0L
[taint source] u:0L
SourceList:[]
20210427node out :[]
20210427node :<invoker.SnowFlake: long lastStmp> = -1L
20210427node in :[]
普通复制语句1112:<invoker.SnowFlake: long lastStmp> = -1L
[taint source] u:-1L
SourceList:[]
20210427node out :[]
20210427node :return
20210427node in :[]
20210427node out :[]
analysis.outSet.size():0
[CFMAP]2021 After taintAnalysis:{cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}
The data isgggg 
<invoker.SnowFlake: void <clinit>()>
The data isgggg invoker.SnowFlake <clinit> [] {cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}  {cfhider.WordCount$IntSumReducer={reduce=[I@350c764b}, cfhider.WordCount$TokenizerMapper={map=[I@13ac188d}, cfhider.WordCount={main=[I@2ebd21bf}, invoker.SnowFlake={<init>=[I@2b9c332d, getNextMill=[I@1be3e5b9, getNewstmp=[I@7fe857bb}}
Coming...
doAnalysis Startingqqqqqqqq.....
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:<invoker.SnowFlake: long lastStmp> = -1L
currStmt left value20210420:<invoker.SnowFlake: long lastStmp>
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:<invoker.SnowFlake: long sequence> = 0L
currStmt left value20210420:<invoker.SnowFlake: long sequence>
doAnalysis endqqqqqqq.....
come here
[CFMAP]2021 After BackwardAnalysis:{cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}
[taint]SooClass:invoker.sgx_invoker
[taint]SooClass:cfhider.WordCount$IntSumReducer
[taint] class: cfhider.WordCount$IntSumReducer
methList :{<init>=[], reduce=[]}
[taint into] sootMethod: <init>
[]
class name :cfhider.WordCount$IntSumReducer
method name :<init>
method list :[]
clasname=cfhider.WordCount$IntSumReducer
methodname=<init>
sourcelist2021=[]
20210427node :r0 := @this: cfhider.WordCount$IntSumReducer
20210427node in :[]
20210427node out :[]
currStmt20210423:r0 := @this: cfhider.WordCount$IntSumReducer
20210427node :specialinvoke r0.<org.apache.hadoop.mapreduce.Reducer: void <init>()>()
20210427node in :[]
20210427node out :[]
[taint329]i invoke specialinvoke r0.<org.apache.hadoop.mapreduce.Reducer: void <init>()>()
[taint328]i invoke <org.apache.hadoop.mapreduce.Reducer: void <init>()>
[taint328]i invoke 0
20210427node :$r1 = new org.apache.hadoop.io.IntWritable
20210427node in :[]
普通复制语句1112:$r1 = new org.apache.hadoop.io.IntWritable
[taint source] u:new org.apache.hadoop.io.IntWritable
SourceList:[]
20210427node out :[]
20210427node :specialinvoke $r1.<org.apache.hadoop.io.IntWritable: void <init>()>()
20210427node in :[]
20210427node out :[]
[taint329]i invoke specialinvoke $r1.<org.apache.hadoop.io.IntWritable: void <init>()>()
[taint328]i invoke <org.apache.hadoop.io.IntWritable: void <init>()>
[taint328]i invoke 0
20210427node :r0.<cfhider.WordCount$IntSumReducer: org.apache.hadoop.io.IntWritable result> = $r1
20210427node in :[]
普通复制语句1112:r0.<cfhider.WordCount$IntSumReducer: org.apache.hadoop.io.IntWritable result> = $r1
[taint source] u:r0
SourceList:[]
[taint source] u:$r1
SourceList:[]
20210427node out :[]
20210427node :return
20210427node in :[]
20210427node out :[]
analysis.outSet.size():0
[CFMAP]2021 After taintAnalysis:{cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}
The data isgggg 
<cfhider.WordCount$IntSumReducer: void <init>()>
The data isgggg cfhider.WordCount$IntSumReducer <init> [] {cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}  {cfhider.WordCount$IntSumReducer={reduce=[I@350c764b}, cfhider.WordCount$TokenizerMapper={map=[I@13ac188d}, cfhider.WordCount={main=[I@2ebd21bf}, invoker.SnowFlake={<init>=[I@2b9c332d, getNextMill=[I@1be3e5b9, getNewstmp=[I@7fe857bb}}
Coming...
doAnalysis Startingqqqqqqqq.....
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:r0.<cfhider.WordCount$IntSumReducer: org.apache.hadoop.io.IntWritable result> = $r1
currStmt left value20210420:r0.<cfhider.WordCount$IntSumReducer: org.apache.hadoop.io.IntWritable result>
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
[taint329]i invoke specialinvoke $r1.<org.apache.hadoop.io.IntWritable: void <init>()>()
[taint328]i invoke <org.apache.hadoop.io.IntWritable: void <init>()>
[taint328]i invoke 0
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$r1 = new org.apache.hadoop.io.IntWritable
currStmt left value20210420:$r1
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
[taint329]i invoke specialinvoke r0.<org.apache.hadoop.mapreduce.Reducer: void <init>()>()
[taint328]i invoke <org.apache.hadoop.mapreduce.Reducer: void <init>()>
[taint328]i invoke 0
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
doAnalysis endqqqqqqq.....
come here
[CFMAP]2021 After BackwardAnalysis:{cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}
[taint into] sootMethod: reduce
[]
class name :cfhider.WordCount$IntSumReducer
method name :reduce
method list :[]
clasname=cfhider.WordCount$IntSumReducer
methodname=reduce
sourcelist2021=[]
20210427node :r0 := @this: cfhider.WordCount$IntSumReducer
20210427node in :[]
20210427node out :[]
currStmt20210423:r0 := @this: cfhider.WordCount$IntSumReducer
20210427node :r1 := @parameter0: org.apache.hadoop.io.Text
20210427node in :[]
[idStmt]iiiiiii r1 := @parameter0: org.apache.hadoop.io.Text  index:0
ClassName:cfhider.WordCount$IntSumReducer
MethodName:reduce
aaaa:0
20210427node out :[]
currStmt20210423:r1 := @parameter0: org.apache.hadoop.io.Text
20210427node :r2 := @parameter1: java.lang.Iterable
20210427node in :[]
[idStmt]iiiiiii r2 := @parameter1: java.lang.Iterable  index:1
ClassName:cfhider.WordCount$IntSumReducer
MethodName:reduce
aaaa:0
20210427node out :[]
currStmt20210423:r2 := @parameter1: java.lang.Iterable
20210427node :r3 := @parameter2: org.apache.hadoop.mapreduce.Reducer$Context
20210427node in :[]
[idStmt]iiiiiii r3 := @parameter2: org.apache.hadoop.mapreduce.Reducer$Context  index:2
ClassName:cfhider.WordCount$IntSumReducer
MethodName:reduce
aaaa:0
20210427node out :[]
currStmt20210423:r3 := @parameter2: org.apache.hadoop.mapreduce.Reducer$Context
20210427node :i0 = 0
20210427node in :[]
普通复制语句1112:i0 = 0
[taint source] u:0
SourceList:[]
20210427node out :[]
20210427node :r4 = interfaceinvoke r2.<java.lang.Iterable: java.util.Iterator iterator()>()
20210427node in :[]
调用语句赋值给变量:r4 = interfaceinvoke r2.<java.lang.Iterable: java.util.Iterator iterator()>()
20210427node out :[]
[taint328]a invoke <java.lang.Iterable: java.util.Iterator iterator()>
[taint328]a invoke 0
20210427node :$z0 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>()
20210427node in :[]
调用语句赋值给变量:$z0 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>()
20210427node out :[]
[taint328]a invoke <java.util.Iterator: boolean hasNext()>
[taint328]a invoke 0
20210427node :if $z0 == 0 goto $r7 = r0.<cfhider.WordCount$IntSumReducer: org.apache.hadoop.io.IntWritable result>
20210427node in :[]
20210427node out :[]
Have
Stmt if :if $z0 == 0 goto $r7 = r0.<cfhider.WordCount$IntSumReducer: org.apache.hadoop.io.IntWritable result>Stmt if value:$z0 == 0the value=$z0
the value=0
maintainValues.size0
ifValues1
20210427node :$r7 = r0.<cfhider.WordCount$IntSumReducer: org.apache.hadoop.io.IntWritable result>
20210427node in :[]
普通复制语句1112:$r7 = r0.<cfhider.WordCount$IntSumReducer: org.apache.hadoop.io.IntWritable result>
[taint source] u:r0
SourceList:[]
[taint source] u:r0.<cfhider.WordCount$IntSumReducer: org.apache.hadoop.io.IntWritable result>
SourceList:[]
20210427node out :[]
20210427node :virtualinvoke $r7.<org.apache.hadoop.io.IntWritable: void set(int)>(i0)
20210427node in :[]
20210427node out :[]
[taint329]i invoke virtualinvoke $r7.<org.apache.hadoop.io.IntWritable: void set(int)>(i0)
[taint328]i invoke <org.apache.hadoop.io.IntWritable: void set(int)>
[taint328]i invoke 1
value:i0
isoutSetContains  false value:i0 index:0
20210427node :$r8 = r0.<cfhider.WordCount$IntSumReducer: org.apache.hadoop.io.IntWritable result>
20210427node in :[]
普通复制语句1112:$r8 = r0.<cfhider.WordCount$IntSumReducer: org.apache.hadoop.io.IntWritable result>
[taint source] u:r0
SourceList:[]
[taint source] u:r0.<cfhider.WordCount$IntSumReducer: org.apache.hadoop.io.IntWritable result>
SourceList:[]
20210427node out :[]
20210427node :virtualinvoke r3.<org.apache.hadoop.mapreduce.Reducer$Context: void write(java.lang.Object,java.lang.Object)>(r1, $r8)
20210427node in :[]
20210427node out :[]
[taint329]i invoke virtualinvoke r3.<org.apache.hadoop.mapreduce.Reducer$Context: void write(java.lang.Object,java.lang.Object)>(r1, $r8)
[taint328]i invoke <org.apache.hadoop.mapreduce.TaskInputOutputContext: void write(java.lang.Object,java.lang.Object)>
[taint328]i invoke 2
value:r1
isoutSetContains  false value:r1 index:0
value:$r8
isoutSetContains  false value:$r8 index:1
20210427node :return
20210427node in :[]
20210427node out :[]
20210427node :$r6 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>()
20210427node in :[]
调用语句赋值给变量:$r6 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>()
20210427node out :[]
[taint328]a invoke <java.util.Iterator: java.lang.Object next()>
[taint328]a invoke 0
20210427node :r5 = (org.apache.hadoop.io.IntWritable) $r6
20210427node in :[]
普通复制语句1112:r5 = (org.apache.hadoop.io.IntWritable) $r6
[taint source] u:$r6
SourceList:[]
[taint source] u:(org.apache.hadoop.io.IntWritable) $r6
SourceList:[]
20210427node out :[]
20210427node :$i1 = virtualinvoke r5.<org.apache.hadoop.io.IntWritable: int get()>()
20210427node in :[]
调用语句赋值给变量:$i1 = virtualinvoke r5.<org.apache.hadoop.io.IntWritable: int get()>()
20210427node out :[]
[taint328]a invoke <org.apache.hadoop.io.IntWritable: int get()>
[taint328]a invoke 0
20210427node :i0 = i0 + $i1
20210427node in :[]
普通复制语句1112:i0 = i0 + $i1
[taint source] u:i0
SourceList:[]
[taint source] u:$i1
SourceList:[]
[taint source] u:i0 + $i1
SourceList:[]
20210427node out :[]
20210427node :goto [?= $z0 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>()]
20210427node in :[]
20210427node out :[]
analysis.outSet.size():0
[CFMAP]2021 After taintAnalysis:{cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}
The data isgggg 
<cfhider.WordCount$IntSumReducer: void reduce(org.apache.hadoop.io.Text,java.lang.Iterable,org.apache.hadoop.mapreduce.Reducer$Context)>
The data isgggg cfhider.WordCount$IntSumReducer reduce [] {cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}  {cfhider.WordCount$IntSumReducer={reduce=[I@6ed7f797}, cfhider.WordCount$TokenizerMapper={map=[I@13ac188d}, cfhider.WordCount={main=[I@2ebd21bf}, invoker.SnowFlake={<init>=[I@2b9c332d, getNextMill=[I@1be3e5b9, getNewstmp=[I@7fe857bb}}
Coming...
doAnalysis Startingqqqqqqqq.....
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:i0 = i0 + $i1
currStmt left value20210420:i0
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$i1 = virtualinvoke r5.<org.apache.hadoop.io.IntWritable: int get()>()
currStmt left value20210420:$i1
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:r5 = (org.apache.hadoop.io.IntWritable) $r6
currStmt left value20210420:r5
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$r6 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>()
currStmt left value20210420:$r6
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
[taint329]i invoke virtualinvoke r3.<org.apache.hadoop.mapreduce.Reducer$Context: void write(java.lang.Object,java.lang.Object)>(r1, $r8)
[taint328]i invoke <org.apache.hadoop.mapreduce.TaskInputOutputContext: void write(java.lang.Object,java.lang.Object)>
[taint328]i invoke 2
value:r1
value:$r8
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$r8 = r0.<cfhider.WordCount$IntSumReducer: org.apache.hadoop.io.IntWritable result>
currStmt left value20210420:$r8
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
[taint329]i invoke virtualinvoke $r7.<org.apache.hadoop.io.IntWritable: void set(int)>(i0)
[taint328]i invoke <org.apache.hadoop.io.IntWritable: void set(int)>
[taint328]i invoke 1
value:i0
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$r7 = r0.<cfhider.WordCount$IntSumReducer: org.apache.hadoop.io.IntWritable result>
currStmt left value20210420:$r7
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
Have
the value=$z0
the value=0
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$z0 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>()
currStmt left value20210420:$z0
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:r4 = interfaceinvoke r2.<java.lang.Iterable: java.util.Iterator iterator()>()
currStmt left value20210420:r4
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:i0 = 0
currStmt left value20210420:i0
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
doAnalysis endqqqqqqq.....
come here
[CFMAP]2021 After BackwardAnalysis:{cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}
[taint into] sootMethod: reduce
[]
class name :cfhider.WordCount$IntSumReducer
method name :reduce
method list :[]
clasname=cfhider.WordCount$IntSumReducer
methodname=reduce
sourcelist2021=[]
20210427node :r0 := @this: cfhider.WordCount$IntSumReducer
20210427node in :[]
20210427node out :[]
currStmt20210423:r0 := @this: cfhider.WordCount$IntSumReducer
20210427node :r1 := @parameter0: java.lang.Object
20210427node in :[]
[idStmt]iiiiiii r1 := @parameter0: java.lang.Object  index:0
ClassName:cfhider.WordCount$IntSumReducer
MethodName:reduce
aaaa:0
20210427node out :[]
currStmt20210423:r1 := @parameter0: java.lang.Object
20210427node :r2 := @parameter1: java.lang.Iterable
20210427node in :[]
[idStmt]iiiiiii r2 := @parameter1: java.lang.Iterable  index:1
ClassName:cfhider.WordCount$IntSumReducer
MethodName:reduce
aaaa:0
20210427node out :[]
currStmt20210423:r2 := @parameter1: java.lang.Iterable
20210427node :r3 := @parameter2: org.apache.hadoop.mapreduce.Reducer$Context
20210427node in :[]
[idStmt]iiiiiii r3 := @parameter2: org.apache.hadoop.mapreduce.Reducer$Context  index:2
ClassName:cfhider.WordCount$IntSumReducer
MethodName:reduce
aaaa:0
20210427node out :[]
currStmt20210423:r3 := @parameter2: org.apache.hadoop.mapreduce.Reducer$Context
20210427node :$r4 = (org.apache.hadoop.io.Text) r1
20210427node in :[]
普通复制语句1112:$r4 = (org.apache.hadoop.io.Text) r1
[taint source] u:r1
SourceList:[]
[taint source] u:(org.apache.hadoop.io.Text) r1
SourceList:[]
20210427node out :[]
20210427node :virtualinvoke r0.<cfhider.WordCount$IntSumReducer: void reduce(org.apache.hadoop.io.Text,java.lang.Iterable,org.apache.hadoop.mapreduce.Reducer$Context)>($r4, r2, r3)
20210427node in :[]
20210427node out :[]
[taint329]i invoke virtualinvoke r0.<cfhider.WordCount$IntSumReducer: void reduce(org.apache.hadoop.io.Text,java.lang.Iterable,org.apache.hadoop.mapreduce.Reducer$Context)>($r4, r2, r3)
[taint328]i invoke <cfhider.WordCount$IntSumReducer: void reduce(org.apache.hadoop.io.Text,java.lang.Iterable,org.apache.hadoop.mapreduce.Reducer$Context)>
[taint328]i invoke 3
value:$r4
isoutSetContains  false value:$r4 index:0
value:r2
isoutSetContains  false value:r2 index:1
value:r3
isoutSetContains  false value:r3 index:2
[invokemap]invoke:reduce  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
20210427node :return
20210427node in :[]
20210427node out :[]
analysis.outSet.size():0
[CFMAP]2021 After taintAnalysis:{cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}
The data isgggg 
<cfhider.WordCount$IntSumReducer: void reduce(java.lang.Object,java.lang.Iterable,org.apache.hadoop.mapreduce.Reducer$Context)>
The data isgggg cfhider.WordCount$IntSumReducer reduce [] {cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}  {cfhider.WordCount$IntSumReducer={reduce=[I@24c0135b}, cfhider.WordCount$TokenizerMapper={map=[I@13ac188d}, cfhider.WordCount={main=[I@2ebd21bf}, invoker.SnowFlake={<init>=[I@2b9c332d, getNextMill=[I@1be3e5b9, getNewstmp=[I@7fe857bb}}
Coming...
doAnalysis Startingqqqqqqqq.....
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
[taint329]i invoke virtualinvoke r0.<cfhider.WordCount$IntSumReducer: void reduce(org.apache.hadoop.io.Text,java.lang.Iterable,org.apache.hadoop.mapreduce.Reducer$Context)>($r4, r2, r3)
[taint328]i invoke <cfhider.WordCount$IntSumReducer: void reduce(org.apache.hadoop.io.Text,java.lang.Iterable,org.apache.hadoop.mapreduce.Reducer$Context)>
[taint328]i invoke 3
value:$r4
in here:[I@3e36ce36
[invokemap]invoke:reduce  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
value:r2
in here:[I@3e36ce36
[invokemap]invoke:reduce  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
value:r3
in here:[I@3e36ce36
[invokemap]invoke:reduce  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$r4 = (org.apache.hadoop.io.Text) r1
currStmt left value20210420:$r4
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
doAnalysis endqqqqqqq.....
come here
[CFMAP]2021 After BackwardAnalysis:{cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}
[taint into] sootMethod: <init>
[]
class name :cfhider.WordCount$IntSumReducer
method name :<init>
method list :[]
clasname=cfhider.WordCount$IntSumReducer
methodname=<init>
sourcelist2021=[]
20210427node :r0 := @this: cfhider.WordCount$IntSumReducer
20210427node in :[]
20210427node out :[]
currStmt20210423:r0 := @this: cfhider.WordCount$IntSumReducer
20210427node :specialinvoke r0.<org.apache.hadoop.mapreduce.Reducer: void <init>()>()
20210427node in :[]
20210427node out :[]
[taint329]i invoke specialinvoke r0.<org.apache.hadoop.mapreduce.Reducer: void <init>()>()
[taint328]i invoke <org.apache.hadoop.mapreduce.Reducer: void <init>()>
[taint328]i invoke 0
20210427node :$r1 = new org.apache.hadoop.io.IntWritable
20210427node in :[]
普通复制语句1112:$r1 = new org.apache.hadoop.io.IntWritable
[taint source] u:new org.apache.hadoop.io.IntWritable
SourceList:[]
20210427node out :[]
20210427node :specialinvoke $r1.<org.apache.hadoop.io.IntWritable: void <init>()>()
20210427node in :[]
20210427node out :[]
[taint329]i invoke specialinvoke $r1.<org.apache.hadoop.io.IntWritable: void <init>()>()
[taint328]i invoke <org.apache.hadoop.io.IntWritable: void <init>()>
[taint328]i invoke 0
20210427node :r0.<cfhider.WordCount$IntSumReducer: org.apache.hadoop.io.IntWritable result> = $r1
20210427node in :[]
普通复制语句1112:r0.<cfhider.WordCount$IntSumReducer: org.apache.hadoop.io.IntWritable result> = $r1
[taint source] u:r0
SourceList:[]
[taint source] u:$r1
SourceList:[]
20210427node out :[]
20210427node :return
20210427node in :[]
20210427node out :[]
analysis.outSet.size():0
[CFMAP]2021 After taintAnalysis:{cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}
The data isgggg 
<cfhider.WordCount$IntSumReducer: void <init>()>
The data isgggg cfhider.WordCount$IntSumReducer <init> [] {cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}  {cfhider.WordCount$IntSumReducer={reduce=[I@24c0135b}, cfhider.WordCount$TokenizerMapper={map=[I@13ac188d}, cfhider.WordCount={main=[I@2ebd21bf}, invoker.SnowFlake={<init>=[I@2b9c332d, getNextMill=[I@1be3e5b9, getNewstmp=[I@7fe857bb}}
Coming...
doAnalysis Startingqqqqqqqq.....
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:r0.<cfhider.WordCount$IntSumReducer: org.apache.hadoop.io.IntWritable result> = $r1
currStmt left value20210420:r0.<cfhider.WordCount$IntSumReducer: org.apache.hadoop.io.IntWritable result>
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
[taint329]i invoke specialinvoke $r1.<org.apache.hadoop.io.IntWritable: void <init>()>()
[taint328]i invoke <org.apache.hadoop.io.IntWritable: void <init>()>
[taint328]i invoke 0
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$r1 = new org.apache.hadoop.io.IntWritable
currStmt left value20210420:$r1
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
[taint329]i invoke specialinvoke r0.<org.apache.hadoop.mapreduce.Reducer: void <init>()>()
[taint328]i invoke <org.apache.hadoop.mapreduce.Reducer: void <init>()>
[taint328]i invoke 0
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
doAnalysis endqqqqqqq.....
come here
[CFMAP]2021 After BackwardAnalysis:{cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}
[taint into] sootMethod: reduce
[]
class name :cfhider.WordCount$IntSumReducer
method name :reduce
method list :[]
clasname=cfhider.WordCount$IntSumReducer
methodname=reduce
sourcelist2021=[]
20210427node :r0 := @this: cfhider.WordCount$IntSumReducer
20210427node in :[]
20210427node out :[]
currStmt20210423:r0 := @this: cfhider.WordCount$IntSumReducer
20210427node :r1 := @parameter0: org.apache.hadoop.io.Text
20210427node in :[]
[idStmt]iiiiiii r1 := @parameter0: org.apache.hadoop.io.Text  index:0
ClassName:cfhider.WordCount$IntSumReducer
MethodName:reduce
aaaa:0
20210427node out :[]
currStmt20210423:r1 := @parameter0: org.apache.hadoop.io.Text
20210427node :r2 := @parameter1: java.lang.Iterable
20210427node in :[]
[idStmt]iiiiiii r2 := @parameter1: java.lang.Iterable  index:1
ClassName:cfhider.WordCount$IntSumReducer
MethodName:reduce
aaaa:0
20210427node out :[]
currStmt20210423:r2 := @parameter1: java.lang.Iterable
20210427node :r3 := @parameter2: org.apache.hadoop.mapreduce.Reducer$Context
20210427node in :[]
[idStmt]iiiiiii r3 := @parameter2: org.apache.hadoop.mapreduce.Reducer$Context  index:2
ClassName:cfhider.WordCount$IntSumReducer
MethodName:reduce
aaaa:0
20210427node out :[]
currStmt20210423:r3 := @parameter2: org.apache.hadoop.mapreduce.Reducer$Context
20210427node :i0 = 0
20210427node in :[]
普通复制语句1112:i0 = 0
[taint source] u:0
SourceList:[]
20210427node out :[]
20210427node :r4 = interfaceinvoke r2.<java.lang.Iterable: java.util.Iterator iterator()>()
20210427node in :[]
调用语句赋值给变量:r4 = interfaceinvoke r2.<java.lang.Iterable: java.util.Iterator iterator()>()
20210427node out :[]
[taint328]a invoke <java.lang.Iterable: java.util.Iterator iterator()>
[taint328]a invoke 0
20210427node :$z0 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>()
20210427node in :[]
调用语句赋值给变量:$z0 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>()
20210427node out :[]
[taint328]a invoke <java.util.Iterator: boolean hasNext()>
[taint328]a invoke 0
20210427node :if $z0 == 0 goto $r7 = r0.<cfhider.WordCount$IntSumReducer: org.apache.hadoop.io.IntWritable result>
20210427node in :[]
20210427node out :[]
Have
Stmt if :if $z0 == 0 goto $r7 = r0.<cfhider.WordCount$IntSumReducer: org.apache.hadoop.io.IntWritable result>Stmt if value:$z0 == 0the value=$z0
the value=0
maintainValues.size0
ifValues1
20210427node :$r7 = r0.<cfhider.WordCount$IntSumReducer: org.apache.hadoop.io.IntWritable result>
20210427node in :[]
普通复制语句1112:$r7 = r0.<cfhider.WordCount$IntSumReducer: org.apache.hadoop.io.IntWritable result>
[taint source] u:r0
SourceList:[]
[taint source] u:r0.<cfhider.WordCount$IntSumReducer: org.apache.hadoop.io.IntWritable result>
SourceList:[]
20210427node out :[]
20210427node :virtualinvoke $r7.<org.apache.hadoop.io.IntWritable: void set(int)>(i0)
20210427node in :[]
20210427node out :[]
[taint329]i invoke virtualinvoke $r7.<org.apache.hadoop.io.IntWritable: void set(int)>(i0)
[taint328]i invoke <org.apache.hadoop.io.IntWritable: void set(int)>
[taint328]i invoke 1
value:i0
isoutSetContains  false value:i0 index:0
20210427node :$r8 = r0.<cfhider.WordCount$IntSumReducer: org.apache.hadoop.io.IntWritable result>
20210427node in :[]
普通复制语句1112:$r8 = r0.<cfhider.WordCount$IntSumReducer: org.apache.hadoop.io.IntWritable result>
[taint source] u:r0
SourceList:[]
[taint source] u:r0.<cfhider.WordCount$IntSumReducer: org.apache.hadoop.io.IntWritable result>
SourceList:[]
20210427node out :[]
20210427node :virtualinvoke r3.<org.apache.hadoop.mapreduce.Reducer$Context: void write(java.lang.Object,java.lang.Object)>(r1, $r8)
20210427node in :[]
20210427node out :[]
[taint329]i invoke virtualinvoke r3.<org.apache.hadoop.mapreduce.Reducer$Context: void write(java.lang.Object,java.lang.Object)>(r1, $r8)
[taint328]i invoke <org.apache.hadoop.mapreduce.TaskInputOutputContext: void write(java.lang.Object,java.lang.Object)>
[taint328]i invoke 2
value:r1
isoutSetContains  false value:r1 index:0
value:$r8
isoutSetContains  false value:$r8 index:1
20210427node :return
20210427node in :[]
20210427node out :[]
20210427node :$r6 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>()
20210427node in :[]
调用语句赋值给变量:$r6 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>()
20210427node out :[]
[taint328]a invoke <java.util.Iterator: java.lang.Object next()>
[taint328]a invoke 0
20210427node :r5 = (org.apache.hadoop.io.IntWritable) $r6
20210427node in :[]
普通复制语句1112:r5 = (org.apache.hadoop.io.IntWritable) $r6
[taint source] u:$r6
SourceList:[]
[taint source] u:(org.apache.hadoop.io.IntWritable) $r6
SourceList:[]
20210427node out :[]
20210427node :$i1 = virtualinvoke r5.<org.apache.hadoop.io.IntWritable: int get()>()
20210427node in :[]
调用语句赋值给变量:$i1 = virtualinvoke r5.<org.apache.hadoop.io.IntWritable: int get()>()
20210427node out :[]
[taint328]a invoke <org.apache.hadoop.io.IntWritable: int get()>
[taint328]a invoke 0
20210427node :i0 = i0 + $i1
20210427node in :[]
普通复制语句1112:i0 = i0 + $i1
[taint source] u:i0
SourceList:[]
[taint source] u:$i1
SourceList:[]
[taint source] u:i0 + $i1
SourceList:[]
20210427node out :[]
20210427node :goto [?= $z0 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>()]
20210427node in :[]
20210427node out :[]
analysis.outSet.size():0
[CFMAP]2021 After taintAnalysis:{cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}
The data isgggg 
<cfhider.WordCount$IntSumReducer: void reduce(org.apache.hadoop.io.Text,java.lang.Iterable,org.apache.hadoop.mapreduce.Reducer$Context)>
The data isgggg cfhider.WordCount$IntSumReducer reduce [] {cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}  {cfhider.WordCount$IntSumReducer={reduce=[I@1c5b23}, cfhider.WordCount$TokenizerMapper={map=[I@13ac188d}, cfhider.WordCount={main=[I@2ebd21bf}, invoker.SnowFlake={<init>=[I@2b9c332d, getNextMill=[I@1be3e5b9, getNewstmp=[I@7fe857bb}}
Coming...
doAnalysis Startingqqqqqqqq.....
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:i0 = i0 + $i1
currStmt left value20210420:i0
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$i1 = virtualinvoke r5.<org.apache.hadoop.io.IntWritable: int get()>()
currStmt left value20210420:$i1
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:r5 = (org.apache.hadoop.io.IntWritable) $r6
currStmt left value20210420:r5
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$r6 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>()
currStmt left value20210420:$r6
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
[taint329]i invoke virtualinvoke r3.<org.apache.hadoop.mapreduce.Reducer$Context: void write(java.lang.Object,java.lang.Object)>(r1, $r8)
[taint328]i invoke <org.apache.hadoop.mapreduce.TaskInputOutputContext: void write(java.lang.Object,java.lang.Object)>
[taint328]i invoke 2
value:r1
value:$r8
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$r8 = r0.<cfhider.WordCount$IntSumReducer: org.apache.hadoop.io.IntWritable result>
currStmt left value20210420:$r8
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
[taint329]i invoke virtualinvoke $r7.<org.apache.hadoop.io.IntWritable: void set(int)>(i0)
[taint328]i invoke <org.apache.hadoop.io.IntWritable: void set(int)>
[taint328]i invoke 1
value:i0
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$r7 = r0.<cfhider.WordCount$IntSumReducer: org.apache.hadoop.io.IntWritable result>
currStmt left value20210420:$r7
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
Have
the value=$z0
the value=0
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$z0 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>()
currStmt left value20210420:$z0
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:r4 = interfaceinvoke r2.<java.lang.Iterable: java.util.Iterator iterator()>()
currStmt left value20210420:r4
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:i0 = 0
currStmt left value20210420:i0
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
doAnalysis endqqqqqqq.....
come here
[CFMAP]2021 After BackwardAnalysis:{cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}
[taint into] sootMethod: reduce
[]
class name :cfhider.WordCount$IntSumReducer
method name :reduce
method list :[]
clasname=cfhider.WordCount$IntSumReducer
methodname=reduce
sourcelist2021=[]
20210427node :r0 := @this: cfhider.WordCount$IntSumReducer
20210427node in :[]
20210427node out :[]
currStmt20210423:r0 := @this: cfhider.WordCount$IntSumReducer
20210427node :r1 := @parameter0: java.lang.Object
20210427node in :[]
[idStmt]iiiiiii r1 := @parameter0: java.lang.Object  index:0
ClassName:cfhider.WordCount$IntSumReducer
MethodName:reduce
aaaa:0
20210427node out :[]
currStmt20210423:r1 := @parameter0: java.lang.Object
20210427node :r2 := @parameter1: java.lang.Iterable
20210427node in :[]
[idStmt]iiiiiii r2 := @parameter1: java.lang.Iterable  index:1
ClassName:cfhider.WordCount$IntSumReducer
MethodName:reduce
aaaa:0
20210427node out :[]
currStmt20210423:r2 := @parameter1: java.lang.Iterable
20210427node :r3 := @parameter2: org.apache.hadoop.mapreduce.Reducer$Context
20210427node in :[]
[idStmt]iiiiiii r3 := @parameter2: org.apache.hadoop.mapreduce.Reducer$Context  index:2
ClassName:cfhider.WordCount$IntSumReducer
MethodName:reduce
aaaa:0
20210427node out :[]
currStmt20210423:r3 := @parameter2: org.apache.hadoop.mapreduce.Reducer$Context
20210427node :$r4 = (org.apache.hadoop.io.Text) r1
20210427node in :[]
普通复制语句1112:$r4 = (org.apache.hadoop.io.Text) r1
[taint source] u:r1
SourceList:[]
[taint source] u:(org.apache.hadoop.io.Text) r1
SourceList:[]
20210427node out :[]
20210427node :virtualinvoke r0.<cfhider.WordCount$IntSumReducer: void reduce(org.apache.hadoop.io.Text,java.lang.Iterable,org.apache.hadoop.mapreduce.Reducer$Context)>($r4, r2, r3)
20210427node in :[]
20210427node out :[]
[taint329]i invoke virtualinvoke r0.<cfhider.WordCount$IntSumReducer: void reduce(org.apache.hadoop.io.Text,java.lang.Iterable,org.apache.hadoop.mapreduce.Reducer$Context)>($r4, r2, r3)
[taint328]i invoke <cfhider.WordCount$IntSumReducer: void reduce(org.apache.hadoop.io.Text,java.lang.Iterable,org.apache.hadoop.mapreduce.Reducer$Context)>
[taint328]i invoke 3
value:$r4
isoutSetContains  false value:$r4 index:0
value:r2
isoutSetContains  false value:r2 index:1
value:r3
isoutSetContains  false value:r3 index:2
[invokemap]invoke:reduce  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
20210427node :return
20210427node in :[]
20210427node out :[]
analysis.outSet.size():0
[CFMAP]2021 After taintAnalysis:{cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}
The data isgggg 
<cfhider.WordCount$IntSumReducer: void reduce(java.lang.Object,java.lang.Iterable,org.apache.hadoop.mapreduce.Reducer$Context)>
The data isgggg cfhider.WordCount$IntSumReducer reduce [] {cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}  {cfhider.WordCount$IntSumReducer={reduce=[I@45a356e3}, cfhider.WordCount$TokenizerMapper={map=[I@13ac188d}, cfhider.WordCount={main=[I@2ebd21bf}, invoker.SnowFlake={<init>=[I@2b9c332d, getNextMill=[I@1be3e5b9, getNewstmp=[I@7fe857bb}}
Coming...
doAnalysis Startingqqqqqqqq.....
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
[taint329]i invoke virtualinvoke r0.<cfhider.WordCount$IntSumReducer: void reduce(org.apache.hadoop.io.Text,java.lang.Iterable,org.apache.hadoop.mapreduce.Reducer$Context)>($r4, r2, r3)
[taint328]i invoke <cfhider.WordCount$IntSumReducer: void reduce(org.apache.hadoop.io.Text,java.lang.Iterable,org.apache.hadoop.mapreduce.Reducer$Context)>
[taint328]i invoke 3
value:$r4
in here:[I@669d74cc
[invokemap]invoke:reduce  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
value:r2
in here:[I@669d74cc
[invokemap]invoke:reduce  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
value:r3
in here:[I@669d74cc
[invokemap]invoke:reduce  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$r4 = (org.apache.hadoop.io.Text) r1
currStmt left value20210420:$r4
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
doAnalysis endqqqqqqq.....
come here
[CFMAP]2021 After BackwardAnalysis:{cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}
[taint into] sootMethod: <init>
[]
class name :cfhider.WordCount$IntSumReducer
method name :<init>
method list :[]
clasname=cfhider.WordCount$IntSumReducer
methodname=<init>
sourcelist2021=[]
20210427node :r0 := @this: cfhider.WordCount$IntSumReducer
20210427node in :[]
20210427node out :[]
currStmt20210423:r0 := @this: cfhider.WordCount$IntSumReducer
20210427node :specialinvoke r0.<org.apache.hadoop.mapreduce.Reducer: void <init>()>()
20210427node in :[]
20210427node out :[]
[taint329]i invoke specialinvoke r0.<org.apache.hadoop.mapreduce.Reducer: void <init>()>()
[taint328]i invoke <org.apache.hadoop.mapreduce.Reducer: void <init>()>
[taint328]i invoke 0
20210427node :$r1 = new org.apache.hadoop.io.IntWritable
20210427node in :[]
普通复制语句1112:$r1 = new org.apache.hadoop.io.IntWritable
[taint source] u:new org.apache.hadoop.io.IntWritable
SourceList:[]
20210427node out :[]
20210427node :specialinvoke $r1.<org.apache.hadoop.io.IntWritable: void <init>()>()
20210427node in :[]
20210427node out :[]
[taint329]i invoke specialinvoke $r1.<org.apache.hadoop.io.IntWritable: void <init>()>()
[taint328]i invoke <org.apache.hadoop.io.IntWritable: void <init>()>
[taint328]i invoke 0
20210427node :r0.<cfhider.WordCount$IntSumReducer: org.apache.hadoop.io.IntWritable result> = $r1
20210427node in :[]
普通复制语句1112:r0.<cfhider.WordCount$IntSumReducer: org.apache.hadoop.io.IntWritable result> = $r1
[taint source] u:r0
SourceList:[]
[taint source] u:$r1
SourceList:[]
20210427node out :[]
20210427node :return
20210427node in :[]
20210427node out :[]
analysis.outSet.size():0
[CFMAP]2021 After taintAnalysis:{cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}
The data isgggg 
<cfhider.WordCount$IntSumReducer: void <init>()>
The data isgggg cfhider.WordCount$IntSumReducer <init> [] {cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}  {cfhider.WordCount$IntSumReducer={reduce=[I@45a356e3}, cfhider.WordCount$TokenizerMapper={map=[I@13ac188d}, cfhider.WordCount={main=[I@2ebd21bf}, invoker.SnowFlake={<init>=[I@2b9c332d, getNextMill=[I@1be3e5b9, getNewstmp=[I@7fe857bb}}
Coming...
doAnalysis Startingqqqqqqqq.....
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:r0.<cfhider.WordCount$IntSumReducer: org.apache.hadoop.io.IntWritable result> = $r1
currStmt left value20210420:r0.<cfhider.WordCount$IntSumReducer: org.apache.hadoop.io.IntWritable result>
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
[taint329]i invoke specialinvoke $r1.<org.apache.hadoop.io.IntWritable: void <init>()>()
[taint328]i invoke <org.apache.hadoop.io.IntWritable: void <init>()>
[taint328]i invoke 0
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$r1 = new org.apache.hadoop.io.IntWritable
currStmt left value20210420:$r1
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
[taint329]i invoke specialinvoke r0.<org.apache.hadoop.mapreduce.Reducer: void <init>()>()
[taint328]i invoke <org.apache.hadoop.mapreduce.Reducer: void <init>()>
[taint328]i invoke 0
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
doAnalysis endqqqqqqq.....
come here
[CFMAP]2021 After BackwardAnalysis:{cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}
[taint into] sootMethod: reduce
[]
class name :cfhider.WordCount$IntSumReducer
method name :reduce
method list :[]
clasname=cfhider.WordCount$IntSumReducer
methodname=reduce
sourcelist2021=[]
20210427node :r0 := @this: cfhider.WordCount$IntSumReducer
20210427node in :[]
20210427node out :[]
currStmt20210423:r0 := @this: cfhider.WordCount$IntSumReducer
20210427node :r1 := @parameter0: org.apache.hadoop.io.Text
20210427node in :[]
[idStmt]iiiiiii r1 := @parameter0: org.apache.hadoop.io.Text  index:0
ClassName:cfhider.WordCount$IntSumReducer
MethodName:reduce
aaaa:0
20210427node out :[]
currStmt20210423:r1 := @parameter0: org.apache.hadoop.io.Text
20210427node :r2 := @parameter1: java.lang.Iterable
20210427node in :[]
[idStmt]iiiiiii r2 := @parameter1: java.lang.Iterable  index:1
ClassName:cfhider.WordCount$IntSumReducer
MethodName:reduce
aaaa:0
20210427node out :[]
currStmt20210423:r2 := @parameter1: java.lang.Iterable
20210427node :r3 := @parameter2: org.apache.hadoop.mapreduce.Reducer$Context
20210427node in :[]
[idStmt]iiiiiii r3 := @parameter2: org.apache.hadoop.mapreduce.Reducer$Context  index:2
ClassName:cfhider.WordCount$IntSumReducer
MethodName:reduce
aaaa:0
20210427node out :[]
currStmt20210423:r3 := @parameter2: org.apache.hadoop.mapreduce.Reducer$Context
20210427node :i0 = 0
20210427node in :[]
普通复制语句1112:i0 = 0
[taint source] u:0
SourceList:[]
20210427node out :[]
20210427node :r4 = interfaceinvoke r2.<java.lang.Iterable: java.util.Iterator iterator()>()
20210427node in :[]
调用语句赋值给变量:r4 = interfaceinvoke r2.<java.lang.Iterable: java.util.Iterator iterator()>()
20210427node out :[]
[taint328]a invoke <java.lang.Iterable: java.util.Iterator iterator()>
[taint328]a invoke 0
20210427node :$z0 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>()
20210427node in :[]
调用语句赋值给变量:$z0 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>()
20210427node out :[]
[taint328]a invoke <java.util.Iterator: boolean hasNext()>
[taint328]a invoke 0
20210427node :if $z0 == 0 goto $r7 = r0.<cfhider.WordCount$IntSumReducer: org.apache.hadoop.io.IntWritable result>
20210427node in :[]
20210427node out :[]
Have
Stmt if :if $z0 == 0 goto $r7 = r0.<cfhider.WordCount$IntSumReducer: org.apache.hadoop.io.IntWritable result>Stmt if value:$z0 == 0the value=$z0
the value=0
maintainValues.size0
ifValues1
20210427node :$r7 = r0.<cfhider.WordCount$IntSumReducer: org.apache.hadoop.io.IntWritable result>
20210427node in :[]
普通复制语句1112:$r7 = r0.<cfhider.WordCount$IntSumReducer: org.apache.hadoop.io.IntWritable result>
[taint source] u:r0
SourceList:[]
[taint source] u:r0.<cfhider.WordCount$IntSumReducer: org.apache.hadoop.io.IntWritable result>
SourceList:[]
20210427node out :[]
20210427node :virtualinvoke $r7.<org.apache.hadoop.io.IntWritable: void set(int)>(i0)
20210427node in :[]
20210427node out :[]
[taint329]i invoke virtualinvoke $r7.<org.apache.hadoop.io.IntWritable: void set(int)>(i0)
[taint328]i invoke <org.apache.hadoop.io.IntWritable: void set(int)>
[taint328]i invoke 1
value:i0
isoutSetContains  false value:i0 index:0
20210427node :$r8 = r0.<cfhider.WordCount$IntSumReducer: org.apache.hadoop.io.IntWritable result>
20210427node in :[]
普通复制语句1112:$r8 = r0.<cfhider.WordCount$IntSumReducer: org.apache.hadoop.io.IntWritable result>
[taint source] u:r0
SourceList:[]
[taint source] u:r0.<cfhider.WordCount$IntSumReducer: org.apache.hadoop.io.IntWritable result>
SourceList:[]
20210427node out :[]
20210427node :virtualinvoke r3.<org.apache.hadoop.mapreduce.Reducer$Context: void write(java.lang.Object,java.lang.Object)>(r1, $r8)
20210427node in :[]
20210427node out :[]
[taint329]i invoke virtualinvoke r3.<org.apache.hadoop.mapreduce.Reducer$Context: void write(java.lang.Object,java.lang.Object)>(r1, $r8)
[taint328]i invoke <org.apache.hadoop.mapreduce.TaskInputOutputContext: void write(java.lang.Object,java.lang.Object)>
[taint328]i invoke 2
value:r1
isoutSetContains  false value:r1 index:0
value:$r8
isoutSetContains  false value:$r8 index:1
20210427node :return
20210427node in :[]
20210427node out :[]
20210427node :$r6 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>()
20210427node in :[]
调用语句赋值给变量:$r6 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>()
20210427node out :[]
[taint328]a invoke <java.util.Iterator: java.lang.Object next()>
[taint328]a invoke 0
20210427node :r5 = (org.apache.hadoop.io.IntWritable) $r6
20210427node in :[]
普通复制语句1112:r5 = (org.apache.hadoop.io.IntWritable) $r6
[taint source] u:$r6
SourceList:[]
[taint source] u:(org.apache.hadoop.io.IntWritable) $r6
SourceList:[]
20210427node out :[]
20210427node :$i1 = virtualinvoke r5.<org.apache.hadoop.io.IntWritable: int get()>()
20210427node in :[]
调用语句赋值给变量:$i1 = virtualinvoke r5.<org.apache.hadoop.io.IntWritable: int get()>()
20210427node out :[]
[taint328]a invoke <org.apache.hadoop.io.IntWritable: int get()>
[taint328]a invoke 0
20210427node :i0 = i0 + $i1
20210427node in :[]
普通复制语句1112:i0 = i0 + $i1
[taint source] u:i0
SourceList:[]
[taint source] u:$i1
SourceList:[]
[taint source] u:i0 + $i1
SourceList:[]
20210427node out :[]
20210427node :goto [?= $z0 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>()]
20210427node in :[]
20210427node out :[]
analysis.outSet.size():0
[CFMAP]2021 After taintAnalysis:{cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}
The data isgggg 
<cfhider.WordCount$IntSumReducer: void reduce(org.apache.hadoop.io.Text,java.lang.Iterable,org.apache.hadoop.mapreduce.Reducer$Context)>
The data isgggg cfhider.WordCount$IntSumReducer reduce [] {cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}  {cfhider.WordCount$IntSumReducer={reduce=[I@6b5f31b5}, cfhider.WordCount$TokenizerMapper={map=[I@13ac188d}, cfhider.WordCount={main=[I@2ebd21bf}, invoker.SnowFlake={<init>=[I@2b9c332d, getNextMill=[I@1be3e5b9, getNewstmp=[I@7fe857bb}}
Coming...
doAnalysis Startingqqqqqqqq.....
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:i0 = i0 + $i1
currStmt left value20210420:i0
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$i1 = virtualinvoke r5.<org.apache.hadoop.io.IntWritable: int get()>()
currStmt left value20210420:$i1
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:r5 = (org.apache.hadoop.io.IntWritable) $r6
currStmt left value20210420:r5
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$r6 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>()
currStmt left value20210420:$r6
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
[taint329]i invoke virtualinvoke r3.<org.apache.hadoop.mapreduce.Reducer$Context: void write(java.lang.Object,java.lang.Object)>(r1, $r8)
[taint328]i invoke <org.apache.hadoop.mapreduce.TaskInputOutputContext: void write(java.lang.Object,java.lang.Object)>
[taint328]i invoke 2
value:r1
value:$r8
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$r8 = r0.<cfhider.WordCount$IntSumReducer: org.apache.hadoop.io.IntWritable result>
currStmt left value20210420:$r8
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
[taint329]i invoke virtualinvoke $r7.<org.apache.hadoop.io.IntWritable: void set(int)>(i0)
[taint328]i invoke <org.apache.hadoop.io.IntWritable: void set(int)>
[taint328]i invoke 1
value:i0
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$r7 = r0.<cfhider.WordCount$IntSumReducer: org.apache.hadoop.io.IntWritable result>
currStmt left value20210420:$r7
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
Have
the value=$z0
the value=0
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$z0 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>()
currStmt left value20210420:$z0
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:r4 = interfaceinvoke r2.<java.lang.Iterable: java.util.Iterator iterator()>()
currStmt left value20210420:r4
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:i0 = 0
currStmt left value20210420:i0
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
doAnalysis endqqqqqqq.....
come here
[CFMAP]2021 After BackwardAnalysis:{cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}
[taint into] sootMethod: reduce
[]
class name :cfhider.WordCount$IntSumReducer
method name :reduce
method list :[]
clasname=cfhider.WordCount$IntSumReducer
methodname=reduce
sourcelist2021=[]
20210427node :r0 := @this: cfhider.WordCount$IntSumReducer
20210427node in :[]
20210427node out :[]
currStmt20210423:r0 := @this: cfhider.WordCount$IntSumReducer
20210427node :r1 := @parameter0: java.lang.Object
20210427node in :[]
[idStmt]iiiiiii r1 := @parameter0: java.lang.Object  index:0
ClassName:cfhider.WordCount$IntSumReducer
MethodName:reduce
aaaa:0
20210427node out :[]
currStmt20210423:r1 := @parameter0: java.lang.Object
20210427node :r2 := @parameter1: java.lang.Iterable
20210427node in :[]
[idStmt]iiiiiii r2 := @parameter1: java.lang.Iterable  index:1
ClassName:cfhider.WordCount$IntSumReducer
MethodName:reduce
aaaa:0
20210427node out :[]
currStmt20210423:r2 := @parameter1: java.lang.Iterable
20210427node :r3 := @parameter2: org.apache.hadoop.mapreduce.Reducer$Context
20210427node in :[]
[idStmt]iiiiiii r3 := @parameter2: org.apache.hadoop.mapreduce.Reducer$Context  index:2
ClassName:cfhider.WordCount$IntSumReducer
MethodName:reduce
aaaa:0
20210427node out :[]
currStmt20210423:r3 := @parameter2: org.apache.hadoop.mapreduce.Reducer$Context
20210427node :$r4 = (org.apache.hadoop.io.Text) r1
20210427node in :[]
普通复制语句1112:$r4 = (org.apache.hadoop.io.Text) r1
[taint source] u:r1
SourceList:[]
[taint source] u:(org.apache.hadoop.io.Text) r1
SourceList:[]
20210427node out :[]
20210427node :virtualinvoke r0.<cfhider.WordCount$IntSumReducer: void reduce(org.apache.hadoop.io.Text,java.lang.Iterable,org.apache.hadoop.mapreduce.Reducer$Context)>($r4, r2, r3)
20210427node in :[]
20210427node out :[]
[taint329]i invoke virtualinvoke r0.<cfhider.WordCount$IntSumReducer: void reduce(org.apache.hadoop.io.Text,java.lang.Iterable,org.apache.hadoop.mapreduce.Reducer$Context)>($r4, r2, r3)
[taint328]i invoke <cfhider.WordCount$IntSumReducer: void reduce(org.apache.hadoop.io.Text,java.lang.Iterable,org.apache.hadoop.mapreduce.Reducer$Context)>
[taint328]i invoke 3
value:$r4
isoutSetContains  false value:$r4 index:0
value:r2
isoutSetContains  false value:r2 index:1
value:r3
isoutSetContains  false value:r3 index:2
[invokemap]invoke:reduce  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
20210427node :return
20210427node in :[]
20210427node out :[]
analysis.outSet.size():0
[CFMAP]2021 After taintAnalysis:{cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}
The data isgggg 
<cfhider.WordCount$IntSumReducer: void reduce(java.lang.Object,java.lang.Iterable,org.apache.hadoop.mapreduce.Reducer$Context)>
The data isgggg cfhider.WordCount$IntSumReducer reduce [] {cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}  {cfhider.WordCount$IntSumReducer={reduce=[I@36b89925}, cfhider.WordCount$TokenizerMapper={map=[I@13ac188d}, cfhider.WordCount={main=[I@2ebd21bf}, invoker.SnowFlake={<init>=[I@2b9c332d, getNextMill=[I@1be3e5b9, getNewstmp=[I@7fe857bb}}
Coming...
doAnalysis Startingqqqqqqqq.....
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
[taint329]i invoke virtualinvoke r0.<cfhider.WordCount$IntSumReducer: void reduce(org.apache.hadoop.io.Text,java.lang.Iterable,org.apache.hadoop.mapreduce.Reducer$Context)>($r4, r2, r3)
[taint328]i invoke <cfhider.WordCount$IntSumReducer: void reduce(org.apache.hadoop.io.Text,java.lang.Iterable,org.apache.hadoop.mapreduce.Reducer$Context)>
[taint328]i invoke 3
value:$r4
in here:[I@114e6834
[invokemap]invoke:reduce  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
value:r2
in here:[I@114e6834
[invokemap]invoke:reduce  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
value:r3
in here:[I@114e6834
[invokemap]invoke:reduce  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$r4 = (org.apache.hadoop.io.Text) r1
currStmt left value20210420:$r4
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
doAnalysis endqqqqqqq.....
come here
[CFMAP]2021 After BackwardAnalysis:{cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}
[taint]SooClass:cfhider.WordCount
[taint] class: cfhider.WordCount
methList :{<init>=[], main=[]}
[taint into] sootMethod: <init>
[]
class name :cfhider.WordCount
method name :<init>
method list :[]
clasname=cfhider.WordCount
methodname=<init>
sourcelist2021=[]
20210427node :r0 := @this: cfhider.WordCount
20210427node in :[]
20210427node out :[]
currStmt20210423:r0 := @this: cfhider.WordCount
20210427node :specialinvoke r0.<java.lang.Object: void <init>()>()
20210427node in :[]
20210427node out :[]
[taint329]i invoke specialinvoke r0.<java.lang.Object: void <init>()>()
[taint328]i invoke <java.lang.Object: void <init>()>
[taint328]i invoke 0
20210427node :return
20210427node in :[]
20210427node out :[]
analysis.outSet.size():0
[CFMAP]2021 After taintAnalysis:{cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}
The data isgggg 
<cfhider.WordCount: void <init>()>
The data isgggg cfhider.WordCount <init> [] {cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}  {cfhider.WordCount$IntSumReducer={reduce=[I@36b89925}, cfhider.WordCount$TokenizerMapper={map=[I@13ac188d}, cfhider.WordCount={main=[I@2ebd21bf}, invoker.SnowFlake={<init>=[I@2b9c332d, getNextMill=[I@1be3e5b9, getNewstmp=[I@7fe857bb}}
Coming...
doAnalysis Startingqqqqqqqq.....
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
[taint329]i invoke specialinvoke r0.<java.lang.Object: void <init>()>()
[taint328]i invoke <java.lang.Object: void <init>()>
[taint328]i invoke 0
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
doAnalysis endqqqqqqq.....
come here
[CFMAP]2021 After BackwardAnalysis:{cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}
[taint into] sootMethod: main
[]
class name :cfhider.WordCount
method name :main
method list :[]
clasname=cfhider.WordCount
methodname=main
sourcelist2021=[]
20210427node :r0 := @parameter0: java.lang.String[]
20210427node in :[]
[idStmt]iiiiiii r0 := @parameter0: java.lang.String[]  index:0
ClassName:cfhider.WordCount
MethodName:main
aaaa:0
20210427node out :[]
currStmt20210423:r0 := @parameter0: java.lang.String[]
20210427node :$r1 = <java.lang.System: java.io.PrintStream out>
20210427node in :[]
普通复制语句1112:$r1 = <java.lang.System: java.io.PrintStream out>
[taint source] u:<java.lang.System: java.io.PrintStream out>
SourceList:[]
20210427node out :[]
20210427node :virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>("In this project, we test wordcount with SGX!\n")
20210427node in :[]
20210427node out :[]
[taint329]i invoke virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>("In this project, we test wordcount with SGX!\n")
[taint328]i invoke <java.io.PrintStream: void println(java.lang.String)>
[taint328]i invoke 1
value:"In this project, we test wordcount with SGX!\n"
isoutSetContains  false value:"In this project, we test wordcount with SGX!\n" index:0
20210427node :$r6 = new org.apache.hadoop.conf.Configuration
20210427node in :[]
普通复制语句1112:$r6 = new org.apache.hadoop.conf.Configuration
[taint source] u:new org.apache.hadoop.conf.Configuration
SourceList:[]
20210427node out :[]
20210427node :specialinvoke $r6.<org.apache.hadoop.conf.Configuration: void <init>()>()
20210427node in :[]
20210427node out :[]
[taint329]i invoke specialinvoke $r6.<org.apache.hadoop.conf.Configuration: void <init>()>()
[taint328]i invoke <org.apache.hadoop.conf.Configuration: void <init>()>
[taint328]i invoke 0
20210427node :r2 = $r6
20210427node in :[]
普通复制语句1112:r2 = $r6
[taint source] u:$r6
SourceList:[]
20210427node out :[]
20210427node :$r7 = new org.apache.hadoop.util.GenericOptionsParser
20210427node in :[]
普通复制语句1112:$r7 = new org.apache.hadoop.util.GenericOptionsParser
[taint source] u:new org.apache.hadoop.util.GenericOptionsParser
SourceList:[]
20210427node out :[]
20210427node :specialinvoke $r7.<org.apache.hadoop.util.GenericOptionsParser: void <init>(org.apache.hadoop.conf.Configuration,java.lang.String[])>(r2, r0)
20210427node in :[]
20210427node out :[]
[taint329]i invoke specialinvoke $r7.<org.apache.hadoop.util.GenericOptionsParser: void <init>(org.apache.hadoop.conf.Configuration,java.lang.String[])>(r2, r0)
[taint328]i invoke <org.apache.hadoop.util.GenericOptionsParser: void <init>(org.apache.hadoop.conf.Configuration,java.lang.String[])>
[taint328]i invoke 2
value:r2
isoutSetContains  false value:r2 index:0
value:r0
isoutSetContains  false value:r0 index:1
20210427node :r3 = $r7
20210427node in :[]
普通复制语句1112:r3 = $r7
[taint source] u:$r7
SourceList:[]
20210427node out :[]
20210427node :r4 = virtualinvoke r3.<org.apache.hadoop.util.GenericOptionsParser: java.lang.String[] getRemainingArgs()>()
20210427node in :[]
调用语句赋值给变量:r4 = virtualinvoke r3.<org.apache.hadoop.util.GenericOptionsParser: java.lang.String[] getRemainingArgs()>()
20210427node out :[]
[taint328]a invoke <org.apache.hadoop.util.GenericOptionsParser: java.lang.String[] getRemainingArgs()>
[taint328]a invoke 0
20210427node :l0 = staticinvoke <java.lang.System: long currentTimeMillis()>()
20210427node in :[]
调用语句赋值给变量:l0 = staticinvoke <java.lang.System: long currentTimeMillis()>()
20210427node out :[]
[taint328]a invoke <java.lang.System: long currentTimeMillis()>
[taint328]a invoke 0
20210427node :$r8 = new org.apache.hadoop.mapreduce.Job
20210427node in :[]
普通复制语句1112:$r8 = new org.apache.hadoop.mapreduce.Job
[taint source] u:new org.apache.hadoop.mapreduce.Job
SourceList:[]
20210427node out :[]
20210427node :specialinvoke $r8.<org.apache.hadoop.mapreduce.Job: void <init>(org.apache.hadoop.conf.Configuration,java.lang.String)>(r2, "word count")
20210427node in :[]
20210427node out :[]
[taint329]i invoke specialinvoke $r8.<org.apache.hadoop.mapreduce.Job: void <init>(org.apache.hadoop.conf.Configuration,java.lang.String)>(r2, "word count")
[taint328]i invoke <org.apache.hadoop.mapreduce.Job: void <init>(org.apache.hadoop.conf.Configuration,java.lang.String)>
[taint328]i invoke 2
value:r2
isoutSetContains  false value:r2 index:0
value:"word count"
isoutSetContains  false value:"word count" index:1
20210427node :r5 = $r8
20210427node in :[]
普通复制语句1112:r5 = $r8
[taint source] u:$r8
SourceList:[]
20210427node out :[]
20210427node :virtualinvoke r5.<org.apache.hadoop.mapreduce.Job: void setJarByClass(java.lang.Class)>(class "cfhider/WordCount")
20210427node in :[]
20210427node out :[]
[taint329]i invoke virtualinvoke r5.<org.apache.hadoop.mapreduce.Job: void setJarByClass(java.lang.Class)>(class "cfhider/WordCount")
[taint328]i invoke <org.apache.hadoop.mapreduce.Job: void setJarByClass(java.lang.Class)>
[taint328]i invoke 1
value:class "cfhider/WordCount"
isoutSetContains  false value:class "cfhider/WordCount" index:0
20210427node :virtualinvoke r5.<org.apache.hadoop.mapreduce.Job: void setMapperClass(java.lang.Class)>(class "cfhider/WordCount$TokenizerMapper")
20210427node in :[]
20210427node out :[]
[taint329]i invoke virtualinvoke r5.<org.apache.hadoop.mapreduce.Job: void setMapperClass(java.lang.Class)>(class "cfhider/WordCount$TokenizerMapper")
[taint328]i invoke <org.apache.hadoop.mapreduce.Job: void setMapperClass(java.lang.Class)>
[taint328]i invoke 1
value:class "cfhider/WordCount$TokenizerMapper"
isoutSetContains  false value:class "cfhider/WordCount$TokenizerMapper" index:0
20210427node :virtualinvoke r5.<org.apache.hadoop.mapreduce.Job: void setCombinerClass(java.lang.Class)>(class "cfhider/WordCount$IntSumReducer")
20210427node in :[]
20210427node out :[]
[taint329]i invoke virtualinvoke r5.<org.apache.hadoop.mapreduce.Job: void setCombinerClass(java.lang.Class)>(class "cfhider/WordCount$IntSumReducer")
[taint328]i invoke <org.apache.hadoop.mapreduce.Job: void setCombinerClass(java.lang.Class)>
[taint328]i invoke 1
value:class "cfhider/WordCount$IntSumReducer"
isoutSetContains  false value:class "cfhider/WordCount$IntSumReducer" index:0
20210427node :virtualinvoke r5.<org.apache.hadoop.mapreduce.Job: void setReducerClass(java.lang.Class)>(class "cfhider/WordCount$IntSumReducer")
20210427node in :[]
20210427node out :[]
[taint329]i invoke virtualinvoke r5.<org.apache.hadoop.mapreduce.Job: void setReducerClass(java.lang.Class)>(class "cfhider/WordCount$IntSumReducer")
[taint328]i invoke <org.apache.hadoop.mapreduce.Job: void setReducerClass(java.lang.Class)>
[taint328]i invoke 1
value:class "cfhider/WordCount$IntSumReducer"
isoutSetContains  false value:class "cfhider/WordCount$IntSumReducer" index:0
20210427node :virtualinvoke r5.<org.apache.hadoop.mapreduce.Job: void setOutputKeyClass(java.lang.Class)>(class "org/apache/hadoop/io/Text")
20210427node in :[]
20210427node out :[]
[taint329]i invoke virtualinvoke r5.<org.apache.hadoop.mapreduce.Job: void setOutputKeyClass(java.lang.Class)>(class "org/apache/hadoop/io/Text")
[taint328]i invoke <org.apache.hadoop.mapreduce.Job: void setOutputKeyClass(java.lang.Class)>
[taint328]i invoke 1
value:class "org/apache/hadoop/io/Text"
isoutSetContains  false value:class "org/apache/hadoop/io/Text" index:0
20210427node :virtualinvoke r5.<org.apache.hadoop.mapreduce.Job: void setOutputValueClass(java.lang.Class)>(class "org/apache/hadoop/io/IntWritable")
20210427node in :[]
20210427node out :[]
[taint329]i invoke virtualinvoke r5.<org.apache.hadoop.mapreduce.Job: void setOutputValueClass(java.lang.Class)>(class "org/apache/hadoop/io/IntWritable")
[taint328]i invoke <org.apache.hadoop.mapreduce.Job: void setOutputValueClass(java.lang.Class)>
[taint328]i invoke 1
value:class "org/apache/hadoop/io/IntWritable"
isoutSetContains  false value:class "org/apache/hadoop/io/IntWritable" index:0
20210427node :$r9 = new org.apache.hadoop.fs.Path
20210427node in :[]
普通复制语句1112:$r9 = new org.apache.hadoop.fs.Path
[taint source] u:new org.apache.hadoop.fs.Path
SourceList:[]
20210427node out :[]
20210427node :$r10 = r4[0]
20210427node in :[]
普通复制语句1112:$r10 = r4[0]
[taint source] u:r4
SourceList:[]
[taint source] u:0
SourceList:[]
[taint source] u:r4[0]
SourceList:[]
20210427node out :[]
20210427node :specialinvoke $r9.<org.apache.hadoop.fs.Path: void <init>(java.lang.String)>($r10)
20210427node in :[]
20210427node out :[]
[taint329]i invoke specialinvoke $r9.<org.apache.hadoop.fs.Path: void <init>(java.lang.String)>($r10)
[taint328]i invoke <org.apache.hadoop.fs.Path: void <init>(java.lang.String)>
[taint328]i invoke 1
value:$r10
isoutSetContains  false value:$r10 index:0
20210427node :staticinvoke <org.apache.hadoop.mapreduce.lib.input.FileInputFormat: void addInputPath(org.apache.hadoop.mapreduce.Job,org.apache.hadoop.fs.Path)>(r5, $r9)
20210427node in :[]
20210427node out :[]
[taint329]i invoke staticinvoke <org.apache.hadoop.mapreduce.lib.input.FileInputFormat: void addInputPath(org.apache.hadoop.mapreduce.Job,org.apache.hadoop.fs.Path)>(r5, $r9)
[taint328]i invoke <org.apache.hadoop.mapreduce.lib.input.FileInputFormat: void addInputPath(org.apache.hadoop.mapreduce.Job,org.apache.hadoop.fs.Path)>
[taint328]i invoke 2
value:r5
isoutSetContains  false value:r5 index:0
value:$r9
isoutSetContains  false value:$r9 index:1
20210427node :$r11 = new org.apache.hadoop.fs.Path
20210427node in :[]
普通复制语句1112:$r11 = new org.apache.hadoop.fs.Path
[taint source] u:new org.apache.hadoop.fs.Path
SourceList:[]
20210427node out :[]
20210427node :$r12 = r4[1]
20210427node in :[]
普通复制语句1112:$r12 = r4[1]
[taint source] u:r4
SourceList:[]
[taint source] u:1
SourceList:[]
[taint source] u:r4[1]
SourceList:[]
20210427node out :[]
20210427node :specialinvoke $r11.<org.apache.hadoop.fs.Path: void <init>(java.lang.String)>($r12)
20210427node in :[]
20210427node out :[]
[taint329]i invoke specialinvoke $r11.<org.apache.hadoop.fs.Path: void <init>(java.lang.String)>($r12)
[taint328]i invoke <org.apache.hadoop.fs.Path: void <init>(java.lang.String)>
[taint328]i invoke 1
value:$r12
isoutSetContains  false value:$r12 index:0
20210427node :staticinvoke <org.apache.hadoop.mapreduce.lib.output.FileOutputFormat: void setOutputPath(org.apache.hadoop.mapreduce.Job,org.apache.hadoop.fs.Path)>(r5, $r11)
20210427node in :[]
20210427node out :[]
[taint329]i invoke staticinvoke <org.apache.hadoop.mapreduce.lib.output.FileOutputFormat: void setOutputPath(org.apache.hadoop.mapreduce.Job,org.apache.hadoop.fs.Path)>(r5, $r11)
[taint328]i invoke <org.apache.hadoop.mapreduce.lib.output.FileOutputFormat: void setOutputPath(org.apache.hadoop.mapreduce.Job,org.apache.hadoop.fs.Path)>
[taint328]i invoke 2
value:r5
isoutSetContains  false value:r5 index:0
value:$r11
isoutSetContains  false value:$r11 index:1
20210427node :$z0 = virtualinvoke r5.<org.apache.hadoop.mapreduce.Job: boolean waitForCompletion(boolean)>(1)
20210427node in :[]
调用语句赋值给变量:$z0 = virtualinvoke r5.<org.apache.hadoop.mapreduce.Job: boolean waitForCompletion(boolean)>(1)
20210427node out :[]
[taint328]a invoke <org.apache.hadoop.mapreduce.Job: boolean waitForCompletion(boolean)>
[taint328]a invoke 1
assi isoutSet  false value:1 index:0
20210427node :if $z0 == 0 goto $b2 = 1
20210427node in :[]
20210427node out :[]
Have
Stmt if :if $z0 == 0 goto $b2 = 1Stmt if value:$z0 == 0the value=$z0
the value=0
maintainValues.size0
ifValues1
20210427node :$b2 = 1
20210427node in :[]
普通复制语句1112:$b2 = 1
[taint source] u:1
SourceList:[]
20210427node out :[]
20210427node :$b2 = 0
20210427node in :[]
普通复制语句1112:$b2 = 0
[taint source] u:0
SourceList:[]
20210427node out :[]
20210427node :goto [?= b1 = $b2]
20210427node in :[]
20210427node out :[]
20210427node :b1 = $b2
20210427node in :[]
普通复制语句1112:b1 = $b2
[taint source] u:$b2
SourceList:[]
20210427node out :[]
20210427node :$l3 = staticinvoke <java.lang.System: long currentTimeMillis()>()
20210427node in :[]
调用语句赋值给变量:$l3 = staticinvoke <java.lang.System: long currentTimeMillis()>()
20210427node out :[]
[taint328]a invoke <java.lang.System: long currentTimeMillis()>
[taint328]a invoke 0
20210427node :$l4 = $l3 - l0
20210427node in :[]
普通复制语句1112:$l4 = $l3 - l0
[taint source] u:$l3
SourceList:[]
[taint source] u:l0
SourceList:[]
[taint source] u:$l3 - l0
SourceList:[]
20210427node out :[]
20210427node :$d1 = (double) $l4
20210427node in :[]
普通复制语句1112:$d1 = (double) $l4
[taint source] u:$l4
SourceList:[]
[taint source] u:(double) $l4
SourceList:[]
20210427node out :[]
20210427node :d0 = $d1 / 1000.0
20210427node in :[]
普通复制语句1112:d0 = $d1 / 1000.0
[taint source] u:$d1
SourceList:[]
[taint source] u:1000.0
SourceList:[]
[taint source] u:$d1 / 1000.0
SourceList:[]
20210427node out :[]
20210427node :$r13 = <java.lang.System: java.io.PrintStream out>
20210427node in :[]
普通复制语句1112:$r13 = <java.lang.System: java.io.PrintStream out>
[taint source] u:<java.lang.System: java.io.PrintStream out>
SourceList:[]
20210427node out :[]
20210427node :$r14 = new java.lang.StringBuilder
20210427node in :[]
普通复制语句1112:$r14 = new java.lang.StringBuilder
[taint source] u:new java.lang.StringBuilder
SourceList:[]
20210427node out :[]
20210427node :specialinvoke $r14.<java.lang.StringBuilder: void <init>()>()
20210427node in :[]
20210427node out :[]
[taint329]i invoke specialinvoke $r14.<java.lang.StringBuilder: void <init>()>()
[taint328]i invoke <java.lang.StringBuilder: void <init>()>
[taint328]i invoke 0
20210427node :$r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Job Finished in ")
20210427node in :[]
调用语句赋值给变量:$r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Job Finished in ")
20210427node out :[]
[taint328]a invoke <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
[taint328]a invoke 1
assi isoutSet  false value:"Job Finished in " index:0
20210427node :$r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(double)>(d0)
20210427node in :[]
调用语句赋值给变量:$r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(double)>(d0)
20210427node out :[]
[taint328]a invoke <java.lang.StringBuilder: java.lang.StringBuilder append(double)>
[taint328]a invoke 1
assi isoutSet  false value:d0 index:0
20210427node :$r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" seconds")
20210427node in :[]
调用语句赋值给变量:$r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" seconds")
20210427node out :[]
[taint328]a invoke <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
[taint328]a invoke 1
assi isoutSet  false value:" seconds" index:0
20210427node :$r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>()
20210427node in :[]
调用语句赋值给变量:$r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>()
20210427node out :[]
[taint328]a invoke <java.lang.StringBuilder: java.lang.String toString()>
[taint328]a invoke 0
20210427node :virtualinvoke $r13.<java.io.PrintStream: void println(java.lang.String)>($r18)
20210427node in :[]
20210427node out :[]
[taint329]i invoke virtualinvoke $r13.<java.io.PrintStream: void println(java.lang.String)>($r18)
[taint328]i invoke <java.io.PrintStream: void println(java.lang.String)>
[taint328]i invoke 1
value:$r18
isoutSetContains  false value:$r18 index:0
20210427node :staticinvoke <java.lang.System: void exit(int)>(b1)
20210427node in :[]
20210427node out :[]
[taint329]i invoke staticinvoke <java.lang.System: void exit(int)>(b1)
[taint328]i invoke <java.lang.System: void exit(int)>
[taint328]i invoke 1
value:b1
isoutSetContains  false value:b1 index:0
20210427node :return
20210427node in :[]
20210427node out :[]
analysis.outSet.size():0
[CFMAP]2021 After taintAnalysis:{cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}
The data isgggg 
<cfhider.WordCount: void main(java.lang.String[])>
The data isgggg cfhider.WordCount main [] {cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}  {cfhider.WordCount$IntSumReducer={reduce=[I@36b89925}, cfhider.WordCount$TokenizerMapper={map=[I@13ac188d}, cfhider.WordCount={main=[I@329b36cc}, invoker.SnowFlake={<init>=[I@2b9c332d, getNextMill=[I@1be3e5b9, getNewstmp=[I@7fe857bb}}
Coming...
doAnalysis Startingqqqqqqqq.....
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
[taint329]i invoke staticinvoke <java.lang.System: void exit(int)>(b1)
[taint328]i invoke <java.lang.System: void exit(int)>
[taint328]i invoke 1
value:b1
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
[taint329]i invoke virtualinvoke $r13.<java.io.PrintStream: void println(java.lang.String)>($r18)
[taint328]i invoke <java.io.PrintStream: void println(java.lang.String)>
[taint328]i invoke 1
value:$r18
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>()
currStmt left value20210420:$r18
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" seconds")
currStmt left value20210420:$r17
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(double)>(d0)
currStmt left value20210420:$r16
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Job Finished in ")
currStmt left value20210420:$r15
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
[taint329]i invoke specialinvoke $r14.<java.lang.StringBuilder: void <init>()>()
[taint328]i invoke <java.lang.StringBuilder: void <init>()>
[taint328]i invoke 0
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$r14 = new java.lang.StringBuilder
currStmt left value20210420:$r14
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$r13 = <java.lang.System: java.io.PrintStream out>
currStmt left value20210420:$r13
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:d0 = $d1 / 1000.0
currStmt left value20210420:d0
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$d1 = (double) $l4
currStmt left value20210420:$d1
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$l4 = $l3 - l0
currStmt left value20210420:$l4
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$l3 = staticinvoke <java.lang.System: long currentTimeMillis()>()
currStmt left value20210420:$l3
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:b1 = $b2
currStmt left value20210420:b1
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$b2 = 0
currStmt left value20210420:$b2
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$b2 = 1
currStmt left value20210420:$b2
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
Have
the value=$z0
the value=0
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$z0 = virtualinvoke r5.<org.apache.hadoop.mapreduce.Job: boolean waitForCompletion(boolean)>(1)
currStmt left value20210420:$z0
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
[taint329]i invoke staticinvoke <org.apache.hadoop.mapreduce.lib.output.FileOutputFormat: void setOutputPath(org.apache.hadoop.mapreduce.Job,org.apache.hadoop.fs.Path)>(r5, $r11)
[taint328]i invoke <org.apache.hadoop.mapreduce.lib.output.FileOutputFormat: void setOutputPath(org.apache.hadoop.mapreduce.Job,org.apache.hadoop.fs.Path)>
[taint328]i invoke 2
value:r5
value:$r11
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
[taint329]i invoke specialinvoke $r11.<org.apache.hadoop.fs.Path: void <init>(java.lang.String)>($r12)
[taint328]i invoke <org.apache.hadoop.fs.Path: void <init>(java.lang.String)>
[taint328]i invoke 1
value:$r12
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$r12 = r4[1]
currStmt left value20210420:$r12
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$r11 = new org.apache.hadoop.fs.Path
currStmt left value20210420:$r11
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
[taint329]i invoke staticinvoke <org.apache.hadoop.mapreduce.lib.input.FileInputFormat: void addInputPath(org.apache.hadoop.mapreduce.Job,org.apache.hadoop.fs.Path)>(r5, $r9)
[taint328]i invoke <org.apache.hadoop.mapreduce.lib.input.FileInputFormat: void addInputPath(org.apache.hadoop.mapreduce.Job,org.apache.hadoop.fs.Path)>
[taint328]i invoke 2
value:r5
value:$r9
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
[taint329]i invoke specialinvoke $r9.<org.apache.hadoop.fs.Path: void <init>(java.lang.String)>($r10)
[taint328]i invoke <org.apache.hadoop.fs.Path: void <init>(java.lang.String)>
[taint328]i invoke 1
value:$r10
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$r10 = r4[0]
currStmt left value20210420:$r10
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$r9 = new org.apache.hadoop.fs.Path
currStmt left value20210420:$r9
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
[taint329]i invoke virtualinvoke r5.<org.apache.hadoop.mapreduce.Job: void setOutputValueClass(java.lang.Class)>(class "org/apache/hadoop/io/IntWritable")
[taint328]i invoke <org.apache.hadoop.mapreduce.Job: void setOutputValueClass(java.lang.Class)>
[taint328]i invoke 1
value:class "org/apache/hadoop/io/IntWritable"
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
[taint329]i invoke virtualinvoke r5.<org.apache.hadoop.mapreduce.Job: void setOutputKeyClass(java.lang.Class)>(class "org/apache/hadoop/io/Text")
[taint328]i invoke <org.apache.hadoop.mapreduce.Job: void setOutputKeyClass(java.lang.Class)>
[taint328]i invoke 1
value:class "org/apache/hadoop/io/Text"
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
[taint329]i invoke virtualinvoke r5.<org.apache.hadoop.mapreduce.Job: void setReducerClass(java.lang.Class)>(class "cfhider/WordCount$IntSumReducer")
[taint328]i invoke <org.apache.hadoop.mapreduce.Job: void setReducerClass(java.lang.Class)>
[taint328]i invoke 1
value:class "cfhider/WordCount$IntSumReducer"
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
[taint329]i invoke virtualinvoke r5.<org.apache.hadoop.mapreduce.Job: void setCombinerClass(java.lang.Class)>(class "cfhider/WordCount$IntSumReducer")
[taint328]i invoke <org.apache.hadoop.mapreduce.Job: void setCombinerClass(java.lang.Class)>
[taint328]i invoke 1
value:class "cfhider/WordCount$IntSumReducer"
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
[taint329]i invoke virtualinvoke r5.<org.apache.hadoop.mapreduce.Job: void setMapperClass(java.lang.Class)>(class "cfhider/WordCount$TokenizerMapper")
[taint328]i invoke <org.apache.hadoop.mapreduce.Job: void setMapperClass(java.lang.Class)>
[taint328]i invoke 1
value:class "cfhider/WordCount$TokenizerMapper"
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
[taint329]i invoke virtualinvoke r5.<org.apache.hadoop.mapreduce.Job: void setJarByClass(java.lang.Class)>(class "cfhider/WordCount")
[taint328]i invoke <org.apache.hadoop.mapreduce.Job: void setJarByClass(java.lang.Class)>
[taint328]i invoke 1
value:class "cfhider/WordCount"
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:r5 = $r8
currStmt left value20210420:r5
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
[taint329]i invoke specialinvoke $r8.<org.apache.hadoop.mapreduce.Job: void <init>(org.apache.hadoop.conf.Configuration,java.lang.String)>(r2, "word count")
[taint328]i invoke <org.apache.hadoop.mapreduce.Job: void <init>(org.apache.hadoop.conf.Configuration,java.lang.String)>
[taint328]i invoke 2
value:r2
value:"word count"
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$r8 = new org.apache.hadoop.mapreduce.Job
currStmt left value20210420:$r8
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:l0 = staticinvoke <java.lang.System: long currentTimeMillis()>()
currStmt left value20210420:l0
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:r4 = virtualinvoke r3.<org.apache.hadoop.util.GenericOptionsParser: java.lang.String[] getRemainingArgs()>()
currStmt left value20210420:r4
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:r3 = $r7
currStmt left value20210420:r3
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
[taint329]i invoke specialinvoke $r7.<org.apache.hadoop.util.GenericOptionsParser: void <init>(org.apache.hadoop.conf.Configuration,java.lang.String[])>(r2, r0)
[taint328]i invoke <org.apache.hadoop.util.GenericOptionsParser: void <init>(org.apache.hadoop.conf.Configuration,java.lang.String[])>
[taint328]i invoke 2
value:r2
value:r0
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$r7 = new org.apache.hadoop.util.GenericOptionsParser
currStmt left value20210420:$r7
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:r2 = $r6
currStmt left value20210420:r2
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
[taint329]i invoke specialinvoke $r6.<org.apache.hadoop.conf.Configuration: void <init>()>()
[taint328]i invoke <org.apache.hadoop.conf.Configuration: void <init>()>
[taint328]i invoke 0
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$r6 = new org.apache.hadoop.conf.Configuration
currStmt left value20210420:$r6
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
[taint329]i invoke virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>("In this project, we test wordcount with SGX!\n")
[taint328]i invoke <java.io.PrintStream: void println(java.lang.String)>
[taint328]i invoke 1
value:"In this project, we test wordcount with SGX!\n"
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$r1 = <java.lang.System: java.io.PrintStream out>
currStmt left value20210420:$r1
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
doAnalysis endqqqqqqq.....
come here
[CFMAP]2021 After BackwardAnalysis:{cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}
[taint into] sootMethod: <init>
[]
class name :cfhider.WordCount
method name :<init>
method list :[]
clasname=cfhider.WordCount
methodname=<init>
sourcelist2021=[]
20210427node :r0 := @this: cfhider.WordCount
20210427node in :[]
20210427node out :[]
currStmt20210423:r0 := @this: cfhider.WordCount
20210427node :specialinvoke r0.<java.lang.Object: void <init>()>()
20210427node in :[]
20210427node out :[]
[taint329]i invoke specialinvoke r0.<java.lang.Object: void <init>()>()
[taint328]i invoke <java.lang.Object: void <init>()>
[taint328]i invoke 0
20210427node :return
20210427node in :[]
20210427node out :[]
analysis.outSet.size():0
[CFMAP]2021 After taintAnalysis:{cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}
The data isgggg 
<cfhider.WordCount: void <init>()>
The data isgggg cfhider.WordCount <init> [] {cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}  {cfhider.WordCount$IntSumReducer={reduce=[I@36b89925}, cfhider.WordCount$TokenizerMapper={map=[I@13ac188d}, cfhider.WordCount={main=[I@329b36cc}, invoker.SnowFlake={<init>=[I@2b9c332d, getNextMill=[I@1be3e5b9, getNewstmp=[I@7fe857bb}}
Coming...
doAnalysis Startingqqqqqqqq.....
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
[taint329]i invoke specialinvoke r0.<java.lang.Object: void <init>()>()
[taint328]i invoke <java.lang.Object: void <init>()>
[taint328]i invoke 0
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
doAnalysis endqqqqqqq.....
come here
[CFMAP]2021 After BackwardAnalysis:{cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}
[taint into] sootMethod: main
[]
class name :cfhider.WordCount
method name :main
method list :[]
clasname=cfhider.WordCount
methodname=main
sourcelist2021=[]
20210427node :r0 := @parameter0: java.lang.String[]
20210427node in :[]
[idStmt]iiiiiii r0 := @parameter0: java.lang.String[]  index:0
ClassName:cfhider.WordCount
MethodName:main
aaaa:0
20210427node out :[]
currStmt20210423:r0 := @parameter0: java.lang.String[]
20210427node :$r1 = <java.lang.System: java.io.PrintStream out>
20210427node in :[]
普通复制语句1112:$r1 = <java.lang.System: java.io.PrintStream out>
[taint source] u:<java.lang.System: java.io.PrintStream out>
SourceList:[]
20210427node out :[]
20210427node :virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>("In this project, we test wordcount with SGX!\n")
20210427node in :[]
20210427node out :[]
[taint329]i invoke virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>("In this project, we test wordcount with SGX!\n")
[taint328]i invoke <java.io.PrintStream: void println(java.lang.String)>
[taint328]i invoke 1
value:"In this project, we test wordcount with SGX!\n"
isoutSetContains  false value:"In this project, we test wordcount with SGX!\n" index:0
20210427node :$r6 = new org.apache.hadoop.conf.Configuration
20210427node in :[]
普通复制语句1112:$r6 = new org.apache.hadoop.conf.Configuration
[taint source] u:new org.apache.hadoop.conf.Configuration
SourceList:[]
20210427node out :[]
20210427node :specialinvoke $r6.<org.apache.hadoop.conf.Configuration: void <init>()>()
20210427node in :[]
20210427node out :[]
[taint329]i invoke specialinvoke $r6.<org.apache.hadoop.conf.Configuration: void <init>()>()
[taint328]i invoke <org.apache.hadoop.conf.Configuration: void <init>()>
[taint328]i invoke 0
20210427node :r2 = $r6
20210427node in :[]
普通复制语句1112:r2 = $r6
[taint source] u:$r6
SourceList:[]
20210427node out :[]
20210427node :$r7 = new org.apache.hadoop.util.GenericOptionsParser
20210427node in :[]
普通复制语句1112:$r7 = new org.apache.hadoop.util.GenericOptionsParser
[taint source] u:new org.apache.hadoop.util.GenericOptionsParser
SourceList:[]
20210427node out :[]
20210427node :specialinvoke $r7.<org.apache.hadoop.util.GenericOptionsParser: void <init>(org.apache.hadoop.conf.Configuration,java.lang.String[])>(r2, r0)
20210427node in :[]
20210427node out :[]
[taint329]i invoke specialinvoke $r7.<org.apache.hadoop.util.GenericOptionsParser: void <init>(org.apache.hadoop.conf.Configuration,java.lang.String[])>(r2, r0)
[taint328]i invoke <org.apache.hadoop.util.GenericOptionsParser: void <init>(org.apache.hadoop.conf.Configuration,java.lang.String[])>
[taint328]i invoke 2
value:r2
isoutSetContains  false value:r2 index:0
value:r0
isoutSetContains  false value:r0 index:1
20210427node :r3 = $r7
20210427node in :[]
普通复制语句1112:r3 = $r7
[taint source] u:$r7
SourceList:[]
20210427node out :[]
20210427node :r4 = virtualinvoke r3.<org.apache.hadoop.util.GenericOptionsParser: java.lang.String[] getRemainingArgs()>()
20210427node in :[]
调用语句赋值给变量:r4 = virtualinvoke r3.<org.apache.hadoop.util.GenericOptionsParser: java.lang.String[] getRemainingArgs()>()
20210427node out :[]
[taint328]a invoke <org.apache.hadoop.util.GenericOptionsParser: java.lang.String[] getRemainingArgs()>
[taint328]a invoke 0
20210427node :l0 = staticinvoke <java.lang.System: long currentTimeMillis()>()
20210427node in :[]
调用语句赋值给变量:l0 = staticinvoke <java.lang.System: long currentTimeMillis()>()
20210427node out :[]
[taint328]a invoke <java.lang.System: long currentTimeMillis()>
[taint328]a invoke 0
20210427node :$r8 = new org.apache.hadoop.mapreduce.Job
20210427node in :[]
普通复制语句1112:$r8 = new org.apache.hadoop.mapreduce.Job
[taint source] u:new org.apache.hadoop.mapreduce.Job
SourceList:[]
20210427node out :[]
20210427node :specialinvoke $r8.<org.apache.hadoop.mapreduce.Job: void <init>(org.apache.hadoop.conf.Configuration,java.lang.String)>(r2, "word count")
20210427node in :[]
20210427node out :[]
[taint329]i invoke specialinvoke $r8.<org.apache.hadoop.mapreduce.Job: void <init>(org.apache.hadoop.conf.Configuration,java.lang.String)>(r2, "word count")
[taint328]i invoke <org.apache.hadoop.mapreduce.Job: void <init>(org.apache.hadoop.conf.Configuration,java.lang.String)>
[taint328]i invoke 2
value:r2
isoutSetContains  false value:r2 index:0
value:"word count"
isoutSetContains  false value:"word count" index:1
20210427node :r5 = $r8
20210427node in :[]
普通复制语句1112:r5 = $r8
[taint source] u:$r8
SourceList:[]
20210427node out :[]
20210427node :virtualinvoke r5.<org.apache.hadoop.mapreduce.Job: void setJarByClass(java.lang.Class)>(class "cfhider/WordCount")
20210427node in :[]
20210427node out :[]
[taint329]i invoke virtualinvoke r5.<org.apache.hadoop.mapreduce.Job: void setJarByClass(java.lang.Class)>(class "cfhider/WordCount")
[taint328]i invoke <org.apache.hadoop.mapreduce.Job: void setJarByClass(java.lang.Class)>
[taint328]i invoke 1
value:class "cfhider/WordCount"
isoutSetContains  false value:class "cfhider/WordCount" index:0
20210427node :virtualinvoke r5.<org.apache.hadoop.mapreduce.Job: void setMapperClass(java.lang.Class)>(class "cfhider/WordCount$TokenizerMapper")
20210427node in :[]
20210427node out :[]
[taint329]i invoke virtualinvoke r5.<org.apache.hadoop.mapreduce.Job: void setMapperClass(java.lang.Class)>(class "cfhider/WordCount$TokenizerMapper")
[taint328]i invoke <org.apache.hadoop.mapreduce.Job: void setMapperClass(java.lang.Class)>
[taint328]i invoke 1
value:class "cfhider/WordCount$TokenizerMapper"
isoutSetContains  false value:class "cfhider/WordCount$TokenizerMapper" index:0
20210427node :virtualinvoke r5.<org.apache.hadoop.mapreduce.Job: void setCombinerClass(java.lang.Class)>(class "cfhider/WordCount$IntSumReducer")
20210427node in :[]
20210427node out :[]
[taint329]i invoke virtualinvoke r5.<org.apache.hadoop.mapreduce.Job: void setCombinerClass(java.lang.Class)>(class "cfhider/WordCount$IntSumReducer")
[taint328]i invoke <org.apache.hadoop.mapreduce.Job: void setCombinerClass(java.lang.Class)>
[taint328]i invoke 1
value:class "cfhider/WordCount$IntSumReducer"
isoutSetContains  false value:class "cfhider/WordCount$IntSumReducer" index:0
20210427node :virtualinvoke r5.<org.apache.hadoop.mapreduce.Job: void setReducerClass(java.lang.Class)>(class "cfhider/WordCount$IntSumReducer")
20210427node in :[]
20210427node out :[]
[taint329]i invoke virtualinvoke r5.<org.apache.hadoop.mapreduce.Job: void setReducerClass(java.lang.Class)>(class "cfhider/WordCount$IntSumReducer")
[taint328]i invoke <org.apache.hadoop.mapreduce.Job: void setReducerClass(java.lang.Class)>
[taint328]i invoke 1
value:class "cfhider/WordCount$IntSumReducer"
isoutSetContains  false value:class "cfhider/WordCount$IntSumReducer" index:0
20210427node :virtualinvoke r5.<org.apache.hadoop.mapreduce.Job: void setOutputKeyClass(java.lang.Class)>(class "org/apache/hadoop/io/Text")
20210427node in :[]
20210427node out :[]
[taint329]i invoke virtualinvoke r5.<org.apache.hadoop.mapreduce.Job: void setOutputKeyClass(java.lang.Class)>(class "org/apache/hadoop/io/Text")
[taint328]i invoke <org.apache.hadoop.mapreduce.Job: void setOutputKeyClass(java.lang.Class)>
[taint328]i invoke 1
value:class "org/apache/hadoop/io/Text"
isoutSetContains  false value:class "org/apache/hadoop/io/Text" index:0
20210427node :virtualinvoke r5.<org.apache.hadoop.mapreduce.Job: void setOutputValueClass(java.lang.Class)>(class "org/apache/hadoop/io/IntWritable")
20210427node in :[]
20210427node out :[]
[taint329]i invoke virtualinvoke r5.<org.apache.hadoop.mapreduce.Job: void setOutputValueClass(java.lang.Class)>(class "org/apache/hadoop/io/IntWritable")
[taint328]i invoke <org.apache.hadoop.mapreduce.Job: void setOutputValueClass(java.lang.Class)>
[taint328]i invoke 1
value:class "org/apache/hadoop/io/IntWritable"
isoutSetContains  false value:class "org/apache/hadoop/io/IntWritable" index:0
20210427node :$r9 = new org.apache.hadoop.fs.Path
20210427node in :[]
普通复制语句1112:$r9 = new org.apache.hadoop.fs.Path
[taint source] u:new org.apache.hadoop.fs.Path
SourceList:[]
20210427node out :[]
20210427node :$r10 = r4[0]
20210427node in :[]
普通复制语句1112:$r10 = r4[0]
[taint source] u:r4
SourceList:[]
[taint source] u:0
SourceList:[]
[taint source] u:r4[0]
SourceList:[]
20210427node out :[]
20210427node :specialinvoke $r9.<org.apache.hadoop.fs.Path: void <init>(java.lang.String)>($r10)
20210427node in :[]
20210427node out :[]
[taint329]i invoke specialinvoke $r9.<org.apache.hadoop.fs.Path: void <init>(java.lang.String)>($r10)
[taint328]i invoke <org.apache.hadoop.fs.Path: void <init>(java.lang.String)>
[taint328]i invoke 1
value:$r10
isoutSetContains  false value:$r10 index:0
20210427node :staticinvoke <org.apache.hadoop.mapreduce.lib.input.FileInputFormat: void addInputPath(org.apache.hadoop.mapreduce.Job,org.apache.hadoop.fs.Path)>(r5, $r9)
20210427node in :[]
20210427node out :[]
[taint329]i invoke staticinvoke <org.apache.hadoop.mapreduce.lib.input.FileInputFormat: void addInputPath(org.apache.hadoop.mapreduce.Job,org.apache.hadoop.fs.Path)>(r5, $r9)
[taint328]i invoke <org.apache.hadoop.mapreduce.lib.input.FileInputFormat: void addInputPath(org.apache.hadoop.mapreduce.Job,org.apache.hadoop.fs.Path)>
[taint328]i invoke 2
value:r5
isoutSetContains  false value:r5 index:0
value:$r9
isoutSetContains  false value:$r9 index:1
20210427node :$r11 = new org.apache.hadoop.fs.Path
20210427node in :[]
普通复制语句1112:$r11 = new org.apache.hadoop.fs.Path
[taint source] u:new org.apache.hadoop.fs.Path
SourceList:[]
20210427node out :[]
20210427node :$r12 = r4[1]
20210427node in :[]
普通复制语句1112:$r12 = r4[1]
[taint source] u:r4
SourceList:[]
[taint source] u:1
SourceList:[]
[taint source] u:r4[1]
SourceList:[]
20210427node out :[]
20210427node :specialinvoke $r11.<org.apache.hadoop.fs.Path: void <init>(java.lang.String)>($r12)
20210427node in :[]
20210427node out :[]
[taint329]i invoke specialinvoke $r11.<org.apache.hadoop.fs.Path: void <init>(java.lang.String)>($r12)
[taint328]i invoke <org.apache.hadoop.fs.Path: void <init>(java.lang.String)>
[taint328]i invoke 1
value:$r12
isoutSetContains  false value:$r12 index:0
20210427node :staticinvoke <org.apache.hadoop.mapreduce.lib.output.FileOutputFormat: void setOutputPath(org.apache.hadoop.mapreduce.Job,org.apache.hadoop.fs.Path)>(r5, $r11)
20210427node in :[]
20210427node out :[]
[taint329]i invoke staticinvoke <org.apache.hadoop.mapreduce.lib.output.FileOutputFormat: void setOutputPath(org.apache.hadoop.mapreduce.Job,org.apache.hadoop.fs.Path)>(r5, $r11)
[taint328]i invoke <org.apache.hadoop.mapreduce.lib.output.FileOutputFormat: void setOutputPath(org.apache.hadoop.mapreduce.Job,org.apache.hadoop.fs.Path)>
[taint328]i invoke 2
value:r5
isoutSetContains  false value:r5 index:0
value:$r11
isoutSetContains  false value:$r11 index:1
20210427node :$z0 = virtualinvoke r5.<org.apache.hadoop.mapreduce.Job: boolean waitForCompletion(boolean)>(1)
20210427node in :[]
调用语句赋值给变量:$z0 = virtualinvoke r5.<org.apache.hadoop.mapreduce.Job: boolean waitForCompletion(boolean)>(1)
20210427node out :[]
[taint328]a invoke <org.apache.hadoop.mapreduce.Job: boolean waitForCompletion(boolean)>
[taint328]a invoke 1
assi isoutSet  false value:1 index:0
20210427node :if $z0 == 0 goto $b2 = 1
20210427node in :[]
20210427node out :[]
Have
Stmt if :if $z0 == 0 goto $b2 = 1Stmt if value:$z0 == 0the value=$z0
the value=0
maintainValues.size0
ifValues1
20210427node :$b2 = 1
20210427node in :[]
普通复制语句1112:$b2 = 1
[taint source] u:1
SourceList:[]
20210427node out :[]
20210427node :$b2 = 0
20210427node in :[]
普通复制语句1112:$b2 = 0
[taint source] u:0
SourceList:[]
20210427node out :[]
20210427node :goto [?= b1 = $b2]
20210427node in :[]
20210427node out :[]
20210427node :b1 = $b2
20210427node in :[]
普通复制语句1112:b1 = $b2
[taint source] u:$b2
SourceList:[]
20210427node out :[]
20210427node :$l3 = staticinvoke <java.lang.System: long currentTimeMillis()>()
20210427node in :[]
调用语句赋值给变量:$l3 = staticinvoke <java.lang.System: long currentTimeMillis()>()
20210427node out :[]
[taint328]a invoke <java.lang.System: long currentTimeMillis()>
[taint328]a invoke 0
20210427node :$l4 = $l3 - l0
20210427node in :[]
普通复制语句1112:$l4 = $l3 - l0
[taint source] u:$l3
SourceList:[]
[taint source] u:l0
SourceList:[]
[taint source] u:$l3 - l0
SourceList:[]
20210427node out :[]
20210427node :$d1 = (double) $l4
20210427node in :[]
普通复制语句1112:$d1 = (double) $l4
[taint source] u:$l4
SourceList:[]
[taint source] u:(double) $l4
SourceList:[]
20210427node out :[]
20210427node :d0 = $d1 / 1000.0
20210427node in :[]
普通复制语句1112:d0 = $d1 / 1000.0
[taint source] u:$d1
SourceList:[]
[taint source] u:1000.0
SourceList:[]
[taint source] u:$d1 / 1000.0
SourceList:[]
20210427node out :[]
20210427node :$r13 = <java.lang.System: java.io.PrintStream out>
20210427node in :[]
普通复制语句1112:$r13 = <java.lang.System: java.io.PrintStream out>
[taint source] u:<java.lang.System: java.io.PrintStream out>
SourceList:[]
20210427node out :[]
20210427node :$r14 = new java.lang.StringBuilder
20210427node in :[]
普通复制语句1112:$r14 = new java.lang.StringBuilder
[taint source] u:new java.lang.StringBuilder
SourceList:[]
20210427node out :[]
20210427node :specialinvoke $r14.<java.lang.StringBuilder: void <init>()>()
20210427node in :[]
20210427node out :[]
[taint329]i invoke specialinvoke $r14.<java.lang.StringBuilder: void <init>()>()
[taint328]i invoke <java.lang.StringBuilder: void <init>()>
[taint328]i invoke 0
20210427node :$r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Job Finished in ")
20210427node in :[]
调用语句赋值给变量:$r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Job Finished in ")
20210427node out :[]
[taint328]a invoke <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
[taint328]a invoke 1
assi isoutSet  false value:"Job Finished in " index:0
20210427node :$r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(double)>(d0)
20210427node in :[]
调用语句赋值给变量:$r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(double)>(d0)
20210427node out :[]
[taint328]a invoke <java.lang.StringBuilder: java.lang.StringBuilder append(double)>
[taint328]a invoke 1
assi isoutSet  false value:d0 index:0
20210427node :$r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" seconds")
20210427node in :[]
调用语句赋值给变量:$r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" seconds")
20210427node out :[]
[taint328]a invoke <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
[taint328]a invoke 1
assi isoutSet  false value:" seconds" index:0
20210427node :$r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>()
20210427node in :[]
调用语句赋值给变量:$r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>()
20210427node out :[]
[taint328]a invoke <java.lang.StringBuilder: java.lang.String toString()>
[taint328]a invoke 0
20210427node :virtualinvoke $r13.<java.io.PrintStream: void println(java.lang.String)>($r18)
20210427node in :[]
20210427node out :[]
[taint329]i invoke virtualinvoke $r13.<java.io.PrintStream: void println(java.lang.String)>($r18)
[taint328]i invoke <java.io.PrintStream: void println(java.lang.String)>
[taint328]i invoke 1
value:$r18
isoutSetContains  false value:$r18 index:0
20210427node :staticinvoke <java.lang.System: void exit(int)>(b1)
20210427node in :[]
20210427node out :[]
[taint329]i invoke staticinvoke <java.lang.System: void exit(int)>(b1)
[taint328]i invoke <java.lang.System: void exit(int)>
[taint328]i invoke 1
value:b1
isoutSetContains  false value:b1 index:0
20210427node :return
20210427node in :[]
20210427node out :[]
analysis.outSet.size():0
[CFMAP]2021 After taintAnalysis:{cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}
The data isgggg 
<cfhider.WordCount: void main(java.lang.String[])>
The data isgggg cfhider.WordCount main [] {cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}  {cfhider.WordCount$IntSumReducer={reduce=[I@36b89925}, cfhider.WordCount$TokenizerMapper={map=[I@13ac188d}, cfhider.WordCount={main=[I@6c2aa508}, invoker.SnowFlake={<init>=[I@2b9c332d, getNextMill=[I@1be3e5b9, getNewstmp=[I@7fe857bb}}
Coming...
doAnalysis Startingqqqqqqqq.....
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
[taint329]i invoke staticinvoke <java.lang.System: void exit(int)>(b1)
[taint328]i invoke <java.lang.System: void exit(int)>
[taint328]i invoke 1
value:b1
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
[taint329]i invoke virtualinvoke $r13.<java.io.PrintStream: void println(java.lang.String)>($r18)
[taint328]i invoke <java.io.PrintStream: void println(java.lang.String)>
[taint328]i invoke 1
value:$r18
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>()
currStmt left value20210420:$r18
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" seconds")
currStmt left value20210420:$r17
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(double)>(d0)
currStmt left value20210420:$r16
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Job Finished in ")
currStmt left value20210420:$r15
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
[taint329]i invoke specialinvoke $r14.<java.lang.StringBuilder: void <init>()>()
[taint328]i invoke <java.lang.StringBuilder: void <init>()>
[taint328]i invoke 0
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$r14 = new java.lang.StringBuilder
currStmt left value20210420:$r14
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$r13 = <java.lang.System: java.io.PrintStream out>
currStmt left value20210420:$r13
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:d0 = $d1 / 1000.0
currStmt left value20210420:d0
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$d1 = (double) $l4
currStmt left value20210420:$d1
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$l4 = $l3 - l0
currStmt left value20210420:$l4
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$l3 = staticinvoke <java.lang.System: long currentTimeMillis()>()
currStmt left value20210420:$l3
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:b1 = $b2
currStmt left value20210420:b1
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$b2 = 0
currStmt left value20210420:$b2
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$b2 = 1
currStmt left value20210420:$b2
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
Have
the value=$z0
the value=0
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$z0 = virtualinvoke r5.<org.apache.hadoop.mapreduce.Job: boolean waitForCompletion(boolean)>(1)
currStmt left value20210420:$z0
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
[taint329]i invoke staticinvoke <org.apache.hadoop.mapreduce.lib.output.FileOutputFormat: void setOutputPath(org.apache.hadoop.mapreduce.Job,org.apache.hadoop.fs.Path)>(r5, $r11)
[taint328]i invoke <org.apache.hadoop.mapreduce.lib.output.FileOutputFormat: void setOutputPath(org.apache.hadoop.mapreduce.Job,org.apache.hadoop.fs.Path)>
[taint328]i invoke 2
value:r5
value:$r11
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
[taint329]i invoke specialinvoke $r11.<org.apache.hadoop.fs.Path: void <init>(java.lang.String)>($r12)
[taint328]i invoke <org.apache.hadoop.fs.Path: void <init>(java.lang.String)>
[taint328]i invoke 1
value:$r12
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$r12 = r4[1]
currStmt left value20210420:$r12
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$r11 = new org.apache.hadoop.fs.Path
currStmt left value20210420:$r11
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
[taint329]i invoke staticinvoke <org.apache.hadoop.mapreduce.lib.input.FileInputFormat: void addInputPath(org.apache.hadoop.mapreduce.Job,org.apache.hadoop.fs.Path)>(r5, $r9)
[taint328]i invoke <org.apache.hadoop.mapreduce.lib.input.FileInputFormat: void addInputPath(org.apache.hadoop.mapreduce.Job,org.apache.hadoop.fs.Path)>
[taint328]i invoke 2
value:r5
value:$r9
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
[taint329]i invoke specialinvoke $r9.<org.apache.hadoop.fs.Path: void <init>(java.lang.String)>($r10)
[taint328]i invoke <org.apache.hadoop.fs.Path: void <init>(java.lang.String)>
[taint328]i invoke 1
value:$r10
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$r10 = r4[0]
currStmt left value20210420:$r10
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$r9 = new org.apache.hadoop.fs.Path
currStmt left value20210420:$r9
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
[taint329]i invoke virtualinvoke r5.<org.apache.hadoop.mapreduce.Job: void setOutputValueClass(java.lang.Class)>(class "org/apache/hadoop/io/IntWritable")
[taint328]i invoke <org.apache.hadoop.mapreduce.Job: void setOutputValueClass(java.lang.Class)>
[taint328]i invoke 1
value:class "org/apache/hadoop/io/IntWritable"
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
[taint329]i invoke virtualinvoke r5.<org.apache.hadoop.mapreduce.Job: void setOutputKeyClass(java.lang.Class)>(class "org/apache/hadoop/io/Text")
[taint328]i invoke <org.apache.hadoop.mapreduce.Job: void setOutputKeyClass(java.lang.Class)>
[taint328]i invoke 1
value:class "org/apache/hadoop/io/Text"
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
[taint329]i invoke virtualinvoke r5.<org.apache.hadoop.mapreduce.Job: void setReducerClass(java.lang.Class)>(class "cfhider/WordCount$IntSumReducer")
[taint328]i invoke <org.apache.hadoop.mapreduce.Job: void setReducerClass(java.lang.Class)>
[taint328]i invoke 1
value:class "cfhider/WordCount$IntSumReducer"
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
[taint329]i invoke virtualinvoke r5.<org.apache.hadoop.mapreduce.Job: void setCombinerClass(java.lang.Class)>(class "cfhider/WordCount$IntSumReducer")
[taint328]i invoke <org.apache.hadoop.mapreduce.Job: void setCombinerClass(java.lang.Class)>
[taint328]i invoke 1
value:class "cfhider/WordCount$IntSumReducer"
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
[taint329]i invoke virtualinvoke r5.<org.apache.hadoop.mapreduce.Job: void setMapperClass(java.lang.Class)>(class "cfhider/WordCount$TokenizerMapper")
[taint328]i invoke <org.apache.hadoop.mapreduce.Job: void setMapperClass(java.lang.Class)>
[taint328]i invoke 1
value:class "cfhider/WordCount$TokenizerMapper"
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
[taint329]i invoke virtualinvoke r5.<org.apache.hadoop.mapreduce.Job: void setJarByClass(java.lang.Class)>(class "cfhider/WordCount")
[taint328]i invoke <org.apache.hadoop.mapreduce.Job: void setJarByClass(java.lang.Class)>
[taint328]i invoke 1
value:class "cfhider/WordCount"
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:r5 = $r8
currStmt left value20210420:r5
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
[taint329]i invoke specialinvoke $r8.<org.apache.hadoop.mapreduce.Job: void <init>(org.apache.hadoop.conf.Configuration,java.lang.String)>(r2, "word count")
[taint328]i invoke <org.apache.hadoop.mapreduce.Job: void <init>(org.apache.hadoop.conf.Configuration,java.lang.String)>
[taint328]i invoke 2
value:r2
value:"word count"
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$r8 = new org.apache.hadoop.mapreduce.Job
currStmt left value20210420:$r8
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:l0 = staticinvoke <java.lang.System: long currentTimeMillis()>()
currStmt left value20210420:l0
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:r4 = virtualinvoke r3.<org.apache.hadoop.util.GenericOptionsParser: java.lang.String[] getRemainingArgs()>()
currStmt left value20210420:r4
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:r3 = $r7
currStmt left value20210420:r3
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
[taint329]i invoke specialinvoke $r7.<org.apache.hadoop.util.GenericOptionsParser: void <init>(org.apache.hadoop.conf.Configuration,java.lang.String[])>(r2, r0)
[taint328]i invoke <org.apache.hadoop.util.GenericOptionsParser: void <init>(org.apache.hadoop.conf.Configuration,java.lang.String[])>
[taint328]i invoke 2
value:r2
value:r0
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$r7 = new org.apache.hadoop.util.GenericOptionsParser
currStmt left value20210420:$r7
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:r2 = $r6
currStmt left value20210420:r2
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
[taint329]i invoke specialinvoke $r6.<org.apache.hadoop.conf.Configuration: void <init>()>()
[taint328]i invoke <org.apache.hadoop.conf.Configuration: void <init>()>
[taint328]i invoke 0
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$r6 = new org.apache.hadoop.conf.Configuration
currStmt left value20210420:$r6
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
[taint329]i invoke virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>("In this project, we test wordcount with SGX!\n")
[taint328]i invoke <java.io.PrintStream: void println(java.lang.String)>
[taint328]i invoke 1
value:"In this project, we test wordcount with SGX!\n"
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$r1 = <java.lang.System: java.io.PrintStream out>
currStmt left value20210420:$r1
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
doAnalysis endqqqqqqq.....
come here
[CFMAP]2021 After BackwardAnalysis:{cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}
[taint]SooClass:cfhider.WordCount$TokenizerMapper
[taint] class: cfhider.WordCount$TokenizerMapper
methList :{<init>=[], <clinit>=[], map=[$z0]}
[taint into] sootMethod: <init>
[]
class name :cfhider.WordCount$TokenizerMapper
method name :<init>
method list :[]
clasname=cfhider.WordCount$TokenizerMapper
methodname=<init>
sourcelist2021=[]
20210427node :r0 := @this: cfhider.WordCount$TokenizerMapper
20210427node in :[]
20210427node out :[]
currStmt20210423:r0 := @this: cfhider.WordCount$TokenizerMapper
20210427node :specialinvoke r0.<org.apache.hadoop.mapreduce.Mapper: void <init>()>()
20210427node in :[]
20210427node out :[]
[taint329]i invoke specialinvoke r0.<org.apache.hadoop.mapreduce.Mapper: void <init>()>()
[taint328]i invoke <org.apache.hadoop.mapreduce.Mapper: void <init>()>
[taint328]i invoke 0
20210427node :$r1 = new org.apache.hadoop.io.Text
20210427node in :[]
普通复制语句1112:$r1 = new org.apache.hadoop.io.Text
[taint source] u:new org.apache.hadoop.io.Text
SourceList:[]
20210427node out :[]
20210427node :specialinvoke $r1.<org.apache.hadoop.io.Text: void <init>()>()
20210427node in :[]
20210427node out :[]
[taint329]i invoke specialinvoke $r1.<org.apache.hadoop.io.Text: void <init>()>()
[taint328]i invoke <org.apache.hadoop.io.Text: void <init>()>
[taint328]i invoke 0
20210427node :r0.<cfhider.WordCount$TokenizerMapper: org.apache.hadoop.io.Text word> = $r1
20210427node in :[]
普通复制语句1112:r0.<cfhider.WordCount$TokenizerMapper: org.apache.hadoop.io.Text word> = $r1
[taint source] u:r0
SourceList:[]
[taint source] u:$r1
SourceList:[]
20210427node out :[]
20210427node :return
20210427node in :[]
20210427node out :[]
analysis.outSet.size():0
[CFMAP]2021 After taintAnalysis:{cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}
The data isgggg 
<cfhider.WordCount$TokenizerMapper: void <init>()>
The data isgggg cfhider.WordCount$TokenizerMapper <init> [] {cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}  {cfhider.WordCount$IntSumReducer={reduce=[I@36b89925}, cfhider.WordCount$TokenizerMapper={map=[I@13ac188d}, cfhider.WordCount={main=[I@6c2aa508}, invoker.SnowFlake={<init>=[I@2b9c332d, getNextMill=[I@1be3e5b9, getNewstmp=[I@7fe857bb}}
Coming...
doAnalysis Startingqqqqqqqq.....
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:r0.<cfhider.WordCount$TokenizerMapper: org.apache.hadoop.io.Text word> = $r1
currStmt left value20210420:r0.<cfhider.WordCount$TokenizerMapper: org.apache.hadoop.io.Text word>
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
[taint329]i invoke specialinvoke $r1.<org.apache.hadoop.io.Text: void <init>()>()
[taint328]i invoke <org.apache.hadoop.io.Text: void <init>()>
[taint328]i invoke 0
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$r1 = new org.apache.hadoop.io.Text
currStmt left value20210420:$r1
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
[taint329]i invoke specialinvoke r0.<org.apache.hadoop.mapreduce.Mapper: void <init>()>()
[taint328]i invoke <org.apache.hadoop.mapreduce.Mapper: void <init>()>
[taint328]i invoke 0
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
doAnalysis endqqqqqqq.....
come here
[CFMAP]2021 After BackwardAnalysis:{cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}
[taint into] sootMethod: map
[$z0]
class name :cfhider.WordCount$TokenizerMapper
method name :map
method list :[$z0]
clasname=cfhider.WordCount$TokenizerMapper
methodname=map
sourcelist2021=[$z0]
20210427node :r0 := @this: cfhider.WordCount$TokenizerMapper
20210427node in :[]
20210427node out :[]
currStmt20210423:r0 := @this: cfhider.WordCount$TokenizerMapper
20210427node :r1 := @parameter0: java.lang.Object
20210427node in :[]
[idStmt]iiiiiii r1 := @parameter0: java.lang.Object  index:0
ClassName:cfhider.WordCount$TokenizerMapper
MethodName:map
aaaa:0
20210427node out :[]
currStmt20210423:r1 := @parameter0: java.lang.Object
20210427node :r2 := @parameter1: org.apache.hadoop.io.Text
20210427node in :[]
[idStmt]iiiiiii r2 := @parameter1: org.apache.hadoop.io.Text  index:1
ClassName:cfhider.WordCount$TokenizerMapper
MethodName:map
aaaa:0
20210427node out :[]
currStmt20210423:r2 := @parameter1: org.apache.hadoop.io.Text
20210427node :r3 := @parameter2: org.apache.hadoop.mapreduce.Mapper$Context
20210427node in :[]
[idStmt]iiiiiii r3 := @parameter2: org.apache.hadoop.mapreduce.Mapper$Context  index:2
ClassName:cfhider.WordCount$TokenizerMapper
MethodName:map
aaaa:0
20210427node out :[]
currStmt20210423:r3 := @parameter2: org.apache.hadoop.mapreduce.Mapper$Context
20210427node :$r4 = new java.util.StringTokenizer
20210427node in :[]
普通复制语句1112:$r4 = new java.util.StringTokenizer
[taint source] u:new java.util.StringTokenizer
SourceList:[$z0]
20210427node out :[]
20210427node :$r6 = virtualinvoke r2.<org.apache.hadoop.io.Text: java.lang.String toString()>()
20210427node in :[]
调用语句赋值给变量:$r6 = virtualinvoke r2.<org.apache.hadoop.io.Text: java.lang.String toString()>()
20210427node out :[]
[taint328]a invoke <org.apache.hadoop.io.Text: java.lang.String toString()>
[taint328]a invoke 0
20210427node :specialinvoke $r4.<java.util.StringTokenizer: void <init>(java.lang.String)>($r6)
20210427node in :[]
20210427node out :[]
[taint329]i invoke specialinvoke $r4.<java.util.StringTokenizer: void <init>(java.lang.String)>($r6)
[taint328]i invoke <java.util.StringTokenizer: void <init>(java.lang.String)>
[taint328]i invoke 1
value:$r6
isoutSetContains  false value:$r6 index:0
20210427node :r5 = $r4
20210427node in :[]
普通复制语句1112:r5 = $r4
[taint source] u:$r4
SourceList:[$z0]
20210427node out :[]
20210427node :$z0 = virtualinvoke r5.<java.util.StringTokenizer: boolean hasMoreTokens()>()
20210427node in :[]
调用语句赋值给变量:$z0 = virtualinvoke r5.<java.util.StringTokenizer: boolean hasMoreTokens()>()
20210427node out :[]
[taint328]a invoke <java.util.StringTokenizer: boolean hasMoreTokens()>
[taint328]a invoke 0
20210427node :if $z0 == 0 goto return
20210427node in :[]
20210427node out :[]
Have
Stmt if :if $z0 == 0 goto returnStmt if value:$z0 == 0the value=$z0
the value=0
maintainValues.size1
ifValues1
20210427node :return
20210427node in :[]
20210427node out :[]
20210427node :$r7 = r0.<cfhider.WordCount$TokenizerMapper: org.apache.hadoop.io.Text word>
20210427node in :[]
普通复制语句1112:$r7 = r0.<cfhider.WordCount$TokenizerMapper: org.apache.hadoop.io.Text word>
[taint source] u:r0
SourceList:[$z0]
[taint source] u:r0.<cfhider.WordCount$TokenizerMapper: org.apache.hadoop.io.Text word>
SourceList:[$z0]
20210427node out :[]
20210427node :$r8 = virtualinvoke r5.<java.util.StringTokenizer: java.lang.String nextToken()>()
20210427node in :[]
调用语句赋值给变量:$r8 = virtualinvoke r5.<java.util.StringTokenizer: java.lang.String nextToken()>()
20210427node out :[]
[taint328]a invoke <java.util.StringTokenizer: java.lang.String nextToken()>
[taint328]a invoke 0
20210427node :virtualinvoke $r7.<org.apache.hadoop.io.Text: void set(java.lang.String)>($r8)
20210427node in :[]
20210427node out :[]
[taint329]i invoke virtualinvoke $r7.<org.apache.hadoop.io.Text: void set(java.lang.String)>($r8)
[taint328]i invoke <org.apache.hadoop.io.Text: void set(java.lang.String)>
[taint328]i invoke 1
value:$r8
isoutSetContains  false value:$r8 index:0
20210427node :$r9 = r0.<cfhider.WordCount$TokenizerMapper: org.apache.hadoop.io.Text word>
20210427node in :[]
普通复制语句1112:$r9 = r0.<cfhider.WordCount$TokenizerMapper: org.apache.hadoop.io.Text word>
[taint source] u:r0
SourceList:[$z0]
[taint source] u:r0.<cfhider.WordCount$TokenizerMapper: org.apache.hadoop.io.Text word>
SourceList:[$z0]
20210427node out :[]
20210427node :$r10 = <cfhider.WordCount$TokenizerMapper: org.apache.hadoop.io.IntWritable one>
20210427node in :[]
普通复制语句1112:$r10 = <cfhider.WordCount$TokenizerMapper: org.apache.hadoop.io.IntWritable one>
[taint source] u:<cfhider.WordCount$TokenizerMapper: org.apache.hadoop.io.IntWritable one>
SourceList:[$z0]
20210427node out :[]
20210427node :virtualinvoke r3.<org.apache.hadoop.mapreduce.Mapper$Context: void write(java.lang.Object,java.lang.Object)>($r9, $r10)
20210427node in :[]
20210427node out :[]
[taint329]i invoke virtualinvoke r3.<org.apache.hadoop.mapreduce.Mapper$Context: void write(java.lang.Object,java.lang.Object)>($r9, $r10)
[taint328]i invoke <org.apache.hadoop.mapreduce.TaskInputOutputContext: void write(java.lang.Object,java.lang.Object)>
[taint328]i invoke 2
value:$r9
isoutSetContains  false value:$r9 index:0
value:$r10
isoutSetContains  false value:$r10 index:1
20210427node :goto [?= $z0 = virtualinvoke r5.<java.util.StringTokenizer: boolean hasMoreTokens()>()]
20210427node in :[]
20210427node out :[]
analysis.outSet.size():0
[CFMAP]2021 After taintAnalysis:{cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}
The data isgggg 
<cfhider.WordCount$TokenizerMapper: void map(java.lang.Object,org.apache.hadoop.io.Text,org.apache.hadoop.mapreduce.Mapper$Context)>
The data isgggg cfhider.WordCount$TokenizerMapper map [$z0] {cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}  {cfhider.WordCount$IntSumReducer={reduce=[I@36b89925}, cfhider.WordCount$TokenizerMapper={map=[I@63b8e7b2}, cfhider.WordCount={main=[I@6c2aa508}, invoker.SnowFlake={<init>=[I@2b9c332d, getNextMill=[I@1be3e5b9, getNewstmp=[I@7fe857bb}}
Coming...
doAnalysis Startingqqqqqqqq.....
srcValue=[]
destValue:[]
taint data:[$z0]
Coming in Backward Analysis
srcValue=[]
destValue:[]
taint data:[$z0]
Coming in Backward Analysis
[taint329]i invoke virtualinvoke r3.<org.apache.hadoop.mapreduce.Mapper$Context: void write(java.lang.Object,java.lang.Object)>($r9, $r10)
[taint328]i invoke <org.apache.hadoop.mapreduce.TaskInputOutputContext: void write(java.lang.Object,java.lang.Object)>
[taint328]i invoke 2
value:$r9
value:$r10
srcValue=[]
destValue:[]
taint data:[$z0]
Coming in Backward Analysis
currStmt20210420:$r10 = <cfhider.WordCount$TokenizerMapper: org.apache.hadoop.io.IntWritable one>
currStmt left value20210420:$r10
srcValue=[]
destValue:[]
taint data:[$z0]
Coming in Backward Analysis
currStmt20210420:$r9 = r0.<cfhider.WordCount$TokenizerMapper: org.apache.hadoop.io.Text word>
currStmt left value20210420:$r9
srcValue=[]
destValue:[]
taint data:[$z0]
Coming in Backward Analysis
[taint329]i invoke virtualinvoke $r7.<org.apache.hadoop.io.Text: void set(java.lang.String)>($r8)
[taint328]i invoke <org.apache.hadoop.io.Text: void set(java.lang.String)>
[taint328]i invoke 1
value:$r8
srcValue=[]
destValue:[]
taint data:[$z0]
Coming in Backward Analysis
currStmt20210420:$r8 = virtualinvoke r5.<java.util.StringTokenizer: java.lang.String nextToken()>()
currStmt left value20210420:$r8
srcValue=[]
destValue:[]
taint data:[$z0]
Coming in Backward Analysis
currStmt20210420:$r7 = r0.<cfhider.WordCount$TokenizerMapper: org.apache.hadoop.io.Text word>
currStmt left value20210420:$r7
srcValue=[]
destValue:[]
taint data:[$z0]
Coming in Backward Analysis
srcValue=[]
destValue:[]
taint data:[$z0]
Coming in Backward Analysis
Have
the value=$z0
the value=0
srcValue=[]
destValue:[]
taint data:[$z0]
Coming in Backward Analysis
currStmt20210420:$z0 = virtualinvoke r5.<java.util.StringTokenizer: boolean hasMoreTokens()>()
currStmt left value20210420:$z0
BackWard 20210419===virtualinvoke r5.<java.util.StringTokenizer: boolean hasMoreTokens()>()
[BackWard taint329]i invoke $z0 = virtualinvoke r5.<java.util.StringTokenizer: boolean hasMoreTokens()>()
[BackWard taint328]i invoke <java.util.StringTokenizer: boolean hasMoreTokens()>
srcValue=[]
destValue:[]
taint data:[$z0]
Coming in Backward Analysis
currStmt20210420:r5 = $r4
currStmt left value20210420:r5
srcValue=[]
destValue:[]
taint data:[$z0]
Coming in Backward Analysis
[taint329]i invoke specialinvoke $r4.<java.util.StringTokenizer: void <init>(java.lang.String)>($r6)
[taint328]i invoke <java.util.StringTokenizer: void <init>(java.lang.String)>
[taint328]i invoke 1
value:$r6
srcValue=[]
destValue:[]
taint data:[$z0]
Coming in Backward Analysis
currStmt20210420:$r6 = virtualinvoke r2.<org.apache.hadoop.io.Text: java.lang.String toString()>()
currStmt left value20210420:$r6
srcValue=[]
destValue:[]
taint data:[$z0]
Coming in Backward Analysis
currStmt20210420:$r4 = new java.util.StringTokenizer
currStmt left value20210420:$r4
srcValue=[]
destValue:[]
taint data:[$z0]
Coming in Backward Analysis
srcValue=[]
destValue:[]
taint data:[$z0]
Coming in Backward Analysis
srcValue=[]
destValue:[]
taint data:[$z0]
Coming in Backward Analysis
srcValue=[]
destValue:[]
taint data:[$z0]
Coming in Backward Analysis
doAnalysis endqqqqqqq.....
come here
[CFMAP]2021 After BackwardAnalysis:{cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}
[taint into] sootMethod: map
[$z0]
class name :cfhider.WordCount$TokenizerMapper
method name :map
method list :[$z0]
clasname=cfhider.WordCount$TokenizerMapper
methodname=map
sourcelist2021=[$z0]
20210427node :r0 := @this: cfhider.WordCount$TokenizerMapper
20210427node in :[]
20210427node out :[]
currStmt20210423:r0 := @this: cfhider.WordCount$TokenizerMapper
20210427node :r1 := @parameter0: java.lang.Object
20210427node in :[]
[idStmt]iiiiiii r1 := @parameter0: java.lang.Object  index:0
ClassName:cfhider.WordCount$TokenizerMapper
MethodName:map
aaaa:0
20210427node out :[]
currStmt20210423:r1 := @parameter0: java.lang.Object
20210427node :r2 := @parameter1: java.lang.Object
20210427node in :[]
[idStmt]iiiiiii r2 := @parameter1: java.lang.Object  index:1
ClassName:cfhider.WordCount$TokenizerMapper
MethodName:map
aaaa:0
20210427node out :[]
currStmt20210423:r2 := @parameter1: java.lang.Object
20210427node :r3 := @parameter2: org.apache.hadoop.mapreduce.Mapper$Context
20210427node in :[]
[idStmt]iiiiiii r3 := @parameter2: org.apache.hadoop.mapreduce.Mapper$Context  index:2
ClassName:cfhider.WordCount$TokenizerMapper
MethodName:map
aaaa:0
20210427node out :[]
currStmt20210423:r3 := @parameter2: org.apache.hadoop.mapreduce.Mapper$Context
20210427node :$r4 = (org.apache.hadoop.io.Text) r2
20210427node in :[]
普通复制语句1112:$r4 = (org.apache.hadoop.io.Text) r2
[taint source] u:r2
SourceList:[$z0]
[taint source] u:(org.apache.hadoop.io.Text) r2
SourceList:[$z0]
20210427node out :[]
20210427node :virtualinvoke r0.<cfhider.WordCount$TokenizerMapper: void map(java.lang.Object,org.apache.hadoop.io.Text,org.apache.hadoop.mapreduce.Mapper$Context)>(r1, $r4, r3)
20210427node in :[]
20210427node out :[]
[taint329]i invoke virtualinvoke r0.<cfhider.WordCount$TokenizerMapper: void map(java.lang.Object,org.apache.hadoop.io.Text,org.apache.hadoop.mapreduce.Mapper$Context)>(r1, $r4, r3)
[taint328]i invoke <cfhider.WordCount$TokenizerMapper: void map(java.lang.Object,org.apache.hadoop.io.Text,org.apache.hadoop.mapreduce.Mapper$Context)>
[taint328]i invoke 3
value:r1
isoutSetContains  false value:r1 index:0
value:$r4
isoutSetContains  false value:$r4 index:1
value:r3
isoutSetContains  false value:r3 index:2
[invokemap]invoke:map  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
20210427node :return
20210427node in :[]
20210427node out :[]
analysis.outSet.size():0
[CFMAP]2021 After taintAnalysis:{cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}
The data isgggg 
<cfhider.WordCount$TokenizerMapper: void map(java.lang.Object,java.lang.Object,org.apache.hadoop.mapreduce.Mapper$Context)>
The data isgggg cfhider.WordCount$TokenizerMapper map [$z0] {cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}  {cfhider.WordCount$IntSumReducer={reduce=[I@36b89925}, cfhider.WordCount$TokenizerMapper={map=[I@738a44}, cfhider.WordCount={main=[I@6c2aa508}, invoker.SnowFlake={<init>=[I@2b9c332d, getNextMill=[I@1be3e5b9, getNewstmp=[I@7fe857bb}}
Coming...
doAnalysis Startingqqqqqqqq.....
srcValue=[]
destValue:[]
taint data:[$z0]
Coming in Backward Analysis
srcValue=[]
destValue:[]
taint data:[$z0]
Coming in Backward Analysis
[taint329]i invoke virtualinvoke r0.<cfhider.WordCount$TokenizerMapper: void map(java.lang.Object,org.apache.hadoop.io.Text,org.apache.hadoop.mapreduce.Mapper$Context)>(r1, $r4, r3)
[taint328]i invoke <cfhider.WordCount$TokenizerMapper: void map(java.lang.Object,org.apache.hadoop.io.Text,org.apache.hadoop.mapreduce.Mapper$Context)>
[taint328]i invoke 3
value:r1
in here:[I@217a7697
[invokemap]invoke:map  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
value:$r4
in here:[I@217a7697
[invokemap]invoke:map  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
value:r3
in here:[I@217a7697
[invokemap]invoke:map  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
srcValue=[]
destValue:[]
taint data:[$z0]
Coming in Backward Analysis
currStmt20210420:$r4 = (org.apache.hadoop.io.Text) r2
currStmt left value20210420:$r4
srcValue=[]
destValue:[]
taint data:[$z0]
Coming in Backward Analysis
srcValue=[]
destValue:[]
taint data:[$z0]
Coming in Backward Analysis
srcValue=[]
destValue:[]
taint data:[$z0]
Coming in Backward Analysis
srcValue=[]
destValue:[]
taint data:[$z0]
Coming in Backward Analysis
doAnalysis endqqqqqqq.....
come here
[CFMAP]2021 After BackwardAnalysis:{cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}
[taint into] sootMethod: <clinit>
[]
class name :cfhider.WordCount$TokenizerMapper
method name :<clinit>
method list :[]
clasname=cfhider.WordCount$TokenizerMapper
methodname=<clinit>
sourcelist2021=[]
20210427node :$r0 = new org.apache.hadoop.io.IntWritable
20210427node in :[]
普通复制语句1112:$r0 = new org.apache.hadoop.io.IntWritable
[taint source] u:new org.apache.hadoop.io.IntWritable
SourceList:[]
20210427node out :[]
20210427node :specialinvoke $r0.<org.apache.hadoop.io.IntWritable: void <init>(int)>(1)
20210427node in :[]
20210427node out :[]
[taint329]i invoke specialinvoke $r0.<org.apache.hadoop.io.IntWritable: void <init>(int)>(1)
[taint328]i invoke <org.apache.hadoop.io.IntWritable: void <init>(int)>
[taint328]i invoke 1
value:1
isoutSetContains  false value:1 index:0
20210427node :<cfhider.WordCount$TokenizerMapper: org.apache.hadoop.io.IntWritable one> = $r0
20210427node in :[]
普通复制语句1112:<cfhider.WordCount$TokenizerMapper: org.apache.hadoop.io.IntWritable one> = $r0
[taint source] u:$r0
SourceList:[]
20210427node out :[]
20210427node :return
20210427node in :[]
20210427node out :[]
analysis.outSet.size():0
[CFMAP]2021 After taintAnalysis:{cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}
The data isgggg 
<cfhider.WordCount$TokenizerMapper: void <clinit>()>
The data isgggg cfhider.WordCount$TokenizerMapper <clinit> [] {cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}  {cfhider.WordCount$IntSumReducer={reduce=[I@36b89925}, cfhider.WordCount$TokenizerMapper={map=[I@738a44}, cfhider.WordCount={main=[I@6c2aa508}, invoker.SnowFlake={<init>=[I@2b9c332d, getNextMill=[I@1be3e5b9, getNewstmp=[I@7fe857bb}}
Coming...
doAnalysis Startingqqqqqqqq.....
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:<cfhider.WordCount$TokenizerMapper: org.apache.hadoop.io.IntWritable one> = $r0
currStmt left value20210420:<cfhider.WordCount$TokenizerMapper: org.apache.hadoop.io.IntWritable one>
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
[taint329]i invoke specialinvoke $r0.<org.apache.hadoop.io.IntWritable: void <init>(int)>(1)
[taint328]i invoke <org.apache.hadoop.io.IntWritable: void <init>(int)>
[taint328]i invoke 1
value:1
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$r0 = new org.apache.hadoop.io.IntWritable
currStmt left value20210420:$r0
doAnalysis endqqqqqqq.....
come here
[CFMAP]2021 After BackwardAnalysis:{cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}
[taint into] sootMethod: <init>
[]
class name :cfhider.WordCount$TokenizerMapper
method name :<init>
method list :[]
clasname=cfhider.WordCount$TokenizerMapper
methodname=<init>
sourcelist2021=[]
20210427node :r0 := @this: cfhider.WordCount$TokenizerMapper
20210427node in :[]
20210427node out :[]
currStmt20210423:r0 := @this: cfhider.WordCount$TokenizerMapper
20210427node :specialinvoke r0.<org.apache.hadoop.mapreduce.Mapper: void <init>()>()
20210427node in :[]
20210427node out :[]
[taint329]i invoke specialinvoke r0.<org.apache.hadoop.mapreduce.Mapper: void <init>()>()
[taint328]i invoke <org.apache.hadoop.mapreduce.Mapper: void <init>()>
[taint328]i invoke 0
20210427node :$r1 = new org.apache.hadoop.io.Text
20210427node in :[]
普通复制语句1112:$r1 = new org.apache.hadoop.io.Text
[taint source] u:new org.apache.hadoop.io.Text
SourceList:[]
20210427node out :[]
20210427node :specialinvoke $r1.<org.apache.hadoop.io.Text: void <init>()>()
20210427node in :[]
20210427node out :[]
[taint329]i invoke specialinvoke $r1.<org.apache.hadoop.io.Text: void <init>()>()
[taint328]i invoke <org.apache.hadoop.io.Text: void <init>()>
[taint328]i invoke 0
20210427node :r0.<cfhider.WordCount$TokenizerMapper: org.apache.hadoop.io.Text word> = $r1
20210427node in :[]
普通复制语句1112:r0.<cfhider.WordCount$TokenizerMapper: org.apache.hadoop.io.Text word> = $r1
[taint source] u:r0
SourceList:[]
[taint source] u:$r1
SourceList:[]
20210427node out :[]
20210427node :return
20210427node in :[]
20210427node out :[]
analysis.outSet.size():0
[CFMAP]2021 After taintAnalysis:{cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}
The data isgggg 
<cfhider.WordCount$TokenizerMapper: void <init>()>
The data isgggg cfhider.WordCount$TokenizerMapper <init> [] {cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}  {cfhider.WordCount$IntSumReducer={reduce=[I@36b89925}, cfhider.WordCount$TokenizerMapper={map=[I@738a44}, cfhider.WordCount={main=[I@6c2aa508}, invoker.SnowFlake={<init>=[I@2b9c332d, getNextMill=[I@1be3e5b9, getNewstmp=[I@7fe857bb}}
Coming...
doAnalysis Startingqqqqqqqq.....
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:r0.<cfhider.WordCount$TokenizerMapper: org.apache.hadoop.io.Text word> = $r1
currStmt left value20210420:r0.<cfhider.WordCount$TokenizerMapper: org.apache.hadoop.io.Text word>
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
[taint329]i invoke specialinvoke $r1.<org.apache.hadoop.io.Text: void <init>()>()
[taint328]i invoke <org.apache.hadoop.io.Text: void <init>()>
[taint328]i invoke 0
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$r1 = new org.apache.hadoop.io.Text
currStmt left value20210420:$r1
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
[taint329]i invoke specialinvoke r0.<org.apache.hadoop.mapreduce.Mapper: void <init>()>()
[taint328]i invoke <org.apache.hadoop.mapreduce.Mapper: void <init>()>
[taint328]i invoke 0
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
doAnalysis endqqqqqqq.....
come here
[CFMAP]2021 After BackwardAnalysis:{cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}
[taint into] sootMethod: map
[$z0]
class name :cfhider.WordCount$TokenizerMapper
method name :map
method list :[$z0]
clasname=cfhider.WordCount$TokenizerMapper
methodname=map
sourcelist2021=[$z0]
20210427node :r0 := @this: cfhider.WordCount$TokenizerMapper
20210427node in :[]
20210427node out :[]
currStmt20210423:r0 := @this: cfhider.WordCount$TokenizerMapper
20210427node :r1 := @parameter0: java.lang.Object
20210427node in :[]
[idStmt]iiiiiii r1 := @parameter0: java.lang.Object  index:0
ClassName:cfhider.WordCount$TokenizerMapper
MethodName:map
aaaa:0
20210427node out :[]
currStmt20210423:r1 := @parameter0: java.lang.Object
20210427node :r2 := @parameter1: org.apache.hadoop.io.Text
20210427node in :[]
[idStmt]iiiiiii r2 := @parameter1: org.apache.hadoop.io.Text  index:1
ClassName:cfhider.WordCount$TokenizerMapper
MethodName:map
aaaa:0
20210427node out :[]
currStmt20210423:r2 := @parameter1: org.apache.hadoop.io.Text
20210427node :r3 := @parameter2: org.apache.hadoop.mapreduce.Mapper$Context
20210427node in :[]
[idStmt]iiiiiii r3 := @parameter2: org.apache.hadoop.mapreduce.Mapper$Context  index:2
ClassName:cfhider.WordCount$TokenizerMapper
MethodName:map
aaaa:0
20210427node out :[]
currStmt20210423:r3 := @parameter2: org.apache.hadoop.mapreduce.Mapper$Context
20210427node :$r4 = new java.util.StringTokenizer
20210427node in :[]
普通复制语句1112:$r4 = new java.util.StringTokenizer
[taint source] u:new java.util.StringTokenizer
SourceList:[$z0]
20210427node out :[]
20210427node :$r6 = virtualinvoke r2.<org.apache.hadoop.io.Text: java.lang.String toString()>()
20210427node in :[]
调用语句赋值给变量:$r6 = virtualinvoke r2.<org.apache.hadoop.io.Text: java.lang.String toString()>()
20210427node out :[]
[taint328]a invoke <org.apache.hadoop.io.Text: java.lang.String toString()>
[taint328]a invoke 0
20210427node :specialinvoke $r4.<java.util.StringTokenizer: void <init>(java.lang.String)>($r6)
20210427node in :[]
20210427node out :[]
[taint329]i invoke specialinvoke $r4.<java.util.StringTokenizer: void <init>(java.lang.String)>($r6)
[taint328]i invoke <java.util.StringTokenizer: void <init>(java.lang.String)>
[taint328]i invoke 1
value:$r6
isoutSetContains  false value:$r6 index:0
20210427node :r5 = $r4
20210427node in :[]
普通复制语句1112:r5 = $r4
[taint source] u:$r4
SourceList:[$z0]
20210427node out :[]
20210427node :$z0 = virtualinvoke r5.<java.util.StringTokenizer: boolean hasMoreTokens()>()
20210427node in :[]
调用语句赋值给变量:$z0 = virtualinvoke r5.<java.util.StringTokenizer: boolean hasMoreTokens()>()
20210427node out :[]
[taint328]a invoke <java.util.StringTokenizer: boolean hasMoreTokens()>
[taint328]a invoke 0
20210427node :if $z0 == 0 goto return
20210427node in :[]
20210427node out :[]
Have
Stmt if :if $z0 == 0 goto returnStmt if value:$z0 == 0the value=$z0
the value=0
maintainValues.size1
ifValues1
20210427node :return
20210427node in :[]
20210427node out :[]
20210427node :$r7 = r0.<cfhider.WordCount$TokenizerMapper: org.apache.hadoop.io.Text word>
20210427node in :[]
普通复制语句1112:$r7 = r0.<cfhider.WordCount$TokenizerMapper: org.apache.hadoop.io.Text word>
[taint source] u:r0
SourceList:[$z0]
[taint source] u:r0.<cfhider.WordCount$TokenizerMapper: org.apache.hadoop.io.Text word>
SourceList:[$z0]
20210427node out :[]
20210427node :$r8 = virtualinvoke r5.<java.util.StringTokenizer: java.lang.String nextToken()>()
20210427node in :[]
调用语句赋值给变量:$r8 = virtualinvoke r5.<java.util.StringTokenizer: java.lang.String nextToken()>()
20210427node out :[]
[taint328]a invoke <java.util.StringTokenizer: java.lang.String nextToken()>
[taint328]a invoke 0
20210427node :virtualinvoke $r7.<org.apache.hadoop.io.Text: void set(java.lang.String)>($r8)
20210427node in :[]
20210427node out :[]
[taint329]i invoke virtualinvoke $r7.<org.apache.hadoop.io.Text: void set(java.lang.String)>($r8)
[taint328]i invoke <org.apache.hadoop.io.Text: void set(java.lang.String)>
[taint328]i invoke 1
value:$r8
isoutSetContains  false value:$r8 index:0
20210427node :$r9 = r0.<cfhider.WordCount$TokenizerMapper: org.apache.hadoop.io.Text word>
20210427node in :[]
普通复制语句1112:$r9 = r0.<cfhider.WordCount$TokenizerMapper: org.apache.hadoop.io.Text word>
[taint source] u:r0
SourceList:[$z0]
[taint source] u:r0.<cfhider.WordCount$TokenizerMapper: org.apache.hadoop.io.Text word>
SourceList:[$z0]
20210427node out :[]
20210427node :$r10 = <cfhider.WordCount$TokenizerMapper: org.apache.hadoop.io.IntWritable one>
20210427node in :[]
普通复制语句1112:$r10 = <cfhider.WordCount$TokenizerMapper: org.apache.hadoop.io.IntWritable one>
[taint source] u:<cfhider.WordCount$TokenizerMapper: org.apache.hadoop.io.IntWritable one>
SourceList:[$z0]
20210427node out :[]
20210427node :virtualinvoke r3.<org.apache.hadoop.mapreduce.Mapper$Context: void write(java.lang.Object,java.lang.Object)>($r9, $r10)
20210427node in :[]
20210427node out :[]
[taint329]i invoke virtualinvoke r3.<org.apache.hadoop.mapreduce.Mapper$Context: void write(java.lang.Object,java.lang.Object)>($r9, $r10)
[taint328]i invoke <org.apache.hadoop.mapreduce.TaskInputOutputContext: void write(java.lang.Object,java.lang.Object)>
[taint328]i invoke 2
value:$r9
isoutSetContains  false value:$r9 index:0
value:$r10
isoutSetContains  false value:$r10 index:1
20210427node :goto [?= $z0 = virtualinvoke r5.<java.util.StringTokenizer: boolean hasMoreTokens()>()]
20210427node in :[]
20210427node out :[]
analysis.outSet.size():0
[CFMAP]2021 After taintAnalysis:{cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}
The data isgggg 
<cfhider.WordCount$TokenizerMapper: void map(java.lang.Object,org.apache.hadoop.io.Text,org.apache.hadoop.mapreduce.Mapper$Context)>
The data isgggg cfhider.WordCount$TokenizerMapper map [$z0] {cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}  {cfhider.WordCount$IntSumReducer={reduce=[I@36b89925}, cfhider.WordCount$TokenizerMapper={map=[I@6effc4ac}, cfhider.WordCount={main=[I@6c2aa508}, invoker.SnowFlake={<init>=[I@2b9c332d, getNextMill=[I@1be3e5b9, getNewstmp=[I@7fe857bb}}
Coming...
doAnalysis Startingqqqqqqqq.....
srcValue=[]
destValue:[]
taint data:[$z0]
Coming in Backward Analysis
srcValue=[]
destValue:[]
taint data:[$z0]
Coming in Backward Analysis
[taint329]i invoke virtualinvoke r3.<org.apache.hadoop.mapreduce.Mapper$Context: void write(java.lang.Object,java.lang.Object)>($r9, $r10)
[taint328]i invoke <org.apache.hadoop.mapreduce.TaskInputOutputContext: void write(java.lang.Object,java.lang.Object)>
[taint328]i invoke 2
value:$r9
value:$r10
srcValue=[]
destValue:[]
taint data:[$z0]
Coming in Backward Analysis
currStmt20210420:$r10 = <cfhider.WordCount$TokenizerMapper: org.apache.hadoop.io.IntWritable one>
currStmt left value20210420:$r10
srcValue=[]
destValue:[]
taint data:[$z0]
Coming in Backward Analysis
currStmt20210420:$r9 = r0.<cfhider.WordCount$TokenizerMapper: org.apache.hadoop.io.Text word>
currStmt left value20210420:$r9
srcValue=[]
destValue:[]
taint data:[$z0]
Coming in Backward Analysis
[taint329]i invoke virtualinvoke $r7.<org.apache.hadoop.io.Text: void set(java.lang.String)>($r8)
[taint328]i invoke <org.apache.hadoop.io.Text: void set(java.lang.String)>
[taint328]i invoke 1
value:$r8
srcValue=[]
destValue:[]
taint data:[$z0]
Coming in Backward Analysis
currStmt20210420:$r8 = virtualinvoke r5.<java.util.StringTokenizer: java.lang.String nextToken()>()
currStmt left value20210420:$r8
srcValue=[]
destValue:[]
taint data:[$z0]
Coming in Backward Analysis
currStmt20210420:$r7 = r0.<cfhider.WordCount$TokenizerMapper: org.apache.hadoop.io.Text word>
currStmt left value20210420:$r7
srcValue=[]
destValue:[]
taint data:[$z0]
Coming in Backward Analysis
srcValue=[]
destValue:[]
taint data:[$z0]
Coming in Backward Analysis
Have
the value=$z0
the value=0
srcValue=[]
destValue:[]
taint data:[$z0]
Coming in Backward Analysis
currStmt20210420:$z0 = virtualinvoke r5.<java.util.StringTokenizer: boolean hasMoreTokens()>()
currStmt left value20210420:$z0
BackWard 20210419===virtualinvoke r5.<java.util.StringTokenizer: boolean hasMoreTokens()>()
[BackWard taint329]i invoke $z0 = virtualinvoke r5.<java.util.StringTokenizer: boolean hasMoreTokens()>()
[BackWard taint328]i invoke <java.util.StringTokenizer: boolean hasMoreTokens()>
srcValue=[]
destValue:[]
taint data:[$z0]
Coming in Backward Analysis
currStmt20210420:r5 = $r4
currStmt left value20210420:r5
srcValue=[]
destValue:[]
taint data:[$z0]
Coming in Backward Analysis
[taint329]i invoke specialinvoke $r4.<java.util.StringTokenizer: void <init>(java.lang.String)>($r6)
[taint328]i invoke <java.util.StringTokenizer: void <init>(java.lang.String)>
[taint328]i invoke 1
value:$r6
srcValue=[]
destValue:[]
taint data:[$z0]
Coming in Backward Analysis
currStmt20210420:$r6 = virtualinvoke r2.<org.apache.hadoop.io.Text: java.lang.String toString()>()
currStmt left value20210420:$r6
srcValue=[]
destValue:[]
taint data:[$z0]
Coming in Backward Analysis
currStmt20210420:$r4 = new java.util.StringTokenizer
currStmt left value20210420:$r4
srcValue=[]
destValue:[]
taint data:[$z0]
Coming in Backward Analysis
srcValue=[]
destValue:[]
taint data:[$z0]
Coming in Backward Analysis
srcValue=[]
destValue:[]
taint data:[$z0]
Coming in Backward Analysis
srcValue=[]
destValue:[]
taint data:[$z0]
Coming in Backward Analysis
doAnalysis endqqqqqqq.....
come here
[CFMAP]2021 After BackwardAnalysis:{cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}
[taint into] sootMethod: map
[$z0]
class name :cfhider.WordCount$TokenizerMapper
method name :map
method list :[$z0]
clasname=cfhider.WordCount$TokenizerMapper
methodname=map
sourcelist2021=[$z0]
20210427node :r0 := @this: cfhider.WordCount$TokenizerMapper
20210427node in :[]
20210427node out :[]
currStmt20210423:r0 := @this: cfhider.WordCount$TokenizerMapper
20210427node :r1 := @parameter0: java.lang.Object
20210427node in :[]
[idStmt]iiiiiii r1 := @parameter0: java.lang.Object  index:0
ClassName:cfhider.WordCount$TokenizerMapper
MethodName:map
aaaa:0
20210427node out :[]
currStmt20210423:r1 := @parameter0: java.lang.Object
20210427node :r2 := @parameter1: java.lang.Object
20210427node in :[]
[idStmt]iiiiiii r2 := @parameter1: java.lang.Object  index:1
ClassName:cfhider.WordCount$TokenizerMapper
MethodName:map
aaaa:0
20210427node out :[]
currStmt20210423:r2 := @parameter1: java.lang.Object
20210427node :r3 := @parameter2: org.apache.hadoop.mapreduce.Mapper$Context
20210427node in :[]
[idStmt]iiiiiii r3 := @parameter2: org.apache.hadoop.mapreduce.Mapper$Context  index:2
ClassName:cfhider.WordCount$TokenizerMapper
MethodName:map
aaaa:0
20210427node out :[]
currStmt20210423:r3 := @parameter2: org.apache.hadoop.mapreduce.Mapper$Context
20210427node :$r4 = (org.apache.hadoop.io.Text) r2
20210427node in :[]
普通复制语句1112:$r4 = (org.apache.hadoop.io.Text) r2
[taint source] u:r2
SourceList:[$z0]
[taint source] u:(org.apache.hadoop.io.Text) r2
SourceList:[$z0]
20210427node out :[]
20210427node :virtualinvoke r0.<cfhider.WordCount$TokenizerMapper: void map(java.lang.Object,org.apache.hadoop.io.Text,org.apache.hadoop.mapreduce.Mapper$Context)>(r1, $r4, r3)
20210427node in :[]
20210427node out :[]
[taint329]i invoke virtualinvoke r0.<cfhider.WordCount$TokenizerMapper: void map(java.lang.Object,org.apache.hadoop.io.Text,org.apache.hadoop.mapreduce.Mapper$Context)>(r1, $r4, r3)
[taint328]i invoke <cfhider.WordCount$TokenizerMapper: void map(java.lang.Object,org.apache.hadoop.io.Text,org.apache.hadoop.mapreduce.Mapper$Context)>
[taint328]i invoke 3
value:r1
isoutSetContains  false value:r1 index:0
value:$r4
isoutSetContains  false value:$r4 index:1
value:r3
isoutSetContains  false value:r3 index:2
[invokemap]invoke:map  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
20210427node :return
20210427node in :[]
20210427node out :[]
analysis.outSet.size():0
[CFMAP]2021 After taintAnalysis:{cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}
The data isgggg 
<cfhider.WordCount$TokenizerMapper: void map(java.lang.Object,java.lang.Object,org.apache.hadoop.mapreduce.Mapper$Context)>
The data isgggg cfhider.WordCount$TokenizerMapper map [$z0] {cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}  {cfhider.WordCount$IntSumReducer={reduce=[I@36b89925}, cfhider.WordCount$TokenizerMapper={map=[I@59c93122}, cfhider.WordCount={main=[I@6c2aa508}, invoker.SnowFlake={<init>=[I@2b9c332d, getNextMill=[I@1be3e5b9, getNewstmp=[I@7fe857bb}}
Coming...
doAnalysis Startingqqqqqqqq.....
srcValue=[]
destValue:[]
taint data:[$z0]
Coming in Backward Analysis
srcValue=[]
destValue:[]
taint data:[$z0]
Coming in Backward Analysis
[taint329]i invoke virtualinvoke r0.<cfhider.WordCount$TokenizerMapper: void map(java.lang.Object,org.apache.hadoop.io.Text,org.apache.hadoop.mapreduce.Mapper$Context)>(r1, $r4, r3)
[taint328]i invoke <cfhider.WordCount$TokenizerMapper: void map(java.lang.Object,org.apache.hadoop.io.Text,org.apache.hadoop.mapreduce.Mapper$Context)>
[taint328]i invoke 3
value:r1
in here:[I@27b8dd3b
[invokemap]invoke:map  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
value:$r4
in here:[I@27b8dd3b
[invokemap]invoke:map  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
value:r3
in here:[I@27b8dd3b
[invokemap]invoke:map  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
srcValue=[]
destValue:[]
taint data:[$z0]
Coming in Backward Analysis
currStmt20210420:$r4 = (org.apache.hadoop.io.Text) r2
currStmt left value20210420:$r4
srcValue=[]
destValue:[]
taint data:[$z0]
Coming in Backward Analysis
srcValue=[]
destValue:[]
taint data:[$z0]
Coming in Backward Analysis
srcValue=[]
destValue:[]
taint data:[$z0]
Coming in Backward Analysis
srcValue=[]
destValue:[]
taint data:[$z0]
Coming in Backward Analysis
doAnalysis endqqqqqqq.....
come here
[CFMAP]2021 After BackwardAnalysis:{cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}
[taint into] sootMethod: <clinit>
[]
class name :cfhider.WordCount$TokenizerMapper
method name :<clinit>
method list :[]
clasname=cfhider.WordCount$TokenizerMapper
methodname=<clinit>
sourcelist2021=[]
20210427node :$r0 = new org.apache.hadoop.io.IntWritable
20210427node in :[]
普通复制语句1112:$r0 = new org.apache.hadoop.io.IntWritable
[taint source] u:new org.apache.hadoop.io.IntWritable
SourceList:[]
20210427node out :[]
20210427node :specialinvoke $r0.<org.apache.hadoop.io.IntWritable: void <init>(int)>(1)
20210427node in :[]
20210427node out :[]
[taint329]i invoke specialinvoke $r0.<org.apache.hadoop.io.IntWritable: void <init>(int)>(1)
[taint328]i invoke <org.apache.hadoop.io.IntWritable: void <init>(int)>
[taint328]i invoke 1
value:1
isoutSetContains  false value:1 index:0
20210427node :<cfhider.WordCount$TokenizerMapper: org.apache.hadoop.io.IntWritable one> = $r0
20210427node in :[]
普通复制语句1112:<cfhider.WordCount$TokenizerMapper: org.apache.hadoop.io.IntWritable one> = $r0
[taint source] u:$r0
SourceList:[]
20210427node out :[]
20210427node :return
20210427node in :[]
20210427node out :[]
analysis.outSet.size():0
[CFMAP]2021 After taintAnalysis:{cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}
The data isgggg 
<cfhider.WordCount$TokenizerMapper: void <clinit>()>
The data isgggg cfhider.WordCount$TokenizerMapper <clinit> [] {cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}  {cfhider.WordCount$IntSumReducer={reduce=[I@36b89925}, cfhider.WordCount$TokenizerMapper={map=[I@59c93122}, cfhider.WordCount={main=[I@6c2aa508}, invoker.SnowFlake={<init>=[I@2b9c332d, getNextMill=[I@1be3e5b9, getNewstmp=[I@7fe857bb}}
Coming...
doAnalysis Startingqqqqqqqq.....
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:<cfhider.WordCount$TokenizerMapper: org.apache.hadoop.io.IntWritable one> = $r0
currStmt left value20210420:<cfhider.WordCount$TokenizerMapper: org.apache.hadoop.io.IntWritable one>
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
[taint329]i invoke specialinvoke $r0.<org.apache.hadoop.io.IntWritable: void <init>(int)>(1)
[taint328]i invoke <org.apache.hadoop.io.IntWritable: void <init>(int)>
[taint328]i invoke 1
value:1
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$r0 = new org.apache.hadoop.io.IntWritable
currStmt left value20210420:$r0
doAnalysis endqqqqqqq.....
come here
[CFMAP]2021 After BackwardAnalysis:{cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}
[taint into] sootMethod: <init>
[]
class name :cfhider.WordCount$TokenizerMapper
method name :<init>
method list :[]
clasname=cfhider.WordCount$TokenizerMapper
methodname=<init>
sourcelist2021=[]
20210427node :r0 := @this: cfhider.WordCount$TokenizerMapper
20210427node in :[]
20210427node out :[]
currStmt20210423:r0 := @this: cfhider.WordCount$TokenizerMapper
20210427node :specialinvoke r0.<org.apache.hadoop.mapreduce.Mapper: void <init>()>()
20210427node in :[]
20210427node out :[]
[taint329]i invoke specialinvoke r0.<org.apache.hadoop.mapreduce.Mapper: void <init>()>()
[taint328]i invoke <org.apache.hadoop.mapreduce.Mapper: void <init>()>
[taint328]i invoke 0
20210427node :$r1 = new org.apache.hadoop.io.Text
20210427node in :[]
普通复制语句1112:$r1 = new org.apache.hadoop.io.Text
[taint source] u:new org.apache.hadoop.io.Text
SourceList:[]
20210427node out :[]
20210427node :specialinvoke $r1.<org.apache.hadoop.io.Text: void <init>()>()
20210427node in :[]
20210427node out :[]
[taint329]i invoke specialinvoke $r1.<org.apache.hadoop.io.Text: void <init>()>()
[taint328]i invoke <org.apache.hadoop.io.Text: void <init>()>
[taint328]i invoke 0
20210427node :r0.<cfhider.WordCount$TokenizerMapper: org.apache.hadoop.io.Text word> = $r1
20210427node in :[]
普通复制语句1112:r0.<cfhider.WordCount$TokenizerMapper: org.apache.hadoop.io.Text word> = $r1
[taint source] u:r0
SourceList:[]
[taint source] u:$r1
SourceList:[]
20210427node out :[]
20210427node :return
20210427node in :[]
20210427node out :[]
analysis.outSet.size():0
[CFMAP]2021 After taintAnalysis:{cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}
The data isgggg 
<cfhider.WordCount$TokenizerMapper: void <init>()>
The data isgggg cfhider.WordCount$TokenizerMapper <init> [] {cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}  {cfhider.WordCount$IntSumReducer={reduce=[I@36b89925}, cfhider.WordCount$TokenizerMapper={map=[I@59c93122}, cfhider.WordCount={main=[I@6c2aa508}, invoker.SnowFlake={<init>=[I@2b9c332d, getNextMill=[I@1be3e5b9, getNewstmp=[I@7fe857bb}}
Coming...
doAnalysis Startingqqqqqqqq.....
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:r0.<cfhider.WordCount$TokenizerMapper: org.apache.hadoop.io.Text word> = $r1
currStmt left value20210420:r0.<cfhider.WordCount$TokenizerMapper: org.apache.hadoop.io.Text word>
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
[taint329]i invoke specialinvoke $r1.<org.apache.hadoop.io.Text: void <init>()>()
[taint328]i invoke <org.apache.hadoop.io.Text: void <init>()>
[taint328]i invoke 0
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$r1 = new org.apache.hadoop.io.Text
currStmt left value20210420:$r1
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
[taint329]i invoke specialinvoke r0.<org.apache.hadoop.mapreduce.Mapper: void <init>()>()
[taint328]i invoke <org.apache.hadoop.mapreduce.Mapper: void <init>()>
[taint328]i invoke 0
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
doAnalysis endqqqqqqq.....
come here
[CFMAP]2021 After BackwardAnalysis:{cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}
[taint into] sootMethod: map
[$z0]
class name :cfhider.WordCount$TokenizerMapper
method name :map
method list :[$z0]
clasname=cfhider.WordCount$TokenizerMapper
methodname=map
sourcelist2021=[$z0]
20210427node :r0 := @this: cfhider.WordCount$TokenizerMapper
20210427node in :[]
20210427node out :[]
currStmt20210423:r0 := @this: cfhider.WordCount$TokenizerMapper
20210427node :r1 := @parameter0: java.lang.Object
20210427node in :[]
[idStmt]iiiiiii r1 := @parameter0: java.lang.Object  index:0
ClassName:cfhider.WordCount$TokenizerMapper
MethodName:map
aaaa:0
20210427node out :[]
currStmt20210423:r1 := @parameter0: java.lang.Object
20210427node :r2 := @parameter1: org.apache.hadoop.io.Text
20210427node in :[]
[idStmt]iiiiiii r2 := @parameter1: org.apache.hadoop.io.Text  index:1
ClassName:cfhider.WordCount$TokenizerMapper
MethodName:map
aaaa:0
20210427node out :[]
currStmt20210423:r2 := @parameter1: org.apache.hadoop.io.Text
20210427node :r3 := @parameter2: org.apache.hadoop.mapreduce.Mapper$Context
20210427node in :[]
[idStmt]iiiiiii r3 := @parameter2: org.apache.hadoop.mapreduce.Mapper$Context  index:2
ClassName:cfhider.WordCount$TokenizerMapper
MethodName:map
aaaa:0
20210427node out :[]
currStmt20210423:r3 := @parameter2: org.apache.hadoop.mapreduce.Mapper$Context
20210427node :$r4 = new java.util.StringTokenizer
20210427node in :[]
普通复制语句1112:$r4 = new java.util.StringTokenizer
[taint source] u:new java.util.StringTokenizer
SourceList:[$z0]
20210427node out :[]
20210427node :$r6 = virtualinvoke r2.<org.apache.hadoop.io.Text: java.lang.String toString()>()
20210427node in :[]
调用语句赋值给变量:$r6 = virtualinvoke r2.<org.apache.hadoop.io.Text: java.lang.String toString()>()
20210427node out :[]
[taint328]a invoke <org.apache.hadoop.io.Text: java.lang.String toString()>
[taint328]a invoke 0
20210427node :specialinvoke $r4.<java.util.StringTokenizer: void <init>(java.lang.String)>($r6)
20210427node in :[]
20210427node out :[]
[taint329]i invoke specialinvoke $r4.<java.util.StringTokenizer: void <init>(java.lang.String)>($r6)
[taint328]i invoke <java.util.StringTokenizer: void <init>(java.lang.String)>
[taint328]i invoke 1
value:$r6
isoutSetContains  false value:$r6 index:0
20210427node :r5 = $r4
20210427node in :[]
普通复制语句1112:r5 = $r4
[taint source] u:$r4
SourceList:[$z0]
20210427node out :[]
20210427node :$z0 = virtualinvoke r5.<java.util.StringTokenizer: boolean hasMoreTokens()>()
20210427node in :[]
调用语句赋值给变量:$z0 = virtualinvoke r5.<java.util.StringTokenizer: boolean hasMoreTokens()>()
20210427node out :[]
[taint328]a invoke <java.util.StringTokenizer: boolean hasMoreTokens()>
[taint328]a invoke 0
20210427node :if $z0 == 0 goto return
20210427node in :[]
20210427node out :[]
Have
Stmt if :if $z0 == 0 goto returnStmt if value:$z0 == 0the value=$z0
the value=0
maintainValues.size1
ifValues1
20210427node :return
20210427node in :[]
20210427node out :[]
20210427node :$r7 = r0.<cfhider.WordCount$TokenizerMapper: org.apache.hadoop.io.Text word>
20210427node in :[]
普通复制语句1112:$r7 = r0.<cfhider.WordCount$TokenizerMapper: org.apache.hadoop.io.Text word>
[taint source] u:r0
SourceList:[$z0]
[taint source] u:r0.<cfhider.WordCount$TokenizerMapper: org.apache.hadoop.io.Text word>
SourceList:[$z0]
20210427node out :[]
20210427node :$r8 = virtualinvoke r5.<java.util.StringTokenizer: java.lang.String nextToken()>()
20210427node in :[]
调用语句赋值给变量:$r8 = virtualinvoke r5.<java.util.StringTokenizer: java.lang.String nextToken()>()
20210427node out :[]
[taint328]a invoke <java.util.StringTokenizer: java.lang.String nextToken()>
[taint328]a invoke 0
20210427node :virtualinvoke $r7.<org.apache.hadoop.io.Text: void set(java.lang.String)>($r8)
20210427node in :[]
20210427node out :[]
[taint329]i invoke virtualinvoke $r7.<org.apache.hadoop.io.Text: void set(java.lang.String)>($r8)
[taint328]i invoke <org.apache.hadoop.io.Text: void set(java.lang.String)>
[taint328]i invoke 1
value:$r8
isoutSetContains  false value:$r8 index:0
20210427node :$r9 = r0.<cfhider.WordCount$TokenizerMapper: org.apache.hadoop.io.Text word>
20210427node in :[]
普通复制语句1112:$r9 = r0.<cfhider.WordCount$TokenizerMapper: org.apache.hadoop.io.Text word>
[taint source] u:r0
SourceList:[$z0]
[taint source] u:r0.<cfhider.WordCount$TokenizerMapper: org.apache.hadoop.io.Text word>
SourceList:[$z0]
20210427node out :[]
20210427node :$r10 = <cfhider.WordCount$TokenizerMapper: org.apache.hadoop.io.IntWritable one>
20210427node in :[]
普通复制语句1112:$r10 = <cfhider.WordCount$TokenizerMapper: org.apache.hadoop.io.IntWritable one>
[taint source] u:<cfhider.WordCount$TokenizerMapper: org.apache.hadoop.io.IntWritable one>
SourceList:[$z0]
20210427node out :[]
20210427node :virtualinvoke r3.<org.apache.hadoop.mapreduce.Mapper$Context: void write(java.lang.Object,java.lang.Object)>($r9, $r10)
20210427node in :[]
20210427node out :[]
[taint329]i invoke virtualinvoke r3.<org.apache.hadoop.mapreduce.Mapper$Context: void write(java.lang.Object,java.lang.Object)>($r9, $r10)
[taint328]i invoke <org.apache.hadoop.mapreduce.TaskInputOutputContext: void write(java.lang.Object,java.lang.Object)>
[taint328]i invoke 2
value:$r9
isoutSetContains  false value:$r9 index:0
value:$r10
isoutSetContains  false value:$r10 index:1
20210427node :goto [?= $z0 = virtualinvoke r5.<java.util.StringTokenizer: boolean hasMoreTokens()>()]
20210427node in :[]
20210427node out :[]
analysis.outSet.size():0
[CFMAP]2021 After taintAnalysis:{cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}
The data isgggg 
<cfhider.WordCount$TokenizerMapper: void map(java.lang.Object,org.apache.hadoop.io.Text,org.apache.hadoop.mapreduce.Mapper$Context)>
The data isgggg cfhider.WordCount$TokenizerMapper map [$z0] {cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}  {cfhider.WordCount$IntSumReducer={reduce=[I@36b89925}, cfhider.WordCount$TokenizerMapper={map=[I@59c460dc}, cfhider.WordCount={main=[I@6c2aa508}, invoker.SnowFlake={<init>=[I@2b9c332d, getNextMill=[I@1be3e5b9, getNewstmp=[I@7fe857bb}}
Coming...
doAnalysis Startingqqqqqqqq.....
srcValue=[]
destValue:[]
taint data:[$z0]
Coming in Backward Analysis
srcValue=[]
destValue:[]
taint data:[$z0]
Coming in Backward Analysis
[taint329]i invoke virtualinvoke r3.<org.apache.hadoop.mapreduce.Mapper$Context: void write(java.lang.Object,java.lang.Object)>($r9, $r10)
[taint328]i invoke <org.apache.hadoop.mapreduce.TaskInputOutputContext: void write(java.lang.Object,java.lang.Object)>
[taint328]i invoke 2
value:$r9
value:$r10
srcValue=[]
destValue:[]
taint data:[$z0]
Coming in Backward Analysis
currStmt20210420:$r10 = <cfhider.WordCount$TokenizerMapper: org.apache.hadoop.io.IntWritable one>
currStmt left value20210420:$r10
srcValue=[]
destValue:[]
taint data:[$z0]
Coming in Backward Analysis
currStmt20210420:$r9 = r0.<cfhider.WordCount$TokenizerMapper: org.apache.hadoop.io.Text word>
currStmt left value20210420:$r9
srcValue=[]
destValue:[]
taint data:[$z0]
Coming in Backward Analysis
[taint329]i invoke virtualinvoke $r7.<org.apache.hadoop.io.Text: void set(java.lang.String)>($r8)
[taint328]i invoke <org.apache.hadoop.io.Text: void set(java.lang.String)>
[taint328]i invoke 1
value:$r8
srcValue=[]
destValue:[]
taint data:[$z0]
Coming in Backward Analysis
currStmt20210420:$r8 = virtualinvoke r5.<java.util.StringTokenizer: java.lang.String nextToken()>()
currStmt left value20210420:$r8
srcValue=[]
destValue:[]
taint data:[$z0]
Coming in Backward Analysis
currStmt20210420:$r7 = r0.<cfhider.WordCount$TokenizerMapper: org.apache.hadoop.io.Text word>
currStmt left value20210420:$r7
srcValue=[]
destValue:[]
taint data:[$z0]
Coming in Backward Analysis
srcValue=[]
destValue:[]
taint data:[$z0]
Coming in Backward Analysis
Have
the value=$z0
the value=0
srcValue=[]
destValue:[]
taint data:[$z0]
Coming in Backward Analysis
currStmt20210420:$z0 = virtualinvoke r5.<java.util.StringTokenizer: boolean hasMoreTokens()>()
currStmt left value20210420:$z0
BackWard 20210419===virtualinvoke r5.<java.util.StringTokenizer: boolean hasMoreTokens()>()
[BackWard taint329]i invoke $z0 = virtualinvoke r5.<java.util.StringTokenizer: boolean hasMoreTokens()>()
[BackWard taint328]i invoke <java.util.StringTokenizer: boolean hasMoreTokens()>
srcValue=[]
destValue:[]
taint data:[$z0]
Coming in Backward Analysis
currStmt20210420:r5 = $r4
currStmt left value20210420:r5
srcValue=[]
destValue:[]
taint data:[$z0]
Coming in Backward Analysis
[taint329]i invoke specialinvoke $r4.<java.util.StringTokenizer: void <init>(java.lang.String)>($r6)
[taint328]i invoke <java.util.StringTokenizer: void <init>(java.lang.String)>
[taint328]i invoke 1
value:$r6
srcValue=[]
destValue:[]
taint data:[$z0]
Coming in Backward Analysis
currStmt20210420:$r6 = virtualinvoke r2.<org.apache.hadoop.io.Text: java.lang.String toString()>()
currStmt left value20210420:$r6
srcValue=[]
destValue:[]
taint data:[$z0]
Coming in Backward Analysis
currStmt20210420:$r4 = new java.util.StringTokenizer
currStmt left value20210420:$r4
srcValue=[]
destValue:[]
taint data:[$z0]
Coming in Backward Analysis
srcValue=[]
destValue:[]
taint data:[$z0]
Coming in Backward Analysis
srcValue=[]
destValue:[]
taint data:[$z0]
Coming in Backward Analysis
srcValue=[]
destValue:[]
taint data:[$z0]
Coming in Backward Analysis
doAnalysis endqqqqqqq.....
come here
[CFMAP]2021 After BackwardAnalysis:{cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}
[taint into] sootMethod: map
[$z0]
class name :cfhider.WordCount$TokenizerMapper
method name :map
method list :[$z0]
clasname=cfhider.WordCount$TokenizerMapper
methodname=map
sourcelist2021=[$z0]
20210427node :r0 := @this: cfhider.WordCount$TokenizerMapper
20210427node in :[]
20210427node out :[]
currStmt20210423:r0 := @this: cfhider.WordCount$TokenizerMapper
20210427node :r1 := @parameter0: java.lang.Object
20210427node in :[]
[idStmt]iiiiiii r1 := @parameter0: java.lang.Object  index:0
ClassName:cfhider.WordCount$TokenizerMapper
MethodName:map
aaaa:0
20210427node out :[]
currStmt20210423:r1 := @parameter0: java.lang.Object
20210427node :r2 := @parameter1: java.lang.Object
20210427node in :[]
[idStmt]iiiiiii r2 := @parameter1: java.lang.Object  index:1
ClassName:cfhider.WordCount$TokenizerMapper
MethodName:map
aaaa:0
20210427node out :[]
currStmt20210423:r2 := @parameter1: java.lang.Object
20210427node :r3 := @parameter2: org.apache.hadoop.mapreduce.Mapper$Context
20210427node in :[]
[idStmt]iiiiiii r3 := @parameter2: org.apache.hadoop.mapreduce.Mapper$Context  index:2
ClassName:cfhider.WordCount$TokenizerMapper
MethodName:map
aaaa:0
20210427node out :[]
currStmt20210423:r3 := @parameter2: org.apache.hadoop.mapreduce.Mapper$Context
20210427node :$r4 = (org.apache.hadoop.io.Text) r2
20210427node in :[]
普通复制语句1112:$r4 = (org.apache.hadoop.io.Text) r2
[taint source] u:r2
SourceList:[$z0]
[taint source] u:(org.apache.hadoop.io.Text) r2
SourceList:[$z0]
20210427node out :[]
20210427node :virtualinvoke r0.<cfhider.WordCount$TokenizerMapper: void map(java.lang.Object,org.apache.hadoop.io.Text,org.apache.hadoop.mapreduce.Mapper$Context)>(r1, $r4, r3)
20210427node in :[]
20210427node out :[]
[taint329]i invoke virtualinvoke r0.<cfhider.WordCount$TokenizerMapper: void map(java.lang.Object,org.apache.hadoop.io.Text,org.apache.hadoop.mapreduce.Mapper$Context)>(r1, $r4, r3)
[taint328]i invoke <cfhider.WordCount$TokenizerMapper: void map(java.lang.Object,org.apache.hadoop.io.Text,org.apache.hadoop.mapreduce.Mapper$Context)>
[taint328]i invoke 3
value:r1
isoutSetContains  false value:r1 index:0
value:$r4
isoutSetContains  false value:$r4 index:1
value:r3
isoutSetContains  false value:r3 index:2
[invokemap]invoke:map  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
20210427node :return
20210427node in :[]
20210427node out :[]
analysis.outSet.size():0
[CFMAP]2021 After taintAnalysis:{cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}
The data isgggg 
<cfhider.WordCount$TokenizerMapper: void map(java.lang.Object,java.lang.Object,org.apache.hadoop.mapreduce.Mapper$Context)>
The data isgggg cfhider.WordCount$TokenizerMapper map [$z0] {cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}  {cfhider.WordCount$IntSumReducer={reduce=[I@36b89925}, cfhider.WordCount$TokenizerMapper={map=[I@6bb3398e}, cfhider.WordCount={main=[I@6c2aa508}, invoker.SnowFlake={<init>=[I@2b9c332d, getNextMill=[I@1be3e5b9, getNewstmp=[I@7fe857bb}}
Coming...
doAnalysis Startingqqqqqqqq.....
srcValue=[]
destValue:[]
taint data:[$z0]
Coming in Backward Analysis
srcValue=[]
destValue:[]
taint data:[$z0]
Coming in Backward Analysis
[taint329]i invoke virtualinvoke r0.<cfhider.WordCount$TokenizerMapper: void map(java.lang.Object,org.apache.hadoop.io.Text,org.apache.hadoop.mapreduce.Mapper$Context)>(r1, $r4, r3)
[taint328]i invoke <cfhider.WordCount$TokenizerMapper: void map(java.lang.Object,org.apache.hadoop.io.Text,org.apache.hadoop.mapreduce.Mapper$Context)>
[taint328]i invoke 3
value:r1
in here:[I@4387d0df
[invokemap]invoke:map  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
value:$r4
in here:[I@4387d0df
[invokemap]invoke:map  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
value:r3
in here:[I@4387d0df
[invokemap]invoke:map  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
srcValue=[]
destValue:[]
taint data:[$z0]
Coming in Backward Analysis
currStmt20210420:$r4 = (org.apache.hadoop.io.Text) r2
currStmt left value20210420:$r4
srcValue=[]
destValue:[]
taint data:[$z0]
Coming in Backward Analysis
srcValue=[]
destValue:[]
taint data:[$z0]
Coming in Backward Analysis
srcValue=[]
destValue:[]
taint data:[$z0]
Coming in Backward Analysis
srcValue=[]
destValue:[]
taint data:[$z0]
Coming in Backward Analysis
doAnalysis endqqqqqqq.....
come here
[CFMAP]2021 After BackwardAnalysis:{cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}
[taint into] sootMethod: <clinit>
[]
class name :cfhider.WordCount$TokenizerMapper
method name :<clinit>
method list :[]
clasname=cfhider.WordCount$TokenizerMapper
methodname=<clinit>
sourcelist2021=[]
20210427node :$r0 = new org.apache.hadoop.io.IntWritable
20210427node in :[]
普通复制语句1112:$r0 = new org.apache.hadoop.io.IntWritable
[taint source] u:new org.apache.hadoop.io.IntWritable
SourceList:[]
20210427node out :[]
20210427node :specialinvoke $r0.<org.apache.hadoop.io.IntWritable: void <init>(int)>(1)
20210427node in :[]
20210427node out :[]
[taint329]i invoke specialinvoke $r0.<org.apache.hadoop.io.IntWritable: void <init>(int)>(1)
[taint328]i invoke <org.apache.hadoop.io.IntWritable: void <init>(int)>
[taint328]i invoke 1
value:1
isoutSetContains  false value:1 index:0
20210427node :<cfhider.WordCount$TokenizerMapper: org.apache.hadoop.io.IntWritable one> = $r0
20210427node in :[]
普通复制语句1112:<cfhider.WordCount$TokenizerMapper: org.apache.hadoop.io.IntWritable one> = $r0
[taint source] u:$r0
SourceList:[]
20210427node out :[]
20210427node :return
20210427node in :[]
20210427node out :[]
analysis.outSet.size():0
[CFMAP]2021 After taintAnalysis:{cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}
The data isgggg 
<cfhider.WordCount$TokenizerMapper: void <clinit>()>
The data isgggg cfhider.WordCount$TokenizerMapper <clinit> [] {cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}  {cfhider.WordCount$IntSumReducer={reduce=[I@36b89925}, cfhider.WordCount$TokenizerMapper={map=[I@6bb3398e}, cfhider.WordCount={main=[I@6c2aa508}, invoker.SnowFlake={<init>=[I@2b9c332d, getNextMill=[I@1be3e5b9, getNewstmp=[I@7fe857bb}}
Coming...
doAnalysis Startingqqqqqqqq.....
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:<cfhider.WordCount$TokenizerMapper: org.apache.hadoop.io.IntWritable one> = $r0
currStmt left value20210420:<cfhider.WordCount$TokenizerMapper: org.apache.hadoop.io.IntWritable one>
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
[taint329]i invoke specialinvoke $r0.<org.apache.hadoop.io.IntWritable: void <init>(int)>(1)
[taint328]i invoke <org.apache.hadoop.io.IntWritable: void <init>(int)>
[taint328]i invoke 1
value:1
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$r0 = new org.apache.hadoop.io.IntWritable
currStmt left value20210420:$r0
doAnalysis endqqqqqqq.....
come here
[CFMAP]2021 After BackwardAnalysis:{cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}
[taint into] sootMethod: <init>
[]
class name :cfhider.WordCount$TokenizerMapper
method name :<init>
method list :[]
clasname=cfhider.WordCount$TokenizerMapper
methodname=<init>
sourcelist2021=[]
20210427node :r0 := @this: cfhider.WordCount$TokenizerMapper
20210427node in :[]
20210427node out :[]
currStmt20210423:r0 := @this: cfhider.WordCount$TokenizerMapper
20210427node :specialinvoke r0.<org.apache.hadoop.mapreduce.Mapper: void <init>()>()
20210427node in :[]
20210427node out :[]
[taint329]i invoke specialinvoke r0.<org.apache.hadoop.mapreduce.Mapper: void <init>()>()
[taint328]i invoke <org.apache.hadoop.mapreduce.Mapper: void <init>()>
[taint328]i invoke 0
20210427node :$r1 = new org.apache.hadoop.io.Text
20210427node in :[]
普通复制语句1112:$r1 = new org.apache.hadoop.io.Text
[taint source] u:new org.apache.hadoop.io.Text
SourceList:[]
20210427node out :[]
20210427node :specialinvoke $r1.<org.apache.hadoop.io.Text: void <init>()>()
20210427node in :[]
20210427node out :[]
[taint329]i invoke specialinvoke $r1.<org.apache.hadoop.io.Text: void <init>()>()
[taint328]i invoke <org.apache.hadoop.io.Text: void <init>()>
[taint328]i invoke 0
20210427node :r0.<cfhider.WordCount$TokenizerMapper: org.apache.hadoop.io.Text word> = $r1
20210427node in :[]
普通复制语句1112:r0.<cfhider.WordCount$TokenizerMapper: org.apache.hadoop.io.Text word> = $r1
[taint source] u:r0
SourceList:[]
[taint source] u:$r1
SourceList:[]
20210427node out :[]
20210427node :return
20210427node in :[]
20210427node out :[]
analysis.outSet.size():0
[CFMAP]2021 After taintAnalysis:{cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}
The data isgggg 
<cfhider.WordCount$TokenizerMapper: void <init>()>
The data isgggg cfhider.WordCount$TokenizerMapper <init> [] {cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}  {cfhider.WordCount$IntSumReducer={reduce=[I@36b89925}, cfhider.WordCount$TokenizerMapper={map=[I@6bb3398e}, cfhider.WordCount={main=[I@6c2aa508}, invoker.SnowFlake={<init>=[I@2b9c332d, getNextMill=[I@1be3e5b9, getNewstmp=[I@7fe857bb}}
Coming...
doAnalysis Startingqqqqqqqq.....
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:r0.<cfhider.WordCount$TokenizerMapper: org.apache.hadoop.io.Text word> = $r1
currStmt left value20210420:r0.<cfhider.WordCount$TokenizerMapper: org.apache.hadoop.io.Text word>
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
[taint329]i invoke specialinvoke $r1.<org.apache.hadoop.io.Text: void <init>()>()
[taint328]i invoke <org.apache.hadoop.io.Text: void <init>()>
[taint328]i invoke 0
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$r1 = new org.apache.hadoop.io.Text
currStmt left value20210420:$r1
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
[taint329]i invoke specialinvoke r0.<org.apache.hadoop.mapreduce.Mapper: void <init>()>()
[taint328]i invoke <org.apache.hadoop.mapreduce.Mapper: void <init>()>
[taint328]i invoke 0
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
doAnalysis endqqqqqqq.....
come here
[CFMAP]2021 After BackwardAnalysis:{cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}
[taint into] sootMethod: map
[$z0]
class name :cfhider.WordCount$TokenizerMapper
method name :map
method list :[$z0]
clasname=cfhider.WordCount$TokenizerMapper
methodname=map
sourcelist2021=[$z0]
20210427node :r0 := @this: cfhider.WordCount$TokenizerMapper
20210427node in :[]
20210427node out :[]
currStmt20210423:r0 := @this: cfhider.WordCount$TokenizerMapper
20210427node :r1 := @parameter0: java.lang.Object
20210427node in :[]
[idStmt]iiiiiii r1 := @parameter0: java.lang.Object  index:0
ClassName:cfhider.WordCount$TokenizerMapper
MethodName:map
aaaa:0
20210427node out :[]
currStmt20210423:r1 := @parameter0: java.lang.Object
20210427node :r2 := @parameter1: org.apache.hadoop.io.Text
20210427node in :[]
[idStmt]iiiiiii r2 := @parameter1: org.apache.hadoop.io.Text  index:1
ClassName:cfhider.WordCount$TokenizerMapper
MethodName:map
aaaa:0
20210427node out :[]
currStmt20210423:r2 := @parameter1: org.apache.hadoop.io.Text
20210427node :r3 := @parameter2: org.apache.hadoop.mapreduce.Mapper$Context
20210427node in :[]
[idStmt]iiiiiii r3 := @parameter2: org.apache.hadoop.mapreduce.Mapper$Context  index:2
ClassName:cfhider.WordCount$TokenizerMapper
MethodName:map
aaaa:0
20210427node out :[]
currStmt20210423:r3 := @parameter2: org.apache.hadoop.mapreduce.Mapper$Context
20210427node :$r4 = new java.util.StringTokenizer
20210427node in :[]
普通复制语句1112:$r4 = new java.util.StringTokenizer
[taint source] u:new java.util.StringTokenizer
SourceList:[$z0]
20210427node out :[]
20210427node :$r6 = virtualinvoke r2.<org.apache.hadoop.io.Text: java.lang.String toString()>()
20210427node in :[]
调用语句赋值给变量:$r6 = virtualinvoke r2.<org.apache.hadoop.io.Text: java.lang.String toString()>()
20210427node out :[]
[taint328]a invoke <org.apache.hadoop.io.Text: java.lang.String toString()>
[taint328]a invoke 0
20210427node :specialinvoke $r4.<java.util.StringTokenizer: void <init>(java.lang.String)>($r6)
20210427node in :[]
20210427node out :[]
[taint329]i invoke specialinvoke $r4.<java.util.StringTokenizer: void <init>(java.lang.String)>($r6)
[taint328]i invoke <java.util.StringTokenizer: void <init>(java.lang.String)>
[taint328]i invoke 1
value:$r6
isoutSetContains  false value:$r6 index:0
20210427node :r5 = $r4
20210427node in :[]
普通复制语句1112:r5 = $r4
[taint source] u:$r4
SourceList:[$z0]
20210427node out :[]
20210427node :$z0 = virtualinvoke r5.<java.util.StringTokenizer: boolean hasMoreTokens()>()
20210427node in :[]
调用语句赋值给变量:$z0 = virtualinvoke r5.<java.util.StringTokenizer: boolean hasMoreTokens()>()
20210427node out :[]
[taint328]a invoke <java.util.StringTokenizer: boolean hasMoreTokens()>
[taint328]a invoke 0
20210427node :if $z0 == 0 goto return
20210427node in :[]
20210427node out :[]
Have
Stmt if :if $z0 == 0 goto returnStmt if value:$z0 == 0the value=$z0
the value=0
maintainValues.size1
ifValues1
20210427node :return
20210427node in :[]
20210427node out :[]
20210427node :$r7 = r0.<cfhider.WordCount$TokenizerMapper: org.apache.hadoop.io.Text word>
20210427node in :[]
普通复制语句1112:$r7 = r0.<cfhider.WordCount$TokenizerMapper: org.apache.hadoop.io.Text word>
[taint source] u:r0
SourceList:[$z0]
[taint source] u:r0.<cfhider.WordCount$TokenizerMapper: org.apache.hadoop.io.Text word>
SourceList:[$z0]
20210427node out :[]
20210427node :$r8 = virtualinvoke r5.<java.util.StringTokenizer: java.lang.String nextToken()>()
20210427node in :[]
调用语句赋值给变量:$r8 = virtualinvoke r5.<java.util.StringTokenizer: java.lang.String nextToken()>()
20210427node out :[]
[taint328]a invoke <java.util.StringTokenizer: java.lang.String nextToken()>
[taint328]a invoke 0
20210427node :virtualinvoke $r7.<org.apache.hadoop.io.Text: void set(java.lang.String)>($r8)
20210427node in :[]
20210427node out :[]
[taint329]i invoke virtualinvoke $r7.<org.apache.hadoop.io.Text: void set(java.lang.String)>($r8)
[taint328]i invoke <org.apache.hadoop.io.Text: void set(java.lang.String)>
[taint328]i invoke 1
value:$r8
isoutSetContains  false value:$r8 index:0
20210427node :$r9 = r0.<cfhider.WordCount$TokenizerMapper: org.apache.hadoop.io.Text word>
20210427node in :[]
普通复制语句1112:$r9 = r0.<cfhider.WordCount$TokenizerMapper: org.apache.hadoop.io.Text word>
[taint source] u:r0
SourceList:[$z0]
[taint source] u:r0.<cfhider.WordCount$TokenizerMapper: org.apache.hadoop.io.Text word>
SourceList:[$z0]
20210427node out :[]
20210427node :$r10 = <cfhider.WordCount$TokenizerMapper: org.apache.hadoop.io.IntWritable one>
20210427node in :[]
普通复制语句1112:$r10 = <cfhider.WordCount$TokenizerMapper: org.apache.hadoop.io.IntWritable one>
[taint source] u:<cfhider.WordCount$TokenizerMapper: org.apache.hadoop.io.IntWritable one>
SourceList:[$z0]
20210427node out :[]
20210427node :virtualinvoke r3.<org.apache.hadoop.mapreduce.Mapper$Context: void write(java.lang.Object,java.lang.Object)>($r9, $r10)
20210427node in :[]
20210427node out :[]
[taint329]i invoke virtualinvoke r3.<org.apache.hadoop.mapreduce.Mapper$Context: void write(java.lang.Object,java.lang.Object)>($r9, $r10)
[taint328]i invoke <org.apache.hadoop.mapreduce.TaskInputOutputContext: void write(java.lang.Object,java.lang.Object)>
[taint328]i invoke 2
value:$r9
isoutSetContains  false value:$r9 index:0
value:$r10
isoutSetContains  false value:$r10 index:1
20210427node :goto [?= $z0 = virtualinvoke r5.<java.util.StringTokenizer: boolean hasMoreTokens()>()]
20210427node in :[]
20210427node out :[]
analysis.outSet.size():0
[CFMAP]2021 After taintAnalysis:{cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}
The data isgggg 
<cfhider.WordCount$TokenizerMapper: void map(java.lang.Object,org.apache.hadoop.io.Text,org.apache.hadoop.mapreduce.Mapper$Context)>
The data isgggg cfhider.WordCount$TokenizerMapper map [$z0] {cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}  {cfhider.WordCount$IntSumReducer={reduce=[I@36b89925}, cfhider.WordCount$TokenizerMapper={map=[I@9a2031c}, cfhider.WordCount={main=[I@6c2aa508}, invoker.SnowFlake={<init>=[I@2b9c332d, getNextMill=[I@1be3e5b9, getNewstmp=[I@7fe857bb}}
Coming...
doAnalysis Startingqqqqqqqq.....
srcValue=[]
destValue:[]
taint data:[$z0]
Coming in Backward Analysis
srcValue=[]
destValue:[]
taint data:[$z0]
Coming in Backward Analysis
[taint329]i invoke virtualinvoke r3.<org.apache.hadoop.mapreduce.Mapper$Context: void write(java.lang.Object,java.lang.Object)>($r9, $r10)
[taint328]i invoke <org.apache.hadoop.mapreduce.TaskInputOutputContext: void write(java.lang.Object,java.lang.Object)>
[taint328]i invoke 2
value:$r9
value:$r10
srcValue=[]
destValue:[]
taint data:[$z0]
Coming in Backward Analysis
currStmt20210420:$r10 = <cfhider.WordCount$TokenizerMapper: org.apache.hadoop.io.IntWritable one>
currStmt left value20210420:$r10
srcValue=[]
destValue:[]
taint data:[$z0]
Coming in Backward Analysis
currStmt20210420:$r9 = r0.<cfhider.WordCount$TokenizerMapper: org.apache.hadoop.io.Text word>
currStmt left value20210420:$r9
srcValue=[]
destValue:[]
taint data:[$z0]
Coming in Backward Analysis
[taint329]i invoke virtualinvoke $r7.<org.apache.hadoop.io.Text: void set(java.lang.String)>($r8)
[taint328]i invoke <org.apache.hadoop.io.Text: void set(java.lang.String)>
[taint328]i invoke 1
value:$r8
srcValue=[]
destValue:[]
taint data:[$z0]
Coming in Backward Analysis
currStmt20210420:$r8 = virtualinvoke r5.<java.util.StringTokenizer: java.lang.String nextToken()>()
currStmt left value20210420:$r8
srcValue=[]
destValue:[]
taint data:[$z0]
Coming in Backward Analysis
currStmt20210420:$r7 = r0.<cfhider.WordCount$TokenizerMapper: org.apache.hadoop.io.Text word>
currStmt left value20210420:$r7
srcValue=[]
destValue:[]
taint data:[$z0]
Coming in Backward Analysis
srcValue=[]
destValue:[]
taint data:[$z0]
Coming in Backward Analysis
Have
the value=$z0
the value=0
srcValue=[]
destValue:[]
taint data:[$z0]
Coming in Backward Analysis
currStmt20210420:$z0 = virtualinvoke r5.<java.util.StringTokenizer: boolean hasMoreTokens()>()
currStmt left value20210420:$z0
BackWard 20210419===virtualinvoke r5.<java.util.StringTokenizer: boolean hasMoreTokens()>()
[BackWard taint329]i invoke $z0 = virtualinvoke r5.<java.util.StringTokenizer: boolean hasMoreTokens()>()
[BackWard taint328]i invoke <java.util.StringTokenizer: boolean hasMoreTokens()>
srcValue=[]
destValue:[]
taint data:[$z0]
Coming in Backward Analysis
currStmt20210420:r5 = $r4
currStmt left value20210420:r5
srcValue=[]
destValue:[]
taint data:[$z0]
Coming in Backward Analysis
[taint329]i invoke specialinvoke $r4.<java.util.StringTokenizer: void <init>(java.lang.String)>($r6)
[taint328]i invoke <java.util.StringTokenizer: void <init>(java.lang.String)>
[taint328]i invoke 1
value:$r6
srcValue=[]
destValue:[]
taint data:[$z0]
Coming in Backward Analysis
currStmt20210420:$r6 = virtualinvoke r2.<org.apache.hadoop.io.Text: java.lang.String toString()>()
currStmt left value20210420:$r6
srcValue=[]
destValue:[]
taint data:[$z0]
Coming in Backward Analysis
currStmt20210420:$r4 = new java.util.StringTokenizer
currStmt left value20210420:$r4
srcValue=[]
destValue:[]
taint data:[$z0]
Coming in Backward Analysis
srcValue=[]
destValue:[]
taint data:[$z0]
Coming in Backward Analysis
srcValue=[]
destValue:[]
taint data:[$z0]
Coming in Backward Analysis
srcValue=[]
destValue:[]
taint data:[$z0]
Coming in Backward Analysis
doAnalysis endqqqqqqq.....
come here
[CFMAP]2021 After BackwardAnalysis:{cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}
[taint into] sootMethod: map
[$z0]
class name :cfhider.WordCount$TokenizerMapper
method name :map
method list :[$z0]
clasname=cfhider.WordCount$TokenizerMapper
methodname=map
sourcelist2021=[$z0]
20210427node :r0 := @this: cfhider.WordCount$TokenizerMapper
20210427node in :[]
20210427node out :[]
currStmt20210423:r0 := @this: cfhider.WordCount$TokenizerMapper
20210427node :r1 := @parameter0: java.lang.Object
20210427node in :[]
[idStmt]iiiiiii r1 := @parameter0: java.lang.Object  index:0
ClassName:cfhider.WordCount$TokenizerMapper
MethodName:map
aaaa:0
20210427node out :[]
currStmt20210423:r1 := @parameter0: java.lang.Object
20210427node :r2 := @parameter1: java.lang.Object
20210427node in :[]
[idStmt]iiiiiii r2 := @parameter1: java.lang.Object  index:1
ClassName:cfhider.WordCount$TokenizerMapper
MethodName:map
aaaa:0
20210427node out :[]
currStmt20210423:r2 := @parameter1: java.lang.Object
20210427node :r3 := @parameter2: org.apache.hadoop.mapreduce.Mapper$Context
20210427node in :[]
[idStmt]iiiiiii r3 := @parameter2: org.apache.hadoop.mapreduce.Mapper$Context  index:2
ClassName:cfhider.WordCount$TokenizerMapper
MethodName:map
aaaa:0
20210427node out :[]
currStmt20210423:r3 := @parameter2: org.apache.hadoop.mapreduce.Mapper$Context
20210427node :$r4 = (org.apache.hadoop.io.Text) r2
20210427node in :[]
普通复制语句1112:$r4 = (org.apache.hadoop.io.Text) r2
[taint source] u:r2
SourceList:[$z0]
[taint source] u:(org.apache.hadoop.io.Text) r2
SourceList:[$z0]
20210427node out :[]
20210427node :virtualinvoke r0.<cfhider.WordCount$TokenizerMapper: void map(java.lang.Object,org.apache.hadoop.io.Text,org.apache.hadoop.mapreduce.Mapper$Context)>(r1, $r4, r3)
20210427node in :[]
20210427node out :[]
[taint329]i invoke virtualinvoke r0.<cfhider.WordCount$TokenizerMapper: void map(java.lang.Object,org.apache.hadoop.io.Text,org.apache.hadoop.mapreduce.Mapper$Context)>(r1, $r4, r3)
[taint328]i invoke <cfhider.WordCount$TokenizerMapper: void map(java.lang.Object,org.apache.hadoop.io.Text,org.apache.hadoop.mapreduce.Mapper$Context)>
[taint328]i invoke 3
value:r1
isoutSetContains  false value:r1 index:0
value:$r4
isoutSetContains  false value:$r4 index:1
value:r3
isoutSetContains  false value:r3 index:2
[invokemap]invoke:map  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
20210427node :return
20210427node in :[]
20210427node out :[]
analysis.outSet.size():0
[CFMAP]2021 After taintAnalysis:{cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}
The data isgggg 
<cfhider.WordCount$TokenizerMapper: void map(java.lang.Object,java.lang.Object,org.apache.hadoop.mapreduce.Mapper$Context)>
The data isgggg cfhider.WordCount$TokenizerMapper map [$z0] {cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}  {cfhider.WordCount$IntSumReducer={reduce=[I@36b89925}, cfhider.WordCount$TokenizerMapper={map=[I@6b7a2834}, cfhider.WordCount={main=[I@6c2aa508}, invoker.SnowFlake={<init>=[I@2b9c332d, getNextMill=[I@1be3e5b9, getNewstmp=[I@7fe857bb}}
Coming...
doAnalysis Startingqqqqqqqq.....
srcValue=[]
destValue:[]
taint data:[$z0]
Coming in Backward Analysis
srcValue=[]
destValue:[]
taint data:[$z0]
Coming in Backward Analysis
[taint329]i invoke virtualinvoke r0.<cfhider.WordCount$TokenizerMapper: void map(java.lang.Object,org.apache.hadoop.io.Text,org.apache.hadoop.mapreduce.Mapper$Context)>(r1, $r4, r3)
[taint328]i invoke <cfhider.WordCount$TokenizerMapper: void map(java.lang.Object,org.apache.hadoop.io.Text,org.apache.hadoop.mapreduce.Mapper$Context)>
[taint328]i invoke 3
value:r1
in here:[I@20e5a50c
[invokemap]invoke:map  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
value:$r4
in here:[I@20e5a50c
[invokemap]invoke:map  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
value:r3
in here:[I@20e5a50c
[invokemap]invoke:map  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
srcValue=[]
destValue:[]
taint data:[$z0]
Coming in Backward Analysis
currStmt20210420:$r4 = (org.apache.hadoop.io.Text) r2
currStmt left value20210420:$r4
srcValue=[]
destValue:[]
taint data:[$z0]
Coming in Backward Analysis
srcValue=[]
destValue:[]
taint data:[$z0]
Coming in Backward Analysis
srcValue=[]
destValue:[]
taint data:[$z0]
Coming in Backward Analysis
srcValue=[]
destValue:[]
taint data:[$z0]
Coming in Backward Analysis
doAnalysis endqqqqqqq.....
come here
[CFMAP]2021 After BackwardAnalysis:{cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}
[taint into] sootMethod: <clinit>
[]
class name :cfhider.WordCount$TokenizerMapper
method name :<clinit>
method list :[]
clasname=cfhider.WordCount$TokenizerMapper
methodname=<clinit>
sourcelist2021=[]
20210427node :$r0 = new org.apache.hadoop.io.IntWritable
20210427node in :[]
普通复制语句1112:$r0 = new org.apache.hadoop.io.IntWritable
[taint source] u:new org.apache.hadoop.io.IntWritable
SourceList:[]
20210427node out :[]
20210427node :specialinvoke $r0.<org.apache.hadoop.io.IntWritable: void <init>(int)>(1)
20210427node in :[]
20210427node out :[]
[taint329]i invoke specialinvoke $r0.<org.apache.hadoop.io.IntWritable: void <init>(int)>(1)
[taint328]i invoke <org.apache.hadoop.io.IntWritable: void <init>(int)>
[taint328]i invoke 1
value:1
isoutSetContains  false value:1 index:0
20210427node :<cfhider.WordCount$TokenizerMapper: org.apache.hadoop.io.IntWritable one> = $r0
20210427node in :[]
普通复制语句1112:<cfhider.WordCount$TokenizerMapper: org.apache.hadoop.io.IntWritable one> = $r0
[taint source] u:$r0
SourceList:[]
20210427node out :[]
20210427node :return
20210427node in :[]
20210427node out :[]
analysis.outSet.size():0
[CFMAP]2021 After taintAnalysis:{cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}
The data isgggg 
<cfhider.WordCount$TokenizerMapper: void <clinit>()>
The data isgggg cfhider.WordCount$TokenizerMapper <clinit> [] {cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}  {cfhider.WordCount$IntSumReducer={reduce=[I@36b89925}, cfhider.WordCount$TokenizerMapper={map=[I@6b7a2834}, cfhider.WordCount={main=[I@6c2aa508}, invoker.SnowFlake={<init>=[I@2b9c332d, getNextMill=[I@1be3e5b9, getNewstmp=[I@7fe857bb}}
Coming...
doAnalysis Startingqqqqqqqq.....
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:<cfhider.WordCount$TokenizerMapper: org.apache.hadoop.io.IntWritable one> = $r0
currStmt left value20210420:<cfhider.WordCount$TokenizerMapper: org.apache.hadoop.io.IntWritable one>
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
[taint329]i invoke specialinvoke $r0.<org.apache.hadoop.io.IntWritable: void <init>(int)>(1)
[taint328]i invoke <org.apache.hadoop.io.IntWritable: void <init>(int)>
[taint328]i invoke 1
value:1
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$r0 = new org.apache.hadoop.io.IntWritable
currStmt left value20210420:$r0
doAnalysis endqqqqqqq.....
come here
[CFMAP]2021 After BackwardAnalysis:{cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}
[taint]SooClass:invoker.SnowFlake
[taint] class: invoker.SnowFlake
methList :{<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}
[taint into] sootMethod: <init>
[]
class name :invoker.SnowFlake
method name :<init>
method list :[]
clasname=invoker.SnowFlake
methodname=<init>
sourcelist2021=[]
20210427node :r0 := @this: invoker.SnowFlake
20210427node in :[]
20210427node out :[]
currStmt20210423:r0 := @this: invoker.SnowFlake
20210427node :l0 := @parameter0: long
20210427node in :[]
[idStmt]iiiiiii l0 := @parameter0: long  index:0
ClassName:invoker.SnowFlake
MethodName:<init>
aaaa:0
20210427node out :[]
currStmt20210423:l0 := @parameter0: long
20210427node :l1 := @parameter1: long
20210427node in :[]
[idStmt]iiiiiii l1 := @parameter1: long  index:1
ClassName:invoker.SnowFlake
MethodName:<init>
aaaa:0
20210427node out :[]
currStmt20210423:l1 := @parameter1: long
20210427node :specialinvoke r0.<java.lang.Object: void <init>()>()
20210427node in :[]
20210427node out :[]
[taint329]i invoke specialinvoke r0.<java.lang.Object: void <init>()>()
[taint328]i invoke <java.lang.Object: void <init>()>
[taint328]i invoke 0
20210427node :$b2 = l0 cmp 31L
20210427node in :[]
普通复制语句1112:$b2 = l0 cmp 31L
[taint source] u:l0
SourceList:[]
[taint source] u:31L
SourceList:[]
[taint source] u:l0 cmp 31L
SourceList:[]
20210427node out :[]
20210427node :if $b2 > 0 goto $r1 = new java.lang.IllegalArgumentException
20210427node in :[]
20210427node out :[]
Have
Stmt if :if $b2 > 0 goto $r1 = new java.lang.IllegalArgumentExceptionStmt if value:$b2 > 0the value=$b2
the value=0
maintainValues.size0
ifValues1
20210427node :$b3 = l0 cmp 0L
20210427node in :[]
普通复制语句1112:$b3 = l0 cmp 0L
[taint source] u:l0
SourceList:[]
[taint source] u:0L
SourceList:[]
[taint source] u:l0 cmp 0L
SourceList:[]
20210427node out :[]
20210427node :if $b3 >= 0 goto $b4 = l1 cmp 31L
20210427node in :[]
20210427node out :[]
Have
Stmt if :if $b3 >= 0 goto $b4 = l1 cmp 31LStmt if value:$b3 >= 0the value=$b3
the value=0
maintainValues.size0
ifValues1
20210427node :$b4 = l1 cmp 31L
20210427node in :[]
普通复制语句1112:$b4 = l1 cmp 31L
[taint source] u:l1
SourceList:[]
[taint source] u:31L
SourceList:[]
[taint source] u:l1 cmp 31L
SourceList:[]
20210427node out :[]
20210427node :if $b4 > 0 goto $r2 = new java.lang.IllegalArgumentException
20210427node in :[]
20210427node out :[]
Have
Stmt if :if $b4 > 0 goto $r2 = new java.lang.IllegalArgumentExceptionStmt if value:$b4 > 0the value=$b4
the value=0
maintainValues.size0
ifValues1
20210427node :$b5 = l1 cmp 0L
20210427node in :[]
普通复制语句1112:$b5 = l1 cmp 0L
[taint source] u:l1
SourceList:[]
[taint source] u:0L
SourceList:[]
[taint source] u:l1 cmp 0L
SourceList:[]
20210427node out :[]
20210427node :if $b5 >= 0 goto <invoker.SnowFlake: long datacenterId> = 0L
20210427node in :[]
20210427node out :[]
Have
Stmt if :if $b5 >= 0 goto <invoker.SnowFlake: long datacenterId> = 0LStmt if value:$b5 >= 0the value=$b5
the value=0
maintainValues.size0
ifValues1
20210427node :<invoker.SnowFlake: long datacenterId> = 0L
20210427node in :[]
普通复制语句1112:<invoker.SnowFlake: long datacenterId> = 0L
[taint source] u:0L
SourceList:[]
20210427node out :[]
20210427node :<invoker.SnowFlake: long machineId> = 0L
20210427node in :[]
普通复制语句1112:<invoker.SnowFlake: long machineId> = 0L
[taint source] u:0L
SourceList:[]
20210427node out :[]
20210427node :return
20210427node in :[]
20210427node out :[]
20210427node :$r2 = new java.lang.IllegalArgumentException
20210427node in :[]
普通复制语句1112:$r2 = new java.lang.IllegalArgumentException
[taint source] u:new java.lang.IllegalArgumentException
SourceList:[]
20210427node out :[]
20210427node :specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("machineId can\'t be greater than MAX_MACHINE_NUM or less than 0")
20210427node in :[]
20210427node out :[]
[taint329]i invoke specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("machineId can\'t be greater than MAX_MACHINE_NUM or less than 0")
[taint328]i invoke <java.lang.IllegalArgumentException: void <init>(java.lang.String)>
[taint328]i invoke 1
value:"machineId can\'t be greater than MAX_MACHINE_NUM or less than 0"
isoutSetContains  false value:"machineId can\'t be greater than MAX_MACHINE_NUM or less than 0" index:0
20210427node :throw $r2
20210427node in :[]
20210427node out :[]
20210427node :$r1 = new java.lang.IllegalArgumentException
20210427node in :[]
普通复制语句1112:$r1 = new java.lang.IllegalArgumentException
[taint source] u:new java.lang.IllegalArgumentException
SourceList:[]
20210427node out :[]
20210427node :specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("datacenterId can\'t be greater than MAX_DATACENTER_NUM or less than 0")
20210427node in :[]
20210427node out :[]
[taint329]i invoke specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("datacenterId can\'t be greater than MAX_DATACENTER_NUM or less than 0")
[taint328]i invoke <java.lang.IllegalArgumentException: void <init>(java.lang.String)>
[taint328]i invoke 1
value:"datacenterId can\'t be greater than MAX_DATACENTER_NUM or less than 0"
isoutSetContains  false value:"datacenterId can\'t be greater than MAX_DATACENTER_NUM or less than 0" index:0
20210427node :throw $r1
20210427node in :[]
20210427node out :[]
analysis.outSet.size():0
[CFMAP]2021 After taintAnalysis:{cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}
The data isgggg 
<invoker.SnowFlake: void <init>(long,long)>
The data isgggg invoker.SnowFlake <init> [] {cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}  {cfhider.WordCount$IntSumReducer={reduce=[I@36b89925}, cfhider.WordCount$TokenizerMapper={map=[I@6b7a2834}, cfhider.WordCount={main=[I@6c2aa508}, invoker.SnowFlake={<init>=[I@44b6c7b3, getNextMill=[I@1be3e5b9, getNewstmp=[I@7fe857bb}}
Coming...
doAnalysis Startingqqqqqqqq.....
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
[taint329]i invoke specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("datacenterId can\'t be greater than MAX_DATACENTER_NUM or less than 0")
[taint328]i invoke <java.lang.IllegalArgumentException: void <init>(java.lang.String)>
[taint328]i invoke 1
value:"datacenterId can\'t be greater than MAX_DATACENTER_NUM or less than 0"
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$r1 = new java.lang.IllegalArgumentException
currStmt left value20210420:$r1
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
[taint329]i invoke specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("machineId can\'t be greater than MAX_MACHINE_NUM or less than 0")
[taint328]i invoke <java.lang.IllegalArgumentException: void <init>(java.lang.String)>
[taint328]i invoke 1
value:"machineId can\'t be greater than MAX_MACHINE_NUM or less than 0"
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$r2 = new java.lang.IllegalArgumentException
currStmt left value20210420:$r2
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:<invoker.SnowFlake: long machineId> = 0L
currStmt left value20210420:<invoker.SnowFlake: long machineId>
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:<invoker.SnowFlake: long datacenterId> = 0L
currStmt left value20210420:<invoker.SnowFlake: long datacenterId>
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
Have
the value=$b5
the value=0
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$b5 = l1 cmp 0L
currStmt left value20210420:$b5
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
Have
the value=$b4
the value=0
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$b4 = l1 cmp 31L
currStmt left value20210420:$b4
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
Have
the value=$b3
the value=0
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$b3 = l0 cmp 0L
currStmt left value20210420:$b3
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
Have
the value=$b2
the value=0
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$b2 = l0 cmp 31L
currStmt left value20210420:$b2
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
[taint329]i invoke specialinvoke r0.<java.lang.Object: void <init>()>()
[taint328]i invoke <java.lang.Object: void <init>()>
[taint328]i invoke 0
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
doAnalysis endqqqqqqq.....
come here
[CFMAP]2021 After BackwardAnalysis:{cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}
[taint into] sootMethod: nextId
[]
class name :invoker.SnowFlake
method name :nextId
method list :[]
clasname=invoker.SnowFlake
methodname=nextId
sourcelist2021=[]
20210427node :l0 = staticinvoke <invoker.SnowFlake: long getNewstmp()>()
20210427node in :[]
调用语句赋值给变量:l0 = staticinvoke <invoker.SnowFlake: long getNewstmp()>()
Invokestmt:getNewstmp
20210427node out :[]
[taint328]a invoke <invoker.SnowFlake: long getNewstmp()>
[taint328]a invoke 0
[invokemap]invoke:getNewstmp  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
20210427node :$l1 = <invoker.SnowFlake: long lastStmp>
20210427node in :[]
普通复制语句1112:$l1 = <invoker.SnowFlake: long lastStmp>
[taint source] u:<invoker.SnowFlake: long lastStmp>
SourceList:[]
20210427node out :[]
20210427node :$b2 = l0 cmp $l1
20210427node in :[]
普通复制语句1112:$b2 = l0 cmp $l1
[taint source] u:l0
SourceList:[]
[taint source] u:$l1
SourceList:[]
[taint source] u:l0 cmp $l1
SourceList:[]
20210427node out :[]
20210427node :if $b2 >= 0 goto $l3 = <invoker.SnowFlake: long lastStmp>
20210427node in :[]
20210427node out :[]
Have
Stmt if :if $b2 >= 0 goto $l3 = <invoker.SnowFlake: long lastStmp>Stmt if value:$b2 >= 0the value=$b2
the value=0
maintainValues.size0
ifValues1
20210427node :$l3 = <invoker.SnowFlake: long lastStmp>
20210427node in :[]
普通复制语句1112:$l3 = <invoker.SnowFlake: long lastStmp>
[taint source] u:<invoker.SnowFlake: long lastStmp>
SourceList:[]
20210427node out :[]
20210427node :$b4 = l0 cmp $l3
20210427node in :[]
普通复制语句1112:$b4 = l0 cmp $l3
[taint source] u:l0
SourceList:[]
[taint source] u:$l3
SourceList:[]
[taint source] u:l0 cmp $l3
SourceList:[]
20210427node out :[]
20210427node :if $b4 != 0 goto <invoker.SnowFlake: long sequence> = 0L
20210427node in :[]
20210427node out :[]
Have
Stmt if :if $b4 != 0 goto <invoker.SnowFlake: long sequence> = 0LStmt if value:$b4 != 0the value=$b4
the value=0
maintainValues.size0
ifValues1
20210427node :<invoker.SnowFlake: long sequence> = 0L
20210427node in :[]
普通复制语句1112:<invoker.SnowFlake: long sequence> = 0L
[taint source] u:0L
SourceList:[]
20210427node out :[]
20210427node :$l5 = <invoker.SnowFlake: long sequence>
20210427node in :[]
普通复制语句1112:$l5 = <invoker.SnowFlake: long sequence>
[taint source] u:<invoker.SnowFlake: long sequence>
SourceList:[]
20210427node out :[]
20210427node :$l6 = $l5 + 1L
20210427node in :[]
普通复制语句1112:$l6 = $l5 + 1L
[taint source] u:$l5
SourceList:[]
[taint source] u:1L
SourceList:[]
[taint source] u:$l5 + 1L
SourceList:[]
20210427node out :[]
20210427node :$l7 = $l6 & 4095L
20210427node in :[]
普通复制语句1112:$l7 = $l6 & 4095L
[taint source] u:$l6
SourceList:[]
[taint source] u:4095L
SourceList:[]
[taint source] u:$l6 & 4095L
SourceList:[]
20210427node out :[]
20210427node :<invoker.SnowFlake: long sequence> = $l7
20210427node in :[]
普通复制语句1112:<invoker.SnowFlake: long sequence> = $l7
[taint source] u:$l7
SourceList:[]
20210427node out :[]
20210427node :$l8 = <invoker.SnowFlake: long sequence>
20210427node in :[]
普通复制语句1112:$l8 = <invoker.SnowFlake: long sequence>
[taint source] u:<invoker.SnowFlake: long sequence>
SourceList:[]
20210427node out :[]
20210427node :$b9 = $l8 cmp 0L
20210427node in :[]
普通复制语句1112:$b9 = $l8 cmp 0L
[taint source] u:$l8
SourceList:[]
[taint source] u:0L
SourceList:[]
[taint source] u:$l8 cmp 0L
SourceList:[]
20210427node out :[]
20210427node :if $b9 != 0 goto <invoker.SnowFlake: long lastStmp> = l0
20210427node in :[]
20210427node out :[]
Have
Stmt if :if $b9 != 0 goto <invoker.SnowFlake: long lastStmp> = l0Stmt if value:$b9 != 0the value=$b9
the value=0
maintainValues.size0
ifValues1
20210427node :l0 = staticinvoke <invoker.SnowFlake: long getNextMill()>()
20210427node in :[]
调用语句赋值给变量:l0 = staticinvoke <invoker.SnowFlake: long getNextMill()>()
Invokestmt:getNextMill
20210427node out :[]
[taint328]a invoke <invoker.SnowFlake: long getNextMill()>
[taint328]a invoke 0
[invokemap]invoke:getNextMill  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
20210427node :goto [?= <invoker.SnowFlake: long lastStmp> = l0]
20210427node in :[]
20210427node out :[]
20210427node :<invoker.SnowFlake: long lastStmp> = l0
20210427node in :[]
普通复制语句1112:<invoker.SnowFlake: long lastStmp> = l0
[taint source] u:l0
SourceList:[]
20210427node out :[]
20210427node :$l10 = l0 - 1480166465631L
20210427node in :[]
普通复制语句1112:$l10 = l0 - 1480166465631L
[taint source] u:l0
SourceList:[]
[taint source] u:1480166465631L
SourceList:[]
[taint source] u:l0 - 1480166465631L
SourceList:[]
20210427node out :[]
20210427node :$l11 = $l10 << 22
20210427node in :[]
普通复制语句1112:$l11 = $l10 << 22
[taint source] u:$l10
SourceList:[]
[taint source] u:22
SourceList:[]
[taint source] u:$l10 << 22
SourceList:[]
20210427node out :[]
20210427node :$l12 = <invoker.SnowFlake: long datacenterId>
20210427node in :[]
普通复制语句1112:$l12 = <invoker.SnowFlake: long datacenterId>
[taint source] u:<invoker.SnowFlake: long datacenterId>
SourceList:[]
20210427node out :[]
20210427node :$l13 = $l12 << 17
20210427node in :[]
普通复制语句1112:$l13 = $l12 << 17
[taint source] u:$l12
SourceList:[]
[taint source] u:17
SourceList:[]
[taint source] u:$l12 << 17
SourceList:[]
20210427node out :[]
20210427node :$l14 = $l11 | $l13
20210427node in :[]
普通复制语句1112:$l14 = $l11 | $l13
[taint source] u:$l11
SourceList:[]
[taint source] u:$l13
SourceList:[]
[taint source] u:$l11 | $l13
SourceList:[]
20210427node out :[]
20210427node :$l15 = <invoker.SnowFlake: long machineId>
20210427node in :[]
普通复制语句1112:$l15 = <invoker.SnowFlake: long machineId>
[taint source] u:<invoker.SnowFlake: long machineId>
SourceList:[]
20210427node out :[]
20210427node :$l16 = $l15 << 12
20210427node in :[]
普通复制语句1112:$l16 = $l15 << 12
[taint source] u:$l15
SourceList:[]
[taint source] u:12
SourceList:[]
[taint source] u:$l15 << 12
SourceList:[]
20210427node out :[]
20210427node :$l17 = $l14 | $l16
20210427node in :[]
普通复制语句1112:$l17 = $l14 | $l16
[taint source] u:$l14
SourceList:[]
[taint source] u:$l16
SourceList:[]
[taint source] u:$l14 | $l16
SourceList:[]
20210427node out :[]
20210427node :$l18 = <invoker.SnowFlake: long sequence>
20210427node in :[]
普通复制语句1112:$l18 = <invoker.SnowFlake: long sequence>
[taint source] u:<invoker.SnowFlake: long sequence>
SourceList:[]
20210427node out :[]
20210427node :$l19 = $l17 | $l18
20210427node in :[]
普通复制语句1112:$l19 = $l17 | $l18
[taint source] u:$l17
SourceList:[]
[taint source] u:$l18
SourceList:[]
[taint source] u:$l17 | $l18
SourceList:[]
20210427node out :[]
20210427node :return $l19
20210427node in :[]
20210427node out :[]
20210427node :$r0 = new java.lang.RuntimeException
20210427node in :[]
普通复制语句1112:$r0 = new java.lang.RuntimeException
[taint source] u:new java.lang.RuntimeException
SourceList:[]
20210427node out :[]
20210427node :specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Clock moved backwards.  Refusing to generate id")
20210427node in :[]
20210427node out :[]
[taint329]i invoke specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Clock moved backwards.  Refusing to generate id")
[taint328]i invoke <java.lang.RuntimeException: void <init>(java.lang.String)>
[taint328]i invoke 1
value:"Clock moved backwards.  Refusing to generate id"
isoutSetContains  false value:"Clock moved backwards.  Refusing to generate id" index:0
20210427node :throw $r0
20210427node in :[]
20210427node out :[]
analysis.outSet.size():0
[CFMAP]2021 After taintAnalysis:{cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}
The data isgggg 
<invoker.SnowFlake: long nextId()>
The data isgggg invoker.SnowFlake nextId [] {cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}  {cfhider.WordCount$IntSumReducer={reduce=[I@36b89925}, cfhider.WordCount$TokenizerMapper={map=[I@6b7a2834}, cfhider.WordCount={main=[I@6c2aa508}, invoker.SnowFlake={<init>=[I@44b6c7b3, getNextMill=[I@3bf0dc03, getNewstmp=[I@41fc67b3}}
Coming...
doAnalysis Startingqqqqqqqq.....
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
[taint329]i invoke specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Clock moved backwards.  Refusing to generate id")
[taint328]i invoke <java.lang.RuntimeException: void <init>(java.lang.String)>
[taint328]i invoke 1
value:"Clock moved backwards.  Refusing to generate id"
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$r0 = new java.lang.RuntimeException
currStmt left value20210420:$r0
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$l19 = $l17 | $l18
currStmt left value20210420:$l19
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$l18 = <invoker.SnowFlake: long sequence>
currStmt left value20210420:$l18
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$l17 = $l14 | $l16
currStmt left value20210420:$l17
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$l16 = $l15 << 12
currStmt left value20210420:$l16
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$l15 = <invoker.SnowFlake: long machineId>
currStmt left value20210420:$l15
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$l14 = $l11 | $l13
currStmt left value20210420:$l14
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$l13 = $l12 << 17
currStmt left value20210420:$l13
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$l12 = <invoker.SnowFlake: long datacenterId>
currStmt left value20210420:$l12
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$l11 = $l10 << 22
currStmt left value20210420:$l11
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$l10 = l0 - 1480166465631L
currStmt left value20210420:$l10
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:<invoker.SnowFlake: long lastStmp> = l0
currStmt left value20210420:<invoker.SnowFlake: long lastStmp>
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:l0 = staticinvoke <invoker.SnowFlake: long getNextMill()>()
currStmt left value20210420:l0
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
Have
the value=$b9
the value=0
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$b9 = $l8 cmp 0L
currStmt left value20210420:$b9
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$l8 = <invoker.SnowFlake: long sequence>
currStmt left value20210420:$l8
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:<invoker.SnowFlake: long sequence> = $l7
currStmt left value20210420:<invoker.SnowFlake: long sequence>
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$l7 = $l6 & 4095L
currStmt left value20210420:$l7
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$l6 = $l5 + 1L
currStmt left value20210420:$l6
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$l5 = <invoker.SnowFlake: long sequence>
currStmt left value20210420:$l5
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:<invoker.SnowFlake: long sequence> = 0L
currStmt left value20210420:<invoker.SnowFlake: long sequence>
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
Have
the value=$b4
the value=0
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$b4 = l0 cmp $l3
currStmt left value20210420:$b4
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$l3 = <invoker.SnowFlake: long lastStmp>
currStmt left value20210420:$l3
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
Have
the value=$b2
the value=0
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$b2 = l0 cmp $l1
currStmt left value20210420:$b2
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$l1 = <invoker.SnowFlake: long lastStmp>
currStmt left value20210420:$l1
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:l0 = staticinvoke <invoker.SnowFlake: long getNewstmp()>()
currStmt left value20210420:l0
doAnalysis endqqqqqqq.....
come here
[CFMAP]2021 After BackwardAnalysis:{cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}
[taint into] sootMethod: getNextMill
[]
class name :invoker.SnowFlake
method name :getNextMill
method list :[]
clasname=invoker.SnowFlake
methodname=getNextMill
sourcelist2021=[]
20210427node :l0 = staticinvoke <invoker.SnowFlake: long getNewstmp()>()
20210427node in :[]
调用语句赋值给变量:l0 = staticinvoke <invoker.SnowFlake: long getNewstmp()>()
Invokestmt:getNewstmp
20210427node out :[]
[taint328]a invoke <invoker.SnowFlake: long getNewstmp()>
[taint328]a invoke 0
[invokemap]invoke:getNewstmp  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
20210427node :$l1 = <invoker.SnowFlake: long lastStmp>
20210427node in :[]
普通复制语句1112:$l1 = <invoker.SnowFlake: long lastStmp>
[taint source] u:<invoker.SnowFlake: long lastStmp>
SourceList:[]
20210427node out :[]
20210427node :$b2 = l0 cmp $l1
20210427node in :[]
普通复制语句1112:$b2 = l0 cmp $l1
[taint source] u:l0
SourceList:[]
[taint source] u:$l1
SourceList:[]
[taint source] u:l0 cmp $l1
SourceList:[]
20210427node out :[]
20210427node :if $b2 > 0 goto return l0
20210427node in :[]
20210427node out :[]
Have
Stmt if :if $b2 > 0 goto return l0Stmt if value:$b2 > 0the value=$b2
the value=0
maintainValues.size0
ifValues1
20210427node :return l0
20210427node in :[]
20210427node out :[]
20210427node :l0 = staticinvoke <invoker.SnowFlake: long getNewstmp()>()
20210427node in :[]
调用语句赋值给变量:l0 = staticinvoke <invoker.SnowFlake: long getNewstmp()>()
Invokestmt:getNewstmp
20210427node out :[]
[taint328]a invoke <invoker.SnowFlake: long getNewstmp()>
[taint328]a invoke 0
[invokemap]invoke:getNewstmp  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
20210427node :goto [?= $l1 = <invoker.SnowFlake: long lastStmp>]
20210427node in :[]
20210427node out :[]
analysis.outSet.size():0
[CFMAP]2021 After taintAnalysis:{cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}
The data isgggg 
<invoker.SnowFlake: long getNextMill()>
The data isgggg invoker.SnowFlake getNextMill [] {cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}  {cfhider.WordCount$IntSumReducer={reduce=[I@36b89925}, cfhider.WordCount$TokenizerMapper={map=[I@6b7a2834}, cfhider.WordCount={main=[I@6c2aa508}, invoker.SnowFlake={<init>=[I@44b6c7b3, getNextMill=[I@3bf0dc03, getNewstmp=[I@21fc3a9d}}
Coming...
doAnalysis Startingqqqqqqqq.....
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:l0 = staticinvoke <invoker.SnowFlake: long getNewstmp()>()
currStmt left value20210420:l0
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
Have
the value=$b2
the value=0
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$b2 = l0 cmp $l1
currStmt left value20210420:$b2
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$l1 = <invoker.SnowFlake: long lastStmp>
currStmt left value20210420:$l1
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:l0 = staticinvoke <invoker.SnowFlake: long getNewstmp()>()
currStmt left value20210420:l0
doAnalysis endqqqqqqq.....
come here
[CFMAP]2021 After BackwardAnalysis:{cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}
[taint into] sootMethod: getNewstmp
[]
class name :invoker.SnowFlake
method name :getNewstmp
method list :[]
clasname=invoker.SnowFlake
methodname=getNewstmp
sourcelist2021=[]
20210427node :$l0 = staticinvoke <java.lang.System: long currentTimeMillis()>()
20210427node in :[]
调用语句赋值给变量:$l0 = staticinvoke <java.lang.System: long currentTimeMillis()>()
20210427node out :[]
[taint328]a invoke <java.lang.System: long currentTimeMillis()>
[taint328]a invoke 0
20210427node :return $l0
20210427node in :[]
20210427node out :[]
analysis.outSet.size():0
[CFMAP]2021 After taintAnalysis:{cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}
The data isgggg 
<invoker.SnowFlake: long getNewstmp()>
The data isgggg invoker.SnowFlake getNewstmp [] {cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}  {cfhider.WordCount$IntSumReducer={reduce=[I@36b89925}, cfhider.WordCount$TokenizerMapper={map=[I@6b7a2834}, cfhider.WordCount={main=[I@6c2aa508}, invoker.SnowFlake={<init>=[I@44b6c7b3, getNextMill=[I@3bf0dc03, getNewstmp=[I@21fc3a9d}}
Coming...
doAnalysis Startingqqqqqqqq.....
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$l0 = staticinvoke <java.lang.System: long currentTimeMillis()>()
currStmt left value20210420:$l0
doAnalysis endqqqqqqq.....
come here
[CFMAP]2021 After BackwardAnalysis:{cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}
[taint into] sootMethod: <clinit>
[]
class name :invoker.SnowFlake
method name :<clinit>
method list :[]
clasname=invoker.SnowFlake
methodname=<clinit>
sourcelist2021=[]
20210427node :<invoker.SnowFlake: long sequence> = 0L
20210427node in :[]
普通复制语句1112:<invoker.SnowFlake: long sequence> = 0L
[taint source] u:0L
SourceList:[]
20210427node out :[]
20210427node :<invoker.SnowFlake: long lastStmp> = -1L
20210427node in :[]
普通复制语句1112:<invoker.SnowFlake: long lastStmp> = -1L
[taint source] u:-1L
SourceList:[]
20210427node out :[]
20210427node :return
20210427node in :[]
20210427node out :[]
analysis.outSet.size():0
[CFMAP]2021 After taintAnalysis:{cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}
The data isgggg 
<invoker.SnowFlake: void <clinit>()>
The data isgggg invoker.SnowFlake <clinit> [] {cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}  {cfhider.WordCount$IntSumReducer={reduce=[I@36b89925}, cfhider.WordCount$TokenizerMapper={map=[I@6b7a2834}, cfhider.WordCount={main=[I@6c2aa508}, invoker.SnowFlake={<init>=[I@44b6c7b3, getNextMill=[I@3bf0dc03, getNewstmp=[I@21fc3a9d}}
Coming...
doAnalysis Startingqqqqqqqq.....
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:<invoker.SnowFlake: long lastStmp> = -1L
currStmt left value20210420:<invoker.SnowFlake: long lastStmp>
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:<invoker.SnowFlake: long sequence> = 0L
currStmt left value20210420:<invoker.SnowFlake: long sequence>
doAnalysis endqqqqqqq.....
come here
[CFMAP]2021 After BackwardAnalysis:{cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}
[taint into] sootMethod: <init>
[]
class name :invoker.SnowFlake
method name :<init>
method list :[]
clasname=invoker.SnowFlake
methodname=<init>
sourcelist2021=[]
20210427node :r0 := @this: invoker.SnowFlake
20210427node in :[]
20210427node out :[]
currStmt20210423:r0 := @this: invoker.SnowFlake
20210427node :l0 := @parameter0: long
20210427node in :[]
[idStmt]iiiiiii l0 := @parameter0: long  index:0
ClassName:invoker.SnowFlake
MethodName:<init>
aaaa:0
20210427node out :[]
currStmt20210423:l0 := @parameter0: long
20210427node :l1 := @parameter1: long
20210427node in :[]
[idStmt]iiiiiii l1 := @parameter1: long  index:1
ClassName:invoker.SnowFlake
MethodName:<init>
aaaa:0
20210427node out :[]
currStmt20210423:l1 := @parameter1: long
20210427node :specialinvoke r0.<java.lang.Object: void <init>()>()
20210427node in :[]
20210427node out :[]
[taint329]i invoke specialinvoke r0.<java.lang.Object: void <init>()>()
[taint328]i invoke <java.lang.Object: void <init>()>
[taint328]i invoke 0
20210427node :$b2 = l0 cmp 31L
20210427node in :[]
普通复制语句1112:$b2 = l0 cmp 31L
[taint source] u:l0
SourceList:[]
[taint source] u:31L
SourceList:[]
[taint source] u:l0 cmp 31L
SourceList:[]
20210427node out :[]
20210427node :if $b2 > 0 goto $r1 = new java.lang.IllegalArgumentException
20210427node in :[]
20210427node out :[]
Have
Stmt if :if $b2 > 0 goto $r1 = new java.lang.IllegalArgumentExceptionStmt if value:$b2 > 0the value=$b2
the value=0
maintainValues.size0
ifValues1
20210427node :$b3 = l0 cmp 0L
20210427node in :[]
普通复制语句1112:$b3 = l0 cmp 0L
[taint source] u:l0
SourceList:[]
[taint source] u:0L
SourceList:[]
[taint source] u:l0 cmp 0L
SourceList:[]
20210427node out :[]
20210427node :if $b3 >= 0 goto $b4 = l1 cmp 31L
20210427node in :[]
20210427node out :[]
Have
Stmt if :if $b3 >= 0 goto $b4 = l1 cmp 31LStmt if value:$b3 >= 0the value=$b3
the value=0
maintainValues.size0
ifValues1
20210427node :$b4 = l1 cmp 31L
20210427node in :[]
普通复制语句1112:$b4 = l1 cmp 31L
[taint source] u:l1
SourceList:[]
[taint source] u:31L
SourceList:[]
[taint source] u:l1 cmp 31L
SourceList:[]
20210427node out :[]
20210427node :if $b4 > 0 goto $r2 = new java.lang.IllegalArgumentException
20210427node in :[]
20210427node out :[]
Have
Stmt if :if $b4 > 0 goto $r2 = new java.lang.IllegalArgumentExceptionStmt if value:$b4 > 0the value=$b4
the value=0
maintainValues.size0
ifValues1
20210427node :$b5 = l1 cmp 0L
20210427node in :[]
普通复制语句1112:$b5 = l1 cmp 0L
[taint source] u:l1
SourceList:[]
[taint source] u:0L
SourceList:[]
[taint source] u:l1 cmp 0L
SourceList:[]
20210427node out :[]
20210427node :if $b5 >= 0 goto <invoker.SnowFlake: long datacenterId> = 0L
20210427node in :[]
20210427node out :[]
Have
Stmt if :if $b5 >= 0 goto <invoker.SnowFlake: long datacenterId> = 0LStmt if value:$b5 >= 0the value=$b5
the value=0
maintainValues.size0
ifValues1
20210427node :<invoker.SnowFlake: long datacenterId> = 0L
20210427node in :[]
普通复制语句1112:<invoker.SnowFlake: long datacenterId> = 0L
[taint source] u:0L
SourceList:[]
20210427node out :[]
20210427node :<invoker.SnowFlake: long machineId> = 0L
20210427node in :[]
普通复制语句1112:<invoker.SnowFlake: long machineId> = 0L
[taint source] u:0L
SourceList:[]
20210427node out :[]
20210427node :return
20210427node in :[]
20210427node out :[]
20210427node :$r2 = new java.lang.IllegalArgumentException
20210427node in :[]
普通复制语句1112:$r2 = new java.lang.IllegalArgumentException
[taint source] u:new java.lang.IllegalArgumentException
SourceList:[]
20210427node out :[]
20210427node :specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("machineId can\'t be greater than MAX_MACHINE_NUM or less than 0")
20210427node in :[]
20210427node out :[]
[taint329]i invoke specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("machineId can\'t be greater than MAX_MACHINE_NUM or less than 0")
[taint328]i invoke <java.lang.IllegalArgumentException: void <init>(java.lang.String)>
[taint328]i invoke 1
value:"machineId can\'t be greater than MAX_MACHINE_NUM or less than 0"
isoutSetContains  false value:"machineId can\'t be greater than MAX_MACHINE_NUM or less than 0" index:0
20210427node :throw $r2
20210427node in :[]
20210427node out :[]
20210427node :$r1 = new java.lang.IllegalArgumentException
20210427node in :[]
普通复制语句1112:$r1 = new java.lang.IllegalArgumentException
[taint source] u:new java.lang.IllegalArgumentException
SourceList:[]
20210427node out :[]
20210427node :specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("datacenterId can\'t be greater than MAX_DATACENTER_NUM or less than 0")
20210427node in :[]
20210427node out :[]
[taint329]i invoke specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("datacenterId can\'t be greater than MAX_DATACENTER_NUM or less than 0")
[taint328]i invoke <java.lang.IllegalArgumentException: void <init>(java.lang.String)>
[taint328]i invoke 1
value:"datacenterId can\'t be greater than MAX_DATACENTER_NUM or less than 0"
isoutSetContains  false value:"datacenterId can\'t be greater than MAX_DATACENTER_NUM or less than 0" index:0
20210427node :throw $r1
20210427node in :[]
20210427node out :[]
analysis.outSet.size():0
[CFMAP]2021 After taintAnalysis:{cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}
The data isgggg 
<invoker.SnowFlake: void <init>(long,long)>
The data isgggg invoker.SnowFlake <init> [] {cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}  {cfhider.WordCount$IntSumReducer={reduce=[I@36b89925}, cfhider.WordCount$TokenizerMapper={map=[I@6b7a2834}, cfhider.WordCount={main=[I@6c2aa508}, invoker.SnowFlake={<init>=[I@366c2ad9, getNextMill=[I@3bf0dc03, getNewstmp=[I@21fc3a9d}}
Coming...
doAnalysis Startingqqqqqqqq.....
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
[taint329]i invoke specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("datacenterId can\'t be greater than MAX_DATACENTER_NUM or less than 0")
[taint328]i invoke <java.lang.IllegalArgumentException: void <init>(java.lang.String)>
[taint328]i invoke 1
value:"datacenterId can\'t be greater than MAX_DATACENTER_NUM or less than 0"
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$r1 = new java.lang.IllegalArgumentException
currStmt left value20210420:$r1
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
[taint329]i invoke specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("machineId can\'t be greater than MAX_MACHINE_NUM or less than 0")
[taint328]i invoke <java.lang.IllegalArgumentException: void <init>(java.lang.String)>
[taint328]i invoke 1
value:"machineId can\'t be greater than MAX_MACHINE_NUM or less than 0"
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$r2 = new java.lang.IllegalArgumentException
currStmt left value20210420:$r2
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:<invoker.SnowFlake: long machineId> = 0L
currStmt left value20210420:<invoker.SnowFlake: long machineId>
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:<invoker.SnowFlake: long datacenterId> = 0L
currStmt left value20210420:<invoker.SnowFlake: long datacenterId>
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
Have
the value=$b5
the value=0
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$b5 = l1 cmp 0L
currStmt left value20210420:$b5
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
Have
the value=$b4
the value=0
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$b4 = l1 cmp 31L
currStmt left value20210420:$b4
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
Have
the value=$b3
the value=0
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$b3 = l0 cmp 0L
currStmt left value20210420:$b3
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
Have
the value=$b2
the value=0
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$b2 = l0 cmp 31L
currStmt left value20210420:$b2
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
[taint329]i invoke specialinvoke r0.<java.lang.Object: void <init>()>()
[taint328]i invoke <java.lang.Object: void <init>()>
[taint328]i invoke 0
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
doAnalysis endqqqqqqq.....
come here
[CFMAP]2021 After BackwardAnalysis:{cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}
[taint into] sootMethod: nextId
[]
class name :invoker.SnowFlake
method name :nextId
method list :[]
clasname=invoker.SnowFlake
methodname=nextId
sourcelist2021=[]
20210427node :l0 = staticinvoke <invoker.SnowFlake: long getNewstmp()>()
20210427node in :[]
调用语句赋值给变量:l0 = staticinvoke <invoker.SnowFlake: long getNewstmp()>()
Invokestmt:getNewstmp
20210427node out :[]
[taint328]a invoke <invoker.SnowFlake: long getNewstmp()>
[taint328]a invoke 0
[invokemap]invoke:getNewstmp  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
20210427node :$l1 = <invoker.SnowFlake: long lastStmp>
20210427node in :[]
普通复制语句1112:$l1 = <invoker.SnowFlake: long lastStmp>
[taint source] u:<invoker.SnowFlake: long lastStmp>
SourceList:[]
20210427node out :[]
20210427node :$b2 = l0 cmp $l1
20210427node in :[]
普通复制语句1112:$b2 = l0 cmp $l1
[taint source] u:l0
SourceList:[]
[taint source] u:$l1
SourceList:[]
[taint source] u:l0 cmp $l1
SourceList:[]
20210427node out :[]
20210427node :if $b2 >= 0 goto $l3 = <invoker.SnowFlake: long lastStmp>
20210427node in :[]
20210427node out :[]
Have
Stmt if :if $b2 >= 0 goto $l3 = <invoker.SnowFlake: long lastStmp>Stmt if value:$b2 >= 0the value=$b2
the value=0
maintainValues.size0
ifValues1
20210427node :$l3 = <invoker.SnowFlake: long lastStmp>
20210427node in :[]
普通复制语句1112:$l3 = <invoker.SnowFlake: long lastStmp>
[taint source] u:<invoker.SnowFlake: long lastStmp>
SourceList:[]
20210427node out :[]
20210427node :$b4 = l0 cmp $l3
20210427node in :[]
普通复制语句1112:$b4 = l0 cmp $l3
[taint source] u:l0
SourceList:[]
[taint source] u:$l3
SourceList:[]
[taint source] u:l0 cmp $l3
SourceList:[]
20210427node out :[]
20210427node :if $b4 != 0 goto <invoker.SnowFlake: long sequence> = 0L
20210427node in :[]
20210427node out :[]
Have
Stmt if :if $b4 != 0 goto <invoker.SnowFlake: long sequence> = 0LStmt if value:$b4 != 0the value=$b4
the value=0
maintainValues.size0
ifValues1
20210427node :<invoker.SnowFlake: long sequence> = 0L
20210427node in :[]
普通复制语句1112:<invoker.SnowFlake: long sequence> = 0L
[taint source] u:0L
SourceList:[]
20210427node out :[]
20210427node :$l5 = <invoker.SnowFlake: long sequence>
20210427node in :[]
普通复制语句1112:$l5 = <invoker.SnowFlake: long sequence>
[taint source] u:<invoker.SnowFlake: long sequence>
SourceList:[]
20210427node out :[]
20210427node :$l6 = $l5 + 1L
20210427node in :[]
普通复制语句1112:$l6 = $l5 + 1L
[taint source] u:$l5
SourceList:[]
[taint source] u:1L
SourceList:[]
[taint source] u:$l5 + 1L
SourceList:[]
20210427node out :[]
20210427node :$l7 = $l6 & 4095L
20210427node in :[]
普通复制语句1112:$l7 = $l6 & 4095L
[taint source] u:$l6
SourceList:[]
[taint source] u:4095L
SourceList:[]
[taint source] u:$l6 & 4095L
SourceList:[]
20210427node out :[]
20210427node :<invoker.SnowFlake: long sequence> = $l7
20210427node in :[]
普通复制语句1112:<invoker.SnowFlake: long sequence> = $l7
[taint source] u:$l7
SourceList:[]
20210427node out :[]
20210427node :$l8 = <invoker.SnowFlake: long sequence>
20210427node in :[]
普通复制语句1112:$l8 = <invoker.SnowFlake: long sequence>
[taint source] u:<invoker.SnowFlake: long sequence>
SourceList:[]
20210427node out :[]
20210427node :$b9 = $l8 cmp 0L
20210427node in :[]
普通复制语句1112:$b9 = $l8 cmp 0L
[taint source] u:$l8
SourceList:[]
[taint source] u:0L
SourceList:[]
[taint source] u:$l8 cmp 0L
SourceList:[]
20210427node out :[]
20210427node :if $b9 != 0 goto <invoker.SnowFlake: long lastStmp> = l0
20210427node in :[]
20210427node out :[]
Have
Stmt if :if $b9 != 0 goto <invoker.SnowFlake: long lastStmp> = l0Stmt if value:$b9 != 0the value=$b9
the value=0
maintainValues.size0
ifValues1
20210427node :l0 = staticinvoke <invoker.SnowFlake: long getNextMill()>()
20210427node in :[]
调用语句赋值给变量:l0 = staticinvoke <invoker.SnowFlake: long getNextMill()>()
Invokestmt:getNextMill
20210427node out :[]
[taint328]a invoke <invoker.SnowFlake: long getNextMill()>
[taint328]a invoke 0
[invokemap]invoke:getNextMill  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
20210427node :goto [?= <invoker.SnowFlake: long lastStmp> = l0]
20210427node in :[]
20210427node out :[]
20210427node :<invoker.SnowFlake: long lastStmp> = l0
20210427node in :[]
普通复制语句1112:<invoker.SnowFlake: long lastStmp> = l0
[taint source] u:l0
SourceList:[]
20210427node out :[]
20210427node :$l10 = l0 - 1480166465631L
20210427node in :[]
普通复制语句1112:$l10 = l0 - 1480166465631L
[taint source] u:l0
SourceList:[]
[taint source] u:1480166465631L
SourceList:[]
[taint source] u:l0 - 1480166465631L
SourceList:[]
20210427node out :[]
20210427node :$l11 = $l10 << 22
20210427node in :[]
普通复制语句1112:$l11 = $l10 << 22
[taint source] u:$l10
SourceList:[]
[taint source] u:22
SourceList:[]
[taint source] u:$l10 << 22
SourceList:[]
20210427node out :[]
20210427node :$l12 = <invoker.SnowFlake: long datacenterId>
20210427node in :[]
普通复制语句1112:$l12 = <invoker.SnowFlake: long datacenterId>
[taint source] u:<invoker.SnowFlake: long datacenterId>
SourceList:[]
20210427node out :[]
20210427node :$l13 = $l12 << 17
20210427node in :[]
普通复制语句1112:$l13 = $l12 << 17
[taint source] u:$l12
SourceList:[]
[taint source] u:17
SourceList:[]
[taint source] u:$l12 << 17
SourceList:[]
20210427node out :[]
20210427node :$l14 = $l11 | $l13
20210427node in :[]
普通复制语句1112:$l14 = $l11 | $l13
[taint source] u:$l11
SourceList:[]
[taint source] u:$l13
SourceList:[]
[taint source] u:$l11 | $l13
SourceList:[]
20210427node out :[]
20210427node :$l15 = <invoker.SnowFlake: long machineId>
20210427node in :[]
普通复制语句1112:$l15 = <invoker.SnowFlake: long machineId>
[taint source] u:<invoker.SnowFlake: long machineId>
SourceList:[]
20210427node out :[]
20210427node :$l16 = $l15 << 12
20210427node in :[]
普通复制语句1112:$l16 = $l15 << 12
[taint source] u:$l15
SourceList:[]
[taint source] u:12
SourceList:[]
[taint source] u:$l15 << 12
SourceList:[]
20210427node out :[]
20210427node :$l17 = $l14 | $l16
20210427node in :[]
普通复制语句1112:$l17 = $l14 | $l16
[taint source] u:$l14
SourceList:[]
[taint source] u:$l16
SourceList:[]
[taint source] u:$l14 | $l16
SourceList:[]
20210427node out :[]
20210427node :$l18 = <invoker.SnowFlake: long sequence>
20210427node in :[]
普通复制语句1112:$l18 = <invoker.SnowFlake: long sequence>
[taint source] u:<invoker.SnowFlake: long sequence>
SourceList:[]
20210427node out :[]
20210427node :$l19 = $l17 | $l18
20210427node in :[]
普通复制语句1112:$l19 = $l17 | $l18
[taint source] u:$l17
SourceList:[]
[taint source] u:$l18
SourceList:[]
[taint source] u:$l17 | $l18
SourceList:[]
20210427node out :[]
20210427node :return $l19
20210427node in :[]
20210427node out :[]
20210427node :$r0 = new java.lang.RuntimeException
20210427node in :[]
普通复制语句1112:$r0 = new java.lang.RuntimeException
[taint source] u:new java.lang.RuntimeException
SourceList:[]
20210427node out :[]
20210427node :specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Clock moved backwards.  Refusing to generate id")
20210427node in :[]
20210427node out :[]
[taint329]i invoke specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Clock moved backwards.  Refusing to generate id")
[taint328]i invoke <java.lang.RuntimeException: void <init>(java.lang.String)>
[taint328]i invoke 1
value:"Clock moved backwards.  Refusing to generate id"
isoutSetContains  false value:"Clock moved backwards.  Refusing to generate id" index:0
20210427node :throw $r0
20210427node in :[]
20210427node out :[]
analysis.outSet.size():0
[CFMAP]2021 After taintAnalysis:{cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}
The data isgggg 
<invoker.SnowFlake: long nextId()>
The data isgggg invoker.SnowFlake nextId [] {cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}  {cfhider.WordCount$IntSumReducer={reduce=[I@36b89925}, cfhider.WordCount$TokenizerMapper={map=[I@6b7a2834}, cfhider.WordCount={main=[I@6c2aa508}, invoker.SnowFlake={<init>=[I@366c2ad9, getNextMill=[I@77712878, getNewstmp=[I@26181b8b}}
Coming...
doAnalysis Startingqqqqqqqq.....
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
[taint329]i invoke specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Clock moved backwards.  Refusing to generate id")
[taint328]i invoke <java.lang.RuntimeException: void <init>(java.lang.String)>
[taint328]i invoke 1
value:"Clock moved backwards.  Refusing to generate id"
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$r0 = new java.lang.RuntimeException
currStmt left value20210420:$r0
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$l19 = $l17 | $l18
currStmt left value20210420:$l19
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$l18 = <invoker.SnowFlake: long sequence>
currStmt left value20210420:$l18
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$l17 = $l14 | $l16
currStmt left value20210420:$l17
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$l16 = $l15 << 12
currStmt left value20210420:$l16
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$l15 = <invoker.SnowFlake: long machineId>
currStmt left value20210420:$l15
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$l14 = $l11 | $l13
currStmt left value20210420:$l14
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$l13 = $l12 << 17
currStmt left value20210420:$l13
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$l12 = <invoker.SnowFlake: long datacenterId>
currStmt left value20210420:$l12
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$l11 = $l10 << 22
currStmt left value20210420:$l11
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$l10 = l0 - 1480166465631L
currStmt left value20210420:$l10
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:<invoker.SnowFlake: long lastStmp> = l0
currStmt left value20210420:<invoker.SnowFlake: long lastStmp>
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:l0 = staticinvoke <invoker.SnowFlake: long getNextMill()>()
currStmt left value20210420:l0
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
Have
the value=$b9
the value=0
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$b9 = $l8 cmp 0L
currStmt left value20210420:$b9
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$l8 = <invoker.SnowFlake: long sequence>
currStmt left value20210420:$l8
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:<invoker.SnowFlake: long sequence> = $l7
currStmt left value20210420:<invoker.SnowFlake: long sequence>
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$l7 = $l6 & 4095L
currStmt left value20210420:$l7
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$l6 = $l5 + 1L
currStmt left value20210420:$l6
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$l5 = <invoker.SnowFlake: long sequence>
currStmt left value20210420:$l5
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:<invoker.SnowFlake: long sequence> = 0L
currStmt left value20210420:<invoker.SnowFlake: long sequence>
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
Have
the value=$b4
the value=0
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$b4 = l0 cmp $l3
currStmt left value20210420:$b4
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$l3 = <invoker.SnowFlake: long lastStmp>
currStmt left value20210420:$l3
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
Have
the value=$b2
the value=0
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$b2 = l0 cmp $l1
currStmt left value20210420:$b2
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$l1 = <invoker.SnowFlake: long lastStmp>
currStmt left value20210420:$l1
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:l0 = staticinvoke <invoker.SnowFlake: long getNewstmp()>()
currStmt left value20210420:l0
doAnalysis endqqqqqqq.....
come here
[CFMAP]2021 After BackwardAnalysis:{cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}
[taint into] sootMethod: getNextMill
[]
class name :invoker.SnowFlake
method name :getNextMill
method list :[]
clasname=invoker.SnowFlake
methodname=getNextMill
sourcelist2021=[]
20210427node :l0 = staticinvoke <invoker.SnowFlake: long getNewstmp()>()
20210427node in :[]
调用语句赋值给变量:l0 = staticinvoke <invoker.SnowFlake: long getNewstmp()>()
Invokestmt:getNewstmp
20210427node out :[]
[taint328]a invoke <invoker.SnowFlake: long getNewstmp()>
[taint328]a invoke 0
[invokemap]invoke:getNewstmp  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
20210427node :$l1 = <invoker.SnowFlake: long lastStmp>
20210427node in :[]
普通复制语句1112:$l1 = <invoker.SnowFlake: long lastStmp>
[taint source] u:<invoker.SnowFlake: long lastStmp>
SourceList:[]
20210427node out :[]
20210427node :$b2 = l0 cmp $l1
20210427node in :[]
普通复制语句1112:$b2 = l0 cmp $l1
[taint source] u:l0
SourceList:[]
[taint source] u:$l1
SourceList:[]
[taint source] u:l0 cmp $l1
SourceList:[]
20210427node out :[]
20210427node :if $b2 > 0 goto return l0
20210427node in :[]
20210427node out :[]
Have
Stmt if :if $b2 > 0 goto return l0Stmt if value:$b2 > 0the value=$b2
the value=0
maintainValues.size0
ifValues1
20210427node :return l0
20210427node in :[]
20210427node out :[]
20210427node :l0 = staticinvoke <invoker.SnowFlake: long getNewstmp()>()
20210427node in :[]
调用语句赋值给变量:l0 = staticinvoke <invoker.SnowFlake: long getNewstmp()>()
Invokestmt:getNewstmp
20210427node out :[]
[taint328]a invoke <invoker.SnowFlake: long getNewstmp()>
[taint328]a invoke 0
[invokemap]invoke:getNewstmp  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
20210427node :goto [?= $l1 = <invoker.SnowFlake: long lastStmp>]
20210427node in :[]
20210427node out :[]
analysis.outSet.size():0
[CFMAP]2021 After taintAnalysis:{cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}
The data isgggg 
<invoker.SnowFlake: long getNextMill()>
The data isgggg invoker.SnowFlake getNextMill [] {cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}  {cfhider.WordCount$IntSumReducer={reduce=[I@36b89925}, cfhider.WordCount$TokenizerMapper={map=[I@6b7a2834}, cfhider.WordCount={main=[I@6c2aa508}, invoker.SnowFlake={<init>=[I@366c2ad9, getNextMill=[I@77712878, getNewstmp=[I@78b85636}}
Coming...
doAnalysis Startingqqqqqqqq.....
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:l0 = staticinvoke <invoker.SnowFlake: long getNewstmp()>()
currStmt left value20210420:l0
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
Have
the value=$b2
the value=0
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$b2 = l0 cmp $l1
currStmt left value20210420:$b2
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$l1 = <invoker.SnowFlake: long lastStmp>
currStmt left value20210420:$l1
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:l0 = staticinvoke <invoker.SnowFlake: long getNewstmp()>()
currStmt left value20210420:l0
doAnalysis endqqqqqqq.....
come here
[CFMAP]2021 After BackwardAnalysis:{cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}
[taint into] sootMethod: getNewstmp
[]
class name :invoker.SnowFlake
method name :getNewstmp
method list :[]
clasname=invoker.SnowFlake
methodname=getNewstmp
sourcelist2021=[]
20210427node :$l0 = staticinvoke <java.lang.System: long currentTimeMillis()>()
20210427node in :[]
调用语句赋值给变量:$l0 = staticinvoke <java.lang.System: long currentTimeMillis()>()
20210427node out :[]
[taint328]a invoke <java.lang.System: long currentTimeMillis()>
[taint328]a invoke 0
20210427node :return $l0
20210427node in :[]
20210427node out :[]
analysis.outSet.size():0
[CFMAP]2021 After taintAnalysis:{cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}
The data isgggg 
<invoker.SnowFlake: long getNewstmp()>
The data isgggg invoker.SnowFlake getNewstmp [] {cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}  {cfhider.WordCount$IntSumReducer={reduce=[I@36b89925}, cfhider.WordCount$TokenizerMapper={map=[I@6b7a2834}, cfhider.WordCount={main=[I@6c2aa508}, invoker.SnowFlake={<init>=[I@366c2ad9, getNextMill=[I@77712878, getNewstmp=[I@78b85636}}
Coming...
doAnalysis Startingqqqqqqqq.....
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$l0 = staticinvoke <java.lang.System: long currentTimeMillis()>()
currStmt left value20210420:$l0
doAnalysis endqqqqqqq.....
come here
[CFMAP]2021 After BackwardAnalysis:{cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}
[taint into] sootMethod: <clinit>
[]
class name :invoker.SnowFlake
method name :<clinit>
method list :[]
clasname=invoker.SnowFlake
methodname=<clinit>
sourcelist2021=[]
20210427node :<invoker.SnowFlake: long sequence> = 0L
20210427node in :[]
普通复制语句1112:<invoker.SnowFlake: long sequence> = 0L
[taint source] u:0L
SourceList:[]
20210427node out :[]
20210427node :<invoker.SnowFlake: long lastStmp> = -1L
20210427node in :[]
普通复制语句1112:<invoker.SnowFlake: long lastStmp> = -1L
[taint source] u:-1L
SourceList:[]
20210427node out :[]
20210427node :return
20210427node in :[]
20210427node out :[]
analysis.outSet.size():0
[CFMAP]2021 After taintAnalysis:{cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}
The data isgggg 
<invoker.SnowFlake: void <clinit>()>
The data isgggg invoker.SnowFlake <clinit> [] {cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}  {cfhider.WordCount$IntSumReducer={reduce=[I@36b89925}, cfhider.WordCount$TokenizerMapper={map=[I@6b7a2834}, cfhider.WordCount={main=[I@6c2aa508}, invoker.SnowFlake={<init>=[I@366c2ad9, getNextMill=[I@77712878, getNewstmp=[I@78b85636}}
Coming...
doAnalysis Startingqqqqqqqq.....
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:<invoker.SnowFlake: long lastStmp> = -1L
currStmt left value20210420:<invoker.SnowFlake: long lastStmp>
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:<invoker.SnowFlake: long sequence> = 0L
currStmt left value20210420:<invoker.SnowFlake: long sequence>
doAnalysis endqqqqqqq.....
come here
[CFMAP]2021 After BackwardAnalysis:{cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}
[taint into] sootMethod: <init>
[]
class name :invoker.SnowFlake
method name :<init>
method list :[]
clasname=invoker.SnowFlake
methodname=<init>
sourcelist2021=[]
20210427node :r0 := @this: invoker.SnowFlake
20210427node in :[]
20210427node out :[]
currStmt20210423:r0 := @this: invoker.SnowFlake
20210427node :l0 := @parameter0: long
20210427node in :[]
[idStmt]iiiiiii l0 := @parameter0: long  index:0
ClassName:invoker.SnowFlake
MethodName:<init>
aaaa:0
20210427node out :[]
currStmt20210423:l0 := @parameter0: long
20210427node :l1 := @parameter1: long
20210427node in :[]
[idStmt]iiiiiii l1 := @parameter1: long  index:1
ClassName:invoker.SnowFlake
MethodName:<init>
aaaa:0
20210427node out :[]
currStmt20210423:l1 := @parameter1: long
20210427node :specialinvoke r0.<java.lang.Object: void <init>()>()
20210427node in :[]
20210427node out :[]
[taint329]i invoke specialinvoke r0.<java.lang.Object: void <init>()>()
[taint328]i invoke <java.lang.Object: void <init>()>
[taint328]i invoke 0
20210427node :$b2 = l0 cmp 31L
20210427node in :[]
普通复制语句1112:$b2 = l0 cmp 31L
[taint source] u:l0
SourceList:[]
[taint source] u:31L
SourceList:[]
[taint source] u:l0 cmp 31L
SourceList:[]
20210427node out :[]
20210427node :if $b2 > 0 goto $r1 = new java.lang.IllegalArgumentException
20210427node in :[]
20210427node out :[]
Have
Stmt if :if $b2 > 0 goto $r1 = new java.lang.IllegalArgumentExceptionStmt if value:$b2 > 0the value=$b2
the value=0
maintainValues.size0
ifValues1
20210427node :$b3 = l0 cmp 0L
20210427node in :[]
普通复制语句1112:$b3 = l0 cmp 0L
[taint source] u:l0
SourceList:[]
[taint source] u:0L
SourceList:[]
[taint source] u:l0 cmp 0L
SourceList:[]
20210427node out :[]
20210427node :if $b3 >= 0 goto $b4 = l1 cmp 31L
20210427node in :[]
20210427node out :[]
Have
Stmt if :if $b3 >= 0 goto $b4 = l1 cmp 31LStmt if value:$b3 >= 0the value=$b3
the value=0
maintainValues.size0
ifValues1
20210427node :$b4 = l1 cmp 31L
20210427node in :[]
普通复制语句1112:$b4 = l1 cmp 31L
[taint source] u:l1
SourceList:[]
[taint source] u:31L
SourceList:[]
[taint source] u:l1 cmp 31L
SourceList:[]
20210427node out :[]
20210427node :if $b4 > 0 goto $r2 = new java.lang.IllegalArgumentException
20210427node in :[]
20210427node out :[]
Have
Stmt if :if $b4 > 0 goto $r2 = new java.lang.IllegalArgumentExceptionStmt if value:$b4 > 0the value=$b4
the value=0
maintainValues.size0
ifValues1
20210427node :$b5 = l1 cmp 0L
20210427node in :[]
普通复制语句1112:$b5 = l1 cmp 0L
[taint source] u:l1
SourceList:[]
[taint source] u:0L
SourceList:[]
[taint source] u:l1 cmp 0L
SourceList:[]
20210427node out :[]
20210427node :if $b5 >= 0 goto <invoker.SnowFlake: long datacenterId> = 0L
20210427node in :[]
20210427node out :[]
Have
Stmt if :if $b5 >= 0 goto <invoker.SnowFlake: long datacenterId> = 0LStmt if value:$b5 >= 0the value=$b5
the value=0
maintainValues.size0
ifValues1
20210427node :<invoker.SnowFlake: long datacenterId> = 0L
20210427node in :[]
普通复制语句1112:<invoker.SnowFlake: long datacenterId> = 0L
[taint source] u:0L
SourceList:[]
20210427node out :[]
20210427node :<invoker.SnowFlake: long machineId> = 0L
20210427node in :[]
普通复制语句1112:<invoker.SnowFlake: long machineId> = 0L
[taint source] u:0L
SourceList:[]
20210427node out :[]
20210427node :return
20210427node in :[]
20210427node out :[]
20210427node :$r2 = new java.lang.IllegalArgumentException
20210427node in :[]
普通复制语句1112:$r2 = new java.lang.IllegalArgumentException
[taint source] u:new java.lang.IllegalArgumentException
SourceList:[]
20210427node out :[]
20210427node :specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("machineId can\'t be greater than MAX_MACHINE_NUM or less than 0")
20210427node in :[]
20210427node out :[]
[taint329]i invoke specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("machineId can\'t be greater than MAX_MACHINE_NUM or less than 0")
[taint328]i invoke <java.lang.IllegalArgumentException: void <init>(java.lang.String)>
[taint328]i invoke 1
value:"machineId can\'t be greater than MAX_MACHINE_NUM or less than 0"
isoutSetContains  false value:"machineId can\'t be greater than MAX_MACHINE_NUM or less than 0" index:0
20210427node :throw $r2
20210427node in :[]
20210427node out :[]
20210427node :$r1 = new java.lang.IllegalArgumentException
20210427node in :[]
普通复制语句1112:$r1 = new java.lang.IllegalArgumentException
[taint source] u:new java.lang.IllegalArgumentException
SourceList:[]
20210427node out :[]
20210427node :specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("datacenterId can\'t be greater than MAX_DATACENTER_NUM or less than 0")
20210427node in :[]
20210427node out :[]
[taint329]i invoke specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("datacenterId can\'t be greater than MAX_DATACENTER_NUM or less than 0")
[taint328]i invoke <java.lang.IllegalArgumentException: void <init>(java.lang.String)>
[taint328]i invoke 1
value:"datacenterId can\'t be greater than MAX_DATACENTER_NUM or less than 0"
isoutSetContains  false value:"datacenterId can\'t be greater than MAX_DATACENTER_NUM or less than 0" index:0
20210427node :throw $r1
20210427node in :[]
20210427node out :[]
analysis.outSet.size():0
[CFMAP]2021 After taintAnalysis:{cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}
The data isgggg 
<invoker.SnowFlake: void <init>(long,long)>
The data isgggg invoker.SnowFlake <init> [] {cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}  {cfhider.WordCount$IntSumReducer={reduce=[I@36b89925}, cfhider.WordCount$TokenizerMapper={map=[I@6b7a2834}, cfhider.WordCount={main=[I@6c2aa508}, invoker.SnowFlake={<init>=[I@e243125, getNextMill=[I@77712878, getNewstmp=[I@78b85636}}
Coming...
doAnalysis Startingqqqqqqqq.....
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
[taint329]i invoke specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("datacenterId can\'t be greater than MAX_DATACENTER_NUM or less than 0")
[taint328]i invoke <java.lang.IllegalArgumentException: void <init>(java.lang.String)>
[taint328]i invoke 1
value:"datacenterId can\'t be greater than MAX_DATACENTER_NUM or less than 0"
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$r1 = new java.lang.IllegalArgumentException
currStmt left value20210420:$r1
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
[taint329]i invoke specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("machineId can\'t be greater than MAX_MACHINE_NUM or less than 0")
[taint328]i invoke <java.lang.IllegalArgumentException: void <init>(java.lang.String)>
[taint328]i invoke 1
value:"machineId can\'t be greater than MAX_MACHINE_NUM or less than 0"
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$r2 = new java.lang.IllegalArgumentException
currStmt left value20210420:$r2
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:<invoker.SnowFlake: long machineId> = 0L
currStmt left value20210420:<invoker.SnowFlake: long machineId>
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:<invoker.SnowFlake: long datacenterId> = 0L
currStmt left value20210420:<invoker.SnowFlake: long datacenterId>
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
Have
the value=$b5
the value=0
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$b5 = l1 cmp 0L
currStmt left value20210420:$b5
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
Have
the value=$b4
the value=0
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$b4 = l1 cmp 31L
currStmt left value20210420:$b4
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
Have
the value=$b3
the value=0
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$b3 = l0 cmp 0L
currStmt left value20210420:$b3
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
Have
the value=$b2
the value=0
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$b2 = l0 cmp 31L
currStmt left value20210420:$b2
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
[taint329]i invoke specialinvoke r0.<java.lang.Object: void <init>()>()
[taint328]i invoke <java.lang.Object: void <init>()>
[taint328]i invoke 0
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
doAnalysis endqqqqqqq.....
come here
[CFMAP]2021 After BackwardAnalysis:{cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}
[taint into] sootMethod: nextId
[]
class name :invoker.SnowFlake
method name :nextId
method list :[]
clasname=invoker.SnowFlake
methodname=nextId
sourcelist2021=[]
20210427node :l0 = staticinvoke <invoker.SnowFlake: long getNewstmp()>()
20210427node in :[]
调用语句赋值给变量:l0 = staticinvoke <invoker.SnowFlake: long getNewstmp()>()
Invokestmt:getNewstmp
20210427node out :[]
[taint328]a invoke <invoker.SnowFlake: long getNewstmp()>
[taint328]a invoke 0
[invokemap]invoke:getNewstmp  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
20210427node :$l1 = <invoker.SnowFlake: long lastStmp>
20210427node in :[]
普通复制语句1112:$l1 = <invoker.SnowFlake: long lastStmp>
[taint source] u:<invoker.SnowFlake: long lastStmp>
SourceList:[]
20210427node out :[]
20210427node :$b2 = l0 cmp $l1
20210427node in :[]
普通复制语句1112:$b2 = l0 cmp $l1
[taint source] u:l0
SourceList:[]
[taint source] u:$l1
SourceList:[]
[taint source] u:l0 cmp $l1
SourceList:[]
20210427node out :[]
20210427node :if $b2 >= 0 goto $l3 = <invoker.SnowFlake: long lastStmp>
20210427node in :[]
20210427node out :[]
Have
Stmt if :if $b2 >= 0 goto $l3 = <invoker.SnowFlake: long lastStmp>Stmt if value:$b2 >= 0the value=$b2
the value=0
maintainValues.size0
ifValues1
20210427node :$l3 = <invoker.SnowFlake: long lastStmp>
20210427node in :[]
普通复制语句1112:$l3 = <invoker.SnowFlake: long lastStmp>
[taint source] u:<invoker.SnowFlake: long lastStmp>
SourceList:[]
20210427node out :[]
20210427node :$b4 = l0 cmp $l3
20210427node in :[]
普通复制语句1112:$b4 = l0 cmp $l3
[taint source] u:l0
SourceList:[]
[taint source] u:$l3
SourceList:[]
[taint source] u:l0 cmp $l3
SourceList:[]
20210427node out :[]
20210427node :if $b4 != 0 goto <invoker.SnowFlake: long sequence> = 0L
20210427node in :[]
20210427node out :[]
Have
Stmt if :if $b4 != 0 goto <invoker.SnowFlake: long sequence> = 0LStmt if value:$b4 != 0the value=$b4
the value=0
maintainValues.size0
ifValues1
20210427node :<invoker.SnowFlake: long sequence> = 0L
20210427node in :[]
普通复制语句1112:<invoker.SnowFlake: long sequence> = 0L
[taint source] u:0L
SourceList:[]
20210427node out :[]
20210427node :$l5 = <invoker.SnowFlake: long sequence>
20210427node in :[]
普通复制语句1112:$l5 = <invoker.SnowFlake: long sequence>
[taint source] u:<invoker.SnowFlake: long sequence>
SourceList:[]
20210427node out :[]
20210427node :$l6 = $l5 + 1L
20210427node in :[]
普通复制语句1112:$l6 = $l5 + 1L
[taint source] u:$l5
SourceList:[]
[taint source] u:1L
SourceList:[]
[taint source] u:$l5 + 1L
SourceList:[]
20210427node out :[]
20210427node :$l7 = $l6 & 4095L
20210427node in :[]
普通复制语句1112:$l7 = $l6 & 4095L
[taint source] u:$l6
SourceList:[]
[taint source] u:4095L
SourceList:[]
[taint source] u:$l6 & 4095L
SourceList:[]
20210427node out :[]
20210427node :<invoker.SnowFlake: long sequence> = $l7
20210427node in :[]
普通复制语句1112:<invoker.SnowFlake: long sequence> = $l7
[taint source] u:$l7
SourceList:[]
20210427node out :[]
20210427node :$l8 = <invoker.SnowFlake: long sequence>
20210427node in :[]
普通复制语句1112:$l8 = <invoker.SnowFlake: long sequence>
[taint source] u:<invoker.SnowFlake: long sequence>
SourceList:[]
20210427node out :[]
20210427node :$b9 = $l8 cmp 0L
20210427node in :[]
普通复制语句1112:$b9 = $l8 cmp 0L
[taint source] u:$l8
SourceList:[]
[taint source] u:0L
SourceList:[]
[taint source] u:$l8 cmp 0L
SourceList:[]
20210427node out :[]
20210427node :if $b9 != 0 goto <invoker.SnowFlake: long lastStmp> = l0
20210427node in :[]
20210427node out :[]
Have
Stmt if :if $b9 != 0 goto <invoker.SnowFlake: long lastStmp> = l0Stmt if value:$b9 != 0the value=$b9
the value=0
maintainValues.size0
ifValues1
20210427node :l0 = staticinvoke <invoker.SnowFlake: long getNextMill()>()
20210427node in :[]
调用语句赋值给变量:l0 = staticinvoke <invoker.SnowFlake: long getNextMill()>()
Invokestmt:getNextMill
20210427node out :[]
[taint328]a invoke <invoker.SnowFlake: long getNextMill()>
[taint328]a invoke 0
[invokemap]invoke:getNextMill  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
20210427node :goto [?= <invoker.SnowFlake: long lastStmp> = l0]
20210427node in :[]
20210427node out :[]
20210427node :<invoker.SnowFlake: long lastStmp> = l0
20210427node in :[]
普通复制语句1112:<invoker.SnowFlake: long lastStmp> = l0
[taint source] u:l0
SourceList:[]
20210427node out :[]
20210427node :$l10 = l0 - 1480166465631L
20210427node in :[]
普通复制语句1112:$l10 = l0 - 1480166465631L
[taint source] u:l0
SourceList:[]
[taint source] u:1480166465631L
SourceList:[]
[taint source] u:l0 - 1480166465631L
SourceList:[]
20210427node out :[]
20210427node :$l11 = $l10 << 22
20210427node in :[]
普通复制语句1112:$l11 = $l10 << 22
[taint source] u:$l10
SourceList:[]
[taint source] u:22
SourceList:[]
[taint source] u:$l10 << 22
SourceList:[]
20210427node out :[]
20210427node :$l12 = <invoker.SnowFlake: long datacenterId>
20210427node in :[]
普通复制语句1112:$l12 = <invoker.SnowFlake: long datacenterId>
[taint source] u:<invoker.SnowFlake: long datacenterId>
SourceList:[]
20210427node out :[]
20210427node :$l13 = $l12 << 17
20210427node in :[]
普通复制语句1112:$l13 = $l12 << 17
[taint source] u:$l12
SourceList:[]
[taint source] u:17
SourceList:[]
[taint source] u:$l12 << 17
SourceList:[]
20210427node out :[]
20210427node :$l14 = $l11 | $l13
20210427node in :[]
普通复制语句1112:$l14 = $l11 | $l13
[taint source] u:$l11
SourceList:[]
[taint source] u:$l13
SourceList:[]
[taint source] u:$l11 | $l13
SourceList:[]
20210427node out :[]
20210427node :$l15 = <invoker.SnowFlake: long machineId>
20210427node in :[]
普通复制语句1112:$l15 = <invoker.SnowFlake: long machineId>
[taint source] u:<invoker.SnowFlake: long machineId>
SourceList:[]
20210427node out :[]
20210427node :$l16 = $l15 << 12
20210427node in :[]
普通复制语句1112:$l16 = $l15 << 12
[taint source] u:$l15
SourceList:[]
[taint source] u:12
SourceList:[]
[taint source] u:$l15 << 12
SourceList:[]
20210427node out :[]
20210427node :$l17 = $l14 | $l16
20210427node in :[]
普通复制语句1112:$l17 = $l14 | $l16
[taint source] u:$l14
SourceList:[]
[taint source] u:$l16
SourceList:[]
[taint source] u:$l14 | $l16
SourceList:[]
20210427node out :[]
20210427node :$l18 = <invoker.SnowFlake: long sequence>
20210427node in :[]
普通复制语句1112:$l18 = <invoker.SnowFlake: long sequence>
[taint source] u:<invoker.SnowFlake: long sequence>
SourceList:[]
20210427node out :[]
20210427node :$l19 = $l17 | $l18
20210427node in :[]
普通复制语句1112:$l19 = $l17 | $l18
[taint source] u:$l17
SourceList:[]
[taint source] u:$l18
SourceList:[]
[taint source] u:$l17 | $l18
SourceList:[]
20210427node out :[]
20210427node :return $l19
20210427node in :[]
20210427node out :[]
20210427node :$r0 = new java.lang.RuntimeException
20210427node in :[]
普通复制语句1112:$r0 = new java.lang.RuntimeException
[taint source] u:new java.lang.RuntimeException
SourceList:[]
20210427node out :[]
20210427node :specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Clock moved backwards.  Refusing to generate id")
20210427node in :[]
20210427node out :[]
[taint329]i invoke specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Clock moved backwards.  Refusing to generate id")
[taint328]i invoke <java.lang.RuntimeException: void <init>(java.lang.String)>
[taint328]i invoke 1
value:"Clock moved backwards.  Refusing to generate id"
isoutSetContains  false value:"Clock moved backwards.  Refusing to generate id" index:0
20210427node :throw $r0
20210427node in :[]
20210427node out :[]
analysis.outSet.size():0
[CFMAP]2021 After taintAnalysis:{cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}
The data isgggg 
<invoker.SnowFlake: long nextId()>
The data isgggg invoker.SnowFlake nextId [] {cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}  {cfhider.WordCount$IntSumReducer={reduce=[I@36b89925}, cfhider.WordCount$TokenizerMapper={map=[I@6b7a2834}, cfhider.WordCount={main=[I@6c2aa508}, invoker.SnowFlake={<init>=[I@e243125, getNextMill=[I@6a167b63, getNewstmp=[I@69fed6fe}}
Coming...
doAnalysis Startingqqqqqqqq.....
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
[taint329]i invoke specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Clock moved backwards.  Refusing to generate id")
[taint328]i invoke <java.lang.RuntimeException: void <init>(java.lang.String)>
[taint328]i invoke 1
value:"Clock moved backwards.  Refusing to generate id"
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$r0 = new java.lang.RuntimeException
currStmt left value20210420:$r0
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$l19 = $l17 | $l18
currStmt left value20210420:$l19
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$l18 = <invoker.SnowFlake: long sequence>
currStmt left value20210420:$l18
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$l17 = $l14 | $l16
currStmt left value20210420:$l17
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$l16 = $l15 << 12
currStmt left value20210420:$l16
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$l15 = <invoker.SnowFlake: long machineId>
currStmt left value20210420:$l15
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$l14 = $l11 | $l13
currStmt left value20210420:$l14
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$l13 = $l12 << 17
currStmt left value20210420:$l13
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$l12 = <invoker.SnowFlake: long datacenterId>
currStmt left value20210420:$l12
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$l11 = $l10 << 22
currStmt left value20210420:$l11
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$l10 = l0 - 1480166465631L
currStmt left value20210420:$l10
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:<invoker.SnowFlake: long lastStmp> = l0
currStmt left value20210420:<invoker.SnowFlake: long lastStmp>
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:l0 = staticinvoke <invoker.SnowFlake: long getNextMill()>()
currStmt left value20210420:l0
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
Have
the value=$b9
the value=0
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$b9 = $l8 cmp 0L
currStmt left value20210420:$b9
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$l8 = <invoker.SnowFlake: long sequence>
currStmt left value20210420:$l8
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:<invoker.SnowFlake: long sequence> = $l7
currStmt left value20210420:<invoker.SnowFlake: long sequence>
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$l7 = $l6 & 4095L
currStmt left value20210420:$l7
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$l6 = $l5 + 1L
currStmt left value20210420:$l6
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$l5 = <invoker.SnowFlake: long sequence>
currStmt left value20210420:$l5
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:<invoker.SnowFlake: long sequence> = 0L
currStmt left value20210420:<invoker.SnowFlake: long sequence>
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
Have
the value=$b4
the value=0
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$b4 = l0 cmp $l3
currStmt left value20210420:$b4
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$l3 = <invoker.SnowFlake: long lastStmp>
currStmt left value20210420:$l3
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
Have
the value=$b2
the value=0
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$b2 = l0 cmp $l1
currStmt left value20210420:$b2
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$l1 = <invoker.SnowFlake: long lastStmp>
currStmt left value20210420:$l1
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:l0 = staticinvoke <invoker.SnowFlake: long getNewstmp()>()
currStmt left value20210420:l0
doAnalysis endqqqqqqq.....
come here
[CFMAP]2021 After BackwardAnalysis:{cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}
[taint into] sootMethod: getNextMill
[]
class name :invoker.SnowFlake
method name :getNextMill
method list :[]
clasname=invoker.SnowFlake
methodname=getNextMill
sourcelist2021=[]
20210427node :l0 = staticinvoke <invoker.SnowFlake: long getNewstmp()>()
20210427node in :[]
调用语句赋值给变量:l0 = staticinvoke <invoker.SnowFlake: long getNewstmp()>()
Invokestmt:getNewstmp
20210427node out :[]
[taint328]a invoke <invoker.SnowFlake: long getNewstmp()>
[taint328]a invoke 0
[invokemap]invoke:getNewstmp  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
20210427node :$l1 = <invoker.SnowFlake: long lastStmp>
20210427node in :[]
普通复制语句1112:$l1 = <invoker.SnowFlake: long lastStmp>
[taint source] u:<invoker.SnowFlake: long lastStmp>
SourceList:[]
20210427node out :[]
20210427node :$b2 = l0 cmp $l1
20210427node in :[]
普通复制语句1112:$b2 = l0 cmp $l1
[taint source] u:l0
SourceList:[]
[taint source] u:$l1
SourceList:[]
[taint source] u:l0 cmp $l1
SourceList:[]
20210427node out :[]
20210427node :if $b2 > 0 goto return l0
20210427node in :[]
20210427node out :[]
Have
Stmt if :if $b2 > 0 goto return l0Stmt if value:$b2 > 0the value=$b2
the value=0
maintainValues.size0
ifValues1
20210427node :return l0
20210427node in :[]
20210427node out :[]
20210427node :l0 = staticinvoke <invoker.SnowFlake: long getNewstmp()>()
20210427node in :[]
调用语句赋值给变量:l0 = staticinvoke <invoker.SnowFlake: long getNewstmp()>()
Invokestmt:getNewstmp
20210427node out :[]
[taint328]a invoke <invoker.SnowFlake: long getNewstmp()>
[taint328]a invoke 0
[invokemap]invoke:getNewstmp  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
20210427node :goto [?= $l1 = <invoker.SnowFlake: long lastStmp>]
20210427node in :[]
20210427node out :[]
analysis.outSet.size():0
[CFMAP]2021 After taintAnalysis:{cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}
The data isgggg 
<invoker.SnowFlake: long getNextMill()>
The data isgggg invoker.SnowFlake getNextMill [] {cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}  {cfhider.WordCount$IntSumReducer={reduce=[I@36b89925}, cfhider.WordCount$TokenizerMapper={map=[I@6b7a2834}, cfhider.WordCount={main=[I@6c2aa508}, invoker.SnowFlake={<init>=[I@e243125, getNextMill=[I@6a167b63, getNewstmp=[I@59d4f40f}}
Coming...
doAnalysis Startingqqqqqqqq.....
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:l0 = staticinvoke <invoker.SnowFlake: long getNewstmp()>()
currStmt left value20210420:l0
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
Have
the value=$b2
the value=0
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$b2 = l0 cmp $l1
currStmt left value20210420:$b2
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$l1 = <invoker.SnowFlake: long lastStmp>
currStmt left value20210420:$l1
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:l0 = staticinvoke <invoker.SnowFlake: long getNewstmp()>()
currStmt left value20210420:l0
doAnalysis endqqqqqqq.....
come here
[CFMAP]2021 After BackwardAnalysis:{cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}
[taint into] sootMethod: getNewstmp
[]
class name :invoker.SnowFlake
method name :getNewstmp
method list :[]
clasname=invoker.SnowFlake
methodname=getNewstmp
sourcelist2021=[]
20210427node :$l0 = staticinvoke <java.lang.System: long currentTimeMillis()>()
20210427node in :[]
调用语句赋值给变量:$l0 = staticinvoke <java.lang.System: long currentTimeMillis()>()
20210427node out :[]
[taint328]a invoke <java.lang.System: long currentTimeMillis()>
[taint328]a invoke 0
20210427node :return $l0
20210427node in :[]
20210427node out :[]
analysis.outSet.size():0
[CFMAP]2021 After taintAnalysis:{cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}
The data isgggg 
<invoker.SnowFlake: long getNewstmp()>
The data isgggg invoker.SnowFlake getNewstmp [] {cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}  {cfhider.WordCount$IntSumReducer={reduce=[I@36b89925}, cfhider.WordCount$TokenizerMapper={map=[I@6b7a2834}, cfhider.WordCount={main=[I@6c2aa508}, invoker.SnowFlake={<init>=[I@e243125, getNextMill=[I@6a167b63, getNewstmp=[I@59d4f40f}}
Coming...
doAnalysis Startingqqqqqqqq.....
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$l0 = staticinvoke <java.lang.System: long currentTimeMillis()>()
currStmt left value20210420:$l0
doAnalysis endqqqqqqq.....
come here
[CFMAP]2021 After BackwardAnalysis:{cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}
[taint into] sootMethod: <clinit>
[]
class name :invoker.SnowFlake
method name :<clinit>
method list :[]
clasname=invoker.SnowFlake
methodname=<clinit>
sourcelist2021=[]
20210427node :<invoker.SnowFlake: long sequence> = 0L
20210427node in :[]
普通复制语句1112:<invoker.SnowFlake: long sequence> = 0L
[taint source] u:0L
SourceList:[]
20210427node out :[]
20210427node :<invoker.SnowFlake: long lastStmp> = -1L
20210427node in :[]
普通复制语句1112:<invoker.SnowFlake: long lastStmp> = -1L
[taint source] u:-1L
SourceList:[]
20210427node out :[]
20210427node :return
20210427node in :[]
20210427node out :[]
analysis.outSet.size():0
[CFMAP]2021 After taintAnalysis:{cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}
The data isgggg 
<invoker.SnowFlake: void <clinit>()>
The data isgggg invoker.SnowFlake <clinit> [] {cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}  {cfhider.WordCount$IntSumReducer={reduce=[I@36b89925}, cfhider.WordCount$TokenizerMapper={map=[I@6b7a2834}, cfhider.WordCount={main=[I@6c2aa508}, invoker.SnowFlake={<init>=[I@e243125, getNextMill=[I@6a167b63, getNewstmp=[I@59d4f40f}}
Coming...
doAnalysis Startingqqqqqqqq.....
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:<invoker.SnowFlake: long lastStmp> = -1L
currStmt left value20210420:<invoker.SnowFlake: long lastStmp>
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:<invoker.SnowFlake: long sequence> = 0L
currStmt left value20210420:<invoker.SnowFlake: long sequence>
doAnalysis endqqqqqqq.....
come here
[CFMAP]2021 After BackwardAnalysis:{cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}
[taint into] sootMethod: <init>
[]
class name :invoker.SnowFlake
method name :<init>
method list :[]
clasname=invoker.SnowFlake
methodname=<init>
sourcelist2021=[]
20210427node :r0 := @this: invoker.SnowFlake
20210427node in :[]
20210427node out :[]
currStmt20210423:r0 := @this: invoker.SnowFlake
20210427node :l0 := @parameter0: long
20210427node in :[]
[idStmt]iiiiiii l0 := @parameter0: long  index:0
ClassName:invoker.SnowFlake
MethodName:<init>
aaaa:0
20210427node out :[]
currStmt20210423:l0 := @parameter0: long
20210427node :l1 := @parameter1: long
20210427node in :[]
[idStmt]iiiiiii l1 := @parameter1: long  index:1
ClassName:invoker.SnowFlake
MethodName:<init>
aaaa:0
20210427node out :[]
currStmt20210423:l1 := @parameter1: long
20210427node :specialinvoke r0.<java.lang.Object: void <init>()>()
20210427node in :[]
20210427node out :[]
[taint329]i invoke specialinvoke r0.<java.lang.Object: void <init>()>()
[taint328]i invoke <java.lang.Object: void <init>()>
[taint328]i invoke 0
20210427node :$b2 = l0 cmp 31L
20210427node in :[]
普通复制语句1112:$b2 = l0 cmp 31L
[taint source] u:l0
SourceList:[]
[taint source] u:31L
SourceList:[]
[taint source] u:l0 cmp 31L
SourceList:[]
20210427node out :[]
20210427node :if $b2 > 0 goto $r1 = new java.lang.IllegalArgumentException
20210427node in :[]
20210427node out :[]
Have
Stmt if :if $b2 > 0 goto $r1 = new java.lang.IllegalArgumentExceptionStmt if value:$b2 > 0the value=$b2
the value=0
maintainValues.size0
ifValues1
20210427node :$b3 = l0 cmp 0L
20210427node in :[]
普通复制语句1112:$b3 = l0 cmp 0L
[taint source] u:l0
SourceList:[]
[taint source] u:0L
SourceList:[]
[taint source] u:l0 cmp 0L
SourceList:[]
20210427node out :[]
20210427node :if $b3 >= 0 goto $b4 = l1 cmp 31L
20210427node in :[]
20210427node out :[]
Have
Stmt if :if $b3 >= 0 goto $b4 = l1 cmp 31LStmt if value:$b3 >= 0the value=$b3
the value=0
maintainValues.size0
ifValues1
20210427node :$b4 = l1 cmp 31L
20210427node in :[]
普通复制语句1112:$b4 = l1 cmp 31L
[taint source] u:l1
SourceList:[]
[taint source] u:31L
SourceList:[]
[taint source] u:l1 cmp 31L
SourceList:[]
20210427node out :[]
20210427node :if $b4 > 0 goto $r2 = new java.lang.IllegalArgumentException
20210427node in :[]
20210427node out :[]
Have
Stmt if :if $b4 > 0 goto $r2 = new java.lang.IllegalArgumentExceptionStmt if value:$b4 > 0the value=$b4
the value=0
maintainValues.size0
ifValues1
20210427node :$b5 = l1 cmp 0L
20210427node in :[]
普通复制语句1112:$b5 = l1 cmp 0L
[taint source] u:l1
SourceList:[]
[taint source] u:0L
SourceList:[]
[taint source] u:l1 cmp 0L
SourceList:[]
20210427node out :[]
20210427node :if $b5 >= 0 goto <invoker.SnowFlake: long datacenterId> = 0L
20210427node in :[]
20210427node out :[]
Have
Stmt if :if $b5 >= 0 goto <invoker.SnowFlake: long datacenterId> = 0LStmt if value:$b5 >= 0the value=$b5
the value=0
maintainValues.size0
ifValues1
20210427node :<invoker.SnowFlake: long datacenterId> = 0L
20210427node in :[]
普通复制语句1112:<invoker.SnowFlake: long datacenterId> = 0L
[taint source] u:0L
SourceList:[]
20210427node out :[]
20210427node :<invoker.SnowFlake: long machineId> = 0L
20210427node in :[]
普通复制语句1112:<invoker.SnowFlake: long machineId> = 0L
[taint source] u:0L
SourceList:[]
20210427node out :[]
20210427node :return
20210427node in :[]
20210427node out :[]
20210427node :$r2 = new java.lang.IllegalArgumentException
20210427node in :[]
普通复制语句1112:$r2 = new java.lang.IllegalArgumentException
[taint source] u:new java.lang.IllegalArgumentException
SourceList:[]
20210427node out :[]
20210427node :specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("machineId can\'t be greater than MAX_MACHINE_NUM or less than 0")
20210427node in :[]
20210427node out :[]
[taint329]i invoke specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("machineId can\'t be greater than MAX_MACHINE_NUM or less than 0")
[taint328]i invoke <java.lang.IllegalArgumentException: void <init>(java.lang.String)>
[taint328]i invoke 1
value:"machineId can\'t be greater than MAX_MACHINE_NUM or less than 0"
isoutSetContains  false value:"machineId can\'t be greater than MAX_MACHINE_NUM or less than 0" index:0
20210427node :throw $r2
20210427node in :[]
20210427node out :[]
20210427node :$r1 = new java.lang.IllegalArgumentException
20210427node in :[]
普通复制语句1112:$r1 = new java.lang.IllegalArgumentException
[taint source] u:new java.lang.IllegalArgumentException
SourceList:[]
20210427node out :[]
20210427node :specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("datacenterId can\'t be greater than MAX_DATACENTER_NUM or less than 0")
20210427node in :[]
20210427node out :[]
[taint329]i invoke specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("datacenterId can\'t be greater than MAX_DATACENTER_NUM or less than 0")
[taint328]i invoke <java.lang.IllegalArgumentException: void <init>(java.lang.String)>
[taint328]i invoke 1
value:"datacenterId can\'t be greater than MAX_DATACENTER_NUM or less than 0"
isoutSetContains  false value:"datacenterId can\'t be greater than MAX_DATACENTER_NUM or less than 0" index:0
20210427node :throw $r1
20210427node in :[]
20210427node out :[]
analysis.outSet.size():0
[CFMAP]2021 After taintAnalysis:{cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}
The data isgggg 
<invoker.SnowFlake: void <init>(long,long)>
The data isgggg invoker.SnowFlake <init> [] {cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}  {cfhider.WordCount$IntSumReducer={reduce=[I@36b89925}, cfhider.WordCount$TokenizerMapper={map=[I@6b7a2834}, cfhider.WordCount={main=[I@6c2aa508}, invoker.SnowFlake={<init>=[I@2be332dc, getNextMill=[I@6a167b63, getNewstmp=[I@59d4f40f}}
Coming...
doAnalysis Startingqqqqqqqq.....
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
[taint329]i invoke specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("datacenterId can\'t be greater than MAX_DATACENTER_NUM or less than 0")
[taint328]i invoke <java.lang.IllegalArgumentException: void <init>(java.lang.String)>
[taint328]i invoke 1
value:"datacenterId can\'t be greater than MAX_DATACENTER_NUM or less than 0"
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$r1 = new java.lang.IllegalArgumentException
currStmt left value20210420:$r1
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
[taint329]i invoke specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("machineId can\'t be greater than MAX_MACHINE_NUM or less than 0")
[taint328]i invoke <java.lang.IllegalArgumentException: void <init>(java.lang.String)>
[taint328]i invoke 1
value:"machineId can\'t be greater than MAX_MACHINE_NUM or less than 0"
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$r2 = new java.lang.IllegalArgumentException
currStmt left value20210420:$r2
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:<invoker.SnowFlake: long machineId> = 0L
currStmt left value20210420:<invoker.SnowFlake: long machineId>
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:<invoker.SnowFlake: long datacenterId> = 0L
currStmt left value20210420:<invoker.SnowFlake: long datacenterId>
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
Have
the value=$b5
the value=0
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$b5 = l1 cmp 0L
currStmt left value20210420:$b5
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
Have
the value=$b4
the value=0
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$b4 = l1 cmp 31L
currStmt left value20210420:$b4
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
Have
the value=$b3
the value=0
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$b3 = l0 cmp 0L
currStmt left value20210420:$b3
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
Have
the value=$b2
the value=0
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$b2 = l0 cmp 31L
currStmt left value20210420:$b2
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
[taint329]i invoke specialinvoke r0.<java.lang.Object: void <init>()>()
[taint328]i invoke <java.lang.Object: void <init>()>
[taint328]i invoke 0
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
doAnalysis endqqqqqqq.....
come here
[CFMAP]2021 After BackwardAnalysis:{cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}
[taint into] sootMethod: nextId
[]
class name :invoker.SnowFlake
method name :nextId
method list :[]
clasname=invoker.SnowFlake
methodname=nextId
sourcelist2021=[]
20210427node :l0 = staticinvoke <invoker.SnowFlake: long getNewstmp()>()
20210427node in :[]
调用语句赋值给变量:l0 = staticinvoke <invoker.SnowFlake: long getNewstmp()>()
Invokestmt:getNewstmp
20210427node out :[]
[taint328]a invoke <invoker.SnowFlake: long getNewstmp()>
[taint328]a invoke 0
[invokemap]invoke:getNewstmp  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
20210427node :$l1 = <invoker.SnowFlake: long lastStmp>
20210427node in :[]
普通复制语句1112:$l1 = <invoker.SnowFlake: long lastStmp>
[taint source] u:<invoker.SnowFlake: long lastStmp>
SourceList:[]
20210427node out :[]
20210427node :$b2 = l0 cmp $l1
20210427node in :[]
普通复制语句1112:$b2 = l0 cmp $l1
[taint source] u:l0
SourceList:[]
[taint source] u:$l1
SourceList:[]
[taint source] u:l0 cmp $l1
SourceList:[]
20210427node out :[]
20210427node :if $b2 >= 0 goto $l3 = <invoker.SnowFlake: long lastStmp>
20210427node in :[]
20210427node out :[]
Have
Stmt if :if $b2 >= 0 goto $l3 = <invoker.SnowFlake: long lastStmp>Stmt if value:$b2 >= 0the value=$b2
the value=0
maintainValues.size0
ifValues1
20210427node :$l3 = <invoker.SnowFlake: long lastStmp>
20210427node in :[]
普通复制语句1112:$l3 = <invoker.SnowFlake: long lastStmp>
[taint source] u:<invoker.SnowFlake: long lastStmp>
SourceList:[]
20210427node out :[]
20210427node :$b4 = l0 cmp $l3
20210427node in :[]
普通复制语句1112:$b4 = l0 cmp $l3
[taint source] u:l0
SourceList:[]
[taint source] u:$l3
SourceList:[]
[taint source] u:l0 cmp $l3
SourceList:[]
20210427node out :[]
20210427node :if $b4 != 0 goto <invoker.SnowFlake: long sequence> = 0L
20210427node in :[]
20210427node out :[]
Have
Stmt if :if $b4 != 0 goto <invoker.SnowFlake: long sequence> = 0LStmt if value:$b4 != 0the value=$b4
the value=0
maintainValues.size0
ifValues1
20210427node :<invoker.SnowFlake: long sequence> = 0L
20210427node in :[]
普通复制语句1112:<invoker.SnowFlake: long sequence> = 0L
[taint source] u:0L
SourceList:[]
20210427node out :[]
20210427node :$l5 = <invoker.SnowFlake: long sequence>
20210427node in :[]
普通复制语句1112:$l5 = <invoker.SnowFlake: long sequence>
[taint source] u:<invoker.SnowFlake: long sequence>
SourceList:[]
20210427node out :[]
20210427node :$l6 = $l5 + 1L
20210427node in :[]
普通复制语句1112:$l6 = $l5 + 1L
[taint source] u:$l5
SourceList:[]
[taint source] u:1L
SourceList:[]
[taint source] u:$l5 + 1L
SourceList:[]
20210427node out :[]
20210427node :$l7 = $l6 & 4095L
20210427node in :[]
普通复制语句1112:$l7 = $l6 & 4095L
[taint source] u:$l6
SourceList:[]
[taint source] u:4095L
SourceList:[]
[taint source] u:$l6 & 4095L
SourceList:[]
20210427node out :[]
20210427node :<invoker.SnowFlake: long sequence> = $l7
20210427node in :[]
普通复制语句1112:<invoker.SnowFlake: long sequence> = $l7
[taint source] u:$l7
SourceList:[]
20210427node out :[]
20210427node :$l8 = <invoker.SnowFlake: long sequence>
20210427node in :[]
普通复制语句1112:$l8 = <invoker.SnowFlake: long sequence>
[taint source] u:<invoker.SnowFlake: long sequence>
SourceList:[]
20210427node out :[]
20210427node :$b9 = $l8 cmp 0L
20210427node in :[]
普通复制语句1112:$b9 = $l8 cmp 0L
[taint source] u:$l8
SourceList:[]
[taint source] u:0L
SourceList:[]
[taint source] u:$l8 cmp 0L
SourceList:[]
20210427node out :[]
20210427node :if $b9 != 0 goto <invoker.SnowFlake: long lastStmp> = l0
20210427node in :[]
20210427node out :[]
Have
Stmt if :if $b9 != 0 goto <invoker.SnowFlake: long lastStmp> = l0Stmt if value:$b9 != 0the value=$b9
the value=0
maintainValues.size0
ifValues1
20210427node :l0 = staticinvoke <invoker.SnowFlake: long getNextMill()>()
20210427node in :[]
调用语句赋值给变量:l0 = staticinvoke <invoker.SnowFlake: long getNextMill()>()
Invokestmt:getNextMill
20210427node out :[]
[taint328]a invoke <invoker.SnowFlake: long getNextMill()>
[taint328]a invoke 0
[invokemap]invoke:getNextMill  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
20210427node :goto [?= <invoker.SnowFlake: long lastStmp> = l0]
20210427node in :[]
20210427node out :[]
20210427node :<invoker.SnowFlake: long lastStmp> = l0
20210427node in :[]
普通复制语句1112:<invoker.SnowFlake: long lastStmp> = l0
[taint source] u:l0
SourceList:[]
20210427node out :[]
20210427node :$l10 = l0 - 1480166465631L
20210427node in :[]
普通复制语句1112:$l10 = l0 - 1480166465631L
[taint source] u:l0
SourceList:[]
[taint source] u:1480166465631L
SourceList:[]
[taint source] u:l0 - 1480166465631L
SourceList:[]
20210427node out :[]
20210427node :$l11 = $l10 << 22
20210427node in :[]
普通复制语句1112:$l11 = $l10 << 22
[taint source] u:$l10
SourceList:[]
[taint source] u:22
SourceList:[]
[taint source] u:$l10 << 22
SourceList:[]
20210427node out :[]
20210427node :$l12 = <invoker.SnowFlake: long datacenterId>
20210427node in :[]
普通复制语句1112:$l12 = <invoker.SnowFlake: long datacenterId>
[taint source] u:<invoker.SnowFlake: long datacenterId>
SourceList:[]
20210427node out :[]
20210427node :$l13 = $l12 << 17
20210427node in :[]
普通复制语句1112:$l13 = $l12 << 17
[taint source] u:$l12
SourceList:[]
[taint source] u:17
SourceList:[]
[taint source] u:$l12 << 17
SourceList:[]
20210427node out :[]
20210427node :$l14 = $l11 | $l13
20210427node in :[]
普通复制语句1112:$l14 = $l11 | $l13
[taint source] u:$l11
SourceList:[]
[taint source] u:$l13
SourceList:[]
[taint source] u:$l11 | $l13
SourceList:[]
20210427node out :[]
20210427node :$l15 = <invoker.SnowFlake: long machineId>
20210427node in :[]
普通复制语句1112:$l15 = <invoker.SnowFlake: long machineId>
[taint source] u:<invoker.SnowFlake: long machineId>
SourceList:[]
20210427node out :[]
20210427node :$l16 = $l15 << 12
20210427node in :[]
普通复制语句1112:$l16 = $l15 << 12
[taint source] u:$l15
SourceList:[]
[taint source] u:12
SourceList:[]
[taint source] u:$l15 << 12
SourceList:[]
20210427node out :[]
20210427node :$l17 = $l14 | $l16
20210427node in :[]
普通复制语句1112:$l17 = $l14 | $l16
[taint source] u:$l14
SourceList:[]
[taint source] u:$l16
SourceList:[]
[taint source] u:$l14 | $l16
SourceList:[]
20210427node out :[]
20210427node :$l18 = <invoker.SnowFlake: long sequence>
20210427node in :[]
普通复制语句1112:$l18 = <invoker.SnowFlake: long sequence>
[taint source] u:<invoker.SnowFlake: long sequence>
SourceList:[]
20210427node out :[]
20210427node :$l19 = $l17 | $l18
20210427node in :[]
普通复制语句1112:$l19 = $l17 | $l18
[taint source] u:$l17
SourceList:[]
[taint source] u:$l18
SourceList:[]
[taint source] u:$l17 | $l18
SourceList:[]
20210427node out :[]
20210427node :return $l19
20210427node in :[]
20210427node out :[]
20210427node :$r0 = new java.lang.RuntimeException
20210427node in :[]
普通复制语句1112:$r0 = new java.lang.RuntimeException
[taint source] u:new java.lang.RuntimeException
SourceList:[]
20210427node out :[]
20210427node :specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Clock moved backwards.  Refusing to generate id")
20210427node in :[]
20210427node out :[]
[taint329]i invoke specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Clock moved backwards.  Refusing to generate id")
[taint328]i invoke <java.lang.RuntimeException: void <init>(java.lang.String)>
[taint328]i invoke 1
value:"Clock moved backwards.  Refusing to generate id"
isoutSetContains  false value:"Clock moved backwards.  Refusing to generate id" index:0
20210427node :throw $r0
20210427node in :[]
20210427node out :[]
analysis.outSet.size():0
[CFMAP]2021 After taintAnalysis:{cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}
The data isgggg 
<invoker.SnowFlake: long nextId()>
The data isgggg invoker.SnowFlake nextId [] {cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}  {cfhider.WordCount$IntSumReducer={reduce=[I@36b89925}, cfhider.WordCount$TokenizerMapper={map=[I@6b7a2834}, cfhider.WordCount={main=[I@6c2aa508}, invoker.SnowFlake={<init>=[I@2be332dc, getNextMill=[I@51202006, getNewstmp=[I@14169386}}
Coming...
doAnalysis Startingqqqqqqqq.....
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
[taint329]i invoke specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Clock moved backwards.  Refusing to generate id")
[taint328]i invoke <java.lang.RuntimeException: void <init>(java.lang.String)>
[taint328]i invoke 1
value:"Clock moved backwards.  Refusing to generate id"
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$r0 = new java.lang.RuntimeException
currStmt left value20210420:$r0
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$l19 = $l17 | $l18
currStmt left value20210420:$l19
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$l18 = <invoker.SnowFlake: long sequence>
currStmt left value20210420:$l18
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$l17 = $l14 | $l16
currStmt left value20210420:$l17
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$l16 = $l15 << 12
currStmt left value20210420:$l16
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$l15 = <invoker.SnowFlake: long machineId>
currStmt left value20210420:$l15
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$l14 = $l11 | $l13
currStmt left value20210420:$l14
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$l13 = $l12 << 17
currStmt left value20210420:$l13
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$l12 = <invoker.SnowFlake: long datacenterId>
currStmt left value20210420:$l12
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$l11 = $l10 << 22
currStmt left value20210420:$l11
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$l10 = l0 - 1480166465631L
currStmt left value20210420:$l10
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:<invoker.SnowFlake: long lastStmp> = l0
currStmt left value20210420:<invoker.SnowFlake: long lastStmp>
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:l0 = staticinvoke <invoker.SnowFlake: long getNextMill()>()
currStmt left value20210420:l0
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
Have
the value=$b9
the value=0
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$b9 = $l8 cmp 0L
currStmt left value20210420:$b9
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$l8 = <invoker.SnowFlake: long sequence>
currStmt left value20210420:$l8
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:<invoker.SnowFlake: long sequence> = $l7
currStmt left value20210420:<invoker.SnowFlake: long sequence>
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$l7 = $l6 & 4095L
currStmt left value20210420:$l7
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$l6 = $l5 + 1L
currStmt left value20210420:$l6
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$l5 = <invoker.SnowFlake: long sequence>
currStmt left value20210420:$l5
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:<invoker.SnowFlake: long sequence> = 0L
currStmt left value20210420:<invoker.SnowFlake: long sequence>
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
Have
the value=$b4
the value=0
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$b4 = l0 cmp $l3
currStmt left value20210420:$b4
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$l3 = <invoker.SnowFlake: long lastStmp>
currStmt left value20210420:$l3
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
Have
the value=$b2
the value=0
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$b2 = l0 cmp $l1
currStmt left value20210420:$b2
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$l1 = <invoker.SnowFlake: long lastStmp>
currStmt left value20210420:$l1
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:l0 = staticinvoke <invoker.SnowFlake: long getNewstmp()>()
currStmt left value20210420:l0
doAnalysis endqqqqqqq.....
come here
[CFMAP]2021 After BackwardAnalysis:{cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}
[taint into] sootMethod: getNextMill
[]
class name :invoker.SnowFlake
method name :getNextMill
method list :[]
clasname=invoker.SnowFlake
methodname=getNextMill
sourcelist2021=[]
20210427node :l0 = staticinvoke <invoker.SnowFlake: long getNewstmp()>()
20210427node in :[]
调用语句赋值给变量:l0 = staticinvoke <invoker.SnowFlake: long getNewstmp()>()
Invokestmt:getNewstmp
20210427node out :[]
[taint328]a invoke <invoker.SnowFlake: long getNewstmp()>
[taint328]a invoke 0
[invokemap]invoke:getNewstmp  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
20210427node :$l1 = <invoker.SnowFlake: long lastStmp>
20210427node in :[]
普通复制语句1112:$l1 = <invoker.SnowFlake: long lastStmp>
[taint source] u:<invoker.SnowFlake: long lastStmp>
SourceList:[]
20210427node out :[]
20210427node :$b2 = l0 cmp $l1
20210427node in :[]
普通复制语句1112:$b2 = l0 cmp $l1
[taint source] u:l0
SourceList:[]
[taint source] u:$l1
SourceList:[]
[taint source] u:l0 cmp $l1
SourceList:[]
20210427node out :[]
20210427node :if $b2 > 0 goto return l0
20210427node in :[]
20210427node out :[]
Have
Stmt if :if $b2 > 0 goto return l0Stmt if value:$b2 > 0the value=$b2
the value=0
maintainValues.size0
ifValues1
20210427node :return l0
20210427node in :[]
20210427node out :[]
20210427node :l0 = staticinvoke <invoker.SnowFlake: long getNewstmp()>()
20210427node in :[]
调用语句赋值给变量:l0 = staticinvoke <invoker.SnowFlake: long getNewstmp()>()
Invokestmt:getNewstmp
20210427node out :[]
[taint328]a invoke <invoker.SnowFlake: long getNewstmp()>
[taint328]a invoke 0
[invokemap]invoke:getNewstmp  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
20210427node :goto [?= $l1 = <invoker.SnowFlake: long lastStmp>]
20210427node in :[]
20210427node out :[]
analysis.outSet.size():0
[CFMAP]2021 After taintAnalysis:{cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}
The data isgggg 
<invoker.SnowFlake: long getNextMill()>
The data isgggg invoker.SnowFlake getNextMill [] {cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}  {cfhider.WordCount$IntSumReducer={reduce=[I@36b89925}, cfhider.WordCount$TokenizerMapper={map=[I@6b7a2834}, cfhider.WordCount={main=[I@6c2aa508}, invoker.SnowFlake={<init>=[I@2be332dc, getNextMill=[I@51202006, getNewstmp=[I@562f4cb7}}
Coming...
doAnalysis Startingqqqqqqqq.....
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:l0 = staticinvoke <invoker.SnowFlake: long getNewstmp()>()
currStmt left value20210420:l0
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
Have
the value=$b2
the value=0
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$b2 = l0 cmp $l1
currStmt left value20210420:$b2
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$l1 = <invoker.SnowFlake: long lastStmp>
currStmt left value20210420:$l1
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:l0 = staticinvoke <invoker.SnowFlake: long getNewstmp()>()
currStmt left value20210420:l0
doAnalysis endqqqqqqq.....
come here
[CFMAP]2021 After BackwardAnalysis:{cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}
[taint into] sootMethod: getNewstmp
[]
class name :invoker.SnowFlake
method name :getNewstmp
method list :[]
clasname=invoker.SnowFlake
methodname=getNewstmp
sourcelist2021=[]
20210427node :$l0 = staticinvoke <java.lang.System: long currentTimeMillis()>()
20210427node in :[]
调用语句赋值给变量:$l0 = staticinvoke <java.lang.System: long currentTimeMillis()>()
20210427node out :[]
[taint328]a invoke <java.lang.System: long currentTimeMillis()>
[taint328]a invoke 0
20210427node :return $l0
20210427node in :[]
20210427node out :[]
analysis.outSet.size():0
[CFMAP]2021 After taintAnalysis:{cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}
The data isgggg 
<invoker.SnowFlake: long getNewstmp()>
The data isgggg invoker.SnowFlake getNewstmp [] {cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}  {cfhider.WordCount$IntSumReducer={reduce=[I@36b89925}, cfhider.WordCount$TokenizerMapper={map=[I@6b7a2834}, cfhider.WordCount={main=[I@6c2aa508}, invoker.SnowFlake={<init>=[I@2be332dc, getNextMill=[I@51202006, getNewstmp=[I@562f4cb7}}
Coming...
doAnalysis Startingqqqqqqqq.....
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$l0 = staticinvoke <java.lang.System: long currentTimeMillis()>()
currStmt left value20210420:$l0
doAnalysis endqqqqqqq.....
come here
[CFMAP]2021 After BackwardAnalysis:{cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}
[taint into] sootMethod: <clinit>
[]
class name :invoker.SnowFlake
method name :<clinit>
method list :[]
clasname=invoker.SnowFlake
methodname=<clinit>
sourcelist2021=[]
20210427node :<invoker.SnowFlake: long sequence> = 0L
20210427node in :[]
普通复制语句1112:<invoker.SnowFlake: long sequence> = 0L
[taint source] u:0L
SourceList:[]
20210427node out :[]
20210427node :<invoker.SnowFlake: long lastStmp> = -1L
20210427node in :[]
普通复制语句1112:<invoker.SnowFlake: long lastStmp> = -1L
[taint source] u:-1L
SourceList:[]
20210427node out :[]
20210427node :return
20210427node in :[]
20210427node out :[]
analysis.outSet.size():0
[CFMAP]2021 After taintAnalysis:{cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}
The data isgggg 
<invoker.SnowFlake: void <clinit>()>
The data isgggg invoker.SnowFlake <clinit> [] {cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}  {cfhider.WordCount$IntSumReducer={reduce=[I@36b89925}, cfhider.WordCount$TokenizerMapper={map=[I@6b7a2834}, cfhider.WordCount={main=[I@6c2aa508}, invoker.SnowFlake={<init>=[I@2be332dc, getNextMill=[I@51202006, getNewstmp=[I@562f4cb7}}
Coming...
doAnalysis Startingqqqqqqqq.....
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:<invoker.SnowFlake: long lastStmp> = -1L
currStmt left value20210420:<invoker.SnowFlake: long lastStmp>
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:<invoker.SnowFlake: long sequence> = 0L
currStmt left value20210420:<invoker.SnowFlake: long sequence>
doAnalysis endqqqqqqq.....
come here
[CFMAP]2021 After BackwardAnalysis:{cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}
[taint into] sootMethod: <init>
[]
class name :invoker.SnowFlake
method name :<init>
method list :[]
clasname=invoker.SnowFlake
methodname=<init>
sourcelist2021=[]
20210427node :r0 := @this: invoker.SnowFlake
20210427node in :[]
20210427node out :[]
currStmt20210423:r0 := @this: invoker.SnowFlake
20210427node :l0 := @parameter0: long
20210427node in :[]
[idStmt]iiiiiii l0 := @parameter0: long  index:0
ClassName:invoker.SnowFlake
MethodName:<init>
aaaa:0
20210427node out :[]
currStmt20210423:l0 := @parameter0: long
20210427node :l1 := @parameter1: long
20210427node in :[]
[idStmt]iiiiiii l1 := @parameter1: long  index:1
ClassName:invoker.SnowFlake
MethodName:<init>
aaaa:0
20210427node out :[]
currStmt20210423:l1 := @parameter1: long
20210427node :specialinvoke r0.<java.lang.Object: void <init>()>()
20210427node in :[]
20210427node out :[]
[taint329]i invoke specialinvoke r0.<java.lang.Object: void <init>()>()
[taint328]i invoke <java.lang.Object: void <init>()>
[taint328]i invoke 0
20210427node :$b2 = l0 cmp 31L
20210427node in :[]
普通复制语句1112:$b2 = l0 cmp 31L
[taint source] u:l0
SourceList:[]
[taint source] u:31L
SourceList:[]
[taint source] u:l0 cmp 31L
SourceList:[]
20210427node out :[]
20210427node :if $b2 > 0 goto $r1 = new java.lang.IllegalArgumentException
20210427node in :[]
20210427node out :[]
Have
Stmt if :if $b2 > 0 goto $r1 = new java.lang.IllegalArgumentExceptionStmt if value:$b2 > 0the value=$b2
the value=0
maintainValues.size0
ifValues1
20210427node :$b3 = l0 cmp 0L
20210427node in :[]
普通复制语句1112:$b3 = l0 cmp 0L
[taint source] u:l0
SourceList:[]
[taint source] u:0L
SourceList:[]
[taint source] u:l0 cmp 0L
SourceList:[]
20210427node out :[]
20210427node :if $b3 >= 0 goto $b4 = l1 cmp 31L
20210427node in :[]
20210427node out :[]
Have
Stmt if :if $b3 >= 0 goto $b4 = l1 cmp 31LStmt if value:$b3 >= 0the value=$b3
the value=0
maintainValues.size0
ifValues1
20210427node :$b4 = l1 cmp 31L
20210427node in :[]
普通复制语句1112:$b4 = l1 cmp 31L
[taint source] u:l1
SourceList:[]
[taint source] u:31L
SourceList:[]
[taint source] u:l1 cmp 31L
SourceList:[]
20210427node out :[]
20210427node :if $b4 > 0 goto $r2 = new java.lang.IllegalArgumentException
20210427node in :[]
20210427node out :[]
Have
Stmt if :if $b4 > 0 goto $r2 = new java.lang.IllegalArgumentExceptionStmt if value:$b4 > 0the value=$b4
the value=0
maintainValues.size0
ifValues1
20210427node :$b5 = l1 cmp 0L
20210427node in :[]
普通复制语句1112:$b5 = l1 cmp 0L
[taint source] u:l1
SourceList:[]
[taint source] u:0L
SourceList:[]
[taint source] u:l1 cmp 0L
SourceList:[]
20210427node out :[]
20210427node :if $b5 >= 0 goto <invoker.SnowFlake: long datacenterId> = 0L
20210427node in :[]
20210427node out :[]
Have
Stmt if :if $b5 >= 0 goto <invoker.SnowFlake: long datacenterId> = 0LStmt if value:$b5 >= 0the value=$b5
the value=0
maintainValues.size0
ifValues1
20210427node :<invoker.SnowFlake: long datacenterId> = 0L
20210427node in :[]
普通复制语句1112:<invoker.SnowFlake: long datacenterId> = 0L
[taint source] u:0L
SourceList:[]
20210427node out :[]
20210427node :<invoker.SnowFlake: long machineId> = 0L
20210427node in :[]
普通复制语句1112:<invoker.SnowFlake: long machineId> = 0L
[taint source] u:0L
SourceList:[]
20210427node out :[]
20210427node :return
20210427node in :[]
20210427node out :[]
20210427node :$r2 = new java.lang.IllegalArgumentException
20210427node in :[]
普通复制语句1112:$r2 = new java.lang.IllegalArgumentException
[taint source] u:new java.lang.IllegalArgumentException
SourceList:[]
20210427node out :[]
20210427node :specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("machineId can\'t be greater than MAX_MACHINE_NUM or less than 0")
20210427node in :[]
20210427node out :[]
[taint329]i invoke specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("machineId can\'t be greater than MAX_MACHINE_NUM or less than 0")
[taint328]i invoke <java.lang.IllegalArgumentException: void <init>(java.lang.String)>
[taint328]i invoke 1
value:"machineId can\'t be greater than MAX_MACHINE_NUM or less than 0"
isoutSetContains  false value:"machineId can\'t be greater than MAX_MACHINE_NUM or less than 0" index:0
20210427node :throw $r2
20210427node in :[]
20210427node out :[]
20210427node :$r1 = new java.lang.IllegalArgumentException
20210427node in :[]
普通复制语句1112:$r1 = new java.lang.IllegalArgumentException
[taint source] u:new java.lang.IllegalArgumentException
SourceList:[]
20210427node out :[]
20210427node :specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("datacenterId can\'t be greater than MAX_DATACENTER_NUM or less than 0")
20210427node in :[]
20210427node out :[]
[taint329]i invoke specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("datacenterId can\'t be greater than MAX_DATACENTER_NUM or less than 0")
[taint328]i invoke <java.lang.IllegalArgumentException: void <init>(java.lang.String)>
[taint328]i invoke 1
value:"datacenterId can\'t be greater than MAX_DATACENTER_NUM or less than 0"
isoutSetContains  false value:"datacenterId can\'t be greater than MAX_DATACENTER_NUM or less than 0" index:0
20210427node :throw $r1
20210427node in :[]
20210427node out :[]
analysis.outSet.size():0
[CFMAP]2021 After taintAnalysis:{cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}
The data isgggg 
<invoker.SnowFlake: void <init>(long,long)>
The data isgggg invoker.SnowFlake <init> [] {cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}  {cfhider.WordCount$IntSumReducer={reduce=[I@36b89925}, cfhider.WordCount$TokenizerMapper={map=[I@6b7a2834}, cfhider.WordCount={main=[I@6c2aa508}, invoker.SnowFlake={<init>=[I@3b55ae95, getNextMill=[I@51202006, getNewstmp=[I@562f4cb7}}
Coming...
doAnalysis Startingqqqqqqqq.....
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
[taint329]i invoke specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("datacenterId can\'t be greater than MAX_DATACENTER_NUM or less than 0")
[taint328]i invoke <java.lang.IllegalArgumentException: void <init>(java.lang.String)>
[taint328]i invoke 1
value:"datacenterId can\'t be greater than MAX_DATACENTER_NUM or less than 0"
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$r1 = new java.lang.IllegalArgumentException
currStmt left value20210420:$r1
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
[taint329]i invoke specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("machineId can\'t be greater than MAX_MACHINE_NUM or less than 0")
[taint328]i invoke <java.lang.IllegalArgumentException: void <init>(java.lang.String)>
[taint328]i invoke 1
value:"machineId can\'t be greater than MAX_MACHINE_NUM or less than 0"
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$r2 = new java.lang.IllegalArgumentException
currStmt left value20210420:$r2
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:<invoker.SnowFlake: long machineId> = 0L
currStmt left value20210420:<invoker.SnowFlake: long machineId>
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:<invoker.SnowFlake: long datacenterId> = 0L
currStmt left value20210420:<invoker.SnowFlake: long datacenterId>
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
Have
the value=$b5
the value=0
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$b5 = l1 cmp 0L
currStmt left value20210420:$b5
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
Have
the value=$b4
the value=0
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$b4 = l1 cmp 31L
currStmt left value20210420:$b4
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
Have
the value=$b3
the value=0
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$b3 = l0 cmp 0L
currStmt left value20210420:$b3
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
Have
the value=$b2
the value=0
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$b2 = l0 cmp 31L
currStmt left value20210420:$b2
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
[taint329]i invoke specialinvoke r0.<java.lang.Object: void <init>()>()
[taint328]i invoke <java.lang.Object: void <init>()>
[taint328]i invoke 0
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
doAnalysis endqqqqqqq.....
come here
[CFMAP]2021 After BackwardAnalysis:{cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}
[taint into] sootMethod: nextId
[]
class name :invoker.SnowFlake
method name :nextId
method list :[]
clasname=invoker.SnowFlake
methodname=nextId
sourcelist2021=[]
20210427node :l0 = staticinvoke <invoker.SnowFlake: long getNewstmp()>()
20210427node in :[]
调用语句赋值给变量:l0 = staticinvoke <invoker.SnowFlake: long getNewstmp()>()
Invokestmt:getNewstmp
20210427node out :[]
[taint328]a invoke <invoker.SnowFlake: long getNewstmp()>
[taint328]a invoke 0
[invokemap]invoke:getNewstmp  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
20210427node :$l1 = <invoker.SnowFlake: long lastStmp>
20210427node in :[]
普通复制语句1112:$l1 = <invoker.SnowFlake: long lastStmp>
[taint source] u:<invoker.SnowFlake: long lastStmp>
SourceList:[]
20210427node out :[]
20210427node :$b2 = l0 cmp $l1
20210427node in :[]
普通复制语句1112:$b2 = l0 cmp $l1
[taint source] u:l0
SourceList:[]
[taint source] u:$l1
SourceList:[]
[taint source] u:l0 cmp $l1
SourceList:[]
20210427node out :[]
20210427node :if $b2 >= 0 goto $l3 = <invoker.SnowFlake: long lastStmp>
20210427node in :[]
20210427node out :[]
Have
Stmt if :if $b2 >= 0 goto $l3 = <invoker.SnowFlake: long lastStmp>Stmt if value:$b2 >= 0the value=$b2
the value=0
maintainValues.size0
ifValues1
20210427node :$l3 = <invoker.SnowFlake: long lastStmp>
20210427node in :[]
普通复制语句1112:$l3 = <invoker.SnowFlake: long lastStmp>
[taint source] u:<invoker.SnowFlake: long lastStmp>
SourceList:[]
20210427node out :[]
20210427node :$b4 = l0 cmp $l3
20210427node in :[]
普通复制语句1112:$b4 = l0 cmp $l3
[taint source] u:l0
SourceList:[]
[taint source] u:$l3
SourceList:[]
[taint source] u:l0 cmp $l3
SourceList:[]
20210427node out :[]
20210427node :if $b4 != 0 goto <invoker.SnowFlake: long sequence> = 0L
20210427node in :[]
20210427node out :[]
Have
Stmt if :if $b4 != 0 goto <invoker.SnowFlake: long sequence> = 0LStmt if value:$b4 != 0the value=$b4
the value=0
maintainValues.size0
ifValues1
20210427node :<invoker.SnowFlake: long sequence> = 0L
20210427node in :[]
普通复制语句1112:<invoker.SnowFlake: long sequence> = 0L
[taint source] u:0L
SourceList:[]
20210427node out :[]
20210427node :$l5 = <invoker.SnowFlake: long sequence>
20210427node in :[]
普通复制语句1112:$l5 = <invoker.SnowFlake: long sequence>
[taint source] u:<invoker.SnowFlake: long sequence>
SourceList:[]
20210427node out :[]
20210427node :$l6 = $l5 + 1L
20210427node in :[]
普通复制语句1112:$l6 = $l5 + 1L
[taint source] u:$l5
SourceList:[]
[taint source] u:1L
SourceList:[]
[taint source] u:$l5 + 1L
SourceList:[]
20210427node out :[]
20210427node :$l7 = $l6 & 4095L
20210427node in :[]
普通复制语句1112:$l7 = $l6 & 4095L
[taint source] u:$l6
SourceList:[]
[taint source] u:4095L
SourceList:[]
[taint source] u:$l6 & 4095L
SourceList:[]
20210427node out :[]
20210427node :<invoker.SnowFlake: long sequence> = $l7
20210427node in :[]
普通复制语句1112:<invoker.SnowFlake: long sequence> = $l7
[taint source] u:$l7
SourceList:[]
20210427node out :[]
20210427node :$l8 = <invoker.SnowFlake: long sequence>
20210427node in :[]
普通复制语句1112:$l8 = <invoker.SnowFlake: long sequence>
[taint source] u:<invoker.SnowFlake: long sequence>
SourceList:[]
20210427node out :[]
20210427node :$b9 = $l8 cmp 0L
20210427node in :[]
普通复制语句1112:$b9 = $l8 cmp 0L
[taint source] u:$l8
SourceList:[]
[taint source] u:0L
SourceList:[]
[taint source] u:$l8 cmp 0L
SourceList:[]
20210427node out :[]
20210427node :if $b9 != 0 goto <invoker.SnowFlake: long lastStmp> = l0
20210427node in :[]
20210427node out :[]
Have
Stmt if :if $b9 != 0 goto <invoker.SnowFlake: long lastStmp> = l0Stmt if value:$b9 != 0the value=$b9
the value=0
maintainValues.size0
ifValues1
20210427node :l0 = staticinvoke <invoker.SnowFlake: long getNextMill()>()
20210427node in :[]
调用语句赋值给变量:l0 = staticinvoke <invoker.SnowFlake: long getNextMill()>()
Invokestmt:getNextMill
20210427node out :[]
[taint328]a invoke <invoker.SnowFlake: long getNextMill()>
[taint328]a invoke 0
[invokemap]invoke:getNextMill  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
20210427node :goto [?= <invoker.SnowFlake: long lastStmp> = l0]
20210427node in :[]
20210427node out :[]
20210427node :<invoker.SnowFlake: long lastStmp> = l0
20210427node in :[]
普通复制语句1112:<invoker.SnowFlake: long lastStmp> = l0
[taint source] u:l0
SourceList:[]
20210427node out :[]
20210427node :$l10 = l0 - 1480166465631L
20210427node in :[]
普通复制语句1112:$l10 = l0 - 1480166465631L
[taint source] u:l0
SourceList:[]
[taint source] u:1480166465631L
SourceList:[]
[taint source] u:l0 - 1480166465631L
SourceList:[]
20210427node out :[]
20210427node :$l11 = $l10 << 22
20210427node in :[]
普通复制语句1112:$l11 = $l10 << 22
[taint source] u:$l10
SourceList:[]
[taint source] u:22
SourceList:[]
[taint source] u:$l10 << 22
SourceList:[]
20210427node out :[]
20210427node :$l12 = <invoker.SnowFlake: long datacenterId>
20210427node in :[]
普通复制语句1112:$l12 = <invoker.SnowFlake: long datacenterId>
[taint source] u:<invoker.SnowFlake: long datacenterId>
SourceList:[]
20210427node out :[]
20210427node :$l13 = $l12 << 17
20210427node in :[]
普通复制语句1112:$l13 = $l12 << 17
[taint source] u:$l12
SourceList:[]
[taint source] u:17
SourceList:[]
[taint source] u:$l12 << 17
SourceList:[]
20210427node out :[]
20210427node :$l14 = $l11 | $l13
20210427node in :[]
普通复制语句1112:$l14 = $l11 | $l13
[taint source] u:$l11
SourceList:[]
[taint source] u:$l13
SourceList:[]
[taint source] u:$l11 | $l13
SourceList:[]
20210427node out :[]
20210427node :$l15 = <invoker.SnowFlake: long machineId>
20210427node in :[]
普通复制语句1112:$l15 = <invoker.SnowFlake: long machineId>
[taint source] u:<invoker.SnowFlake: long machineId>
SourceList:[]
20210427node out :[]
20210427node :$l16 = $l15 << 12
20210427node in :[]
普通复制语句1112:$l16 = $l15 << 12
[taint source] u:$l15
SourceList:[]
[taint source] u:12
SourceList:[]
[taint source] u:$l15 << 12
SourceList:[]
20210427node out :[]
20210427node :$l17 = $l14 | $l16
20210427node in :[]
普通复制语句1112:$l17 = $l14 | $l16
[taint source] u:$l14
SourceList:[]
[taint source] u:$l16
SourceList:[]
[taint source] u:$l14 | $l16
SourceList:[]
20210427node out :[]
20210427node :$l18 = <invoker.SnowFlake: long sequence>
20210427node in :[]
普通复制语句1112:$l18 = <invoker.SnowFlake: long sequence>
[taint source] u:<invoker.SnowFlake: long sequence>
SourceList:[]
20210427node out :[]
20210427node :$l19 = $l17 | $l18
20210427node in :[]
普通复制语句1112:$l19 = $l17 | $l18
[taint source] u:$l17
SourceList:[]
[taint source] u:$l18
SourceList:[]
[taint source] u:$l17 | $l18
SourceList:[]
20210427node out :[]
20210427node :return $l19
20210427node in :[]
20210427node out :[]
20210427node :$r0 = new java.lang.RuntimeException
20210427node in :[]
普通复制语句1112:$r0 = new java.lang.RuntimeException
[taint source] u:new java.lang.RuntimeException
SourceList:[]
20210427node out :[]
20210427node :specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Clock moved backwards.  Refusing to generate id")
20210427node in :[]
20210427node out :[]
[taint329]i invoke specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Clock moved backwards.  Refusing to generate id")
[taint328]i invoke <java.lang.RuntimeException: void <init>(java.lang.String)>
[taint328]i invoke 1
value:"Clock moved backwards.  Refusing to generate id"
isoutSetContains  false value:"Clock moved backwards.  Refusing to generate id" index:0
20210427node :throw $r0
20210427node in :[]
20210427node out :[]
analysis.outSet.size():0
[CFMAP]2021 After taintAnalysis:{cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}
The data isgggg 
<invoker.SnowFlake: long nextId()>
The data isgggg invoker.SnowFlake nextId [] {cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}  {cfhider.WordCount$IntSumReducer={reduce=[I@36b89925}, cfhider.WordCount$TokenizerMapper={map=[I@6b7a2834}, cfhider.WordCount={main=[I@6c2aa508}, invoker.SnowFlake={<init>=[I@3b55ae95, getNextMill=[I@7638d6a1, getNewstmp=[I@d9320aa}}
Coming...
doAnalysis Startingqqqqqqqq.....
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
[taint329]i invoke specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Clock moved backwards.  Refusing to generate id")
[taint328]i invoke <java.lang.RuntimeException: void <init>(java.lang.String)>
[taint328]i invoke 1
value:"Clock moved backwards.  Refusing to generate id"
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$r0 = new java.lang.RuntimeException
currStmt left value20210420:$r0
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$l19 = $l17 | $l18
currStmt left value20210420:$l19
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$l18 = <invoker.SnowFlake: long sequence>
currStmt left value20210420:$l18
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$l17 = $l14 | $l16
currStmt left value20210420:$l17
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$l16 = $l15 << 12
currStmt left value20210420:$l16
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$l15 = <invoker.SnowFlake: long machineId>
currStmt left value20210420:$l15
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$l14 = $l11 | $l13
currStmt left value20210420:$l14
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$l13 = $l12 << 17
currStmt left value20210420:$l13
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$l12 = <invoker.SnowFlake: long datacenterId>
currStmt left value20210420:$l12
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$l11 = $l10 << 22
currStmt left value20210420:$l11
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$l10 = l0 - 1480166465631L
currStmt left value20210420:$l10
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:<invoker.SnowFlake: long lastStmp> = l0
currStmt left value20210420:<invoker.SnowFlake: long lastStmp>
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:l0 = staticinvoke <invoker.SnowFlake: long getNextMill()>()
currStmt left value20210420:l0
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
Have
the value=$b9
the value=0
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$b9 = $l8 cmp 0L
currStmt left value20210420:$b9
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$l8 = <invoker.SnowFlake: long sequence>
currStmt left value20210420:$l8
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:<invoker.SnowFlake: long sequence> = $l7
currStmt left value20210420:<invoker.SnowFlake: long sequence>
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$l7 = $l6 & 4095L
currStmt left value20210420:$l7
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$l6 = $l5 + 1L
currStmt left value20210420:$l6
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$l5 = <invoker.SnowFlake: long sequence>
currStmt left value20210420:$l5
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:<invoker.SnowFlake: long sequence> = 0L
currStmt left value20210420:<invoker.SnowFlake: long sequence>
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
Have
the value=$b4
the value=0
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$b4 = l0 cmp $l3
currStmt left value20210420:$b4
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$l3 = <invoker.SnowFlake: long lastStmp>
currStmt left value20210420:$l3
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
Have
the value=$b2
the value=0
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$b2 = l0 cmp $l1
currStmt left value20210420:$b2
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$l1 = <invoker.SnowFlake: long lastStmp>
currStmt left value20210420:$l1
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:l0 = staticinvoke <invoker.SnowFlake: long getNewstmp()>()
currStmt left value20210420:l0
doAnalysis endqqqqqqq.....
come here
[CFMAP]2021 After BackwardAnalysis:{cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}
[taint into] sootMethod: getNextMill
[]
class name :invoker.SnowFlake
method name :getNextMill
method list :[]
clasname=invoker.SnowFlake
methodname=getNextMill
sourcelist2021=[]
20210427node :l0 = staticinvoke <invoker.SnowFlake: long getNewstmp()>()
20210427node in :[]
调用语句赋值给变量:l0 = staticinvoke <invoker.SnowFlake: long getNewstmp()>()
Invokestmt:getNewstmp
20210427node out :[]
[taint328]a invoke <invoker.SnowFlake: long getNewstmp()>
[taint328]a invoke 0
[invokemap]invoke:getNewstmp  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
20210427node :$l1 = <invoker.SnowFlake: long lastStmp>
20210427node in :[]
普通复制语句1112:$l1 = <invoker.SnowFlake: long lastStmp>
[taint source] u:<invoker.SnowFlake: long lastStmp>
SourceList:[]
20210427node out :[]
20210427node :$b2 = l0 cmp $l1
20210427node in :[]
普通复制语句1112:$b2 = l0 cmp $l1
[taint source] u:l0
SourceList:[]
[taint source] u:$l1
SourceList:[]
[taint source] u:l0 cmp $l1
SourceList:[]
20210427node out :[]
20210427node :if $b2 > 0 goto return l0
20210427node in :[]
20210427node out :[]
Have
Stmt if :if $b2 > 0 goto return l0Stmt if value:$b2 > 0the value=$b2
the value=0
maintainValues.size0
ifValues1
20210427node :return l0
20210427node in :[]
20210427node out :[]
20210427node :l0 = staticinvoke <invoker.SnowFlake: long getNewstmp()>()
20210427node in :[]
调用语句赋值给变量:l0 = staticinvoke <invoker.SnowFlake: long getNewstmp()>()
Invokestmt:getNewstmp
20210427node out :[]
[taint328]a invoke <invoker.SnowFlake: long getNewstmp()>
[taint328]a invoke 0
[invokemap]invoke:getNewstmp  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
20210427node :goto [?= $l1 = <invoker.SnowFlake: long lastStmp>]
20210427node in :[]
20210427node out :[]
analysis.outSet.size():0
[CFMAP]2021 After taintAnalysis:{cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}
The data isgggg 
<invoker.SnowFlake: long getNextMill()>
The data isgggg invoker.SnowFlake getNextMill [] {cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}  {cfhider.WordCount$IntSumReducer={reduce=[I@36b89925}, cfhider.WordCount$TokenizerMapper={map=[I@6b7a2834}, cfhider.WordCount={main=[I@6c2aa508}, invoker.SnowFlake={<init>=[I@3b55ae95, getNextMill=[I@7638d6a1, getNewstmp=[I@36457fdc}}
Coming...
doAnalysis Startingqqqqqqqq.....
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:l0 = staticinvoke <invoker.SnowFlake: long getNewstmp()>()
currStmt left value20210420:l0
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
Have
the value=$b2
the value=0
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$b2 = l0 cmp $l1
currStmt left value20210420:$b2
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$l1 = <invoker.SnowFlake: long lastStmp>
currStmt left value20210420:$l1
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:l0 = staticinvoke <invoker.SnowFlake: long getNewstmp()>()
currStmt left value20210420:l0
doAnalysis endqqqqqqq.....
come here
[CFMAP]2021 After BackwardAnalysis:{cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}
[taint into] sootMethod: getNewstmp
[]
class name :invoker.SnowFlake
method name :getNewstmp
method list :[]
clasname=invoker.SnowFlake
methodname=getNewstmp
sourcelist2021=[]
20210427node :$l0 = staticinvoke <java.lang.System: long currentTimeMillis()>()
20210427node in :[]
调用语句赋值给变量:$l0 = staticinvoke <java.lang.System: long currentTimeMillis()>()
20210427node out :[]
[taint328]a invoke <java.lang.System: long currentTimeMillis()>
[taint328]a invoke 0
20210427node :return $l0
20210427node in :[]
20210427node out :[]
analysis.outSet.size():0
[CFMAP]2021 After taintAnalysis:{cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}
The data isgggg 
<invoker.SnowFlake: long getNewstmp()>
The data isgggg invoker.SnowFlake getNewstmp [] {cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}  {cfhider.WordCount$IntSumReducer={reduce=[I@36b89925}, cfhider.WordCount$TokenizerMapper={map=[I@6b7a2834}, cfhider.WordCount={main=[I@6c2aa508}, invoker.SnowFlake={<init>=[I@3b55ae95, getNextMill=[I@7638d6a1, getNewstmp=[I@36457fdc}}
Coming...
doAnalysis Startingqqqqqqqq.....
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$l0 = staticinvoke <java.lang.System: long currentTimeMillis()>()
currStmt left value20210420:$l0
doAnalysis endqqqqqqq.....
come here
[CFMAP]2021 After BackwardAnalysis:{cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}
[taint into] sootMethod: <clinit>
[]
class name :invoker.SnowFlake
method name :<clinit>
method list :[]
clasname=invoker.SnowFlake
methodname=<clinit>
sourcelist2021=[]
20210427node :<invoker.SnowFlake: long sequence> = 0L
20210427node in :[]
普通复制语句1112:<invoker.SnowFlake: long sequence> = 0L
[taint source] u:0L
SourceList:[]
20210427node out :[]
20210427node :<invoker.SnowFlake: long lastStmp> = -1L
20210427node in :[]
普通复制语句1112:<invoker.SnowFlake: long lastStmp> = -1L
[taint source] u:-1L
SourceList:[]
20210427node out :[]
20210427node :return
20210427node in :[]
20210427node out :[]
analysis.outSet.size():0
[CFMAP]2021 After taintAnalysis:{cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}
The data isgggg 
<invoker.SnowFlake: void <clinit>()>
The data isgggg invoker.SnowFlake <clinit> [] {cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}  {cfhider.WordCount$IntSumReducer={reduce=[I@36b89925}, cfhider.WordCount$TokenizerMapper={map=[I@6b7a2834}, cfhider.WordCount={main=[I@6c2aa508}, invoker.SnowFlake={<init>=[I@3b55ae95, getNextMill=[I@7638d6a1, getNewstmp=[I@36457fdc}}
Coming...
doAnalysis Startingqqqqqqqq.....
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:<invoker.SnowFlake: long lastStmp> = -1L
currStmt left value20210420:<invoker.SnowFlake: long lastStmp>
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:<invoker.SnowFlake: long sequence> = 0L
currStmt left value20210420:<invoker.SnowFlake: long sequence>
doAnalysis endqqqqqqq.....
come here
[CFMAP]2021 After BackwardAnalysis:{cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}
[taint]SooClass:invoker.sgx_invoker
[taint]SooClass:cfhider.WordCount$IntSumReducer
[taint] class: cfhider.WordCount$IntSumReducer
methList :{<init>=[], reduce=[]}
[taint into] sootMethod: <init>
[]
class name :cfhider.WordCount$IntSumReducer
method name :<init>
method list :[]
clasname=cfhider.WordCount$IntSumReducer
methodname=<init>
sourcelist2021=[]
20210427node :r0 := @this: cfhider.WordCount$IntSumReducer
20210427node in :[]
20210427node out :[]
currStmt20210423:r0 := @this: cfhider.WordCount$IntSumReducer
20210427node :specialinvoke r0.<org.apache.hadoop.mapreduce.Reducer: void <init>()>()
20210427node in :[]
20210427node out :[]
[taint329]i invoke specialinvoke r0.<org.apache.hadoop.mapreduce.Reducer: void <init>()>()
[taint328]i invoke <org.apache.hadoop.mapreduce.Reducer: void <init>()>
[taint328]i invoke 0
20210427node :$r1 = new org.apache.hadoop.io.IntWritable
20210427node in :[]
普通复制语句1112:$r1 = new org.apache.hadoop.io.IntWritable
[taint source] u:new org.apache.hadoop.io.IntWritable
SourceList:[]
20210427node out :[]
20210427node :specialinvoke $r1.<org.apache.hadoop.io.IntWritable: void <init>()>()
20210427node in :[]
20210427node out :[]
[taint329]i invoke specialinvoke $r1.<org.apache.hadoop.io.IntWritable: void <init>()>()
[taint328]i invoke <org.apache.hadoop.io.IntWritable: void <init>()>
[taint328]i invoke 0
20210427node :r0.<cfhider.WordCount$IntSumReducer: org.apache.hadoop.io.IntWritable result> = $r1
20210427node in :[]
普通复制语句1112:r0.<cfhider.WordCount$IntSumReducer: org.apache.hadoop.io.IntWritable result> = $r1
[taint source] u:r0
SourceList:[]
[taint source] u:$r1
SourceList:[]
20210427node out :[]
20210427node :return
20210427node in :[]
20210427node out :[]
analysis.outSet.size():0
[CFMAP]2021 After taintAnalysis:{cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}
The data isgggg 
<cfhider.WordCount$IntSumReducer: void <init>()>
The data isgggg cfhider.WordCount$IntSumReducer <init> [] {cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}  {cfhider.WordCount$IntSumReducer={reduce=[I@36b89925}, cfhider.WordCount$TokenizerMapper={map=[I@6b7a2834}, cfhider.WordCount={main=[I@6c2aa508}, invoker.SnowFlake={<init>=[I@3b55ae95, getNextMill=[I@7638d6a1, getNewstmp=[I@36457fdc}}
Coming...
doAnalysis Startingqqqqqqqq.....
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:r0.<cfhider.WordCount$IntSumReducer: org.apache.hadoop.io.IntWritable result> = $r1
currStmt left value20210420:r0.<cfhider.WordCount$IntSumReducer: org.apache.hadoop.io.IntWritable result>
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
[taint329]i invoke specialinvoke $r1.<org.apache.hadoop.io.IntWritable: void <init>()>()
[taint328]i invoke <org.apache.hadoop.io.IntWritable: void <init>()>
[taint328]i invoke 0
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$r1 = new org.apache.hadoop.io.IntWritable
currStmt left value20210420:$r1
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
[taint329]i invoke specialinvoke r0.<org.apache.hadoop.mapreduce.Reducer: void <init>()>()
[taint328]i invoke <org.apache.hadoop.mapreduce.Reducer: void <init>()>
[taint328]i invoke 0
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
doAnalysis endqqqqqqq.....
come here
[CFMAP]2021 After BackwardAnalysis:{cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}
[taint into] sootMethod: reduce
[]
class name :cfhider.WordCount$IntSumReducer
method name :reduce
method list :[]
clasname=cfhider.WordCount$IntSumReducer
methodname=reduce
sourcelist2021=[]
20210427node :r0 := @this: cfhider.WordCount$IntSumReducer
20210427node in :[]
20210427node out :[]
currStmt20210423:r0 := @this: cfhider.WordCount$IntSumReducer
20210427node :r1 := @parameter0: org.apache.hadoop.io.Text
20210427node in :[]
[idStmt]iiiiiii r1 := @parameter0: org.apache.hadoop.io.Text  index:0
ClassName:cfhider.WordCount$IntSumReducer
MethodName:reduce
aaaa:0
20210427node out :[]
currStmt20210423:r1 := @parameter0: org.apache.hadoop.io.Text
20210427node :r2 := @parameter1: java.lang.Iterable
20210427node in :[]
[idStmt]iiiiiii r2 := @parameter1: java.lang.Iterable  index:1
ClassName:cfhider.WordCount$IntSumReducer
MethodName:reduce
aaaa:0
20210427node out :[]
currStmt20210423:r2 := @parameter1: java.lang.Iterable
20210427node :r3 := @parameter2: org.apache.hadoop.mapreduce.Reducer$Context
20210427node in :[]
[idStmt]iiiiiii r3 := @parameter2: org.apache.hadoop.mapreduce.Reducer$Context  index:2
ClassName:cfhider.WordCount$IntSumReducer
MethodName:reduce
aaaa:0
20210427node out :[]
currStmt20210423:r3 := @parameter2: org.apache.hadoop.mapreduce.Reducer$Context
20210427node :i0 = 0
20210427node in :[]
普通复制语句1112:i0 = 0
[taint source] u:0
SourceList:[]
20210427node out :[]
20210427node :r4 = interfaceinvoke r2.<java.lang.Iterable: java.util.Iterator iterator()>()
20210427node in :[]
调用语句赋值给变量:r4 = interfaceinvoke r2.<java.lang.Iterable: java.util.Iterator iterator()>()
20210427node out :[]
[taint328]a invoke <java.lang.Iterable: java.util.Iterator iterator()>
[taint328]a invoke 0
20210427node :$z0 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>()
20210427node in :[]
调用语句赋值给变量:$z0 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>()
20210427node out :[]
[taint328]a invoke <java.util.Iterator: boolean hasNext()>
[taint328]a invoke 0
20210427node :if $z0 == 0 goto $r7 = r0.<cfhider.WordCount$IntSumReducer: org.apache.hadoop.io.IntWritable result>
20210427node in :[]
20210427node out :[]
Have
Stmt if :if $z0 == 0 goto $r7 = r0.<cfhider.WordCount$IntSumReducer: org.apache.hadoop.io.IntWritable result>Stmt if value:$z0 == 0the value=$z0
the value=0
maintainValues.size0
ifValues1
20210427node :$r7 = r0.<cfhider.WordCount$IntSumReducer: org.apache.hadoop.io.IntWritable result>
20210427node in :[]
普通复制语句1112:$r7 = r0.<cfhider.WordCount$IntSumReducer: org.apache.hadoop.io.IntWritable result>
[taint source] u:r0
SourceList:[]
[taint source] u:r0.<cfhider.WordCount$IntSumReducer: org.apache.hadoop.io.IntWritable result>
SourceList:[]
20210427node out :[]
20210427node :virtualinvoke $r7.<org.apache.hadoop.io.IntWritable: void set(int)>(i0)
20210427node in :[]
20210427node out :[]
[taint329]i invoke virtualinvoke $r7.<org.apache.hadoop.io.IntWritable: void set(int)>(i0)
[taint328]i invoke <org.apache.hadoop.io.IntWritable: void set(int)>
[taint328]i invoke 1
value:i0
isoutSetContains  false value:i0 index:0
20210427node :$r8 = r0.<cfhider.WordCount$IntSumReducer: org.apache.hadoop.io.IntWritable result>
20210427node in :[]
普通复制语句1112:$r8 = r0.<cfhider.WordCount$IntSumReducer: org.apache.hadoop.io.IntWritable result>
[taint source] u:r0
SourceList:[]
[taint source] u:r0.<cfhider.WordCount$IntSumReducer: org.apache.hadoop.io.IntWritable result>
SourceList:[]
20210427node out :[]
20210427node :virtualinvoke r3.<org.apache.hadoop.mapreduce.Reducer$Context: void write(java.lang.Object,java.lang.Object)>(r1, $r8)
20210427node in :[]
20210427node out :[]
[taint329]i invoke virtualinvoke r3.<org.apache.hadoop.mapreduce.Reducer$Context: void write(java.lang.Object,java.lang.Object)>(r1, $r8)
[taint328]i invoke <org.apache.hadoop.mapreduce.TaskInputOutputContext: void write(java.lang.Object,java.lang.Object)>
[taint328]i invoke 2
value:r1
isoutSetContains  false value:r1 index:0
value:$r8
isoutSetContains  false value:$r8 index:1
20210427node :return
20210427node in :[]
20210427node out :[]
20210427node :$r6 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>()
20210427node in :[]
调用语句赋值给变量:$r6 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>()
20210427node out :[]
[taint328]a invoke <java.util.Iterator: java.lang.Object next()>
[taint328]a invoke 0
20210427node :r5 = (org.apache.hadoop.io.IntWritable) $r6
20210427node in :[]
普通复制语句1112:r5 = (org.apache.hadoop.io.IntWritable) $r6
[taint source] u:$r6
SourceList:[]
[taint source] u:(org.apache.hadoop.io.IntWritable) $r6
SourceList:[]
20210427node out :[]
20210427node :$i1 = virtualinvoke r5.<org.apache.hadoop.io.IntWritable: int get()>()
20210427node in :[]
调用语句赋值给变量:$i1 = virtualinvoke r5.<org.apache.hadoop.io.IntWritable: int get()>()
20210427node out :[]
[taint328]a invoke <org.apache.hadoop.io.IntWritable: int get()>
[taint328]a invoke 0
20210427node :i0 = i0 + $i1
20210427node in :[]
普通复制语句1112:i0 = i0 + $i1
[taint source] u:i0
SourceList:[]
[taint source] u:$i1
SourceList:[]
[taint source] u:i0 + $i1
SourceList:[]
20210427node out :[]
20210427node :goto [?= $z0 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>()]
20210427node in :[]
20210427node out :[]
analysis.outSet.size():0
[CFMAP]2021 After taintAnalysis:{cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}
The data isgggg 
<cfhider.WordCount$IntSumReducer: void reduce(org.apache.hadoop.io.Text,java.lang.Iterable,org.apache.hadoop.mapreduce.Reducer$Context)>
The data isgggg cfhider.WordCount$IntSumReducer reduce [] {cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}  {cfhider.WordCount$IntSumReducer={reduce=[I@ccd605a}, cfhider.WordCount$TokenizerMapper={map=[I@6b7a2834}, cfhider.WordCount={main=[I@6c2aa508}, invoker.SnowFlake={<init>=[I@3b55ae95, getNextMill=[I@7638d6a1, getNewstmp=[I@36457fdc}}
Coming...
doAnalysis Startingqqqqqqqq.....
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:i0 = i0 + $i1
currStmt left value20210420:i0
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$i1 = virtualinvoke r5.<org.apache.hadoop.io.IntWritable: int get()>()
currStmt left value20210420:$i1
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:r5 = (org.apache.hadoop.io.IntWritable) $r6
currStmt left value20210420:r5
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$r6 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>()
currStmt left value20210420:$r6
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
[taint329]i invoke virtualinvoke r3.<org.apache.hadoop.mapreduce.Reducer$Context: void write(java.lang.Object,java.lang.Object)>(r1, $r8)
[taint328]i invoke <org.apache.hadoop.mapreduce.TaskInputOutputContext: void write(java.lang.Object,java.lang.Object)>
[taint328]i invoke 2
value:r1
value:$r8
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$r8 = r0.<cfhider.WordCount$IntSumReducer: org.apache.hadoop.io.IntWritable result>
currStmt left value20210420:$r8
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
[taint329]i invoke virtualinvoke $r7.<org.apache.hadoop.io.IntWritable: void set(int)>(i0)
[taint328]i invoke <org.apache.hadoop.io.IntWritable: void set(int)>
[taint328]i invoke 1
value:i0
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$r7 = r0.<cfhider.WordCount$IntSumReducer: org.apache.hadoop.io.IntWritable result>
currStmt left value20210420:$r7
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
Have
the value=$z0
the value=0
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$z0 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>()
currStmt left value20210420:$z0
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:r4 = interfaceinvoke r2.<java.lang.Iterable: java.util.Iterator iterator()>()
currStmt left value20210420:r4
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:i0 = 0
currStmt left value20210420:i0
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
doAnalysis endqqqqqqq.....
come here
[CFMAP]2021 After BackwardAnalysis:{cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}
[taint into] sootMethod: reduce
[]
class name :cfhider.WordCount$IntSumReducer
method name :reduce
method list :[]
clasname=cfhider.WordCount$IntSumReducer
methodname=reduce
sourcelist2021=[]
20210427node :r0 := @this: cfhider.WordCount$IntSumReducer
20210427node in :[]
20210427node out :[]
currStmt20210423:r0 := @this: cfhider.WordCount$IntSumReducer
20210427node :r1 := @parameter0: java.lang.Object
20210427node in :[]
[idStmt]iiiiiii r1 := @parameter0: java.lang.Object  index:0
ClassName:cfhider.WordCount$IntSumReducer
MethodName:reduce
aaaa:0
20210427node out :[]
currStmt20210423:r1 := @parameter0: java.lang.Object
20210427node :r2 := @parameter1: java.lang.Iterable
20210427node in :[]
[idStmt]iiiiiii r2 := @parameter1: java.lang.Iterable  index:1
ClassName:cfhider.WordCount$IntSumReducer
MethodName:reduce
aaaa:0
20210427node out :[]
currStmt20210423:r2 := @parameter1: java.lang.Iterable
20210427node :r3 := @parameter2: org.apache.hadoop.mapreduce.Reducer$Context
20210427node in :[]
[idStmt]iiiiiii r3 := @parameter2: org.apache.hadoop.mapreduce.Reducer$Context  index:2
ClassName:cfhider.WordCount$IntSumReducer
MethodName:reduce
aaaa:0
20210427node out :[]
currStmt20210423:r3 := @parameter2: org.apache.hadoop.mapreduce.Reducer$Context
20210427node :$r4 = (org.apache.hadoop.io.Text) r1
20210427node in :[]
普通复制语句1112:$r4 = (org.apache.hadoop.io.Text) r1
[taint source] u:r1
SourceList:[]
[taint source] u:(org.apache.hadoop.io.Text) r1
SourceList:[]
20210427node out :[]
20210427node :virtualinvoke r0.<cfhider.WordCount$IntSumReducer: void reduce(org.apache.hadoop.io.Text,java.lang.Iterable,org.apache.hadoop.mapreduce.Reducer$Context)>($r4, r2, r3)
20210427node in :[]
20210427node out :[]
[taint329]i invoke virtualinvoke r0.<cfhider.WordCount$IntSumReducer: void reduce(org.apache.hadoop.io.Text,java.lang.Iterable,org.apache.hadoop.mapreduce.Reducer$Context)>($r4, r2, r3)
[taint328]i invoke <cfhider.WordCount$IntSumReducer: void reduce(org.apache.hadoop.io.Text,java.lang.Iterable,org.apache.hadoop.mapreduce.Reducer$Context)>
[taint328]i invoke 3
value:$r4
isoutSetContains  false value:$r4 index:0
value:r2
isoutSetContains  false value:r2 index:1
value:r3
isoutSetContains  false value:r3 index:2
[invokemap]invoke:reduce  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
20210427node :return
20210427node in :[]
20210427node out :[]
analysis.outSet.size():0
[CFMAP]2021 After taintAnalysis:{cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}
The data isgggg 
<cfhider.WordCount$IntSumReducer: void reduce(java.lang.Object,java.lang.Iterable,org.apache.hadoop.mapreduce.Reducer$Context)>
The data isgggg cfhider.WordCount$IntSumReducer reduce [] {cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}  {cfhider.WordCount$IntSumReducer={reduce=[I@7f70bb46}, cfhider.WordCount$TokenizerMapper={map=[I@6b7a2834}, cfhider.WordCount={main=[I@6c2aa508}, invoker.SnowFlake={<init>=[I@3b55ae95, getNextMill=[I@7638d6a1, getNewstmp=[I@36457fdc}}
Coming...
doAnalysis Startingqqqqqqqq.....
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
[taint329]i invoke virtualinvoke r0.<cfhider.WordCount$IntSumReducer: void reduce(org.apache.hadoop.io.Text,java.lang.Iterable,org.apache.hadoop.mapreduce.Reducer$Context)>($r4, r2, r3)
[taint328]i invoke <cfhider.WordCount$IntSumReducer: void reduce(org.apache.hadoop.io.Text,java.lang.Iterable,org.apache.hadoop.mapreduce.Reducer$Context)>
[taint328]i invoke 3
value:$r4
in here:[I@42173207
[invokemap]invoke:reduce  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
value:r2
in here:[I@42173207
[invokemap]invoke:reduce  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
value:r3
in here:[I@42173207
[invokemap]invoke:reduce  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$r4 = (org.apache.hadoop.io.Text) r1
currStmt left value20210420:$r4
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
doAnalysis endqqqqqqq.....
come here
[CFMAP]2021 After BackwardAnalysis:{cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}
[taint into] sootMethod: <init>
[]
class name :cfhider.WordCount$IntSumReducer
method name :<init>
method list :[]
clasname=cfhider.WordCount$IntSumReducer
methodname=<init>
sourcelist2021=[]
20210427node :r0 := @this: cfhider.WordCount$IntSumReducer
20210427node in :[]
20210427node out :[]
currStmt20210423:r0 := @this: cfhider.WordCount$IntSumReducer
20210427node :specialinvoke r0.<org.apache.hadoop.mapreduce.Reducer: void <init>()>()
20210427node in :[]
20210427node out :[]
[taint329]i invoke specialinvoke r0.<org.apache.hadoop.mapreduce.Reducer: void <init>()>()
[taint328]i invoke <org.apache.hadoop.mapreduce.Reducer: void <init>()>
[taint328]i invoke 0
20210427node :$r1 = new org.apache.hadoop.io.IntWritable
20210427node in :[]
普通复制语句1112:$r1 = new org.apache.hadoop.io.IntWritable
[taint source] u:new org.apache.hadoop.io.IntWritable
SourceList:[]
20210427node out :[]
20210427node :specialinvoke $r1.<org.apache.hadoop.io.IntWritable: void <init>()>()
20210427node in :[]
20210427node out :[]
[taint329]i invoke specialinvoke $r1.<org.apache.hadoop.io.IntWritable: void <init>()>()
[taint328]i invoke <org.apache.hadoop.io.IntWritable: void <init>()>
[taint328]i invoke 0
20210427node :r0.<cfhider.WordCount$IntSumReducer: org.apache.hadoop.io.IntWritable result> = $r1
20210427node in :[]
普通复制语句1112:r0.<cfhider.WordCount$IntSumReducer: org.apache.hadoop.io.IntWritable result> = $r1
[taint source] u:r0
SourceList:[]
[taint source] u:$r1
SourceList:[]
20210427node out :[]
20210427node :return
20210427node in :[]
20210427node out :[]
analysis.outSet.size():0
[CFMAP]2021 After taintAnalysis:{cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}
The data isgggg 
<cfhider.WordCount$IntSumReducer: void <init>()>
The data isgggg cfhider.WordCount$IntSumReducer <init> [] {cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}  {cfhider.WordCount$IntSumReducer={reduce=[I@7f70bb46}, cfhider.WordCount$TokenizerMapper={map=[I@6b7a2834}, cfhider.WordCount={main=[I@6c2aa508}, invoker.SnowFlake={<init>=[I@3b55ae95, getNextMill=[I@7638d6a1, getNewstmp=[I@36457fdc}}
Coming...
doAnalysis Startingqqqqqqqq.....
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:r0.<cfhider.WordCount$IntSumReducer: org.apache.hadoop.io.IntWritable result> = $r1
currStmt left value20210420:r0.<cfhider.WordCount$IntSumReducer: org.apache.hadoop.io.IntWritable result>
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
[taint329]i invoke specialinvoke $r1.<org.apache.hadoop.io.IntWritable: void <init>()>()
[taint328]i invoke <org.apache.hadoop.io.IntWritable: void <init>()>
[taint328]i invoke 0
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$r1 = new org.apache.hadoop.io.IntWritable
currStmt left value20210420:$r1
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
[taint329]i invoke specialinvoke r0.<org.apache.hadoop.mapreduce.Reducer: void <init>()>()
[taint328]i invoke <org.apache.hadoop.mapreduce.Reducer: void <init>()>
[taint328]i invoke 0
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
doAnalysis endqqqqqqq.....
come here
[CFMAP]2021 After BackwardAnalysis:{cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}
[taint into] sootMethod: reduce
[]
class name :cfhider.WordCount$IntSumReducer
method name :reduce
method list :[]
clasname=cfhider.WordCount$IntSumReducer
methodname=reduce
sourcelist2021=[]
20210427node :r0 := @this: cfhider.WordCount$IntSumReducer
20210427node in :[]
20210427node out :[]
currStmt20210423:r0 := @this: cfhider.WordCount$IntSumReducer
20210427node :r1 := @parameter0: org.apache.hadoop.io.Text
20210427node in :[]
[idStmt]iiiiiii r1 := @parameter0: org.apache.hadoop.io.Text  index:0
ClassName:cfhider.WordCount$IntSumReducer
MethodName:reduce
aaaa:0
20210427node out :[]
currStmt20210423:r1 := @parameter0: org.apache.hadoop.io.Text
20210427node :r2 := @parameter1: java.lang.Iterable
20210427node in :[]
[idStmt]iiiiiii r2 := @parameter1: java.lang.Iterable  index:1
ClassName:cfhider.WordCount$IntSumReducer
MethodName:reduce
aaaa:0
20210427node out :[]
currStmt20210423:r2 := @parameter1: java.lang.Iterable
20210427node :r3 := @parameter2: org.apache.hadoop.mapreduce.Reducer$Context
20210427node in :[]
[idStmt]iiiiiii r3 := @parameter2: org.apache.hadoop.mapreduce.Reducer$Context  index:2
ClassName:cfhider.WordCount$IntSumReducer
MethodName:reduce
aaaa:0
20210427node out :[]
currStmt20210423:r3 := @parameter2: org.apache.hadoop.mapreduce.Reducer$Context
20210427node :i0 = 0
20210427node in :[]
普通复制语句1112:i0 = 0
[taint source] u:0
SourceList:[]
20210427node out :[]
20210427node :r4 = interfaceinvoke r2.<java.lang.Iterable: java.util.Iterator iterator()>()
20210427node in :[]
调用语句赋值给变量:r4 = interfaceinvoke r2.<java.lang.Iterable: java.util.Iterator iterator()>()
20210427node out :[]
[taint328]a invoke <java.lang.Iterable: java.util.Iterator iterator()>
[taint328]a invoke 0
20210427node :$z0 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>()
20210427node in :[]
调用语句赋值给变量:$z0 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>()
20210427node out :[]
[taint328]a invoke <java.util.Iterator: boolean hasNext()>
[taint328]a invoke 0
20210427node :if $z0 == 0 goto $r7 = r0.<cfhider.WordCount$IntSumReducer: org.apache.hadoop.io.IntWritable result>
20210427node in :[]
20210427node out :[]
Have
Stmt if :if $z0 == 0 goto $r7 = r0.<cfhider.WordCount$IntSumReducer: org.apache.hadoop.io.IntWritable result>Stmt if value:$z0 == 0the value=$z0
the value=0
maintainValues.size0
ifValues1
20210427node :$r7 = r0.<cfhider.WordCount$IntSumReducer: org.apache.hadoop.io.IntWritable result>
20210427node in :[]
普通复制语句1112:$r7 = r0.<cfhider.WordCount$IntSumReducer: org.apache.hadoop.io.IntWritable result>
[taint source] u:r0
SourceList:[]
[taint source] u:r0.<cfhider.WordCount$IntSumReducer: org.apache.hadoop.io.IntWritable result>
SourceList:[]
20210427node out :[]
20210427node :virtualinvoke $r7.<org.apache.hadoop.io.IntWritable: void set(int)>(i0)
20210427node in :[]
20210427node out :[]
[taint329]i invoke virtualinvoke $r7.<org.apache.hadoop.io.IntWritable: void set(int)>(i0)
[taint328]i invoke <org.apache.hadoop.io.IntWritable: void set(int)>
[taint328]i invoke 1
value:i0
isoutSetContains  false value:i0 index:0
20210427node :$r8 = r0.<cfhider.WordCount$IntSumReducer: org.apache.hadoop.io.IntWritable result>
20210427node in :[]
普通复制语句1112:$r8 = r0.<cfhider.WordCount$IntSumReducer: org.apache.hadoop.io.IntWritable result>
[taint source] u:r0
SourceList:[]
[taint source] u:r0.<cfhider.WordCount$IntSumReducer: org.apache.hadoop.io.IntWritable result>
SourceList:[]
20210427node out :[]
20210427node :virtualinvoke r3.<org.apache.hadoop.mapreduce.Reducer$Context: void write(java.lang.Object,java.lang.Object)>(r1, $r8)
20210427node in :[]
20210427node out :[]
[taint329]i invoke virtualinvoke r3.<org.apache.hadoop.mapreduce.Reducer$Context: void write(java.lang.Object,java.lang.Object)>(r1, $r8)
[taint328]i invoke <org.apache.hadoop.mapreduce.TaskInputOutputContext: void write(java.lang.Object,java.lang.Object)>
[taint328]i invoke 2
value:r1
isoutSetContains  false value:r1 index:0
value:$r8
isoutSetContains  false value:$r8 index:1
20210427node :return
20210427node in :[]
20210427node out :[]
20210427node :$r6 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>()
20210427node in :[]
调用语句赋值给变量:$r6 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>()
20210427node out :[]
[taint328]a invoke <java.util.Iterator: java.lang.Object next()>
[taint328]a invoke 0
20210427node :r5 = (org.apache.hadoop.io.IntWritable) $r6
20210427node in :[]
普通复制语句1112:r5 = (org.apache.hadoop.io.IntWritable) $r6
[taint source] u:$r6
SourceList:[]
[taint source] u:(org.apache.hadoop.io.IntWritable) $r6
SourceList:[]
20210427node out :[]
20210427node :$i1 = virtualinvoke r5.<org.apache.hadoop.io.IntWritable: int get()>()
20210427node in :[]
调用语句赋值给变量:$i1 = virtualinvoke r5.<org.apache.hadoop.io.IntWritable: int get()>()
20210427node out :[]
[taint328]a invoke <org.apache.hadoop.io.IntWritable: int get()>
[taint328]a invoke 0
20210427node :i0 = i0 + $i1
20210427node in :[]
普通复制语句1112:i0 = i0 + $i1
[taint source] u:i0
SourceList:[]
[taint source] u:$i1
SourceList:[]
[taint source] u:i0 + $i1
SourceList:[]
20210427node out :[]
20210427node :goto [?= $z0 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>()]
20210427node in :[]
20210427node out :[]
analysis.outSet.size():0
[CFMAP]2021 After taintAnalysis:{cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}
The data isgggg 
<cfhider.WordCount$IntSumReducer: void reduce(org.apache.hadoop.io.Text,java.lang.Iterable,org.apache.hadoop.mapreduce.Reducer$Context)>
The data isgggg cfhider.WordCount$IntSumReducer reduce [] {cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}  {cfhider.WordCount$IntSumReducer={reduce=[I@d58b77}, cfhider.WordCount$TokenizerMapper={map=[I@6b7a2834}, cfhider.WordCount={main=[I@6c2aa508}, invoker.SnowFlake={<init>=[I@3b55ae95, getNextMill=[I@7638d6a1, getNewstmp=[I@36457fdc}}
Coming...
doAnalysis Startingqqqqqqqq.....
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:i0 = i0 + $i1
currStmt left value20210420:i0
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$i1 = virtualinvoke r5.<org.apache.hadoop.io.IntWritable: int get()>()
currStmt left value20210420:$i1
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:r5 = (org.apache.hadoop.io.IntWritable) $r6
currStmt left value20210420:r5
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$r6 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>()
currStmt left value20210420:$r6
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
[taint329]i invoke virtualinvoke r3.<org.apache.hadoop.mapreduce.Reducer$Context: void write(java.lang.Object,java.lang.Object)>(r1, $r8)
[taint328]i invoke <org.apache.hadoop.mapreduce.TaskInputOutputContext: void write(java.lang.Object,java.lang.Object)>
[taint328]i invoke 2
value:r1
value:$r8
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$r8 = r0.<cfhider.WordCount$IntSumReducer: org.apache.hadoop.io.IntWritable result>
currStmt left value20210420:$r8
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
[taint329]i invoke virtualinvoke $r7.<org.apache.hadoop.io.IntWritable: void set(int)>(i0)
[taint328]i invoke <org.apache.hadoop.io.IntWritable: void set(int)>
[taint328]i invoke 1
value:i0
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$r7 = r0.<cfhider.WordCount$IntSumReducer: org.apache.hadoop.io.IntWritable result>
currStmt left value20210420:$r7
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
Have
the value=$z0
the value=0
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$z0 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>()
currStmt left value20210420:$z0
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:r4 = interfaceinvoke r2.<java.lang.Iterable: java.util.Iterator iterator()>()
currStmt left value20210420:r4
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:i0 = 0
currStmt left value20210420:i0
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
doAnalysis endqqqqqqq.....
come here
[CFMAP]2021 After BackwardAnalysis:{cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}
[taint into] sootMethod: reduce
[]
class name :cfhider.WordCount$IntSumReducer
method name :reduce
method list :[]
clasname=cfhider.WordCount$IntSumReducer
methodname=reduce
sourcelist2021=[]
20210427node :r0 := @this: cfhider.WordCount$IntSumReducer
20210427node in :[]
20210427node out :[]
currStmt20210423:r0 := @this: cfhider.WordCount$IntSumReducer
20210427node :r1 := @parameter0: java.lang.Object
20210427node in :[]
[idStmt]iiiiiii r1 := @parameter0: java.lang.Object  index:0
ClassName:cfhider.WordCount$IntSumReducer
MethodName:reduce
aaaa:0
20210427node out :[]
currStmt20210423:r1 := @parameter0: java.lang.Object
20210427node :r2 := @parameter1: java.lang.Iterable
20210427node in :[]
[idStmt]iiiiiii r2 := @parameter1: java.lang.Iterable  index:1
ClassName:cfhider.WordCount$IntSumReducer
MethodName:reduce
aaaa:0
20210427node out :[]
currStmt20210423:r2 := @parameter1: java.lang.Iterable
20210427node :r3 := @parameter2: org.apache.hadoop.mapreduce.Reducer$Context
20210427node in :[]
[idStmt]iiiiiii r3 := @parameter2: org.apache.hadoop.mapreduce.Reducer$Context  index:2
ClassName:cfhider.WordCount$IntSumReducer
MethodName:reduce
aaaa:0
20210427node out :[]
currStmt20210423:r3 := @parameter2: org.apache.hadoop.mapreduce.Reducer$Context
20210427node :$r4 = (org.apache.hadoop.io.Text) r1
20210427node in :[]
普通复制语句1112:$r4 = (org.apache.hadoop.io.Text) r1
[taint source] u:r1
SourceList:[]
[taint source] u:(org.apache.hadoop.io.Text) r1
SourceList:[]
20210427node out :[]
20210427node :virtualinvoke r0.<cfhider.WordCount$IntSumReducer: void reduce(org.apache.hadoop.io.Text,java.lang.Iterable,org.apache.hadoop.mapreduce.Reducer$Context)>($r4, r2, r3)
20210427node in :[]
20210427node out :[]
[taint329]i invoke virtualinvoke r0.<cfhider.WordCount$IntSumReducer: void reduce(org.apache.hadoop.io.Text,java.lang.Iterable,org.apache.hadoop.mapreduce.Reducer$Context)>($r4, r2, r3)
[taint328]i invoke <cfhider.WordCount$IntSumReducer: void reduce(org.apache.hadoop.io.Text,java.lang.Iterable,org.apache.hadoop.mapreduce.Reducer$Context)>
[taint328]i invoke 3
value:$r4
isoutSetContains  false value:$r4 index:0
value:r2
isoutSetContains  false value:r2 index:1
value:r3
isoutSetContains  false value:r3 index:2
[invokemap]invoke:reduce  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
20210427node :return
20210427node in :[]
20210427node out :[]
analysis.outSet.size():0
[CFMAP]2021 After taintAnalysis:{cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}
The data isgggg 
<cfhider.WordCount$IntSumReducer: void reduce(java.lang.Object,java.lang.Iterable,org.apache.hadoop.mapreduce.Reducer$Context)>
The data isgggg cfhider.WordCount$IntSumReducer reduce [] {cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}  {cfhider.WordCount$IntSumReducer={reduce=[I@43b7320e}, cfhider.WordCount$TokenizerMapper={map=[I@6b7a2834}, cfhider.WordCount={main=[I@6c2aa508}, invoker.SnowFlake={<init>=[I@3b55ae95, getNextMill=[I@7638d6a1, getNewstmp=[I@36457fdc}}
Coming...
doAnalysis Startingqqqqqqqq.....
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
[taint329]i invoke virtualinvoke r0.<cfhider.WordCount$IntSumReducer: void reduce(org.apache.hadoop.io.Text,java.lang.Iterable,org.apache.hadoop.mapreduce.Reducer$Context)>($r4, r2, r3)
[taint328]i invoke <cfhider.WordCount$IntSumReducer: void reduce(org.apache.hadoop.io.Text,java.lang.Iterable,org.apache.hadoop.mapreduce.Reducer$Context)>
[taint328]i invoke 3
value:$r4
in here:[I@303757dd
[invokemap]invoke:reduce  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
value:r2
in here:[I@303757dd
[invokemap]invoke:reduce  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
value:r3
in here:[I@303757dd
[invokemap]invoke:reduce  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$r4 = (org.apache.hadoop.io.Text) r1
currStmt left value20210420:$r4
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
doAnalysis endqqqqqqq.....
come here
[CFMAP]2021 After BackwardAnalysis:{cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}
[taint into] sootMethod: <init>
[]
class name :cfhider.WordCount$IntSumReducer
method name :<init>
method list :[]
clasname=cfhider.WordCount$IntSumReducer
methodname=<init>
sourcelist2021=[]
20210427node :r0 := @this: cfhider.WordCount$IntSumReducer
20210427node in :[]
20210427node out :[]
currStmt20210423:r0 := @this: cfhider.WordCount$IntSumReducer
20210427node :specialinvoke r0.<org.apache.hadoop.mapreduce.Reducer: void <init>()>()
20210427node in :[]
20210427node out :[]
[taint329]i invoke specialinvoke r0.<org.apache.hadoop.mapreduce.Reducer: void <init>()>()
[taint328]i invoke <org.apache.hadoop.mapreduce.Reducer: void <init>()>
[taint328]i invoke 0
20210427node :$r1 = new org.apache.hadoop.io.IntWritable
20210427node in :[]
普通复制语句1112:$r1 = new org.apache.hadoop.io.IntWritable
[taint source] u:new org.apache.hadoop.io.IntWritable
SourceList:[]
20210427node out :[]
20210427node :specialinvoke $r1.<org.apache.hadoop.io.IntWritable: void <init>()>()
20210427node in :[]
20210427node out :[]
[taint329]i invoke specialinvoke $r1.<org.apache.hadoop.io.IntWritable: void <init>()>()
[taint328]i invoke <org.apache.hadoop.io.IntWritable: void <init>()>
[taint328]i invoke 0
20210427node :r0.<cfhider.WordCount$IntSumReducer: org.apache.hadoop.io.IntWritable result> = $r1
20210427node in :[]
普通复制语句1112:r0.<cfhider.WordCount$IntSumReducer: org.apache.hadoop.io.IntWritable result> = $r1
[taint source] u:r0
SourceList:[]
[taint source] u:$r1
SourceList:[]
20210427node out :[]
20210427node :return
20210427node in :[]
20210427node out :[]
analysis.outSet.size():0
[CFMAP]2021 After taintAnalysis:{cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}
The data isgggg 
<cfhider.WordCount$IntSumReducer: void <init>()>
The data isgggg cfhider.WordCount$IntSumReducer <init> [] {cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}  {cfhider.WordCount$IntSumReducer={reduce=[I@43b7320e}, cfhider.WordCount$TokenizerMapper={map=[I@6b7a2834}, cfhider.WordCount={main=[I@6c2aa508}, invoker.SnowFlake={<init>=[I@3b55ae95, getNextMill=[I@7638d6a1, getNewstmp=[I@36457fdc}}
Coming...
doAnalysis Startingqqqqqqqq.....
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:r0.<cfhider.WordCount$IntSumReducer: org.apache.hadoop.io.IntWritable result> = $r1
currStmt left value20210420:r0.<cfhider.WordCount$IntSumReducer: org.apache.hadoop.io.IntWritable result>
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
[taint329]i invoke specialinvoke $r1.<org.apache.hadoop.io.IntWritable: void <init>()>()
[taint328]i invoke <org.apache.hadoop.io.IntWritable: void <init>()>
[taint328]i invoke 0
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$r1 = new org.apache.hadoop.io.IntWritable
currStmt left value20210420:$r1
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
[taint329]i invoke specialinvoke r0.<org.apache.hadoop.mapreduce.Reducer: void <init>()>()
[taint328]i invoke <org.apache.hadoop.mapreduce.Reducer: void <init>()>
[taint328]i invoke 0
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
doAnalysis endqqqqqqq.....
come here
[CFMAP]2021 After BackwardAnalysis:{cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}
[taint into] sootMethod: reduce
[]
class name :cfhider.WordCount$IntSumReducer
method name :reduce
method list :[]
clasname=cfhider.WordCount$IntSumReducer
methodname=reduce
sourcelist2021=[]
20210427node :r0 := @this: cfhider.WordCount$IntSumReducer
20210427node in :[]
20210427node out :[]
currStmt20210423:r0 := @this: cfhider.WordCount$IntSumReducer
20210427node :r1 := @parameter0: org.apache.hadoop.io.Text
20210427node in :[]
[idStmt]iiiiiii r1 := @parameter0: org.apache.hadoop.io.Text  index:0
ClassName:cfhider.WordCount$IntSumReducer
MethodName:reduce
aaaa:0
20210427node out :[]
currStmt20210423:r1 := @parameter0: org.apache.hadoop.io.Text
20210427node :r2 := @parameter1: java.lang.Iterable
20210427node in :[]
[idStmt]iiiiiii r2 := @parameter1: java.lang.Iterable  index:1
ClassName:cfhider.WordCount$IntSumReducer
MethodName:reduce
aaaa:0
20210427node out :[]
currStmt20210423:r2 := @parameter1: java.lang.Iterable
20210427node :r3 := @parameter2: org.apache.hadoop.mapreduce.Reducer$Context
20210427node in :[]
[idStmt]iiiiiii r3 := @parameter2: org.apache.hadoop.mapreduce.Reducer$Context  index:2
ClassName:cfhider.WordCount$IntSumReducer
MethodName:reduce
aaaa:0
20210427node out :[]
currStmt20210423:r3 := @parameter2: org.apache.hadoop.mapreduce.Reducer$Context
20210427node :i0 = 0
20210427node in :[]
普通复制语句1112:i0 = 0
[taint source] u:0
SourceList:[]
20210427node out :[]
20210427node :r4 = interfaceinvoke r2.<java.lang.Iterable: java.util.Iterator iterator()>()
20210427node in :[]
调用语句赋值给变量:r4 = interfaceinvoke r2.<java.lang.Iterable: java.util.Iterator iterator()>()
20210427node out :[]
[taint328]a invoke <java.lang.Iterable: java.util.Iterator iterator()>
[taint328]a invoke 0
20210427node :$z0 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>()
20210427node in :[]
调用语句赋值给变量:$z0 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>()
20210427node out :[]
[taint328]a invoke <java.util.Iterator: boolean hasNext()>
[taint328]a invoke 0
20210427node :if $z0 == 0 goto $r7 = r0.<cfhider.WordCount$IntSumReducer: org.apache.hadoop.io.IntWritable result>
20210427node in :[]
20210427node out :[]
Have
Stmt if :if $z0 == 0 goto $r7 = r0.<cfhider.WordCount$IntSumReducer: org.apache.hadoop.io.IntWritable result>Stmt if value:$z0 == 0the value=$z0
the value=0
maintainValues.size0
ifValues1
20210427node :$r7 = r0.<cfhider.WordCount$IntSumReducer: org.apache.hadoop.io.IntWritable result>
20210427node in :[]
普通复制语句1112:$r7 = r0.<cfhider.WordCount$IntSumReducer: org.apache.hadoop.io.IntWritable result>
[taint source] u:r0
SourceList:[]
[taint source] u:r0.<cfhider.WordCount$IntSumReducer: org.apache.hadoop.io.IntWritable result>
SourceList:[]
20210427node out :[]
20210427node :virtualinvoke $r7.<org.apache.hadoop.io.IntWritable: void set(int)>(i0)
20210427node in :[]
20210427node out :[]
[taint329]i invoke virtualinvoke $r7.<org.apache.hadoop.io.IntWritable: void set(int)>(i0)
[taint328]i invoke <org.apache.hadoop.io.IntWritable: void set(int)>
[taint328]i invoke 1
value:i0
isoutSetContains  false value:i0 index:0
20210427node :$r8 = r0.<cfhider.WordCount$IntSumReducer: org.apache.hadoop.io.IntWritable result>
20210427node in :[]
普通复制语句1112:$r8 = r0.<cfhider.WordCount$IntSumReducer: org.apache.hadoop.io.IntWritable result>
[taint source] u:r0
SourceList:[]
[taint source] u:r0.<cfhider.WordCount$IntSumReducer: org.apache.hadoop.io.IntWritable result>
SourceList:[]
20210427node out :[]
20210427node :virtualinvoke r3.<org.apache.hadoop.mapreduce.Reducer$Context: void write(java.lang.Object,java.lang.Object)>(r1, $r8)
20210427node in :[]
20210427node out :[]
[taint329]i invoke virtualinvoke r3.<org.apache.hadoop.mapreduce.Reducer$Context: void write(java.lang.Object,java.lang.Object)>(r1, $r8)
[taint328]i invoke <org.apache.hadoop.mapreduce.TaskInputOutputContext: void write(java.lang.Object,java.lang.Object)>
[taint328]i invoke 2
value:r1
isoutSetContains  false value:r1 index:0
value:$r8
isoutSetContains  false value:$r8 index:1
20210427node :return
20210427node in :[]
20210427node out :[]
20210427node :$r6 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>()
20210427node in :[]
调用语句赋值给变量:$r6 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>()
20210427node out :[]
[taint328]a invoke <java.util.Iterator: java.lang.Object next()>
[taint328]a invoke 0
20210427node :r5 = (org.apache.hadoop.io.IntWritable) $r6
20210427node in :[]
普通复制语句1112:r5 = (org.apache.hadoop.io.IntWritable) $r6
[taint source] u:$r6
SourceList:[]
[taint source] u:(org.apache.hadoop.io.IntWritable) $r6
SourceList:[]
20210427node out :[]
20210427node :$i1 = virtualinvoke r5.<org.apache.hadoop.io.IntWritable: int get()>()
20210427node in :[]
调用语句赋值给变量:$i1 = virtualinvoke r5.<org.apache.hadoop.io.IntWritable: int get()>()
20210427node out :[]
[taint328]a invoke <org.apache.hadoop.io.IntWritable: int get()>
[taint328]a invoke 0
20210427node :i0 = i0 + $i1
20210427node in :[]
普通复制语句1112:i0 = i0 + $i1
[taint source] u:i0
SourceList:[]
[taint source] u:$i1
SourceList:[]
[taint source] u:i0 + $i1
SourceList:[]
20210427node out :[]
20210427node :goto [?= $z0 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>()]
20210427node in :[]
20210427node out :[]
analysis.outSet.size():0
[CFMAP]2021 After taintAnalysis:{cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}
The data isgggg 
<cfhider.WordCount$IntSumReducer: void reduce(org.apache.hadoop.io.Text,java.lang.Iterable,org.apache.hadoop.mapreduce.Reducer$Context)>
The data isgggg cfhider.WordCount$IntSumReducer reduce [] {cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}  {cfhider.WordCount$IntSumReducer={reduce=[I@16986e6}, cfhider.WordCount$TokenizerMapper={map=[I@6b7a2834}, cfhider.WordCount={main=[I@6c2aa508}, invoker.SnowFlake={<init>=[I@3b55ae95, getNextMill=[I@7638d6a1, getNewstmp=[I@36457fdc}}
Coming...
doAnalysis Startingqqqqqqqq.....
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:i0 = i0 + $i1
currStmt left value20210420:i0
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$i1 = virtualinvoke r5.<org.apache.hadoop.io.IntWritable: int get()>()
currStmt left value20210420:$i1
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:r5 = (org.apache.hadoop.io.IntWritable) $r6
currStmt left value20210420:r5
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$r6 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>()
currStmt left value20210420:$r6
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
[taint329]i invoke virtualinvoke r3.<org.apache.hadoop.mapreduce.Reducer$Context: void write(java.lang.Object,java.lang.Object)>(r1, $r8)
[taint328]i invoke <org.apache.hadoop.mapreduce.TaskInputOutputContext: void write(java.lang.Object,java.lang.Object)>
[taint328]i invoke 2
value:r1
value:$r8
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$r8 = r0.<cfhider.WordCount$IntSumReducer: org.apache.hadoop.io.IntWritable result>
currStmt left value20210420:$r8
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
[taint329]i invoke virtualinvoke $r7.<org.apache.hadoop.io.IntWritable: void set(int)>(i0)
[taint328]i invoke <org.apache.hadoop.io.IntWritable: void set(int)>
[taint328]i invoke 1
value:i0
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$r7 = r0.<cfhider.WordCount$IntSumReducer: org.apache.hadoop.io.IntWritable result>
currStmt left value20210420:$r7
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
Have
the value=$z0
the value=0
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$z0 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>()
currStmt left value20210420:$z0
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:r4 = interfaceinvoke r2.<java.lang.Iterable: java.util.Iterator iterator()>()
currStmt left value20210420:r4
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:i0 = 0
currStmt left value20210420:i0
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
doAnalysis endqqqqqqq.....
come here
[CFMAP]2021 After BackwardAnalysis:{cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}
[taint into] sootMethod: reduce
[]
class name :cfhider.WordCount$IntSumReducer
method name :reduce
method list :[]
clasname=cfhider.WordCount$IntSumReducer
methodname=reduce
sourcelist2021=[]
20210427node :r0 := @this: cfhider.WordCount$IntSumReducer
20210427node in :[]
20210427node out :[]
currStmt20210423:r0 := @this: cfhider.WordCount$IntSumReducer
20210427node :r1 := @parameter0: java.lang.Object
20210427node in :[]
[idStmt]iiiiiii r1 := @parameter0: java.lang.Object  index:0
ClassName:cfhider.WordCount$IntSumReducer
MethodName:reduce
aaaa:0
20210427node out :[]
currStmt20210423:r1 := @parameter0: java.lang.Object
20210427node :r2 := @parameter1: java.lang.Iterable
20210427node in :[]
[idStmt]iiiiiii r2 := @parameter1: java.lang.Iterable  index:1
ClassName:cfhider.WordCount$IntSumReducer
MethodName:reduce
aaaa:0
20210427node out :[]
currStmt20210423:r2 := @parameter1: java.lang.Iterable
20210427node :r3 := @parameter2: org.apache.hadoop.mapreduce.Reducer$Context
20210427node in :[]
[idStmt]iiiiiii r3 := @parameter2: org.apache.hadoop.mapreduce.Reducer$Context  index:2
ClassName:cfhider.WordCount$IntSumReducer
MethodName:reduce
aaaa:0
20210427node out :[]
currStmt20210423:r3 := @parameter2: org.apache.hadoop.mapreduce.Reducer$Context
20210427node :$r4 = (org.apache.hadoop.io.Text) r1
20210427node in :[]
普通复制语句1112:$r4 = (org.apache.hadoop.io.Text) r1
[taint source] u:r1
SourceList:[]
[taint source] u:(org.apache.hadoop.io.Text) r1
SourceList:[]
20210427node out :[]
20210427node :virtualinvoke r0.<cfhider.WordCount$IntSumReducer: void reduce(org.apache.hadoop.io.Text,java.lang.Iterable,org.apache.hadoop.mapreduce.Reducer$Context)>($r4, r2, r3)
20210427node in :[]
20210427node out :[]
[taint329]i invoke virtualinvoke r0.<cfhider.WordCount$IntSumReducer: void reduce(org.apache.hadoop.io.Text,java.lang.Iterable,org.apache.hadoop.mapreduce.Reducer$Context)>($r4, r2, r3)
[taint328]i invoke <cfhider.WordCount$IntSumReducer: void reduce(org.apache.hadoop.io.Text,java.lang.Iterable,org.apache.hadoop.mapreduce.Reducer$Context)>
[taint328]i invoke 3
value:$r4
isoutSetContains  false value:$r4 index:0
value:r2
isoutSetContains  false value:r2 index:1
value:r3
isoutSetContains  false value:r3 index:2
[invokemap]invoke:reduce  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
20210427node :return
20210427node in :[]
20210427node out :[]
analysis.outSet.size():0
[CFMAP]2021 After taintAnalysis:{cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}
The data isgggg 
<cfhider.WordCount$IntSumReducer: void reduce(java.lang.Object,java.lang.Iterable,org.apache.hadoop.mapreduce.Reducer$Context)>
The data isgggg cfhider.WordCount$IntSumReducer reduce [] {cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}  {cfhider.WordCount$IntSumReducer={reduce=[I@371766c3}, cfhider.WordCount$TokenizerMapper={map=[I@6b7a2834}, cfhider.WordCount={main=[I@6c2aa508}, invoker.SnowFlake={<init>=[I@3b55ae95, getNextMill=[I@7638d6a1, getNewstmp=[I@36457fdc}}
Coming...
doAnalysis Startingqqqqqqqq.....
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
[taint329]i invoke virtualinvoke r0.<cfhider.WordCount$IntSumReducer: void reduce(org.apache.hadoop.io.Text,java.lang.Iterable,org.apache.hadoop.mapreduce.Reducer$Context)>($r4, r2, r3)
[taint328]i invoke <cfhider.WordCount$IntSumReducer: void reduce(org.apache.hadoop.io.Text,java.lang.Iterable,org.apache.hadoop.mapreduce.Reducer$Context)>
[taint328]i invoke 3
value:$r4
in here:[I@615ba876
[invokemap]invoke:reduce  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
value:r2
in here:[I@615ba876
[invokemap]invoke:reduce  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
value:r3
in here:[I@615ba876
[invokemap]invoke:reduce  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$r4 = (org.apache.hadoop.io.Text) r1
currStmt left value20210420:$r4
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
doAnalysis endqqqqqqq.....
come here
[CFMAP]2021 After BackwardAnalysis:{cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}
[taint]SooClass:cfhider.WordCount
[taint] class: cfhider.WordCount
methList :{<init>=[], main=[]}
[taint into] sootMethod: <init>
[]
class name :cfhider.WordCount
method name :<init>
method list :[]
clasname=cfhider.WordCount
methodname=<init>
sourcelist2021=[]
20210427node :r0 := @this: cfhider.WordCount
20210427node in :[]
20210427node out :[]
currStmt20210423:r0 := @this: cfhider.WordCount
20210427node :specialinvoke r0.<java.lang.Object: void <init>()>()
20210427node in :[]
20210427node out :[]
[taint329]i invoke specialinvoke r0.<java.lang.Object: void <init>()>()
[taint328]i invoke <java.lang.Object: void <init>()>
[taint328]i invoke 0
20210427node :return
20210427node in :[]
20210427node out :[]
analysis.outSet.size():0
[CFMAP]2021 After taintAnalysis:{cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}
The data isgggg 
<cfhider.WordCount: void <init>()>
The data isgggg cfhider.WordCount <init> [] {cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}  {cfhider.WordCount$IntSumReducer={reduce=[I@371766c3}, cfhider.WordCount$TokenizerMapper={map=[I@6b7a2834}, cfhider.WordCount={main=[I@6c2aa508}, invoker.SnowFlake={<init>=[I@3b55ae95, getNextMill=[I@7638d6a1, getNewstmp=[I@36457fdc}}
Coming...
doAnalysis Startingqqqqqqqq.....
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
[taint329]i invoke specialinvoke r0.<java.lang.Object: void <init>()>()
[taint328]i invoke <java.lang.Object: void <init>()>
[taint328]i invoke 0
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
doAnalysis endqqqqqqq.....
come here
[CFMAP]2021 After BackwardAnalysis:{cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}
[taint into] sootMethod: main
[]
class name :cfhider.WordCount
method name :main
method list :[]
clasname=cfhider.WordCount
methodname=main
sourcelist2021=[]
20210427node :r0 := @parameter0: java.lang.String[]
20210427node in :[]
[idStmt]iiiiiii r0 := @parameter0: java.lang.String[]  index:0
ClassName:cfhider.WordCount
MethodName:main
aaaa:0
20210427node out :[]
currStmt20210423:r0 := @parameter0: java.lang.String[]
20210427node :$r1 = <java.lang.System: java.io.PrintStream out>
20210427node in :[]
普通复制语句1112:$r1 = <java.lang.System: java.io.PrintStream out>
[taint source] u:<java.lang.System: java.io.PrintStream out>
SourceList:[]
20210427node out :[]
20210427node :virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>("In this project, we test wordcount with SGX!\n")
20210427node in :[]
20210427node out :[]
[taint329]i invoke virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>("In this project, we test wordcount with SGX!\n")
[taint328]i invoke <java.io.PrintStream: void println(java.lang.String)>
[taint328]i invoke 1
value:"In this project, we test wordcount with SGX!\n"
isoutSetContains  false value:"In this project, we test wordcount with SGX!\n" index:0
20210427node :$r6 = new org.apache.hadoop.conf.Configuration
20210427node in :[]
普通复制语句1112:$r6 = new org.apache.hadoop.conf.Configuration
[taint source] u:new org.apache.hadoop.conf.Configuration
SourceList:[]
20210427node out :[]
20210427node :specialinvoke $r6.<org.apache.hadoop.conf.Configuration: void <init>()>()
20210427node in :[]
20210427node out :[]
[taint329]i invoke specialinvoke $r6.<org.apache.hadoop.conf.Configuration: void <init>()>()
[taint328]i invoke <org.apache.hadoop.conf.Configuration: void <init>()>
[taint328]i invoke 0
20210427node :r2 = $r6
20210427node in :[]
普通复制语句1112:r2 = $r6
[taint source] u:$r6
SourceList:[]
20210427node out :[]
20210427node :$r7 = new org.apache.hadoop.util.GenericOptionsParser
20210427node in :[]
普通复制语句1112:$r7 = new org.apache.hadoop.util.GenericOptionsParser
[taint source] u:new org.apache.hadoop.util.GenericOptionsParser
SourceList:[]
20210427node out :[]
20210427node :specialinvoke $r7.<org.apache.hadoop.util.GenericOptionsParser: void <init>(org.apache.hadoop.conf.Configuration,java.lang.String[])>(r2, r0)
20210427node in :[]
20210427node out :[]
[taint329]i invoke specialinvoke $r7.<org.apache.hadoop.util.GenericOptionsParser: void <init>(org.apache.hadoop.conf.Configuration,java.lang.String[])>(r2, r0)
[taint328]i invoke <org.apache.hadoop.util.GenericOptionsParser: void <init>(org.apache.hadoop.conf.Configuration,java.lang.String[])>
[taint328]i invoke 2
value:r2
isoutSetContains  false value:r2 index:0
value:r0
isoutSetContains  false value:r0 index:1
20210427node :r3 = $r7
20210427node in :[]
普通复制语句1112:r3 = $r7
[taint source] u:$r7
SourceList:[]
20210427node out :[]
20210427node :r4 = virtualinvoke r3.<org.apache.hadoop.util.GenericOptionsParser: java.lang.String[] getRemainingArgs()>()
20210427node in :[]
调用语句赋值给变量:r4 = virtualinvoke r3.<org.apache.hadoop.util.GenericOptionsParser: java.lang.String[] getRemainingArgs()>()
20210427node out :[]
[taint328]a invoke <org.apache.hadoop.util.GenericOptionsParser: java.lang.String[] getRemainingArgs()>
[taint328]a invoke 0
20210427node :l0 = staticinvoke <java.lang.System: long currentTimeMillis()>()
20210427node in :[]
调用语句赋值给变量:l0 = staticinvoke <java.lang.System: long currentTimeMillis()>()
20210427node out :[]
[taint328]a invoke <java.lang.System: long currentTimeMillis()>
[taint328]a invoke 0
20210427node :$r8 = new org.apache.hadoop.mapreduce.Job
20210427node in :[]
普通复制语句1112:$r8 = new org.apache.hadoop.mapreduce.Job
[taint source] u:new org.apache.hadoop.mapreduce.Job
SourceList:[]
20210427node out :[]
20210427node :specialinvoke $r8.<org.apache.hadoop.mapreduce.Job: void <init>(org.apache.hadoop.conf.Configuration,java.lang.String)>(r2, "word count")
20210427node in :[]
20210427node out :[]
[taint329]i invoke specialinvoke $r8.<org.apache.hadoop.mapreduce.Job: void <init>(org.apache.hadoop.conf.Configuration,java.lang.String)>(r2, "word count")
[taint328]i invoke <org.apache.hadoop.mapreduce.Job: void <init>(org.apache.hadoop.conf.Configuration,java.lang.String)>
[taint328]i invoke 2
value:r2
isoutSetContains  false value:r2 index:0
value:"word count"
isoutSetContains  false value:"word count" index:1
20210427node :r5 = $r8
20210427node in :[]
普通复制语句1112:r5 = $r8
[taint source] u:$r8
SourceList:[]
20210427node out :[]
20210427node :virtualinvoke r5.<org.apache.hadoop.mapreduce.Job: void setJarByClass(java.lang.Class)>(class "cfhider/WordCount")
20210427node in :[]
20210427node out :[]
[taint329]i invoke virtualinvoke r5.<org.apache.hadoop.mapreduce.Job: void setJarByClass(java.lang.Class)>(class "cfhider/WordCount")
[taint328]i invoke <org.apache.hadoop.mapreduce.Job: void setJarByClass(java.lang.Class)>
[taint328]i invoke 1
value:class "cfhider/WordCount"
isoutSetContains  false value:class "cfhider/WordCount" index:0
20210427node :virtualinvoke r5.<org.apache.hadoop.mapreduce.Job: void setMapperClass(java.lang.Class)>(class "cfhider/WordCount$TokenizerMapper")
20210427node in :[]
20210427node out :[]
[taint329]i invoke virtualinvoke r5.<org.apache.hadoop.mapreduce.Job: void setMapperClass(java.lang.Class)>(class "cfhider/WordCount$TokenizerMapper")
[taint328]i invoke <org.apache.hadoop.mapreduce.Job: void setMapperClass(java.lang.Class)>
[taint328]i invoke 1
value:class "cfhider/WordCount$TokenizerMapper"
isoutSetContains  false value:class "cfhider/WordCount$TokenizerMapper" index:0
20210427node :virtualinvoke r5.<org.apache.hadoop.mapreduce.Job: void setCombinerClass(java.lang.Class)>(class "cfhider/WordCount$IntSumReducer")
20210427node in :[]
20210427node out :[]
[taint329]i invoke virtualinvoke r5.<org.apache.hadoop.mapreduce.Job: void setCombinerClass(java.lang.Class)>(class "cfhider/WordCount$IntSumReducer")
[taint328]i invoke <org.apache.hadoop.mapreduce.Job: void setCombinerClass(java.lang.Class)>
[taint328]i invoke 1
value:class "cfhider/WordCount$IntSumReducer"
isoutSetContains  false value:class "cfhider/WordCount$IntSumReducer" index:0
20210427node :virtualinvoke r5.<org.apache.hadoop.mapreduce.Job: void setReducerClass(java.lang.Class)>(class "cfhider/WordCount$IntSumReducer")
20210427node in :[]
20210427node out :[]
[taint329]i invoke virtualinvoke r5.<org.apache.hadoop.mapreduce.Job: void setReducerClass(java.lang.Class)>(class "cfhider/WordCount$IntSumReducer")
[taint328]i invoke <org.apache.hadoop.mapreduce.Job: void setReducerClass(java.lang.Class)>
[taint328]i invoke 1
value:class "cfhider/WordCount$IntSumReducer"
isoutSetContains  false value:class "cfhider/WordCount$IntSumReducer" index:0
20210427node :virtualinvoke r5.<org.apache.hadoop.mapreduce.Job: void setOutputKeyClass(java.lang.Class)>(class "org/apache/hadoop/io/Text")
20210427node in :[]
20210427node out :[]
[taint329]i invoke virtualinvoke r5.<org.apache.hadoop.mapreduce.Job: void setOutputKeyClass(java.lang.Class)>(class "org/apache/hadoop/io/Text")
[taint328]i invoke <org.apache.hadoop.mapreduce.Job: void setOutputKeyClass(java.lang.Class)>
[taint328]i invoke 1
value:class "org/apache/hadoop/io/Text"
isoutSetContains  false value:class "org/apache/hadoop/io/Text" index:0
20210427node :virtualinvoke r5.<org.apache.hadoop.mapreduce.Job: void setOutputValueClass(java.lang.Class)>(class "org/apache/hadoop/io/IntWritable")
20210427node in :[]
20210427node out :[]
[taint329]i invoke virtualinvoke r5.<org.apache.hadoop.mapreduce.Job: void setOutputValueClass(java.lang.Class)>(class "org/apache/hadoop/io/IntWritable")
[taint328]i invoke <org.apache.hadoop.mapreduce.Job: void setOutputValueClass(java.lang.Class)>
[taint328]i invoke 1
value:class "org/apache/hadoop/io/IntWritable"
isoutSetContains  false value:class "org/apache/hadoop/io/IntWritable" index:0
20210427node :$r9 = new org.apache.hadoop.fs.Path
20210427node in :[]
普通复制语句1112:$r9 = new org.apache.hadoop.fs.Path
[taint source] u:new org.apache.hadoop.fs.Path
SourceList:[]
20210427node out :[]
20210427node :$r10 = r4[0]
20210427node in :[]
普通复制语句1112:$r10 = r4[0]
[taint source] u:r4
SourceList:[]
[taint source] u:0
SourceList:[]
[taint source] u:r4[0]
SourceList:[]
20210427node out :[]
20210427node :specialinvoke $r9.<org.apache.hadoop.fs.Path: void <init>(java.lang.String)>($r10)
20210427node in :[]
20210427node out :[]
[taint329]i invoke specialinvoke $r9.<org.apache.hadoop.fs.Path: void <init>(java.lang.String)>($r10)
[taint328]i invoke <org.apache.hadoop.fs.Path: void <init>(java.lang.String)>
[taint328]i invoke 1
value:$r10
isoutSetContains  false value:$r10 index:0
20210427node :staticinvoke <org.apache.hadoop.mapreduce.lib.input.FileInputFormat: void addInputPath(org.apache.hadoop.mapreduce.Job,org.apache.hadoop.fs.Path)>(r5, $r9)
20210427node in :[]
20210427node out :[]
[taint329]i invoke staticinvoke <org.apache.hadoop.mapreduce.lib.input.FileInputFormat: void addInputPath(org.apache.hadoop.mapreduce.Job,org.apache.hadoop.fs.Path)>(r5, $r9)
[taint328]i invoke <org.apache.hadoop.mapreduce.lib.input.FileInputFormat: void addInputPath(org.apache.hadoop.mapreduce.Job,org.apache.hadoop.fs.Path)>
[taint328]i invoke 2
value:r5
isoutSetContains  false value:r5 index:0
value:$r9
isoutSetContains  false value:$r9 index:1
20210427node :$r11 = new org.apache.hadoop.fs.Path
20210427node in :[]
普通复制语句1112:$r11 = new org.apache.hadoop.fs.Path
[taint source] u:new org.apache.hadoop.fs.Path
SourceList:[]
20210427node out :[]
20210427node :$r12 = r4[1]
20210427node in :[]
普通复制语句1112:$r12 = r4[1]
[taint source] u:r4
SourceList:[]
[taint source] u:1
SourceList:[]
[taint source] u:r4[1]
SourceList:[]
20210427node out :[]
20210427node :specialinvoke $r11.<org.apache.hadoop.fs.Path: void <init>(java.lang.String)>($r12)
20210427node in :[]
20210427node out :[]
[taint329]i invoke specialinvoke $r11.<org.apache.hadoop.fs.Path: void <init>(java.lang.String)>($r12)
[taint328]i invoke <org.apache.hadoop.fs.Path: void <init>(java.lang.String)>
[taint328]i invoke 1
value:$r12
isoutSetContains  false value:$r12 index:0
20210427node :staticinvoke <org.apache.hadoop.mapreduce.lib.output.FileOutputFormat: void setOutputPath(org.apache.hadoop.mapreduce.Job,org.apache.hadoop.fs.Path)>(r5, $r11)
20210427node in :[]
20210427node out :[]
[taint329]i invoke staticinvoke <org.apache.hadoop.mapreduce.lib.output.FileOutputFormat: void setOutputPath(org.apache.hadoop.mapreduce.Job,org.apache.hadoop.fs.Path)>(r5, $r11)
[taint328]i invoke <org.apache.hadoop.mapreduce.lib.output.FileOutputFormat: void setOutputPath(org.apache.hadoop.mapreduce.Job,org.apache.hadoop.fs.Path)>
[taint328]i invoke 2
value:r5
isoutSetContains  false value:r5 index:0
value:$r11
isoutSetContains  false value:$r11 index:1
20210427node :$z0 = virtualinvoke r5.<org.apache.hadoop.mapreduce.Job: boolean waitForCompletion(boolean)>(1)
20210427node in :[]
调用语句赋值给变量:$z0 = virtualinvoke r5.<org.apache.hadoop.mapreduce.Job: boolean waitForCompletion(boolean)>(1)
20210427node out :[]
[taint328]a invoke <org.apache.hadoop.mapreduce.Job: boolean waitForCompletion(boolean)>
[taint328]a invoke 1
assi isoutSet  false value:1 index:0
20210427node :if $z0 == 0 goto $b2 = 1
20210427node in :[]
20210427node out :[]
Have
Stmt if :if $z0 == 0 goto $b2 = 1Stmt if value:$z0 == 0the value=$z0
the value=0
maintainValues.size0
ifValues1
20210427node :$b2 = 1
20210427node in :[]
普通复制语句1112:$b2 = 1
[taint source] u:1
SourceList:[]
20210427node out :[]
20210427node :$b2 = 0
20210427node in :[]
普通复制语句1112:$b2 = 0
[taint source] u:0
SourceList:[]
20210427node out :[]
20210427node :goto [?= b1 = $b2]
20210427node in :[]
20210427node out :[]
20210427node :b1 = $b2
20210427node in :[]
普通复制语句1112:b1 = $b2
[taint source] u:$b2
SourceList:[]
20210427node out :[]
20210427node :$l3 = staticinvoke <java.lang.System: long currentTimeMillis()>()
20210427node in :[]
调用语句赋值给变量:$l3 = staticinvoke <java.lang.System: long currentTimeMillis()>()
20210427node out :[]
[taint328]a invoke <java.lang.System: long currentTimeMillis()>
[taint328]a invoke 0
20210427node :$l4 = $l3 - l0
20210427node in :[]
普通复制语句1112:$l4 = $l3 - l0
[taint source] u:$l3
SourceList:[]
[taint source] u:l0
SourceList:[]
[taint source] u:$l3 - l0
SourceList:[]
20210427node out :[]
20210427node :$d1 = (double) $l4
20210427node in :[]
普通复制语句1112:$d1 = (double) $l4
[taint source] u:$l4
SourceList:[]
[taint source] u:(double) $l4
SourceList:[]
20210427node out :[]
20210427node :d0 = $d1 / 1000.0
20210427node in :[]
普通复制语句1112:d0 = $d1 / 1000.0
[taint source] u:$d1
SourceList:[]
[taint source] u:1000.0
SourceList:[]
[taint source] u:$d1 / 1000.0
SourceList:[]
20210427node out :[]
20210427node :$r13 = <java.lang.System: java.io.PrintStream out>
20210427node in :[]
普通复制语句1112:$r13 = <java.lang.System: java.io.PrintStream out>
[taint source] u:<java.lang.System: java.io.PrintStream out>
SourceList:[]
20210427node out :[]
20210427node :$r14 = new java.lang.StringBuilder
20210427node in :[]
普通复制语句1112:$r14 = new java.lang.StringBuilder
[taint source] u:new java.lang.StringBuilder
SourceList:[]
20210427node out :[]
20210427node :specialinvoke $r14.<java.lang.StringBuilder: void <init>()>()
20210427node in :[]
20210427node out :[]
[taint329]i invoke specialinvoke $r14.<java.lang.StringBuilder: void <init>()>()
[taint328]i invoke <java.lang.StringBuilder: void <init>()>
[taint328]i invoke 0
20210427node :$r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Job Finished in ")
20210427node in :[]
调用语句赋值给变量:$r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Job Finished in ")
20210427node out :[]
[taint328]a invoke <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
[taint328]a invoke 1
assi isoutSet  false value:"Job Finished in " index:0
20210427node :$r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(double)>(d0)
20210427node in :[]
调用语句赋值给变量:$r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(double)>(d0)
20210427node out :[]
[taint328]a invoke <java.lang.StringBuilder: java.lang.StringBuilder append(double)>
[taint328]a invoke 1
assi isoutSet  false value:d0 index:0
20210427node :$r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" seconds")
20210427node in :[]
调用语句赋值给变量:$r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" seconds")
20210427node out :[]
[taint328]a invoke <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
[taint328]a invoke 1
assi isoutSet  false value:" seconds" index:0
20210427node :$r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>()
20210427node in :[]
调用语句赋值给变量:$r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>()
20210427node out :[]
[taint328]a invoke <java.lang.StringBuilder: java.lang.String toString()>
[taint328]a invoke 0
20210427node :virtualinvoke $r13.<java.io.PrintStream: void println(java.lang.String)>($r18)
20210427node in :[]
20210427node out :[]
[taint329]i invoke virtualinvoke $r13.<java.io.PrintStream: void println(java.lang.String)>($r18)
[taint328]i invoke <java.io.PrintStream: void println(java.lang.String)>
[taint328]i invoke 1
value:$r18
isoutSetContains  false value:$r18 index:0
20210427node :staticinvoke <java.lang.System: void exit(int)>(b1)
20210427node in :[]
20210427node out :[]
[taint329]i invoke staticinvoke <java.lang.System: void exit(int)>(b1)
[taint328]i invoke <java.lang.System: void exit(int)>
[taint328]i invoke 1
value:b1
isoutSetContains  false value:b1 index:0
20210427node :return
20210427node in :[]
20210427node out :[]
analysis.outSet.size():0
[CFMAP]2021 After taintAnalysis:{cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}
The data isgggg 
<cfhider.WordCount: void main(java.lang.String[])>
The data isgggg cfhider.WordCount main [] {cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}  {cfhider.WordCount$IntSumReducer={reduce=[I@371766c3}, cfhider.WordCount$TokenizerMapper={map=[I@6b7a2834}, cfhider.WordCount={main=[I@48910ce9}, invoker.SnowFlake={<init>=[I@3b55ae95, getNextMill=[I@7638d6a1, getNewstmp=[I@36457fdc}}
Coming...
doAnalysis Startingqqqqqqqq.....
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
[taint329]i invoke staticinvoke <java.lang.System: void exit(int)>(b1)
[taint328]i invoke <java.lang.System: void exit(int)>
[taint328]i invoke 1
value:b1
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
[taint329]i invoke virtualinvoke $r13.<java.io.PrintStream: void println(java.lang.String)>($r18)
[taint328]i invoke <java.io.PrintStream: void println(java.lang.String)>
[taint328]i invoke 1
value:$r18
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>()
currStmt left value20210420:$r18
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" seconds")
currStmt left value20210420:$r17
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(double)>(d0)
currStmt left value20210420:$r16
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Job Finished in ")
currStmt left value20210420:$r15
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
[taint329]i invoke specialinvoke $r14.<java.lang.StringBuilder: void <init>()>()
[taint328]i invoke <java.lang.StringBuilder: void <init>()>
[taint328]i invoke 0
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$r14 = new java.lang.StringBuilder
currStmt left value20210420:$r14
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$r13 = <java.lang.System: java.io.PrintStream out>
currStmt left value20210420:$r13
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:d0 = $d1 / 1000.0
currStmt left value20210420:d0
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$d1 = (double) $l4
currStmt left value20210420:$d1
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$l4 = $l3 - l0
currStmt left value20210420:$l4
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$l3 = staticinvoke <java.lang.System: long currentTimeMillis()>()
currStmt left value20210420:$l3
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:b1 = $b2
currStmt left value20210420:b1
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$b2 = 0
currStmt left value20210420:$b2
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$b2 = 1
currStmt left value20210420:$b2
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
Have
the value=$z0
the value=0
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$z0 = virtualinvoke r5.<org.apache.hadoop.mapreduce.Job: boolean waitForCompletion(boolean)>(1)
currStmt left value20210420:$z0
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
[taint329]i invoke staticinvoke <org.apache.hadoop.mapreduce.lib.output.FileOutputFormat: void setOutputPath(org.apache.hadoop.mapreduce.Job,org.apache.hadoop.fs.Path)>(r5, $r11)
[taint328]i invoke <org.apache.hadoop.mapreduce.lib.output.FileOutputFormat: void setOutputPath(org.apache.hadoop.mapreduce.Job,org.apache.hadoop.fs.Path)>
[taint328]i invoke 2
value:r5
value:$r11
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
[taint329]i invoke specialinvoke $r11.<org.apache.hadoop.fs.Path: void <init>(java.lang.String)>($r12)
[taint328]i invoke <org.apache.hadoop.fs.Path: void <init>(java.lang.String)>
[taint328]i invoke 1
value:$r12
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$r12 = r4[1]
currStmt left value20210420:$r12
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$r11 = new org.apache.hadoop.fs.Path
currStmt left value20210420:$r11
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
[taint329]i invoke staticinvoke <org.apache.hadoop.mapreduce.lib.input.FileInputFormat: void addInputPath(org.apache.hadoop.mapreduce.Job,org.apache.hadoop.fs.Path)>(r5, $r9)
[taint328]i invoke <org.apache.hadoop.mapreduce.lib.input.FileInputFormat: void addInputPath(org.apache.hadoop.mapreduce.Job,org.apache.hadoop.fs.Path)>
[taint328]i invoke 2
value:r5
value:$r9
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
[taint329]i invoke specialinvoke $r9.<org.apache.hadoop.fs.Path: void <init>(java.lang.String)>($r10)
[taint328]i invoke <org.apache.hadoop.fs.Path: void <init>(java.lang.String)>
[taint328]i invoke 1
value:$r10
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$r10 = r4[0]
currStmt left value20210420:$r10
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$r9 = new org.apache.hadoop.fs.Path
currStmt left value20210420:$r9
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
[taint329]i invoke virtualinvoke r5.<org.apache.hadoop.mapreduce.Job: void setOutputValueClass(java.lang.Class)>(class "org/apache/hadoop/io/IntWritable")
[taint328]i invoke <org.apache.hadoop.mapreduce.Job: void setOutputValueClass(java.lang.Class)>
[taint328]i invoke 1
value:class "org/apache/hadoop/io/IntWritable"
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
[taint329]i invoke virtualinvoke r5.<org.apache.hadoop.mapreduce.Job: void setOutputKeyClass(java.lang.Class)>(class "org/apache/hadoop/io/Text")
[taint328]i invoke <org.apache.hadoop.mapreduce.Job: void setOutputKeyClass(java.lang.Class)>
[taint328]i invoke 1
value:class "org/apache/hadoop/io/Text"
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
[taint329]i invoke virtualinvoke r5.<org.apache.hadoop.mapreduce.Job: void setReducerClass(java.lang.Class)>(class "cfhider/WordCount$IntSumReducer")
[taint328]i invoke <org.apache.hadoop.mapreduce.Job: void setReducerClass(java.lang.Class)>
[taint328]i invoke 1
value:class "cfhider/WordCount$IntSumReducer"
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
[taint329]i invoke virtualinvoke r5.<org.apache.hadoop.mapreduce.Job: void setCombinerClass(java.lang.Class)>(class "cfhider/WordCount$IntSumReducer")
[taint328]i invoke <org.apache.hadoop.mapreduce.Job: void setCombinerClass(java.lang.Class)>
[taint328]i invoke 1
value:class "cfhider/WordCount$IntSumReducer"
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
[taint329]i invoke virtualinvoke r5.<org.apache.hadoop.mapreduce.Job: void setMapperClass(java.lang.Class)>(class "cfhider/WordCount$TokenizerMapper")
[taint328]i invoke <org.apache.hadoop.mapreduce.Job: void setMapperClass(java.lang.Class)>
[taint328]i invoke 1
value:class "cfhider/WordCount$TokenizerMapper"
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
[taint329]i invoke virtualinvoke r5.<org.apache.hadoop.mapreduce.Job: void setJarByClass(java.lang.Class)>(class "cfhider/WordCount")
[taint328]i invoke <org.apache.hadoop.mapreduce.Job: void setJarByClass(java.lang.Class)>
[taint328]i invoke 1
value:class "cfhider/WordCount"
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:r5 = $r8
currStmt left value20210420:r5
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
[taint329]i invoke specialinvoke $r8.<org.apache.hadoop.mapreduce.Job: void <init>(org.apache.hadoop.conf.Configuration,java.lang.String)>(r2, "word count")
[taint328]i invoke <org.apache.hadoop.mapreduce.Job: void <init>(org.apache.hadoop.conf.Configuration,java.lang.String)>
[taint328]i invoke 2
value:r2
value:"word count"
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$r8 = new org.apache.hadoop.mapreduce.Job
currStmt left value20210420:$r8
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:l0 = staticinvoke <java.lang.System: long currentTimeMillis()>()
currStmt left value20210420:l0
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:r4 = virtualinvoke r3.<org.apache.hadoop.util.GenericOptionsParser: java.lang.String[] getRemainingArgs()>()
currStmt left value20210420:r4
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:r3 = $r7
currStmt left value20210420:r3
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
[taint329]i invoke specialinvoke $r7.<org.apache.hadoop.util.GenericOptionsParser: void <init>(org.apache.hadoop.conf.Configuration,java.lang.String[])>(r2, r0)
[taint328]i invoke <org.apache.hadoop.util.GenericOptionsParser: void <init>(org.apache.hadoop.conf.Configuration,java.lang.String[])>
[taint328]i invoke 2
value:r2
value:r0
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$r7 = new org.apache.hadoop.util.GenericOptionsParser
currStmt left value20210420:$r7
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:r2 = $r6
currStmt left value20210420:r2
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
[taint329]i invoke specialinvoke $r6.<org.apache.hadoop.conf.Configuration: void <init>()>()
[taint328]i invoke <org.apache.hadoop.conf.Configuration: void <init>()>
[taint328]i invoke 0
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$r6 = new org.apache.hadoop.conf.Configuration
currStmt left value20210420:$r6
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
[taint329]i invoke virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>("In this project, we test wordcount with SGX!\n")
[taint328]i invoke <java.io.PrintStream: void println(java.lang.String)>
[taint328]i invoke 1
value:"In this project, we test wordcount with SGX!\n"
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$r1 = <java.lang.System: java.io.PrintStream out>
currStmt left value20210420:$r1
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
doAnalysis endqqqqqqq.....
come here
[CFMAP]2021 After BackwardAnalysis:{cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}
[taint into] sootMethod: <init>
[]
class name :cfhider.WordCount
method name :<init>
method list :[]
clasname=cfhider.WordCount
methodname=<init>
sourcelist2021=[]
20210427node :r0 := @this: cfhider.WordCount
20210427node in :[]
20210427node out :[]
currStmt20210423:r0 := @this: cfhider.WordCount
20210427node :specialinvoke r0.<java.lang.Object: void <init>()>()
20210427node in :[]
20210427node out :[]
[taint329]i invoke specialinvoke r0.<java.lang.Object: void <init>()>()
[taint328]i invoke <java.lang.Object: void <init>()>
[taint328]i invoke 0
20210427node :return
20210427node in :[]
20210427node out :[]
analysis.outSet.size():0
[CFMAP]2021 After taintAnalysis:{cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}
The data isgggg 
<cfhider.WordCount: void <init>()>
The data isgggg cfhider.WordCount <init> [] {cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}  {cfhider.WordCount$IntSumReducer={reduce=[I@371766c3}, cfhider.WordCount$TokenizerMapper={map=[I@6b7a2834}, cfhider.WordCount={main=[I@48910ce9}, invoker.SnowFlake={<init>=[I@3b55ae95, getNextMill=[I@7638d6a1, getNewstmp=[I@36457fdc}}
Coming...
doAnalysis Startingqqqqqqqq.....
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
[taint329]i invoke specialinvoke r0.<java.lang.Object: void <init>()>()
[taint328]i invoke <java.lang.Object: void <init>()>
[taint328]i invoke 0
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
doAnalysis endqqqqqqq.....
come here
[CFMAP]2021 After BackwardAnalysis:{cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}
[taint into] sootMethod: main
[]
class name :cfhider.WordCount
method name :main
method list :[]
clasname=cfhider.WordCount
methodname=main
sourcelist2021=[]
20210427node :r0 := @parameter0: java.lang.String[]
20210427node in :[]
[idStmt]iiiiiii r0 := @parameter0: java.lang.String[]  index:0
ClassName:cfhider.WordCount
MethodName:main
aaaa:0
20210427node out :[]
currStmt20210423:r0 := @parameter0: java.lang.String[]
20210427node :$r1 = <java.lang.System: java.io.PrintStream out>
20210427node in :[]
普通复制语句1112:$r1 = <java.lang.System: java.io.PrintStream out>
[taint source] u:<java.lang.System: java.io.PrintStream out>
SourceList:[]
20210427node out :[]
20210427node :virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>("In this project, we test wordcount with SGX!\n")
20210427node in :[]
20210427node out :[]
[taint329]i invoke virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>("In this project, we test wordcount with SGX!\n")
[taint328]i invoke <java.io.PrintStream: void println(java.lang.String)>
[taint328]i invoke 1
value:"In this project, we test wordcount with SGX!\n"
isoutSetContains  false value:"In this project, we test wordcount with SGX!\n" index:0
20210427node :$r6 = new org.apache.hadoop.conf.Configuration
20210427node in :[]
普通复制语句1112:$r6 = new org.apache.hadoop.conf.Configuration
[taint source] u:new org.apache.hadoop.conf.Configuration
SourceList:[]
20210427node out :[]
20210427node :specialinvoke $r6.<org.apache.hadoop.conf.Configuration: void <init>()>()
20210427node in :[]
20210427node out :[]
[taint329]i invoke specialinvoke $r6.<org.apache.hadoop.conf.Configuration: void <init>()>()
[taint328]i invoke <org.apache.hadoop.conf.Configuration: void <init>()>
[taint328]i invoke 0
20210427node :r2 = $r6
20210427node in :[]
普通复制语句1112:r2 = $r6
[taint source] u:$r6
SourceList:[]
20210427node out :[]
20210427node :$r7 = new org.apache.hadoop.util.GenericOptionsParser
20210427node in :[]
普通复制语句1112:$r7 = new org.apache.hadoop.util.GenericOptionsParser
[taint source] u:new org.apache.hadoop.util.GenericOptionsParser
SourceList:[]
20210427node out :[]
20210427node :specialinvoke $r7.<org.apache.hadoop.util.GenericOptionsParser: void <init>(org.apache.hadoop.conf.Configuration,java.lang.String[])>(r2, r0)
20210427node in :[]
20210427node out :[]
[taint329]i invoke specialinvoke $r7.<org.apache.hadoop.util.GenericOptionsParser: void <init>(org.apache.hadoop.conf.Configuration,java.lang.String[])>(r2, r0)
[taint328]i invoke <org.apache.hadoop.util.GenericOptionsParser: void <init>(org.apache.hadoop.conf.Configuration,java.lang.String[])>
[taint328]i invoke 2
value:r2
isoutSetContains  false value:r2 index:0
value:r0
isoutSetContains  false value:r0 index:1
20210427node :r3 = $r7
20210427node in :[]
普通复制语句1112:r3 = $r7
[taint source] u:$r7
SourceList:[]
20210427node out :[]
20210427node :r4 = virtualinvoke r3.<org.apache.hadoop.util.GenericOptionsParser: java.lang.String[] getRemainingArgs()>()
20210427node in :[]
调用语句赋值给变量:r4 = virtualinvoke r3.<org.apache.hadoop.util.GenericOptionsParser: java.lang.String[] getRemainingArgs()>()
20210427node out :[]
[taint328]a invoke <org.apache.hadoop.util.GenericOptionsParser: java.lang.String[] getRemainingArgs()>
[taint328]a invoke 0
20210427node :l0 = staticinvoke <java.lang.System: long currentTimeMillis()>()
20210427node in :[]
调用语句赋值给变量:l0 = staticinvoke <java.lang.System: long currentTimeMillis()>()
20210427node out :[]
[taint328]a invoke <java.lang.System: long currentTimeMillis()>
[taint328]a invoke 0
20210427node :$r8 = new org.apache.hadoop.mapreduce.Job
20210427node in :[]
普通复制语句1112:$r8 = new org.apache.hadoop.mapreduce.Job
[taint source] u:new org.apache.hadoop.mapreduce.Job
SourceList:[]
20210427node out :[]
20210427node :specialinvoke $r8.<org.apache.hadoop.mapreduce.Job: void <init>(org.apache.hadoop.conf.Configuration,java.lang.String)>(r2, "word count")
20210427node in :[]
20210427node out :[]
[taint329]i invoke specialinvoke $r8.<org.apache.hadoop.mapreduce.Job: void <init>(org.apache.hadoop.conf.Configuration,java.lang.String)>(r2, "word count")
[taint328]i invoke <org.apache.hadoop.mapreduce.Job: void <init>(org.apache.hadoop.conf.Configuration,java.lang.String)>
[taint328]i invoke 2
value:r2
isoutSetContains  false value:r2 index:0
value:"word count"
isoutSetContains  false value:"word count" index:1
20210427node :r5 = $r8
20210427node in :[]
普通复制语句1112:r5 = $r8
[taint source] u:$r8
SourceList:[]
20210427node out :[]
20210427node :virtualinvoke r5.<org.apache.hadoop.mapreduce.Job: void setJarByClass(java.lang.Class)>(class "cfhider/WordCount")
20210427node in :[]
20210427node out :[]
[taint329]i invoke virtualinvoke r5.<org.apache.hadoop.mapreduce.Job: void setJarByClass(java.lang.Class)>(class "cfhider/WordCount")
[taint328]i invoke <org.apache.hadoop.mapreduce.Job: void setJarByClass(java.lang.Class)>
[taint328]i invoke 1
value:class "cfhider/WordCount"
isoutSetContains  false value:class "cfhider/WordCount" index:0
20210427node :virtualinvoke r5.<org.apache.hadoop.mapreduce.Job: void setMapperClass(java.lang.Class)>(class "cfhider/WordCount$TokenizerMapper")
20210427node in :[]
20210427node out :[]
[taint329]i invoke virtualinvoke r5.<org.apache.hadoop.mapreduce.Job: void setMapperClass(java.lang.Class)>(class "cfhider/WordCount$TokenizerMapper")
[taint328]i invoke <org.apache.hadoop.mapreduce.Job: void setMapperClass(java.lang.Class)>
[taint328]i invoke 1
value:class "cfhider/WordCount$TokenizerMapper"
isoutSetContains  false value:class "cfhider/WordCount$TokenizerMapper" index:0
20210427node :virtualinvoke r5.<org.apache.hadoop.mapreduce.Job: void setCombinerClass(java.lang.Class)>(class "cfhider/WordCount$IntSumReducer")
20210427node in :[]
20210427node out :[]
[taint329]i invoke virtualinvoke r5.<org.apache.hadoop.mapreduce.Job: void setCombinerClass(java.lang.Class)>(class "cfhider/WordCount$IntSumReducer")
[taint328]i invoke <org.apache.hadoop.mapreduce.Job: void setCombinerClass(java.lang.Class)>
[taint328]i invoke 1
value:class "cfhider/WordCount$IntSumReducer"
isoutSetContains  false value:class "cfhider/WordCount$IntSumReducer" index:0
20210427node :virtualinvoke r5.<org.apache.hadoop.mapreduce.Job: void setReducerClass(java.lang.Class)>(class "cfhider/WordCount$IntSumReducer")
20210427node in :[]
20210427node out :[]
[taint329]i invoke virtualinvoke r5.<org.apache.hadoop.mapreduce.Job: void setReducerClass(java.lang.Class)>(class "cfhider/WordCount$IntSumReducer")
[taint328]i invoke <org.apache.hadoop.mapreduce.Job: void setReducerClass(java.lang.Class)>
[taint328]i invoke 1
value:class "cfhider/WordCount$IntSumReducer"
isoutSetContains  false value:class "cfhider/WordCount$IntSumReducer" index:0
20210427node :virtualinvoke r5.<org.apache.hadoop.mapreduce.Job: void setOutputKeyClass(java.lang.Class)>(class "org/apache/hadoop/io/Text")
20210427node in :[]
20210427node out :[]
[taint329]i invoke virtualinvoke r5.<org.apache.hadoop.mapreduce.Job: void setOutputKeyClass(java.lang.Class)>(class "org/apache/hadoop/io/Text")
[taint328]i invoke <org.apache.hadoop.mapreduce.Job: void setOutputKeyClass(java.lang.Class)>
[taint328]i invoke 1
value:class "org/apache/hadoop/io/Text"
isoutSetContains  false value:class "org/apache/hadoop/io/Text" index:0
20210427node :virtualinvoke r5.<org.apache.hadoop.mapreduce.Job: void setOutputValueClass(java.lang.Class)>(class "org/apache/hadoop/io/IntWritable")
20210427node in :[]
20210427node out :[]
[taint329]i invoke virtualinvoke r5.<org.apache.hadoop.mapreduce.Job: void setOutputValueClass(java.lang.Class)>(class "org/apache/hadoop/io/IntWritable")
[taint328]i invoke <org.apache.hadoop.mapreduce.Job: void setOutputValueClass(java.lang.Class)>
[taint328]i invoke 1
value:class "org/apache/hadoop/io/IntWritable"
isoutSetContains  false value:class "org/apache/hadoop/io/IntWritable" index:0
20210427node :$r9 = new org.apache.hadoop.fs.Path
20210427node in :[]
普通复制语句1112:$r9 = new org.apache.hadoop.fs.Path
[taint source] u:new org.apache.hadoop.fs.Path
SourceList:[]
20210427node out :[]
20210427node :$r10 = r4[0]
20210427node in :[]
普通复制语句1112:$r10 = r4[0]
[taint source] u:r4
SourceList:[]
[taint source] u:0
SourceList:[]
[taint source] u:r4[0]
SourceList:[]
20210427node out :[]
20210427node :specialinvoke $r9.<org.apache.hadoop.fs.Path: void <init>(java.lang.String)>($r10)
20210427node in :[]
20210427node out :[]
[taint329]i invoke specialinvoke $r9.<org.apache.hadoop.fs.Path: void <init>(java.lang.String)>($r10)
[taint328]i invoke <org.apache.hadoop.fs.Path: void <init>(java.lang.String)>
[taint328]i invoke 1
value:$r10
isoutSetContains  false value:$r10 index:0
20210427node :staticinvoke <org.apache.hadoop.mapreduce.lib.input.FileInputFormat: void addInputPath(org.apache.hadoop.mapreduce.Job,org.apache.hadoop.fs.Path)>(r5, $r9)
20210427node in :[]
20210427node out :[]
[taint329]i invoke staticinvoke <org.apache.hadoop.mapreduce.lib.input.FileInputFormat: void addInputPath(org.apache.hadoop.mapreduce.Job,org.apache.hadoop.fs.Path)>(r5, $r9)
[taint328]i invoke <org.apache.hadoop.mapreduce.lib.input.FileInputFormat: void addInputPath(org.apache.hadoop.mapreduce.Job,org.apache.hadoop.fs.Path)>
[taint328]i invoke 2
value:r5
isoutSetContains  false value:r5 index:0
value:$r9
isoutSetContains  false value:$r9 index:1
20210427node :$r11 = new org.apache.hadoop.fs.Path
20210427node in :[]
普通复制语句1112:$r11 = new org.apache.hadoop.fs.Path
[taint source] u:new org.apache.hadoop.fs.Path
SourceList:[]
20210427node out :[]
20210427node :$r12 = r4[1]
20210427node in :[]
普通复制语句1112:$r12 = r4[1]
[taint source] u:r4
SourceList:[]
[taint source] u:1
SourceList:[]
[taint source] u:r4[1]
SourceList:[]
20210427node out :[]
20210427node :specialinvoke $r11.<org.apache.hadoop.fs.Path: void <init>(java.lang.String)>($r12)
20210427node in :[]
20210427node out :[]
[taint329]i invoke specialinvoke $r11.<org.apache.hadoop.fs.Path: void <init>(java.lang.String)>($r12)
[taint328]i invoke <org.apache.hadoop.fs.Path: void <init>(java.lang.String)>
[taint328]i invoke 1
value:$r12
isoutSetContains  false value:$r12 index:0
20210427node :staticinvoke <org.apache.hadoop.mapreduce.lib.output.FileOutputFormat: void setOutputPath(org.apache.hadoop.mapreduce.Job,org.apache.hadoop.fs.Path)>(r5, $r11)
20210427node in :[]
20210427node out :[]
[taint329]i invoke staticinvoke <org.apache.hadoop.mapreduce.lib.output.FileOutputFormat: void setOutputPath(org.apache.hadoop.mapreduce.Job,org.apache.hadoop.fs.Path)>(r5, $r11)
[taint328]i invoke <org.apache.hadoop.mapreduce.lib.output.FileOutputFormat: void setOutputPath(org.apache.hadoop.mapreduce.Job,org.apache.hadoop.fs.Path)>
[taint328]i invoke 2
value:r5
isoutSetContains  false value:r5 index:0
value:$r11
isoutSetContains  false value:$r11 index:1
20210427node :$z0 = virtualinvoke r5.<org.apache.hadoop.mapreduce.Job: boolean waitForCompletion(boolean)>(1)
20210427node in :[]
调用语句赋值给变量:$z0 = virtualinvoke r5.<org.apache.hadoop.mapreduce.Job: boolean waitForCompletion(boolean)>(1)
20210427node out :[]
[taint328]a invoke <org.apache.hadoop.mapreduce.Job: boolean waitForCompletion(boolean)>
[taint328]a invoke 1
assi isoutSet  false value:1 index:0
20210427node :if $z0 == 0 goto $b2 = 1
20210427node in :[]
20210427node out :[]
Have
Stmt if :if $z0 == 0 goto $b2 = 1Stmt if value:$z0 == 0the value=$z0
the value=0
maintainValues.size0
ifValues1
20210427node :$b2 = 1
20210427node in :[]
普通复制语句1112:$b2 = 1
[taint source] u:1
SourceList:[]
20210427node out :[]
20210427node :$b2 = 0
20210427node in :[]
普通复制语句1112:$b2 = 0
[taint source] u:0
SourceList:[]
20210427node out :[]
20210427node :goto [?= b1 = $b2]
20210427node in :[]
20210427node out :[]
20210427node :b1 = $b2
20210427node in :[]
普通复制语句1112:b1 = $b2
[taint source] u:$b2
SourceList:[]
20210427node out :[]
20210427node :$l3 = staticinvoke <java.lang.System: long currentTimeMillis()>()
20210427node in :[]
调用语句赋值给变量:$l3 = staticinvoke <java.lang.System: long currentTimeMillis()>()
20210427node out :[]
[taint328]a invoke <java.lang.System: long currentTimeMillis()>
[taint328]a invoke 0
20210427node :$l4 = $l3 - l0
20210427node in :[]
普通复制语句1112:$l4 = $l3 - l0
[taint source] u:$l3
SourceList:[]
[taint source] u:l0
SourceList:[]
[taint source] u:$l3 - l0
SourceList:[]
20210427node out :[]
20210427node :$d1 = (double) $l4
20210427node in :[]
普通复制语句1112:$d1 = (double) $l4
[taint source] u:$l4
SourceList:[]
[taint source] u:(double) $l4
SourceList:[]
20210427node out :[]
20210427node :d0 = $d1 / 1000.0
20210427node in :[]
普通复制语句1112:d0 = $d1 / 1000.0
[taint source] u:$d1
SourceList:[]
[taint source] u:1000.0
SourceList:[]
[taint source] u:$d1 / 1000.0
SourceList:[]
20210427node out :[]
20210427node :$r13 = <java.lang.System: java.io.PrintStream out>
20210427node in :[]
普通复制语句1112:$r13 = <java.lang.System: java.io.PrintStream out>
[taint source] u:<java.lang.System: java.io.PrintStream out>
SourceList:[]
20210427node out :[]
20210427node :$r14 = new java.lang.StringBuilder
20210427node in :[]
普通复制语句1112:$r14 = new java.lang.StringBuilder
[taint source] u:new java.lang.StringBuilder
SourceList:[]
20210427node out :[]
20210427node :specialinvoke $r14.<java.lang.StringBuilder: void <init>()>()
20210427node in :[]
20210427node out :[]
[taint329]i invoke specialinvoke $r14.<java.lang.StringBuilder: void <init>()>()
[taint328]i invoke <java.lang.StringBuilder: void <init>()>
[taint328]i invoke 0
20210427node :$r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Job Finished in ")
20210427node in :[]
调用语句赋值给变量:$r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Job Finished in ")
20210427node out :[]
[taint328]a invoke <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
[taint328]a invoke 1
assi isoutSet  false value:"Job Finished in " index:0
20210427node :$r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(double)>(d0)
20210427node in :[]
调用语句赋值给变量:$r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(double)>(d0)
20210427node out :[]
[taint328]a invoke <java.lang.StringBuilder: java.lang.StringBuilder append(double)>
[taint328]a invoke 1
assi isoutSet  false value:d0 index:0
20210427node :$r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" seconds")
20210427node in :[]
调用语句赋值给变量:$r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" seconds")
20210427node out :[]
[taint328]a invoke <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
[taint328]a invoke 1
assi isoutSet  false value:" seconds" index:0
20210427node :$r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>()
20210427node in :[]
调用语句赋值给变量:$r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>()
20210427node out :[]
[taint328]a invoke <java.lang.StringBuilder: java.lang.String toString()>
[taint328]a invoke 0
20210427node :virtualinvoke $r13.<java.io.PrintStream: void println(java.lang.String)>($r18)
20210427node in :[]
20210427node out :[]
[taint329]i invoke virtualinvoke $r13.<java.io.PrintStream: void println(java.lang.String)>($r18)
[taint328]i invoke <java.io.PrintStream: void println(java.lang.String)>
[taint328]i invoke 1
value:$r18
isoutSetContains  false value:$r18 index:0
20210427node :staticinvoke <java.lang.System: void exit(int)>(b1)
20210427node in :[]
20210427node out :[]
[taint329]i invoke staticinvoke <java.lang.System: void exit(int)>(b1)
[taint328]i invoke <java.lang.System: void exit(int)>
[taint328]i invoke 1
value:b1
isoutSetContains  false value:b1 index:0
20210427node :return
20210427node in :[]
20210427node out :[]
analysis.outSet.size():0
[CFMAP]2021 After taintAnalysis:{cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}
The data isgggg 
<cfhider.WordCount: void main(java.lang.String[])>
The data isgggg cfhider.WordCount main [] {cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}  {cfhider.WordCount$IntSumReducer={reduce=[I@371766c3}, cfhider.WordCount$TokenizerMapper={map=[I@6b7a2834}, cfhider.WordCount={main=[I@2ae6ba37}, invoker.SnowFlake={<init>=[I@3b55ae95, getNextMill=[I@7638d6a1, getNewstmp=[I@36457fdc}}
Coming...
doAnalysis Startingqqqqqqqq.....
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
[taint329]i invoke staticinvoke <java.lang.System: void exit(int)>(b1)
[taint328]i invoke <java.lang.System: void exit(int)>
[taint328]i invoke 1
value:b1
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
[taint329]i invoke virtualinvoke $r13.<java.io.PrintStream: void println(java.lang.String)>($r18)
[taint328]i invoke <java.io.PrintStream: void println(java.lang.String)>
[taint328]i invoke 1
value:$r18
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>()
currStmt left value20210420:$r18
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" seconds")
currStmt left value20210420:$r17
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(double)>(d0)
currStmt left value20210420:$r16
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Job Finished in ")
currStmt left value20210420:$r15
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
[taint329]i invoke specialinvoke $r14.<java.lang.StringBuilder: void <init>()>()
[taint328]i invoke <java.lang.StringBuilder: void <init>()>
[taint328]i invoke 0
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$r14 = new java.lang.StringBuilder
currStmt left value20210420:$r14
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$r13 = <java.lang.System: java.io.PrintStream out>
currStmt left value20210420:$r13
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:d0 = $d1 / 1000.0
currStmt left value20210420:d0
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$d1 = (double) $l4
currStmt left value20210420:$d1
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$l4 = $l3 - l0
currStmt left value20210420:$l4
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$l3 = staticinvoke <java.lang.System: long currentTimeMillis()>()
currStmt left value20210420:$l3
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:b1 = $b2
currStmt left value20210420:b1
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$b2 = 0
currStmt left value20210420:$b2
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$b2 = 1
currStmt left value20210420:$b2
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
Have
the value=$z0
the value=0
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$z0 = virtualinvoke r5.<org.apache.hadoop.mapreduce.Job: boolean waitForCompletion(boolean)>(1)
currStmt left value20210420:$z0
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
[taint329]i invoke staticinvoke <org.apache.hadoop.mapreduce.lib.output.FileOutputFormat: void setOutputPath(org.apache.hadoop.mapreduce.Job,org.apache.hadoop.fs.Path)>(r5, $r11)
[taint328]i invoke <org.apache.hadoop.mapreduce.lib.output.FileOutputFormat: void setOutputPath(org.apache.hadoop.mapreduce.Job,org.apache.hadoop.fs.Path)>
[taint328]i invoke 2
value:r5
value:$r11
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
[taint329]i invoke specialinvoke $r11.<org.apache.hadoop.fs.Path: void <init>(java.lang.String)>($r12)
[taint328]i invoke <org.apache.hadoop.fs.Path: void <init>(java.lang.String)>
[taint328]i invoke 1
value:$r12
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$r12 = r4[1]
currStmt left value20210420:$r12
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$r11 = new org.apache.hadoop.fs.Path
currStmt left value20210420:$r11
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
[taint329]i invoke staticinvoke <org.apache.hadoop.mapreduce.lib.input.FileInputFormat: void addInputPath(org.apache.hadoop.mapreduce.Job,org.apache.hadoop.fs.Path)>(r5, $r9)
[taint328]i invoke <org.apache.hadoop.mapreduce.lib.input.FileInputFormat: void addInputPath(org.apache.hadoop.mapreduce.Job,org.apache.hadoop.fs.Path)>
[taint328]i invoke 2
value:r5
value:$r9
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
[taint329]i invoke specialinvoke $r9.<org.apache.hadoop.fs.Path: void <init>(java.lang.String)>($r10)
[taint328]i invoke <org.apache.hadoop.fs.Path: void <init>(java.lang.String)>
[taint328]i invoke 1
value:$r10
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$r10 = r4[0]
currStmt left value20210420:$r10
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$r9 = new org.apache.hadoop.fs.Path
currStmt left value20210420:$r9
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
[taint329]i invoke virtualinvoke r5.<org.apache.hadoop.mapreduce.Job: void setOutputValueClass(java.lang.Class)>(class "org/apache/hadoop/io/IntWritable")
[taint328]i invoke <org.apache.hadoop.mapreduce.Job: void setOutputValueClass(java.lang.Class)>
[taint328]i invoke 1
value:class "org/apache/hadoop/io/IntWritable"
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
[taint329]i invoke virtualinvoke r5.<org.apache.hadoop.mapreduce.Job: void setOutputKeyClass(java.lang.Class)>(class "org/apache/hadoop/io/Text")
[taint328]i invoke <org.apache.hadoop.mapreduce.Job: void setOutputKeyClass(java.lang.Class)>
[taint328]i invoke 1
value:class "org/apache/hadoop/io/Text"
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
[taint329]i invoke virtualinvoke r5.<org.apache.hadoop.mapreduce.Job: void setReducerClass(java.lang.Class)>(class "cfhider/WordCount$IntSumReducer")
[taint328]i invoke <org.apache.hadoop.mapreduce.Job: void setReducerClass(java.lang.Class)>
[taint328]i invoke 1
value:class "cfhider/WordCount$IntSumReducer"
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
[taint329]i invoke virtualinvoke r5.<org.apache.hadoop.mapreduce.Job: void setCombinerClass(java.lang.Class)>(class "cfhider/WordCount$IntSumReducer")
[taint328]i invoke <org.apache.hadoop.mapreduce.Job: void setCombinerClass(java.lang.Class)>
[taint328]i invoke 1
value:class "cfhider/WordCount$IntSumReducer"
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
[taint329]i invoke virtualinvoke r5.<org.apache.hadoop.mapreduce.Job: void setMapperClass(java.lang.Class)>(class "cfhider/WordCount$TokenizerMapper")
[taint328]i invoke <org.apache.hadoop.mapreduce.Job: void setMapperClass(java.lang.Class)>
[taint328]i invoke 1
value:class "cfhider/WordCount$TokenizerMapper"
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
[taint329]i invoke virtualinvoke r5.<org.apache.hadoop.mapreduce.Job: void setJarByClass(java.lang.Class)>(class "cfhider/WordCount")
[taint328]i invoke <org.apache.hadoop.mapreduce.Job: void setJarByClass(java.lang.Class)>
[taint328]i invoke 1
value:class "cfhider/WordCount"
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:r5 = $r8
currStmt left value20210420:r5
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
[taint329]i invoke specialinvoke $r8.<org.apache.hadoop.mapreduce.Job: void <init>(org.apache.hadoop.conf.Configuration,java.lang.String)>(r2, "word count")
[taint328]i invoke <org.apache.hadoop.mapreduce.Job: void <init>(org.apache.hadoop.conf.Configuration,java.lang.String)>
[taint328]i invoke 2
value:r2
value:"word count"
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$r8 = new org.apache.hadoop.mapreduce.Job
currStmt left value20210420:$r8
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:l0 = staticinvoke <java.lang.System: long currentTimeMillis()>()
currStmt left value20210420:l0
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:r4 = virtualinvoke r3.<org.apache.hadoop.util.GenericOptionsParser: java.lang.String[] getRemainingArgs()>()
currStmt left value20210420:r4
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:r3 = $r7
currStmt left value20210420:r3
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
[taint329]i invoke specialinvoke $r7.<org.apache.hadoop.util.GenericOptionsParser: void <init>(org.apache.hadoop.conf.Configuration,java.lang.String[])>(r2, r0)
[taint328]i invoke <org.apache.hadoop.util.GenericOptionsParser: void <init>(org.apache.hadoop.conf.Configuration,java.lang.String[])>
[taint328]i invoke 2
value:r2
value:r0
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$r7 = new org.apache.hadoop.util.GenericOptionsParser
currStmt left value20210420:$r7
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:r2 = $r6
currStmt left value20210420:r2
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
[taint329]i invoke specialinvoke $r6.<org.apache.hadoop.conf.Configuration: void <init>()>()
[taint328]i invoke <org.apache.hadoop.conf.Configuration: void <init>()>
[taint328]i invoke 0
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$r6 = new org.apache.hadoop.conf.Configuration
currStmt left value20210420:$r6
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
[taint329]i invoke virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>("In this project, we test wordcount with SGX!\n")
[taint328]i invoke <java.io.PrintStream: void println(java.lang.String)>
[taint328]i invoke 1
value:"In this project, we test wordcount with SGX!\n"
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$r1 = <java.lang.System: java.io.PrintStream out>
currStmt left value20210420:$r1
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
doAnalysis endqqqqqqq.....
come here
[CFMAP]2021 After BackwardAnalysis:{cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}
[taint]SooClass:cfhider.WordCount$TokenizerMapper
[taint] class: cfhider.WordCount$TokenizerMapper
methList :{<init>=[], <clinit>=[], map=[$z0]}
[taint into] sootMethod: <init>
[]
class name :cfhider.WordCount$TokenizerMapper
method name :<init>
method list :[]
clasname=cfhider.WordCount$TokenizerMapper
methodname=<init>
sourcelist2021=[]
20210427node :r0 := @this: cfhider.WordCount$TokenizerMapper
20210427node in :[]
20210427node out :[]
currStmt20210423:r0 := @this: cfhider.WordCount$TokenizerMapper
20210427node :specialinvoke r0.<org.apache.hadoop.mapreduce.Mapper: void <init>()>()
20210427node in :[]
20210427node out :[]
[taint329]i invoke specialinvoke r0.<org.apache.hadoop.mapreduce.Mapper: void <init>()>()
[taint328]i invoke <org.apache.hadoop.mapreduce.Mapper: void <init>()>
[taint328]i invoke 0
20210427node :$r1 = new org.apache.hadoop.io.Text
20210427node in :[]
普通复制语句1112:$r1 = new org.apache.hadoop.io.Text
[taint source] u:new org.apache.hadoop.io.Text
SourceList:[]
20210427node out :[]
20210427node :specialinvoke $r1.<org.apache.hadoop.io.Text: void <init>()>()
20210427node in :[]
20210427node out :[]
[taint329]i invoke specialinvoke $r1.<org.apache.hadoop.io.Text: void <init>()>()
[taint328]i invoke <org.apache.hadoop.io.Text: void <init>()>
[taint328]i invoke 0
20210427node :r0.<cfhider.WordCount$TokenizerMapper: org.apache.hadoop.io.Text word> = $r1
20210427node in :[]
普通复制语句1112:r0.<cfhider.WordCount$TokenizerMapper: org.apache.hadoop.io.Text word> = $r1
[taint source] u:r0
SourceList:[]
[taint source] u:$r1
SourceList:[]
20210427node out :[]
20210427node :return
20210427node in :[]
20210427node out :[]
analysis.outSet.size():0
[CFMAP]2021 After taintAnalysis:{cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}
The data isgggg 
<cfhider.WordCount$TokenizerMapper: void <init>()>
The data isgggg cfhider.WordCount$TokenizerMapper <init> [] {cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}  {cfhider.WordCount$IntSumReducer={reduce=[I@371766c3}, cfhider.WordCount$TokenizerMapper={map=[I@6b7a2834}, cfhider.WordCount={main=[I@2ae6ba37}, invoker.SnowFlake={<init>=[I@3b55ae95, getNextMill=[I@7638d6a1, getNewstmp=[I@36457fdc}}
Coming...
doAnalysis Startingqqqqqqqq.....
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:r0.<cfhider.WordCount$TokenizerMapper: org.apache.hadoop.io.Text word> = $r1
currStmt left value20210420:r0.<cfhider.WordCount$TokenizerMapper: org.apache.hadoop.io.Text word>
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
[taint329]i invoke specialinvoke $r1.<org.apache.hadoop.io.Text: void <init>()>()
[taint328]i invoke <org.apache.hadoop.io.Text: void <init>()>
[taint328]i invoke 0
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$r1 = new org.apache.hadoop.io.Text
currStmt left value20210420:$r1
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
[taint329]i invoke specialinvoke r0.<org.apache.hadoop.mapreduce.Mapper: void <init>()>()
[taint328]i invoke <org.apache.hadoop.mapreduce.Mapper: void <init>()>
[taint328]i invoke 0
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
doAnalysis endqqqqqqq.....
come here
[CFMAP]2021 After BackwardAnalysis:{cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}
[taint into] sootMethod: map
[$z0]
class name :cfhider.WordCount$TokenizerMapper
method name :map
method list :[$z0]
clasname=cfhider.WordCount$TokenizerMapper
methodname=map
sourcelist2021=[$z0]
20210427node :r0 := @this: cfhider.WordCount$TokenizerMapper
20210427node in :[]
20210427node out :[]
currStmt20210423:r0 := @this: cfhider.WordCount$TokenizerMapper
20210427node :r1 := @parameter0: java.lang.Object
20210427node in :[]
[idStmt]iiiiiii r1 := @parameter0: java.lang.Object  index:0
ClassName:cfhider.WordCount$TokenizerMapper
MethodName:map
aaaa:0
20210427node out :[]
currStmt20210423:r1 := @parameter0: java.lang.Object
20210427node :r2 := @parameter1: org.apache.hadoop.io.Text
20210427node in :[]
[idStmt]iiiiiii r2 := @parameter1: org.apache.hadoop.io.Text  index:1
ClassName:cfhider.WordCount$TokenizerMapper
MethodName:map
aaaa:0
20210427node out :[]
currStmt20210423:r2 := @parameter1: org.apache.hadoop.io.Text
20210427node :r3 := @parameter2: org.apache.hadoop.mapreduce.Mapper$Context
20210427node in :[]
[idStmt]iiiiiii r3 := @parameter2: org.apache.hadoop.mapreduce.Mapper$Context  index:2
ClassName:cfhider.WordCount$TokenizerMapper
MethodName:map
aaaa:0
20210427node out :[]
currStmt20210423:r3 := @parameter2: org.apache.hadoop.mapreduce.Mapper$Context
20210427node :$r4 = new java.util.StringTokenizer
20210427node in :[]
普通复制语句1112:$r4 = new java.util.StringTokenizer
[taint source] u:new java.util.StringTokenizer
SourceList:[$z0]
20210427node out :[]
20210427node :$r6 = virtualinvoke r2.<org.apache.hadoop.io.Text: java.lang.String toString()>()
20210427node in :[]
调用语句赋值给变量:$r6 = virtualinvoke r2.<org.apache.hadoop.io.Text: java.lang.String toString()>()
20210427node out :[]
[taint328]a invoke <org.apache.hadoop.io.Text: java.lang.String toString()>
[taint328]a invoke 0
20210427node :specialinvoke $r4.<java.util.StringTokenizer: void <init>(java.lang.String)>($r6)
20210427node in :[]
20210427node out :[]
[taint329]i invoke specialinvoke $r4.<java.util.StringTokenizer: void <init>(java.lang.String)>($r6)
[taint328]i invoke <java.util.StringTokenizer: void <init>(java.lang.String)>
[taint328]i invoke 1
value:$r6
isoutSetContains  false value:$r6 index:0
20210427node :r5 = $r4
20210427node in :[]
普通复制语句1112:r5 = $r4
[taint source] u:$r4
SourceList:[$z0]
20210427node out :[]
20210427node :$z0 = virtualinvoke r5.<java.util.StringTokenizer: boolean hasMoreTokens()>()
20210427node in :[]
调用语句赋值给变量:$z0 = virtualinvoke r5.<java.util.StringTokenizer: boolean hasMoreTokens()>()
20210427node out :[]
[taint328]a invoke <java.util.StringTokenizer: boolean hasMoreTokens()>
[taint328]a invoke 0
20210427node :if $z0 == 0 goto return
20210427node in :[]
20210427node out :[]
Have
Stmt if :if $z0 == 0 goto returnStmt if value:$z0 == 0the value=$z0
the value=0
maintainValues.size1
ifValues1
20210427node :return
20210427node in :[]
20210427node out :[]
20210427node :$r7 = r0.<cfhider.WordCount$TokenizerMapper: org.apache.hadoop.io.Text word>
20210427node in :[]
普通复制语句1112:$r7 = r0.<cfhider.WordCount$TokenizerMapper: org.apache.hadoop.io.Text word>
[taint source] u:r0
SourceList:[$z0]
[taint source] u:r0.<cfhider.WordCount$TokenizerMapper: org.apache.hadoop.io.Text word>
SourceList:[$z0]
20210427node out :[]
20210427node :$r8 = virtualinvoke r5.<java.util.StringTokenizer: java.lang.String nextToken()>()
20210427node in :[]
调用语句赋值给变量:$r8 = virtualinvoke r5.<java.util.StringTokenizer: java.lang.String nextToken()>()
20210427node out :[]
[taint328]a invoke <java.util.StringTokenizer: java.lang.String nextToken()>
[taint328]a invoke 0
20210427node :virtualinvoke $r7.<org.apache.hadoop.io.Text: void set(java.lang.String)>($r8)
20210427node in :[]
20210427node out :[]
[taint329]i invoke virtualinvoke $r7.<org.apache.hadoop.io.Text: void set(java.lang.String)>($r8)
[taint328]i invoke <org.apache.hadoop.io.Text: void set(java.lang.String)>
[taint328]i invoke 1
value:$r8
isoutSetContains  false value:$r8 index:0
20210427node :$r9 = r0.<cfhider.WordCount$TokenizerMapper: org.apache.hadoop.io.Text word>
20210427node in :[]
普通复制语句1112:$r9 = r0.<cfhider.WordCount$TokenizerMapper: org.apache.hadoop.io.Text word>
[taint source] u:r0
SourceList:[$z0]
[taint source] u:r0.<cfhider.WordCount$TokenizerMapper: org.apache.hadoop.io.Text word>
SourceList:[$z0]
20210427node out :[]
20210427node :$r10 = <cfhider.WordCount$TokenizerMapper: org.apache.hadoop.io.IntWritable one>
20210427node in :[]
普通复制语句1112:$r10 = <cfhider.WordCount$TokenizerMapper: org.apache.hadoop.io.IntWritable one>
[taint source] u:<cfhider.WordCount$TokenizerMapper: org.apache.hadoop.io.IntWritable one>
SourceList:[$z0]
20210427node out :[]
20210427node :virtualinvoke r3.<org.apache.hadoop.mapreduce.Mapper$Context: void write(java.lang.Object,java.lang.Object)>($r9, $r10)
20210427node in :[]
20210427node out :[]
[taint329]i invoke virtualinvoke r3.<org.apache.hadoop.mapreduce.Mapper$Context: void write(java.lang.Object,java.lang.Object)>($r9, $r10)
[taint328]i invoke <org.apache.hadoop.mapreduce.TaskInputOutputContext: void write(java.lang.Object,java.lang.Object)>
[taint328]i invoke 2
value:$r9
isoutSetContains  false value:$r9 index:0
value:$r10
isoutSetContains  false value:$r10 index:1
20210427node :goto [?= $z0 = virtualinvoke r5.<java.util.StringTokenizer: boolean hasMoreTokens()>()]
20210427node in :[]
20210427node out :[]
analysis.outSet.size():0
[CFMAP]2021 After taintAnalysis:{cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}
The data isgggg 
<cfhider.WordCount$TokenizerMapper: void map(java.lang.Object,org.apache.hadoop.io.Text,org.apache.hadoop.mapreduce.Mapper$Context)>
The data isgggg cfhider.WordCount$TokenizerMapper map [$z0] {cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}  {cfhider.WordCount$IntSumReducer={reduce=[I@371766c3}, cfhider.WordCount$TokenizerMapper={map=[I@11cb86e2}, cfhider.WordCount={main=[I@2ae6ba37}, invoker.SnowFlake={<init>=[I@3b55ae95, getNextMill=[I@7638d6a1, getNewstmp=[I@36457fdc}}
Coming...
doAnalysis Startingqqqqqqqq.....
srcValue=[]
destValue:[]
taint data:[$z0]
Coming in Backward Analysis
srcValue=[]
destValue:[]
taint data:[$z0]
Coming in Backward Analysis
[taint329]i invoke virtualinvoke r3.<org.apache.hadoop.mapreduce.Mapper$Context: void write(java.lang.Object,java.lang.Object)>($r9, $r10)
[taint328]i invoke <org.apache.hadoop.mapreduce.TaskInputOutputContext: void write(java.lang.Object,java.lang.Object)>
[taint328]i invoke 2
value:$r9
value:$r10
srcValue=[]
destValue:[]
taint data:[$z0]
Coming in Backward Analysis
currStmt20210420:$r10 = <cfhider.WordCount$TokenizerMapper: org.apache.hadoop.io.IntWritable one>
currStmt left value20210420:$r10
srcValue=[]
destValue:[]
taint data:[$z0]
Coming in Backward Analysis
currStmt20210420:$r9 = r0.<cfhider.WordCount$TokenizerMapper: org.apache.hadoop.io.Text word>
currStmt left value20210420:$r9
srcValue=[]
destValue:[]
taint data:[$z0]
Coming in Backward Analysis
[taint329]i invoke virtualinvoke $r7.<org.apache.hadoop.io.Text: void set(java.lang.String)>($r8)
[taint328]i invoke <org.apache.hadoop.io.Text: void set(java.lang.String)>
[taint328]i invoke 1
value:$r8
srcValue=[]
destValue:[]
taint data:[$z0]
Coming in Backward Analysis
currStmt20210420:$r8 = virtualinvoke r5.<java.util.StringTokenizer: java.lang.String nextToken()>()
currStmt left value20210420:$r8
srcValue=[]
destValue:[]
taint data:[$z0]
Coming in Backward Analysis
currStmt20210420:$r7 = r0.<cfhider.WordCount$TokenizerMapper: org.apache.hadoop.io.Text word>
currStmt left value20210420:$r7
srcValue=[]
destValue:[]
taint data:[$z0]
Coming in Backward Analysis
srcValue=[]
destValue:[]
taint data:[$z0]
Coming in Backward Analysis
Have
the value=$z0
the value=0
srcValue=[]
destValue:[]
taint data:[$z0]
Coming in Backward Analysis
currStmt20210420:$z0 = virtualinvoke r5.<java.util.StringTokenizer: boolean hasMoreTokens()>()
currStmt left value20210420:$z0
BackWard 20210419===virtualinvoke r5.<java.util.StringTokenizer: boolean hasMoreTokens()>()
[BackWard taint329]i invoke $z0 = virtualinvoke r5.<java.util.StringTokenizer: boolean hasMoreTokens()>()
[BackWard taint328]i invoke <java.util.StringTokenizer: boolean hasMoreTokens()>
srcValue=[]
destValue:[]
taint data:[$z0]
Coming in Backward Analysis
currStmt20210420:r5 = $r4
currStmt left value20210420:r5
srcValue=[]
destValue:[]
taint data:[$z0]
Coming in Backward Analysis
[taint329]i invoke specialinvoke $r4.<java.util.StringTokenizer: void <init>(java.lang.String)>($r6)
[taint328]i invoke <java.util.StringTokenizer: void <init>(java.lang.String)>
[taint328]i invoke 1
value:$r6
srcValue=[]
destValue:[]
taint data:[$z0]
Coming in Backward Analysis
currStmt20210420:$r6 = virtualinvoke r2.<org.apache.hadoop.io.Text: java.lang.String toString()>()
currStmt left value20210420:$r6
srcValue=[]
destValue:[]
taint data:[$z0]
Coming in Backward Analysis
currStmt20210420:$r4 = new java.util.StringTokenizer
currStmt left value20210420:$r4
srcValue=[]
destValue:[]
taint data:[$z0]
Coming in Backward Analysis
srcValue=[]
destValue:[]
taint data:[$z0]
Coming in Backward Analysis
srcValue=[]
destValue:[]
taint data:[$z0]
Coming in Backward Analysis
srcValue=[]
destValue:[]
taint data:[$z0]
Coming in Backward Analysis
doAnalysis endqqqqqqq.....
come here
[CFMAP]2021 After BackwardAnalysis:{cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}
[taint into] sootMethod: map
[$z0]
class name :cfhider.WordCount$TokenizerMapper
method name :map
method list :[$z0]
clasname=cfhider.WordCount$TokenizerMapper
methodname=map
sourcelist2021=[$z0]
20210427node :r0 := @this: cfhider.WordCount$TokenizerMapper
20210427node in :[]
20210427node out :[]
currStmt20210423:r0 := @this: cfhider.WordCount$TokenizerMapper
20210427node :r1 := @parameter0: java.lang.Object
20210427node in :[]
[idStmt]iiiiiii r1 := @parameter0: java.lang.Object  index:0
ClassName:cfhider.WordCount$TokenizerMapper
MethodName:map
aaaa:0
20210427node out :[]
currStmt20210423:r1 := @parameter0: java.lang.Object
20210427node :r2 := @parameter1: java.lang.Object
20210427node in :[]
[idStmt]iiiiiii r2 := @parameter1: java.lang.Object  index:1
ClassName:cfhider.WordCount$TokenizerMapper
MethodName:map
aaaa:0
20210427node out :[]
currStmt20210423:r2 := @parameter1: java.lang.Object
20210427node :r3 := @parameter2: org.apache.hadoop.mapreduce.Mapper$Context
20210427node in :[]
[idStmt]iiiiiii r3 := @parameter2: org.apache.hadoop.mapreduce.Mapper$Context  index:2
ClassName:cfhider.WordCount$TokenizerMapper
MethodName:map
aaaa:0
20210427node out :[]
currStmt20210423:r3 := @parameter2: org.apache.hadoop.mapreduce.Mapper$Context
20210427node :$r4 = (org.apache.hadoop.io.Text) r2
20210427node in :[]
普通复制语句1112:$r4 = (org.apache.hadoop.io.Text) r2
[taint source] u:r2
SourceList:[$z0]
[taint source] u:(org.apache.hadoop.io.Text) r2
SourceList:[$z0]
20210427node out :[]
20210427node :virtualinvoke r0.<cfhider.WordCount$TokenizerMapper: void map(java.lang.Object,org.apache.hadoop.io.Text,org.apache.hadoop.mapreduce.Mapper$Context)>(r1, $r4, r3)
20210427node in :[]
20210427node out :[]
[taint329]i invoke virtualinvoke r0.<cfhider.WordCount$TokenizerMapper: void map(java.lang.Object,org.apache.hadoop.io.Text,org.apache.hadoop.mapreduce.Mapper$Context)>(r1, $r4, r3)
[taint328]i invoke <cfhider.WordCount$TokenizerMapper: void map(java.lang.Object,org.apache.hadoop.io.Text,org.apache.hadoop.mapreduce.Mapper$Context)>
[taint328]i invoke 3
value:r1
isoutSetContains  false value:r1 index:0
value:$r4
isoutSetContains  false value:$r4 index:1
value:r3
isoutSetContains  false value:r3 index:2
[invokemap]invoke:map  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
20210427node :return
20210427node in :[]
20210427node out :[]
analysis.outSet.size():0
[CFMAP]2021 After taintAnalysis:{cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}
The data isgggg 
<cfhider.WordCount$TokenizerMapper: void map(java.lang.Object,java.lang.Object,org.apache.hadoop.mapreduce.Mapper$Context)>
The data isgggg cfhider.WordCount$TokenizerMapper map [$z0] {cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}  {cfhider.WordCount$IntSumReducer={reduce=[I@371766c3}, cfhider.WordCount$TokenizerMapper={map=[I@4904688e}, cfhider.WordCount={main=[I@2ae6ba37}, invoker.SnowFlake={<init>=[I@3b55ae95, getNextMill=[I@7638d6a1, getNewstmp=[I@36457fdc}}
Coming...
doAnalysis Startingqqqqqqqq.....
srcValue=[]
destValue:[]
taint data:[$z0]
Coming in Backward Analysis
srcValue=[]
destValue:[]
taint data:[$z0]
Coming in Backward Analysis
[taint329]i invoke virtualinvoke r0.<cfhider.WordCount$TokenizerMapper: void map(java.lang.Object,org.apache.hadoop.io.Text,org.apache.hadoop.mapreduce.Mapper$Context)>(r1, $r4, r3)
[taint328]i invoke <cfhider.WordCount$TokenizerMapper: void map(java.lang.Object,org.apache.hadoop.io.Text,org.apache.hadoop.mapreduce.Mapper$Context)>
[taint328]i invoke 3
value:r1
in here:[I@406c6815
[invokemap]invoke:map  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
value:$r4
in here:[I@406c6815
[invokemap]invoke:map  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
value:r3
in here:[I@406c6815
[invokemap]invoke:map  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
srcValue=[]
destValue:[]
taint data:[$z0]
Coming in Backward Analysis
currStmt20210420:$r4 = (org.apache.hadoop.io.Text) r2
currStmt left value20210420:$r4
srcValue=[]
destValue:[]
taint data:[$z0]
Coming in Backward Analysis
srcValue=[]
destValue:[]
taint data:[$z0]
Coming in Backward Analysis
srcValue=[]
destValue:[]
taint data:[$z0]
Coming in Backward Analysis
srcValue=[]
destValue:[]
taint data:[$z0]
Coming in Backward Analysis
doAnalysis endqqqqqqq.....
come here
[CFMAP]2021 After BackwardAnalysis:{cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}
[taint into] sootMethod: <clinit>
[]
class name :cfhider.WordCount$TokenizerMapper
method name :<clinit>
method list :[]
clasname=cfhider.WordCount$TokenizerMapper
methodname=<clinit>
sourcelist2021=[]
20210427node :$r0 = new org.apache.hadoop.io.IntWritable
20210427node in :[]
普通复制语句1112:$r0 = new org.apache.hadoop.io.IntWritable
[taint source] u:new org.apache.hadoop.io.IntWritable
SourceList:[]
20210427node out :[]
20210427node :specialinvoke $r0.<org.apache.hadoop.io.IntWritable: void <init>(int)>(1)
20210427node in :[]
20210427node out :[]
[taint329]i invoke specialinvoke $r0.<org.apache.hadoop.io.IntWritable: void <init>(int)>(1)
[taint328]i invoke <org.apache.hadoop.io.IntWritable: void <init>(int)>
[taint328]i invoke 1
value:1
isoutSetContains  false value:1 index:0
20210427node :<cfhider.WordCount$TokenizerMapper: org.apache.hadoop.io.IntWritable one> = $r0
20210427node in :[]
普通复制语句1112:<cfhider.WordCount$TokenizerMapper: org.apache.hadoop.io.IntWritable one> = $r0
[taint source] u:$r0
SourceList:[]
20210427node out :[]
20210427node :return
20210427node in :[]
20210427node out :[]
analysis.outSet.size():0
[CFMAP]2021 After taintAnalysis:{cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}
The data isgggg 
<cfhider.WordCount$TokenizerMapper: void <clinit>()>
The data isgggg cfhider.WordCount$TokenizerMapper <clinit> [] {cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}  {cfhider.WordCount$IntSumReducer={reduce=[I@371766c3}, cfhider.WordCount$TokenizerMapper={map=[I@4904688e}, cfhider.WordCount={main=[I@2ae6ba37}, invoker.SnowFlake={<init>=[I@3b55ae95, getNextMill=[I@7638d6a1, getNewstmp=[I@36457fdc}}
Coming...
doAnalysis Startingqqqqqqqq.....
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:<cfhider.WordCount$TokenizerMapper: org.apache.hadoop.io.IntWritable one> = $r0
currStmt left value20210420:<cfhider.WordCount$TokenizerMapper: org.apache.hadoop.io.IntWritable one>
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
[taint329]i invoke specialinvoke $r0.<org.apache.hadoop.io.IntWritable: void <init>(int)>(1)
[taint328]i invoke <org.apache.hadoop.io.IntWritable: void <init>(int)>
[taint328]i invoke 1
value:1
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$r0 = new org.apache.hadoop.io.IntWritable
currStmt left value20210420:$r0
doAnalysis endqqqqqqq.....
come here
[CFMAP]2021 After BackwardAnalysis:{cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}
[taint into] sootMethod: <init>
[]
class name :cfhider.WordCount$TokenizerMapper
method name :<init>
method list :[]
clasname=cfhider.WordCount$TokenizerMapper
methodname=<init>
sourcelist2021=[]
20210427node :r0 := @this: cfhider.WordCount$TokenizerMapper
20210427node in :[]
20210427node out :[]
currStmt20210423:r0 := @this: cfhider.WordCount$TokenizerMapper
20210427node :specialinvoke r0.<org.apache.hadoop.mapreduce.Mapper: void <init>()>()
20210427node in :[]
20210427node out :[]
[taint329]i invoke specialinvoke r0.<org.apache.hadoop.mapreduce.Mapper: void <init>()>()
[taint328]i invoke <org.apache.hadoop.mapreduce.Mapper: void <init>()>
[taint328]i invoke 0
20210427node :$r1 = new org.apache.hadoop.io.Text
20210427node in :[]
普通复制语句1112:$r1 = new org.apache.hadoop.io.Text
[taint source] u:new org.apache.hadoop.io.Text
SourceList:[]
20210427node out :[]
20210427node :specialinvoke $r1.<org.apache.hadoop.io.Text: void <init>()>()
20210427node in :[]
20210427node out :[]
[taint329]i invoke specialinvoke $r1.<org.apache.hadoop.io.Text: void <init>()>()
[taint328]i invoke <org.apache.hadoop.io.Text: void <init>()>
[taint328]i invoke 0
20210427node :r0.<cfhider.WordCount$TokenizerMapper: org.apache.hadoop.io.Text word> = $r1
20210427node in :[]
普通复制语句1112:r0.<cfhider.WordCount$TokenizerMapper: org.apache.hadoop.io.Text word> = $r1
[taint source] u:r0
SourceList:[]
[taint source] u:$r1
SourceList:[]
20210427node out :[]
20210427node :return
20210427node in :[]
20210427node out :[]
analysis.outSet.size():0
[CFMAP]2021 After taintAnalysis:{cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}
The data isgggg 
<cfhider.WordCount$TokenizerMapper: void <init>()>
The data isgggg cfhider.WordCount$TokenizerMapper <init> [] {cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}  {cfhider.WordCount$IntSumReducer={reduce=[I@371766c3}, cfhider.WordCount$TokenizerMapper={map=[I@4904688e}, cfhider.WordCount={main=[I@2ae6ba37}, invoker.SnowFlake={<init>=[I@3b55ae95, getNextMill=[I@7638d6a1, getNewstmp=[I@36457fdc}}
Coming...
doAnalysis Startingqqqqqqqq.....
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:r0.<cfhider.WordCount$TokenizerMapper: org.apache.hadoop.io.Text word> = $r1
currStmt left value20210420:r0.<cfhider.WordCount$TokenizerMapper: org.apache.hadoop.io.Text word>
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
[taint329]i invoke specialinvoke $r1.<org.apache.hadoop.io.Text: void <init>()>()
[taint328]i invoke <org.apache.hadoop.io.Text: void <init>()>
[taint328]i invoke 0
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$r1 = new org.apache.hadoop.io.Text
currStmt left value20210420:$r1
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
[taint329]i invoke specialinvoke r0.<org.apache.hadoop.mapreduce.Mapper: void <init>()>()
[taint328]i invoke <org.apache.hadoop.mapreduce.Mapper: void <init>()>
[taint328]i invoke 0
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
doAnalysis endqqqqqqq.....
come here
[CFMAP]2021 After BackwardAnalysis:{cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}
[taint into] sootMethod: map
[$z0]
class name :cfhider.WordCount$TokenizerMapper
method name :map
method list :[$z0]
clasname=cfhider.WordCount$TokenizerMapper
methodname=map
sourcelist2021=[$z0]
20210427node :r0 := @this: cfhider.WordCount$TokenizerMapper
20210427node in :[]
20210427node out :[]
currStmt20210423:r0 := @this: cfhider.WordCount$TokenizerMapper
20210427node :r1 := @parameter0: java.lang.Object
20210427node in :[]
[idStmt]iiiiiii r1 := @parameter0: java.lang.Object  index:0
ClassName:cfhider.WordCount$TokenizerMapper
MethodName:map
aaaa:0
20210427node out :[]
currStmt20210423:r1 := @parameter0: java.lang.Object
20210427node :r2 := @parameter1: org.apache.hadoop.io.Text
20210427node in :[]
[idStmt]iiiiiii r2 := @parameter1: org.apache.hadoop.io.Text  index:1
ClassName:cfhider.WordCount$TokenizerMapper
MethodName:map
aaaa:0
20210427node out :[]
currStmt20210423:r2 := @parameter1: org.apache.hadoop.io.Text
20210427node :r3 := @parameter2: org.apache.hadoop.mapreduce.Mapper$Context
20210427node in :[]
[idStmt]iiiiiii r3 := @parameter2: org.apache.hadoop.mapreduce.Mapper$Context  index:2
ClassName:cfhider.WordCount$TokenizerMapper
MethodName:map
aaaa:0
20210427node out :[]
currStmt20210423:r3 := @parameter2: org.apache.hadoop.mapreduce.Mapper$Context
20210427node :$r4 = new java.util.StringTokenizer
20210427node in :[]
普通复制语句1112:$r4 = new java.util.StringTokenizer
[taint source] u:new java.util.StringTokenizer
SourceList:[$z0]
20210427node out :[]
20210427node :$r6 = virtualinvoke r2.<org.apache.hadoop.io.Text: java.lang.String toString()>()
20210427node in :[]
调用语句赋值给变量:$r6 = virtualinvoke r2.<org.apache.hadoop.io.Text: java.lang.String toString()>()
20210427node out :[]
[taint328]a invoke <org.apache.hadoop.io.Text: java.lang.String toString()>
[taint328]a invoke 0
20210427node :specialinvoke $r4.<java.util.StringTokenizer: void <init>(java.lang.String)>($r6)
20210427node in :[]
20210427node out :[]
[taint329]i invoke specialinvoke $r4.<java.util.StringTokenizer: void <init>(java.lang.String)>($r6)
[taint328]i invoke <java.util.StringTokenizer: void <init>(java.lang.String)>
[taint328]i invoke 1
value:$r6
isoutSetContains  false value:$r6 index:0
20210427node :r5 = $r4
20210427node in :[]
普通复制语句1112:r5 = $r4
[taint source] u:$r4
SourceList:[$z0]
20210427node out :[]
20210427node :$z0 = virtualinvoke r5.<java.util.StringTokenizer: boolean hasMoreTokens()>()
20210427node in :[]
调用语句赋值给变量:$z0 = virtualinvoke r5.<java.util.StringTokenizer: boolean hasMoreTokens()>()
20210427node out :[]
[taint328]a invoke <java.util.StringTokenizer: boolean hasMoreTokens()>
[taint328]a invoke 0
20210427node :if $z0 == 0 goto return
20210427node in :[]
20210427node out :[]
Have
Stmt if :if $z0 == 0 goto returnStmt if value:$z0 == 0the value=$z0
the value=0
maintainValues.size1
ifValues1
20210427node :return
20210427node in :[]
20210427node out :[]
20210427node :$r7 = r0.<cfhider.WordCount$TokenizerMapper: org.apache.hadoop.io.Text word>
20210427node in :[]
普通复制语句1112:$r7 = r0.<cfhider.WordCount$TokenizerMapper: org.apache.hadoop.io.Text word>
[taint source] u:r0
SourceList:[$z0]
[taint source] u:r0.<cfhider.WordCount$TokenizerMapper: org.apache.hadoop.io.Text word>
SourceList:[$z0]
20210427node out :[]
20210427node :$r8 = virtualinvoke r5.<java.util.StringTokenizer: java.lang.String nextToken()>()
20210427node in :[]
调用语句赋值给变量:$r8 = virtualinvoke r5.<java.util.StringTokenizer: java.lang.String nextToken()>()
20210427node out :[]
[taint328]a invoke <java.util.StringTokenizer: java.lang.String nextToken()>
[taint328]a invoke 0
20210427node :virtualinvoke $r7.<org.apache.hadoop.io.Text: void set(java.lang.String)>($r8)
20210427node in :[]
20210427node out :[]
[taint329]i invoke virtualinvoke $r7.<org.apache.hadoop.io.Text: void set(java.lang.String)>($r8)
[taint328]i invoke <org.apache.hadoop.io.Text: void set(java.lang.String)>
[taint328]i invoke 1
value:$r8
isoutSetContains  false value:$r8 index:0
20210427node :$r9 = r0.<cfhider.WordCount$TokenizerMapper: org.apache.hadoop.io.Text word>
20210427node in :[]
普通复制语句1112:$r9 = r0.<cfhider.WordCount$TokenizerMapper: org.apache.hadoop.io.Text word>
[taint source] u:r0
SourceList:[$z0]
[taint source] u:r0.<cfhider.WordCount$TokenizerMapper: org.apache.hadoop.io.Text word>
SourceList:[$z0]
20210427node out :[]
20210427node :$r10 = <cfhider.WordCount$TokenizerMapper: org.apache.hadoop.io.IntWritable one>
20210427node in :[]
普通复制语句1112:$r10 = <cfhider.WordCount$TokenizerMapper: org.apache.hadoop.io.IntWritable one>
[taint source] u:<cfhider.WordCount$TokenizerMapper: org.apache.hadoop.io.IntWritable one>
SourceList:[$z0]
20210427node out :[]
20210427node :virtualinvoke r3.<org.apache.hadoop.mapreduce.Mapper$Context: void write(java.lang.Object,java.lang.Object)>($r9, $r10)
20210427node in :[]
20210427node out :[]
[taint329]i invoke virtualinvoke r3.<org.apache.hadoop.mapreduce.Mapper$Context: void write(java.lang.Object,java.lang.Object)>($r9, $r10)
[taint328]i invoke <org.apache.hadoop.mapreduce.TaskInputOutputContext: void write(java.lang.Object,java.lang.Object)>
[taint328]i invoke 2
value:$r9
isoutSetContains  false value:$r9 index:0
value:$r10
isoutSetContains  false value:$r10 index:1
20210427node :goto [?= $z0 = virtualinvoke r5.<java.util.StringTokenizer: boolean hasMoreTokens()>()]
20210427node in :[]
20210427node out :[]
analysis.outSet.size():0
[CFMAP]2021 After taintAnalysis:{cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}
The data isgggg 
<cfhider.WordCount$TokenizerMapper: void map(java.lang.Object,org.apache.hadoop.io.Text,org.apache.hadoop.mapreduce.Mapper$Context)>
The data isgggg cfhider.WordCount$TokenizerMapper map [$z0] {cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}  {cfhider.WordCount$IntSumReducer={reduce=[I@371766c3}, cfhider.WordCount$TokenizerMapper={map=[I@d255bbe}, cfhider.WordCount={main=[I@2ae6ba37}, invoker.SnowFlake={<init>=[I@3b55ae95, getNextMill=[I@7638d6a1, getNewstmp=[I@36457fdc}}
Coming...
doAnalysis Startingqqqqqqqq.....
srcValue=[]
destValue:[]
taint data:[$z0]
Coming in Backward Analysis
srcValue=[]
destValue:[]
taint data:[$z0]
Coming in Backward Analysis
[taint329]i invoke virtualinvoke r3.<org.apache.hadoop.mapreduce.Mapper$Context: void write(java.lang.Object,java.lang.Object)>($r9, $r10)
[taint328]i invoke <org.apache.hadoop.mapreduce.TaskInputOutputContext: void write(java.lang.Object,java.lang.Object)>
[taint328]i invoke 2
value:$r9
value:$r10
srcValue=[]
destValue:[]
taint data:[$z0]
Coming in Backward Analysis
currStmt20210420:$r10 = <cfhider.WordCount$TokenizerMapper: org.apache.hadoop.io.IntWritable one>
currStmt left value20210420:$r10
srcValue=[]
destValue:[]
taint data:[$z0]
Coming in Backward Analysis
currStmt20210420:$r9 = r0.<cfhider.WordCount$TokenizerMapper: org.apache.hadoop.io.Text word>
currStmt left value20210420:$r9
srcValue=[]
destValue:[]
taint data:[$z0]
Coming in Backward Analysis
[taint329]i invoke virtualinvoke $r7.<org.apache.hadoop.io.Text: void set(java.lang.String)>($r8)
[taint328]i invoke <org.apache.hadoop.io.Text: void set(java.lang.String)>
[taint328]i invoke 1
value:$r8
srcValue=[]
destValue:[]
taint data:[$z0]
Coming in Backward Analysis
currStmt20210420:$r8 = virtualinvoke r5.<java.util.StringTokenizer: java.lang.String nextToken()>()
currStmt left value20210420:$r8
srcValue=[]
destValue:[]
taint data:[$z0]
Coming in Backward Analysis
currStmt20210420:$r7 = r0.<cfhider.WordCount$TokenizerMapper: org.apache.hadoop.io.Text word>
currStmt left value20210420:$r7
srcValue=[]
destValue:[]
taint data:[$z0]
Coming in Backward Analysis
srcValue=[]
destValue:[]
taint data:[$z0]
Coming in Backward Analysis
Have
the value=$z0
the value=0
srcValue=[]
destValue:[]
taint data:[$z0]
Coming in Backward Analysis
currStmt20210420:$z0 = virtualinvoke r5.<java.util.StringTokenizer: boolean hasMoreTokens()>()
currStmt left value20210420:$z0
BackWard 20210419===virtualinvoke r5.<java.util.StringTokenizer: boolean hasMoreTokens()>()
[BackWard taint329]i invoke $z0 = virtualinvoke r5.<java.util.StringTokenizer: boolean hasMoreTokens()>()
[BackWard taint328]i invoke <java.util.StringTokenizer: boolean hasMoreTokens()>
srcValue=[]
destValue:[]
taint data:[$z0]
Coming in Backward Analysis
currStmt20210420:r5 = $r4
currStmt left value20210420:r5
srcValue=[]
destValue:[]
taint data:[$z0]
Coming in Backward Analysis
[taint329]i invoke specialinvoke $r4.<java.util.StringTokenizer: void <init>(java.lang.String)>($r6)
[taint328]i invoke <java.util.StringTokenizer: void <init>(java.lang.String)>
[taint328]i invoke 1
value:$r6
srcValue=[]
destValue:[]
taint data:[$z0]
Coming in Backward Analysis
currStmt20210420:$r6 = virtualinvoke r2.<org.apache.hadoop.io.Text: java.lang.String toString()>()
currStmt left value20210420:$r6
srcValue=[]
destValue:[]
taint data:[$z0]
Coming in Backward Analysis
currStmt20210420:$r4 = new java.util.StringTokenizer
currStmt left value20210420:$r4
srcValue=[]
destValue:[]
taint data:[$z0]
Coming in Backward Analysis
srcValue=[]
destValue:[]
taint data:[$z0]
Coming in Backward Analysis
srcValue=[]
destValue:[]
taint data:[$z0]
Coming in Backward Analysis
srcValue=[]
destValue:[]
taint data:[$z0]
Coming in Backward Analysis
doAnalysis endqqqqqqq.....
come here
[CFMAP]2021 After BackwardAnalysis:{cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}
[taint into] sootMethod: map
[$z0]
class name :cfhider.WordCount$TokenizerMapper
method name :map
method list :[$z0]
clasname=cfhider.WordCount$TokenizerMapper
methodname=map
sourcelist2021=[$z0]
20210427node :r0 := @this: cfhider.WordCount$TokenizerMapper
20210427node in :[]
20210427node out :[]
currStmt20210423:r0 := @this: cfhider.WordCount$TokenizerMapper
20210427node :r1 := @parameter0: java.lang.Object
20210427node in :[]
[idStmt]iiiiiii r1 := @parameter0: java.lang.Object  index:0
ClassName:cfhider.WordCount$TokenizerMapper
MethodName:map
aaaa:0
20210427node out :[]
currStmt20210423:r1 := @parameter0: java.lang.Object
20210427node :r2 := @parameter1: java.lang.Object
20210427node in :[]
[idStmt]iiiiiii r2 := @parameter1: java.lang.Object  index:1
ClassName:cfhider.WordCount$TokenizerMapper
MethodName:map
aaaa:0
20210427node out :[]
currStmt20210423:r2 := @parameter1: java.lang.Object
20210427node :r3 := @parameter2: org.apache.hadoop.mapreduce.Mapper$Context
20210427node in :[]
[idStmt]iiiiiii r3 := @parameter2: org.apache.hadoop.mapreduce.Mapper$Context  index:2
ClassName:cfhider.WordCount$TokenizerMapper
MethodName:map
aaaa:0
20210427node out :[]
currStmt20210423:r3 := @parameter2: org.apache.hadoop.mapreduce.Mapper$Context
20210427node :$r4 = (org.apache.hadoop.io.Text) r2
20210427node in :[]
普通复制语句1112:$r4 = (org.apache.hadoop.io.Text) r2
[taint source] u:r2
SourceList:[$z0]
[taint source] u:(org.apache.hadoop.io.Text) r2
SourceList:[$z0]
20210427node out :[]
20210427node :virtualinvoke r0.<cfhider.WordCount$TokenizerMapper: void map(java.lang.Object,org.apache.hadoop.io.Text,org.apache.hadoop.mapreduce.Mapper$Context)>(r1, $r4, r3)
20210427node in :[]
20210427node out :[]
[taint329]i invoke virtualinvoke r0.<cfhider.WordCount$TokenizerMapper: void map(java.lang.Object,org.apache.hadoop.io.Text,org.apache.hadoop.mapreduce.Mapper$Context)>(r1, $r4, r3)
[taint328]i invoke <cfhider.WordCount$TokenizerMapper: void map(java.lang.Object,org.apache.hadoop.io.Text,org.apache.hadoop.mapreduce.Mapper$Context)>
[taint328]i invoke 3
value:r1
isoutSetContains  false value:r1 index:0
value:$r4
isoutSetContains  false value:$r4 index:1
value:r3
isoutSetContains  false value:r3 index:2
[invokemap]invoke:map  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
20210427node :return
20210427node in :[]
20210427node out :[]
analysis.outSet.size():0
[CFMAP]2021 After taintAnalysis:{cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}
The data isgggg 
<cfhider.WordCount$TokenizerMapper: void map(java.lang.Object,java.lang.Object,org.apache.hadoop.mapreduce.Mapper$Context)>
The data isgggg cfhider.WordCount$TokenizerMapper map [$z0] {cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}  {cfhider.WordCount$IntSumReducer={reduce=[I@371766c3}, cfhider.WordCount$TokenizerMapper={map=[I@faa1db0}, cfhider.WordCount={main=[I@2ae6ba37}, invoker.SnowFlake={<init>=[I@3b55ae95, getNextMill=[I@7638d6a1, getNewstmp=[I@36457fdc}}
Coming...
doAnalysis Startingqqqqqqqq.....
srcValue=[]
destValue:[]
taint data:[$z0]
Coming in Backward Analysis
srcValue=[]
destValue:[]
taint data:[$z0]
Coming in Backward Analysis
[taint329]i invoke virtualinvoke r0.<cfhider.WordCount$TokenizerMapper: void map(java.lang.Object,org.apache.hadoop.io.Text,org.apache.hadoop.mapreduce.Mapper$Context)>(r1, $r4, r3)
[taint328]i invoke <cfhider.WordCount$TokenizerMapper: void map(java.lang.Object,org.apache.hadoop.io.Text,org.apache.hadoop.mapreduce.Mapper$Context)>
[taint328]i invoke 3
value:r1
in here:[I@698315d8
[invokemap]invoke:map  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
value:$r4
in here:[I@698315d8
[invokemap]invoke:map  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
value:r3
in here:[I@698315d8
[invokemap]invoke:map  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
srcValue=[]
destValue:[]
taint data:[$z0]
Coming in Backward Analysis
currStmt20210420:$r4 = (org.apache.hadoop.io.Text) r2
currStmt left value20210420:$r4
srcValue=[]
destValue:[]
taint data:[$z0]
Coming in Backward Analysis
srcValue=[]
destValue:[]
taint data:[$z0]
Coming in Backward Analysis
srcValue=[]
destValue:[]
taint data:[$z0]
Coming in Backward Analysis
srcValue=[]
destValue:[]
taint data:[$z0]
Coming in Backward Analysis
doAnalysis endqqqqqqq.....
come here
[CFMAP]2021 After BackwardAnalysis:{cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}
[taint into] sootMethod: <clinit>
[]
class name :cfhider.WordCount$TokenizerMapper
method name :<clinit>
method list :[]
clasname=cfhider.WordCount$TokenizerMapper
methodname=<clinit>
sourcelist2021=[]
20210427node :$r0 = new org.apache.hadoop.io.IntWritable
20210427node in :[]
普通复制语句1112:$r0 = new org.apache.hadoop.io.IntWritable
[taint source] u:new org.apache.hadoop.io.IntWritable
SourceList:[]
20210427node out :[]
20210427node :specialinvoke $r0.<org.apache.hadoop.io.IntWritable: void <init>(int)>(1)
20210427node in :[]
20210427node out :[]
[taint329]i invoke specialinvoke $r0.<org.apache.hadoop.io.IntWritable: void <init>(int)>(1)
[taint328]i invoke <org.apache.hadoop.io.IntWritable: void <init>(int)>
[taint328]i invoke 1
value:1
isoutSetContains  false value:1 index:0
20210427node :<cfhider.WordCount$TokenizerMapper: org.apache.hadoop.io.IntWritable one> = $r0
20210427node in :[]
普通复制语句1112:<cfhider.WordCount$TokenizerMapper: org.apache.hadoop.io.IntWritable one> = $r0
[taint source] u:$r0
SourceList:[]
20210427node out :[]
20210427node :return
20210427node in :[]
20210427node out :[]
analysis.outSet.size():0
[CFMAP]2021 After taintAnalysis:{cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}
The data isgggg 
<cfhider.WordCount$TokenizerMapper: void <clinit>()>
The data isgggg cfhider.WordCount$TokenizerMapper <clinit> [] {cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}  {cfhider.WordCount$IntSumReducer={reduce=[I@371766c3}, cfhider.WordCount$TokenizerMapper={map=[I@faa1db0}, cfhider.WordCount={main=[I@2ae6ba37}, invoker.SnowFlake={<init>=[I@3b55ae95, getNextMill=[I@7638d6a1, getNewstmp=[I@36457fdc}}
Coming...
doAnalysis Startingqqqqqqqq.....
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:<cfhider.WordCount$TokenizerMapper: org.apache.hadoop.io.IntWritable one> = $r0
currStmt left value20210420:<cfhider.WordCount$TokenizerMapper: org.apache.hadoop.io.IntWritable one>
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
[taint329]i invoke specialinvoke $r0.<org.apache.hadoop.io.IntWritable: void <init>(int)>(1)
[taint328]i invoke <org.apache.hadoop.io.IntWritable: void <init>(int)>
[taint328]i invoke 1
value:1
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$r0 = new org.apache.hadoop.io.IntWritable
currStmt left value20210420:$r0
doAnalysis endqqqqqqq.....
come here
[CFMAP]2021 After BackwardAnalysis:{cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}
[taint into] sootMethod: <init>
[]
class name :cfhider.WordCount$TokenizerMapper
method name :<init>
method list :[]
clasname=cfhider.WordCount$TokenizerMapper
methodname=<init>
sourcelist2021=[]
20210427node :r0 := @this: cfhider.WordCount$TokenizerMapper
20210427node in :[]
20210427node out :[]
currStmt20210423:r0 := @this: cfhider.WordCount$TokenizerMapper
20210427node :specialinvoke r0.<org.apache.hadoop.mapreduce.Mapper: void <init>()>()
20210427node in :[]
20210427node out :[]
[taint329]i invoke specialinvoke r0.<org.apache.hadoop.mapreduce.Mapper: void <init>()>()
[taint328]i invoke <org.apache.hadoop.mapreduce.Mapper: void <init>()>
[taint328]i invoke 0
20210427node :$r1 = new org.apache.hadoop.io.Text
20210427node in :[]
普通复制语句1112:$r1 = new org.apache.hadoop.io.Text
[taint source] u:new org.apache.hadoop.io.Text
SourceList:[]
20210427node out :[]
20210427node :specialinvoke $r1.<org.apache.hadoop.io.Text: void <init>()>()
20210427node in :[]
20210427node out :[]
[taint329]i invoke specialinvoke $r1.<org.apache.hadoop.io.Text: void <init>()>()
[taint328]i invoke <org.apache.hadoop.io.Text: void <init>()>
[taint328]i invoke 0
20210427node :r0.<cfhider.WordCount$TokenizerMapper: org.apache.hadoop.io.Text word> = $r1
20210427node in :[]
普通复制语句1112:r0.<cfhider.WordCount$TokenizerMapper: org.apache.hadoop.io.Text word> = $r1
[taint source] u:r0
SourceList:[]
[taint source] u:$r1
SourceList:[]
20210427node out :[]
20210427node :return
20210427node in :[]
20210427node out :[]
analysis.outSet.size():0
[CFMAP]2021 After taintAnalysis:{cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}
The data isgggg 
<cfhider.WordCount$TokenizerMapper: void <init>()>
The data isgggg cfhider.WordCount$TokenizerMapper <init> [] {cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}  {cfhider.WordCount$IntSumReducer={reduce=[I@371766c3}, cfhider.WordCount$TokenizerMapper={map=[I@faa1db0}, cfhider.WordCount={main=[I@2ae6ba37}, invoker.SnowFlake={<init>=[I@3b55ae95, getNextMill=[I@7638d6a1, getNewstmp=[I@36457fdc}}
Coming...
doAnalysis Startingqqqqqqqq.....
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:r0.<cfhider.WordCount$TokenizerMapper: org.apache.hadoop.io.Text word> = $r1
currStmt left value20210420:r0.<cfhider.WordCount$TokenizerMapper: org.apache.hadoop.io.Text word>
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
[taint329]i invoke specialinvoke $r1.<org.apache.hadoop.io.Text: void <init>()>()
[taint328]i invoke <org.apache.hadoop.io.Text: void <init>()>
[taint328]i invoke 0
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$r1 = new org.apache.hadoop.io.Text
currStmt left value20210420:$r1
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
[taint329]i invoke specialinvoke r0.<org.apache.hadoop.mapreduce.Mapper: void <init>()>()
[taint328]i invoke <org.apache.hadoop.mapreduce.Mapper: void <init>()>
[taint328]i invoke 0
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
doAnalysis endqqqqqqq.....
come here
[CFMAP]2021 After BackwardAnalysis:{cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}
[taint into] sootMethod: map
[$z0]
class name :cfhider.WordCount$TokenizerMapper
method name :map
method list :[$z0]
clasname=cfhider.WordCount$TokenizerMapper
methodname=map
sourcelist2021=[$z0]
20210427node :r0 := @this: cfhider.WordCount$TokenizerMapper
20210427node in :[]
20210427node out :[]
currStmt20210423:r0 := @this: cfhider.WordCount$TokenizerMapper
20210427node :r1 := @parameter0: java.lang.Object
20210427node in :[]
[idStmt]iiiiiii r1 := @parameter0: java.lang.Object  index:0
ClassName:cfhider.WordCount$TokenizerMapper
MethodName:map
aaaa:0
20210427node out :[]
currStmt20210423:r1 := @parameter0: java.lang.Object
20210427node :r2 := @parameter1: org.apache.hadoop.io.Text
20210427node in :[]
[idStmt]iiiiiii r2 := @parameter1: org.apache.hadoop.io.Text  index:1
ClassName:cfhider.WordCount$TokenizerMapper
MethodName:map
aaaa:0
20210427node out :[]
currStmt20210423:r2 := @parameter1: org.apache.hadoop.io.Text
20210427node :r3 := @parameter2: org.apache.hadoop.mapreduce.Mapper$Context
20210427node in :[]
[idStmt]iiiiiii r3 := @parameter2: org.apache.hadoop.mapreduce.Mapper$Context  index:2
ClassName:cfhider.WordCount$TokenizerMapper
MethodName:map
aaaa:0
20210427node out :[]
currStmt20210423:r3 := @parameter2: org.apache.hadoop.mapreduce.Mapper$Context
20210427node :$r4 = new java.util.StringTokenizer
20210427node in :[]
普通复制语句1112:$r4 = new java.util.StringTokenizer
[taint source] u:new java.util.StringTokenizer
SourceList:[$z0]
20210427node out :[]
20210427node :$r6 = virtualinvoke r2.<org.apache.hadoop.io.Text: java.lang.String toString()>()
20210427node in :[]
调用语句赋值给变量:$r6 = virtualinvoke r2.<org.apache.hadoop.io.Text: java.lang.String toString()>()
20210427node out :[]
[taint328]a invoke <org.apache.hadoop.io.Text: java.lang.String toString()>
[taint328]a invoke 0
20210427node :specialinvoke $r4.<java.util.StringTokenizer: void <init>(java.lang.String)>($r6)
20210427node in :[]
20210427node out :[]
[taint329]i invoke specialinvoke $r4.<java.util.StringTokenizer: void <init>(java.lang.String)>($r6)
[taint328]i invoke <java.util.StringTokenizer: void <init>(java.lang.String)>
[taint328]i invoke 1
value:$r6
isoutSetContains  false value:$r6 index:0
20210427node :r5 = $r4
20210427node in :[]
普通复制语句1112:r5 = $r4
[taint source] u:$r4
SourceList:[$z0]
20210427node out :[]
20210427node :$z0 = virtualinvoke r5.<java.util.StringTokenizer: boolean hasMoreTokens()>()
20210427node in :[]
调用语句赋值给变量:$z0 = virtualinvoke r5.<java.util.StringTokenizer: boolean hasMoreTokens()>()
20210427node out :[]
[taint328]a invoke <java.util.StringTokenizer: boolean hasMoreTokens()>
[taint328]a invoke 0
20210427node :if $z0 == 0 goto return
20210427node in :[]
20210427node out :[]
Have
Stmt if :if $z0 == 0 goto returnStmt if value:$z0 == 0the value=$z0
the value=0
maintainValues.size1
ifValues1
20210427node :return
20210427node in :[]
20210427node out :[]
20210427node :$r7 = r0.<cfhider.WordCount$TokenizerMapper: org.apache.hadoop.io.Text word>
20210427node in :[]
普通复制语句1112:$r7 = r0.<cfhider.WordCount$TokenizerMapper: org.apache.hadoop.io.Text word>
[taint source] u:r0
SourceList:[$z0]
[taint source] u:r0.<cfhider.WordCount$TokenizerMapper: org.apache.hadoop.io.Text word>
SourceList:[$z0]
20210427node out :[]
20210427node :$r8 = virtualinvoke r5.<java.util.StringTokenizer: java.lang.String nextToken()>()
20210427node in :[]
调用语句赋值给变量:$r8 = virtualinvoke r5.<java.util.StringTokenizer: java.lang.String nextToken()>()
20210427node out :[]
[taint328]a invoke <java.util.StringTokenizer: java.lang.String nextToken()>
[taint328]a invoke 0
20210427node :virtualinvoke $r7.<org.apache.hadoop.io.Text: void set(java.lang.String)>($r8)
20210427node in :[]
20210427node out :[]
[taint329]i invoke virtualinvoke $r7.<org.apache.hadoop.io.Text: void set(java.lang.String)>($r8)
[taint328]i invoke <org.apache.hadoop.io.Text: void set(java.lang.String)>
[taint328]i invoke 1
value:$r8
isoutSetContains  false value:$r8 index:0
20210427node :$r9 = r0.<cfhider.WordCount$TokenizerMapper: org.apache.hadoop.io.Text word>
20210427node in :[]
普通复制语句1112:$r9 = r0.<cfhider.WordCount$TokenizerMapper: org.apache.hadoop.io.Text word>
[taint source] u:r0
SourceList:[$z0]
[taint source] u:r0.<cfhider.WordCount$TokenizerMapper: org.apache.hadoop.io.Text word>
SourceList:[$z0]
20210427node out :[]
20210427node :$r10 = <cfhider.WordCount$TokenizerMapper: org.apache.hadoop.io.IntWritable one>
20210427node in :[]
普通复制语句1112:$r10 = <cfhider.WordCount$TokenizerMapper: org.apache.hadoop.io.IntWritable one>
[taint source] u:<cfhider.WordCount$TokenizerMapper: org.apache.hadoop.io.IntWritable one>
SourceList:[$z0]
20210427node out :[]
20210427node :virtualinvoke r3.<org.apache.hadoop.mapreduce.Mapper$Context: void write(java.lang.Object,java.lang.Object)>($r9, $r10)
20210427node in :[]
20210427node out :[]
[taint329]i invoke virtualinvoke r3.<org.apache.hadoop.mapreduce.Mapper$Context: void write(java.lang.Object,java.lang.Object)>($r9, $r10)
[taint328]i invoke <org.apache.hadoop.mapreduce.TaskInputOutputContext: void write(java.lang.Object,java.lang.Object)>
[taint328]i invoke 2
value:$r9
isoutSetContains  false value:$r9 index:0
value:$r10
isoutSetContains  false value:$r10 index:1
20210427node :goto [?= $z0 = virtualinvoke r5.<java.util.StringTokenizer: boolean hasMoreTokens()>()]
20210427node in :[]
20210427node out :[]
analysis.outSet.size():0
[CFMAP]2021 After taintAnalysis:{cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}
The data isgggg 
<cfhider.WordCount$TokenizerMapper: void map(java.lang.Object,org.apache.hadoop.io.Text,org.apache.hadoop.mapreduce.Mapper$Context)>
The data isgggg cfhider.WordCount$TokenizerMapper map [$z0] {cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}  {cfhider.WordCount$IntSumReducer={reduce=[I@371766c3}, cfhider.WordCount$TokenizerMapper={map=[I@1d0f4e06}, cfhider.WordCount={main=[I@2ae6ba37}, invoker.SnowFlake={<init>=[I@3b55ae95, getNextMill=[I@7638d6a1, getNewstmp=[I@36457fdc}}
Coming...
doAnalysis Startingqqqqqqqq.....
srcValue=[]
destValue:[]
taint data:[$z0]
Coming in Backward Analysis
srcValue=[]
destValue:[]
taint data:[$z0]
Coming in Backward Analysis
[taint329]i invoke virtualinvoke r3.<org.apache.hadoop.mapreduce.Mapper$Context: void write(java.lang.Object,java.lang.Object)>($r9, $r10)
[taint328]i invoke <org.apache.hadoop.mapreduce.TaskInputOutputContext: void write(java.lang.Object,java.lang.Object)>
[taint328]i invoke 2
value:$r9
value:$r10
srcValue=[]
destValue:[]
taint data:[$z0]
Coming in Backward Analysis
currStmt20210420:$r10 = <cfhider.WordCount$TokenizerMapper: org.apache.hadoop.io.IntWritable one>
currStmt left value20210420:$r10
srcValue=[]
destValue:[]
taint data:[$z0]
Coming in Backward Analysis
currStmt20210420:$r9 = r0.<cfhider.WordCount$TokenizerMapper: org.apache.hadoop.io.Text word>
currStmt left value20210420:$r9
srcValue=[]
destValue:[]
taint data:[$z0]
Coming in Backward Analysis
[taint329]i invoke virtualinvoke $r7.<org.apache.hadoop.io.Text: void set(java.lang.String)>($r8)
[taint328]i invoke <org.apache.hadoop.io.Text: void set(java.lang.String)>
[taint328]i invoke 1
value:$r8
srcValue=[]
destValue:[]
taint data:[$z0]
Coming in Backward Analysis
currStmt20210420:$r8 = virtualinvoke r5.<java.util.StringTokenizer: java.lang.String nextToken()>()
currStmt left value20210420:$r8
srcValue=[]
destValue:[]
taint data:[$z0]
Coming in Backward Analysis
currStmt20210420:$r7 = r0.<cfhider.WordCount$TokenizerMapper: org.apache.hadoop.io.Text word>
currStmt left value20210420:$r7
srcValue=[]
destValue:[]
taint data:[$z0]
Coming in Backward Analysis
srcValue=[]
destValue:[]
taint data:[$z0]
Coming in Backward Analysis
Have
the value=$z0
the value=0
srcValue=[]
destValue:[]
taint data:[$z0]
Coming in Backward Analysis
currStmt20210420:$z0 = virtualinvoke r5.<java.util.StringTokenizer: boolean hasMoreTokens()>()
currStmt left value20210420:$z0
BackWard 20210419===virtualinvoke r5.<java.util.StringTokenizer: boolean hasMoreTokens()>()
[BackWard taint329]i invoke $z0 = virtualinvoke r5.<java.util.StringTokenizer: boolean hasMoreTokens()>()
[BackWard taint328]i invoke <java.util.StringTokenizer: boolean hasMoreTokens()>
srcValue=[]
destValue:[]
taint data:[$z0]
Coming in Backward Analysis
currStmt20210420:r5 = $r4
currStmt left value20210420:r5
srcValue=[]
destValue:[]
taint data:[$z0]
Coming in Backward Analysis
[taint329]i invoke specialinvoke $r4.<java.util.StringTokenizer: void <init>(java.lang.String)>($r6)
[taint328]i invoke <java.util.StringTokenizer: void <init>(java.lang.String)>
[taint328]i invoke 1
value:$r6
srcValue=[]
destValue:[]
taint data:[$z0]
Coming in Backward Analysis
currStmt20210420:$r6 = virtualinvoke r2.<org.apache.hadoop.io.Text: java.lang.String toString()>()
currStmt left value20210420:$r6
srcValue=[]
destValue:[]
taint data:[$z0]
Coming in Backward Analysis
currStmt20210420:$r4 = new java.util.StringTokenizer
currStmt left value20210420:$r4
srcValue=[]
destValue:[]
taint data:[$z0]
Coming in Backward Analysis
srcValue=[]
destValue:[]
taint data:[$z0]
Coming in Backward Analysis
srcValue=[]
destValue:[]
taint data:[$z0]
Coming in Backward Analysis
srcValue=[]
destValue:[]
taint data:[$z0]
Coming in Backward Analysis
doAnalysis endqqqqqqq.....
come here
[CFMAP]2021 After BackwardAnalysis:{cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}
[taint into] sootMethod: map
[$z0]
class name :cfhider.WordCount$TokenizerMapper
method name :map
method list :[$z0]
clasname=cfhider.WordCount$TokenizerMapper
methodname=map
sourcelist2021=[$z0]
20210427node :r0 := @this: cfhider.WordCount$TokenizerMapper
20210427node in :[]
20210427node out :[]
currStmt20210423:r0 := @this: cfhider.WordCount$TokenizerMapper
20210427node :r1 := @parameter0: java.lang.Object
20210427node in :[]
[idStmt]iiiiiii r1 := @parameter0: java.lang.Object  index:0
ClassName:cfhider.WordCount$TokenizerMapper
MethodName:map
aaaa:0
20210427node out :[]
currStmt20210423:r1 := @parameter0: java.lang.Object
20210427node :r2 := @parameter1: java.lang.Object
20210427node in :[]
[idStmt]iiiiiii r2 := @parameter1: java.lang.Object  index:1
ClassName:cfhider.WordCount$TokenizerMapper
MethodName:map
aaaa:0
20210427node out :[]
currStmt20210423:r2 := @parameter1: java.lang.Object
20210427node :r3 := @parameter2: org.apache.hadoop.mapreduce.Mapper$Context
20210427node in :[]
[idStmt]iiiiiii r3 := @parameter2: org.apache.hadoop.mapreduce.Mapper$Context  index:2
ClassName:cfhider.WordCount$TokenizerMapper
MethodName:map
aaaa:0
20210427node out :[]
currStmt20210423:r3 := @parameter2: org.apache.hadoop.mapreduce.Mapper$Context
20210427node :$r4 = (org.apache.hadoop.io.Text) r2
20210427node in :[]
普通复制语句1112:$r4 = (org.apache.hadoop.io.Text) r2
[taint source] u:r2
SourceList:[$z0]
[taint source] u:(org.apache.hadoop.io.Text) r2
SourceList:[$z0]
20210427node out :[]
20210427node :virtualinvoke r0.<cfhider.WordCount$TokenizerMapper: void map(java.lang.Object,org.apache.hadoop.io.Text,org.apache.hadoop.mapreduce.Mapper$Context)>(r1, $r4, r3)
20210427node in :[]
20210427node out :[]
[taint329]i invoke virtualinvoke r0.<cfhider.WordCount$TokenizerMapper: void map(java.lang.Object,org.apache.hadoop.io.Text,org.apache.hadoop.mapreduce.Mapper$Context)>(r1, $r4, r3)
[taint328]i invoke <cfhider.WordCount$TokenizerMapper: void map(java.lang.Object,org.apache.hadoop.io.Text,org.apache.hadoop.mapreduce.Mapper$Context)>
[taint328]i invoke 3
value:r1
isoutSetContains  false value:r1 index:0
value:$r4
isoutSetContains  false value:$r4 index:1
value:r3
isoutSetContains  false value:r3 index:2
[invokemap]invoke:map  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
20210427node :return
20210427node in :[]
20210427node out :[]
analysis.outSet.size():0
[CFMAP]2021 After taintAnalysis:{cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}
The data isgggg 
<cfhider.WordCount$TokenizerMapper: void map(java.lang.Object,java.lang.Object,org.apache.hadoop.mapreduce.Mapper$Context)>
The data isgggg cfhider.WordCount$TokenizerMapper map [$z0] {cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}  {cfhider.WordCount$IntSumReducer={reduce=[I@371766c3}, cfhider.WordCount$TokenizerMapper={map=[I@57cb7ad1}, cfhider.WordCount={main=[I@2ae6ba37}, invoker.SnowFlake={<init>=[I@3b55ae95, getNextMill=[I@7638d6a1, getNewstmp=[I@36457fdc}}
Coming...
doAnalysis Startingqqqqqqqq.....
srcValue=[]
destValue:[]
taint data:[$z0]
Coming in Backward Analysis
srcValue=[]
destValue:[]
taint data:[$z0]
Coming in Backward Analysis
[taint329]i invoke virtualinvoke r0.<cfhider.WordCount$TokenizerMapper: void map(java.lang.Object,org.apache.hadoop.io.Text,org.apache.hadoop.mapreduce.Mapper$Context)>(r1, $r4, r3)
[taint328]i invoke <cfhider.WordCount$TokenizerMapper: void map(java.lang.Object,org.apache.hadoop.io.Text,org.apache.hadoop.mapreduce.Mapper$Context)>
[taint328]i invoke 3
value:r1
in here:[I@6fec5c5e
[invokemap]invoke:map  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
value:$r4
in here:[I@6fec5c5e
[invokemap]invoke:map  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
value:r3
in here:[I@6fec5c5e
[invokemap]invoke:map  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
srcValue=[]
destValue:[]
taint data:[$z0]
Coming in Backward Analysis
currStmt20210420:$r4 = (org.apache.hadoop.io.Text) r2
currStmt left value20210420:$r4
srcValue=[]
destValue:[]
taint data:[$z0]
Coming in Backward Analysis
srcValue=[]
destValue:[]
taint data:[$z0]
Coming in Backward Analysis
srcValue=[]
destValue:[]
taint data:[$z0]
Coming in Backward Analysis
srcValue=[]
destValue:[]
taint data:[$z0]
Coming in Backward Analysis
doAnalysis endqqqqqqq.....
come here
[CFMAP]2021 After BackwardAnalysis:{cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}
[taint into] sootMethod: <clinit>
[]
class name :cfhider.WordCount$TokenizerMapper
method name :<clinit>
method list :[]
clasname=cfhider.WordCount$TokenizerMapper
methodname=<clinit>
sourcelist2021=[]
20210427node :$r0 = new org.apache.hadoop.io.IntWritable
20210427node in :[]
普通复制语句1112:$r0 = new org.apache.hadoop.io.IntWritable
[taint source] u:new org.apache.hadoop.io.IntWritable
SourceList:[]
20210427node out :[]
20210427node :specialinvoke $r0.<org.apache.hadoop.io.IntWritable: void <init>(int)>(1)
20210427node in :[]
20210427node out :[]
[taint329]i invoke specialinvoke $r0.<org.apache.hadoop.io.IntWritable: void <init>(int)>(1)
[taint328]i invoke <org.apache.hadoop.io.IntWritable: void <init>(int)>
[taint328]i invoke 1
value:1
isoutSetContains  false value:1 index:0
20210427node :<cfhider.WordCount$TokenizerMapper: org.apache.hadoop.io.IntWritable one> = $r0
20210427node in :[]
普通复制语句1112:<cfhider.WordCount$TokenizerMapper: org.apache.hadoop.io.IntWritable one> = $r0
[taint source] u:$r0
SourceList:[]
20210427node out :[]
20210427node :return
20210427node in :[]
20210427node out :[]
analysis.outSet.size():0
[CFMAP]2021 After taintAnalysis:{cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}
The data isgggg 
<cfhider.WordCount$TokenizerMapper: void <clinit>()>
The data isgggg cfhider.WordCount$TokenizerMapper <clinit> [] {cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}  {cfhider.WordCount$IntSumReducer={reduce=[I@371766c3}, cfhider.WordCount$TokenizerMapper={map=[I@57cb7ad1}, cfhider.WordCount={main=[I@2ae6ba37}, invoker.SnowFlake={<init>=[I@3b55ae95, getNextMill=[I@7638d6a1, getNewstmp=[I@36457fdc}}
Coming...
doAnalysis Startingqqqqqqqq.....
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:<cfhider.WordCount$TokenizerMapper: org.apache.hadoop.io.IntWritable one> = $r0
currStmt left value20210420:<cfhider.WordCount$TokenizerMapper: org.apache.hadoop.io.IntWritable one>
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
[taint329]i invoke specialinvoke $r0.<org.apache.hadoop.io.IntWritable: void <init>(int)>(1)
[taint328]i invoke <org.apache.hadoop.io.IntWritable: void <init>(int)>
[taint328]i invoke 1
value:1
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$r0 = new org.apache.hadoop.io.IntWritable
currStmt left value20210420:$r0
doAnalysis endqqqqqqq.....
come here
[CFMAP]2021 After BackwardAnalysis:{cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}
[taint into] sootMethod: <init>
[]
class name :cfhider.WordCount$TokenizerMapper
method name :<init>
method list :[]
clasname=cfhider.WordCount$TokenizerMapper
methodname=<init>
sourcelist2021=[]
20210427node :r0 := @this: cfhider.WordCount$TokenizerMapper
20210427node in :[]
20210427node out :[]
currStmt20210423:r0 := @this: cfhider.WordCount$TokenizerMapper
20210427node :specialinvoke r0.<org.apache.hadoop.mapreduce.Mapper: void <init>()>()
20210427node in :[]
20210427node out :[]
[taint329]i invoke specialinvoke r0.<org.apache.hadoop.mapreduce.Mapper: void <init>()>()
[taint328]i invoke <org.apache.hadoop.mapreduce.Mapper: void <init>()>
[taint328]i invoke 0
20210427node :$r1 = new org.apache.hadoop.io.Text
20210427node in :[]
普通复制语句1112:$r1 = new org.apache.hadoop.io.Text
[taint source] u:new org.apache.hadoop.io.Text
SourceList:[]
20210427node out :[]
20210427node :specialinvoke $r1.<org.apache.hadoop.io.Text: void <init>()>()
20210427node in :[]
20210427node out :[]
[taint329]i invoke specialinvoke $r1.<org.apache.hadoop.io.Text: void <init>()>()
[taint328]i invoke <org.apache.hadoop.io.Text: void <init>()>
[taint328]i invoke 0
20210427node :r0.<cfhider.WordCount$TokenizerMapper: org.apache.hadoop.io.Text word> = $r1
20210427node in :[]
普通复制语句1112:r0.<cfhider.WordCount$TokenizerMapper: org.apache.hadoop.io.Text word> = $r1
[taint source] u:r0
SourceList:[]
[taint source] u:$r1
SourceList:[]
20210427node out :[]
20210427node :return
20210427node in :[]
20210427node out :[]
analysis.outSet.size():0
[CFMAP]2021 After taintAnalysis:{cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}
The data isgggg 
<cfhider.WordCount$TokenizerMapper: void <init>()>
The data isgggg cfhider.WordCount$TokenizerMapper <init> [] {cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}  {cfhider.WordCount$IntSumReducer={reduce=[I@371766c3}, cfhider.WordCount$TokenizerMapper={map=[I@57cb7ad1}, cfhider.WordCount={main=[I@2ae6ba37}, invoker.SnowFlake={<init>=[I@3b55ae95, getNextMill=[I@7638d6a1, getNewstmp=[I@36457fdc}}
Coming...
doAnalysis Startingqqqqqqqq.....
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:r0.<cfhider.WordCount$TokenizerMapper: org.apache.hadoop.io.Text word> = $r1
currStmt left value20210420:r0.<cfhider.WordCount$TokenizerMapper: org.apache.hadoop.io.Text word>
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
[taint329]i invoke specialinvoke $r1.<org.apache.hadoop.io.Text: void <init>()>()
[taint328]i invoke <org.apache.hadoop.io.Text: void <init>()>
[taint328]i invoke 0
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$r1 = new org.apache.hadoop.io.Text
currStmt left value20210420:$r1
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
[taint329]i invoke specialinvoke r0.<org.apache.hadoop.mapreduce.Mapper: void <init>()>()
[taint328]i invoke <org.apache.hadoop.mapreduce.Mapper: void <init>()>
[taint328]i invoke 0
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
doAnalysis endqqqqqqq.....
come here
[CFMAP]2021 After BackwardAnalysis:{cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}
[taint into] sootMethod: map
[$z0]
class name :cfhider.WordCount$TokenizerMapper
method name :map
method list :[$z0]
clasname=cfhider.WordCount$TokenizerMapper
methodname=map
sourcelist2021=[$z0]
20210427node :r0 := @this: cfhider.WordCount$TokenizerMapper
20210427node in :[]
20210427node out :[]
currStmt20210423:r0 := @this: cfhider.WordCount$TokenizerMapper
20210427node :r1 := @parameter0: java.lang.Object
20210427node in :[]
[idStmt]iiiiiii r1 := @parameter0: java.lang.Object  index:0
ClassName:cfhider.WordCount$TokenizerMapper
MethodName:map
aaaa:0
20210427node out :[]
currStmt20210423:r1 := @parameter0: java.lang.Object
20210427node :r2 := @parameter1: org.apache.hadoop.io.Text
20210427node in :[]
[idStmt]iiiiiii r2 := @parameter1: org.apache.hadoop.io.Text  index:1
ClassName:cfhider.WordCount$TokenizerMapper
MethodName:map
aaaa:0
20210427node out :[]
currStmt20210423:r2 := @parameter1: org.apache.hadoop.io.Text
20210427node :r3 := @parameter2: org.apache.hadoop.mapreduce.Mapper$Context
20210427node in :[]
[idStmt]iiiiiii r3 := @parameter2: org.apache.hadoop.mapreduce.Mapper$Context  index:2
ClassName:cfhider.WordCount$TokenizerMapper
MethodName:map
aaaa:0
20210427node out :[]
currStmt20210423:r3 := @parameter2: org.apache.hadoop.mapreduce.Mapper$Context
20210427node :$r4 = new java.util.StringTokenizer
20210427node in :[]
普通复制语句1112:$r4 = new java.util.StringTokenizer
[taint source] u:new java.util.StringTokenizer
SourceList:[$z0]
20210427node out :[]
20210427node :$r6 = virtualinvoke r2.<org.apache.hadoop.io.Text: java.lang.String toString()>()
20210427node in :[]
调用语句赋值给变量:$r6 = virtualinvoke r2.<org.apache.hadoop.io.Text: java.lang.String toString()>()
20210427node out :[]
[taint328]a invoke <org.apache.hadoop.io.Text: java.lang.String toString()>
[taint328]a invoke 0
20210427node :specialinvoke $r4.<java.util.StringTokenizer: void <init>(java.lang.String)>($r6)
20210427node in :[]
20210427node out :[]
[taint329]i invoke specialinvoke $r4.<java.util.StringTokenizer: void <init>(java.lang.String)>($r6)
[taint328]i invoke <java.util.StringTokenizer: void <init>(java.lang.String)>
[taint328]i invoke 1
value:$r6
isoutSetContains  false value:$r6 index:0
20210427node :r5 = $r4
20210427node in :[]
普通复制语句1112:r5 = $r4
[taint source] u:$r4
SourceList:[$z0]
20210427node out :[]
20210427node :$z0 = virtualinvoke r5.<java.util.StringTokenizer: boolean hasMoreTokens()>()
20210427node in :[]
调用语句赋值给变量:$z0 = virtualinvoke r5.<java.util.StringTokenizer: boolean hasMoreTokens()>()
20210427node out :[]
[taint328]a invoke <java.util.StringTokenizer: boolean hasMoreTokens()>
[taint328]a invoke 0
20210427node :if $z0 == 0 goto return
20210427node in :[]
20210427node out :[]
Have
Stmt if :if $z0 == 0 goto returnStmt if value:$z0 == 0the value=$z0
the value=0
maintainValues.size1
ifValues1
20210427node :return
20210427node in :[]
20210427node out :[]
20210427node :$r7 = r0.<cfhider.WordCount$TokenizerMapper: org.apache.hadoop.io.Text word>
20210427node in :[]
普通复制语句1112:$r7 = r0.<cfhider.WordCount$TokenizerMapper: org.apache.hadoop.io.Text word>
[taint source] u:r0
SourceList:[$z0]
[taint source] u:r0.<cfhider.WordCount$TokenizerMapper: org.apache.hadoop.io.Text word>
SourceList:[$z0]
20210427node out :[]
20210427node :$r8 = virtualinvoke r5.<java.util.StringTokenizer: java.lang.String nextToken()>()
20210427node in :[]
调用语句赋值给变量:$r8 = virtualinvoke r5.<java.util.StringTokenizer: java.lang.String nextToken()>()
20210427node out :[]
[taint328]a invoke <java.util.StringTokenizer: java.lang.String nextToken()>
[taint328]a invoke 0
20210427node :virtualinvoke $r7.<org.apache.hadoop.io.Text: void set(java.lang.String)>($r8)
20210427node in :[]
20210427node out :[]
[taint329]i invoke virtualinvoke $r7.<org.apache.hadoop.io.Text: void set(java.lang.String)>($r8)
[taint328]i invoke <org.apache.hadoop.io.Text: void set(java.lang.String)>
[taint328]i invoke 1
value:$r8
isoutSetContains  false value:$r8 index:0
20210427node :$r9 = r0.<cfhider.WordCount$TokenizerMapper: org.apache.hadoop.io.Text word>
20210427node in :[]
普通复制语句1112:$r9 = r0.<cfhider.WordCount$TokenizerMapper: org.apache.hadoop.io.Text word>
[taint source] u:r0
SourceList:[$z0]
[taint source] u:r0.<cfhider.WordCount$TokenizerMapper: org.apache.hadoop.io.Text word>
SourceList:[$z0]
20210427node out :[]
20210427node :$r10 = <cfhider.WordCount$TokenizerMapper: org.apache.hadoop.io.IntWritable one>
20210427node in :[]
普通复制语句1112:$r10 = <cfhider.WordCount$TokenizerMapper: org.apache.hadoop.io.IntWritable one>
[taint source] u:<cfhider.WordCount$TokenizerMapper: org.apache.hadoop.io.IntWritable one>
SourceList:[$z0]
20210427node out :[]
20210427node :virtualinvoke r3.<org.apache.hadoop.mapreduce.Mapper$Context: void write(java.lang.Object,java.lang.Object)>($r9, $r10)
20210427node in :[]
20210427node out :[]
[taint329]i invoke virtualinvoke r3.<org.apache.hadoop.mapreduce.Mapper$Context: void write(java.lang.Object,java.lang.Object)>($r9, $r10)
[taint328]i invoke <org.apache.hadoop.mapreduce.TaskInputOutputContext: void write(java.lang.Object,java.lang.Object)>
[taint328]i invoke 2
value:$r9
isoutSetContains  false value:$r9 index:0
value:$r10
isoutSetContains  false value:$r10 index:1
20210427node :goto [?= $z0 = virtualinvoke r5.<java.util.StringTokenizer: boolean hasMoreTokens()>()]
20210427node in :[]
20210427node out :[]
analysis.outSet.size():0
[CFMAP]2021 After taintAnalysis:{cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}
The data isgggg 
<cfhider.WordCount$TokenizerMapper: void map(java.lang.Object,org.apache.hadoop.io.Text,org.apache.hadoop.mapreduce.Mapper$Context)>
The data isgggg cfhider.WordCount$TokenizerMapper map [$z0] {cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}  {cfhider.WordCount$IntSumReducer={reduce=[I@371766c3}, cfhider.WordCount$TokenizerMapper={map=[I@6a458ba}, cfhider.WordCount={main=[I@2ae6ba37}, invoker.SnowFlake={<init>=[I@3b55ae95, getNextMill=[I@7638d6a1, getNewstmp=[I@36457fdc}}
Coming...
doAnalysis Startingqqqqqqqq.....
srcValue=[]
destValue:[]
taint data:[$z0]
Coming in Backward Analysis
srcValue=[]
destValue:[]
taint data:[$z0]
Coming in Backward Analysis
[taint329]i invoke virtualinvoke r3.<org.apache.hadoop.mapreduce.Mapper$Context: void write(java.lang.Object,java.lang.Object)>($r9, $r10)
[taint328]i invoke <org.apache.hadoop.mapreduce.TaskInputOutputContext: void write(java.lang.Object,java.lang.Object)>
[taint328]i invoke 2
value:$r9
value:$r10
srcValue=[]
destValue:[]
taint data:[$z0]
Coming in Backward Analysis
currStmt20210420:$r10 = <cfhider.WordCount$TokenizerMapper: org.apache.hadoop.io.IntWritable one>
currStmt left value20210420:$r10
srcValue=[]
destValue:[]
taint data:[$z0]
Coming in Backward Analysis
currStmt20210420:$r9 = r0.<cfhider.WordCount$TokenizerMapper: org.apache.hadoop.io.Text word>
currStmt left value20210420:$r9
srcValue=[]
destValue:[]
taint data:[$z0]
Coming in Backward Analysis
[taint329]i invoke virtualinvoke $r7.<org.apache.hadoop.io.Text: void set(java.lang.String)>($r8)
[taint328]i invoke <org.apache.hadoop.io.Text: void set(java.lang.String)>
[taint328]i invoke 1
value:$r8
srcValue=[]
destValue:[]
taint data:[$z0]
Coming in Backward Analysis
currStmt20210420:$r8 = virtualinvoke r5.<java.util.StringTokenizer: java.lang.String nextToken()>()
currStmt left value20210420:$r8
srcValue=[]
destValue:[]
taint data:[$z0]
Coming in Backward Analysis
currStmt20210420:$r7 = r0.<cfhider.WordCount$TokenizerMapper: org.apache.hadoop.io.Text word>
currStmt left value20210420:$r7
srcValue=[]
destValue:[]
taint data:[$z0]
Coming in Backward Analysis
srcValue=[]
destValue:[]
taint data:[$z0]
Coming in Backward Analysis
Have
the value=$z0
the value=0
srcValue=[]
destValue:[]
taint data:[$z0]
Coming in Backward Analysis
currStmt20210420:$z0 = virtualinvoke r5.<java.util.StringTokenizer: boolean hasMoreTokens()>()
currStmt left value20210420:$z0
BackWard 20210419===virtualinvoke r5.<java.util.StringTokenizer: boolean hasMoreTokens()>()
[BackWard taint329]i invoke $z0 = virtualinvoke r5.<java.util.StringTokenizer: boolean hasMoreTokens()>()
[BackWard taint328]i invoke <java.util.StringTokenizer: boolean hasMoreTokens()>
srcValue=[]
destValue:[]
taint data:[$z0]
Coming in Backward Analysis
currStmt20210420:r5 = $r4
currStmt left value20210420:r5
srcValue=[]
destValue:[]
taint data:[$z0]
Coming in Backward Analysis
[taint329]i invoke specialinvoke $r4.<java.util.StringTokenizer: void <init>(java.lang.String)>($r6)
[taint328]i invoke <java.util.StringTokenizer: void <init>(java.lang.String)>
[taint328]i invoke 1
value:$r6
srcValue=[]
destValue:[]
taint data:[$z0]
Coming in Backward Analysis
currStmt20210420:$r6 = virtualinvoke r2.<org.apache.hadoop.io.Text: java.lang.String toString()>()
currStmt left value20210420:$r6
srcValue=[]
destValue:[]
taint data:[$z0]
Coming in Backward Analysis
currStmt20210420:$r4 = new java.util.StringTokenizer
currStmt left value20210420:$r4
srcValue=[]
destValue:[]
taint data:[$z0]
Coming in Backward Analysis
srcValue=[]
destValue:[]
taint data:[$z0]
Coming in Backward Analysis
srcValue=[]
destValue:[]
taint data:[$z0]
Coming in Backward Analysis
srcValue=[]
destValue:[]
taint data:[$z0]
Coming in Backward Analysis
doAnalysis endqqqqqqq.....
come here
[CFMAP]2021 After BackwardAnalysis:{cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}
[taint into] sootMethod: map
[$z0]
class name :cfhider.WordCount$TokenizerMapper
method name :map
method list :[$z0]
clasname=cfhider.WordCount$TokenizerMapper
methodname=map
sourcelist2021=[$z0]
20210427node :r0 := @this: cfhider.WordCount$TokenizerMapper
20210427node in :[]
20210427node out :[]
currStmt20210423:r0 := @this: cfhider.WordCount$TokenizerMapper
20210427node :r1 := @parameter0: java.lang.Object
20210427node in :[]
[idStmt]iiiiiii r1 := @parameter0: java.lang.Object  index:0
ClassName:cfhider.WordCount$TokenizerMapper
MethodName:map
aaaa:0
20210427node out :[]
currStmt20210423:r1 := @parameter0: java.lang.Object
20210427node :r2 := @parameter1: java.lang.Object
20210427node in :[]
[idStmt]iiiiiii r2 := @parameter1: java.lang.Object  index:1
ClassName:cfhider.WordCount$TokenizerMapper
MethodName:map
aaaa:0
20210427node out :[]
currStmt20210423:r2 := @parameter1: java.lang.Object
20210427node :r3 := @parameter2: org.apache.hadoop.mapreduce.Mapper$Context
20210427node in :[]
[idStmt]iiiiiii r3 := @parameter2: org.apache.hadoop.mapreduce.Mapper$Context  index:2
ClassName:cfhider.WordCount$TokenizerMapper
MethodName:map
aaaa:0
20210427node out :[]
currStmt20210423:r3 := @parameter2: org.apache.hadoop.mapreduce.Mapper$Context
20210427node :$r4 = (org.apache.hadoop.io.Text) r2
20210427node in :[]
普通复制语句1112:$r4 = (org.apache.hadoop.io.Text) r2
[taint source] u:r2
SourceList:[$z0]
[taint source] u:(org.apache.hadoop.io.Text) r2
SourceList:[$z0]
20210427node out :[]
20210427node :virtualinvoke r0.<cfhider.WordCount$TokenizerMapper: void map(java.lang.Object,org.apache.hadoop.io.Text,org.apache.hadoop.mapreduce.Mapper$Context)>(r1, $r4, r3)
20210427node in :[]
20210427node out :[]
[taint329]i invoke virtualinvoke r0.<cfhider.WordCount$TokenizerMapper: void map(java.lang.Object,org.apache.hadoop.io.Text,org.apache.hadoop.mapreduce.Mapper$Context)>(r1, $r4, r3)
[taint328]i invoke <cfhider.WordCount$TokenizerMapper: void map(java.lang.Object,org.apache.hadoop.io.Text,org.apache.hadoop.mapreduce.Mapper$Context)>
[taint328]i invoke 3
value:r1
isoutSetContains  false value:r1 index:0
value:$r4
isoutSetContains  false value:$r4 index:1
value:r3
isoutSetContains  false value:r3 index:2
[invokemap]invoke:map  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
20210427node :return
20210427node in :[]
20210427node out :[]
analysis.outSet.size():0
[CFMAP]2021 After taintAnalysis:{cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}
The data isgggg 
<cfhider.WordCount$TokenizerMapper: void map(java.lang.Object,java.lang.Object,org.apache.hadoop.mapreduce.Mapper$Context)>
The data isgggg cfhider.WordCount$TokenizerMapper map [$z0] {cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}  {cfhider.WordCount$IntSumReducer={reduce=[I@371766c3}, cfhider.WordCount$TokenizerMapper={map=[I@fbd1ebe}, cfhider.WordCount={main=[I@2ae6ba37}, invoker.SnowFlake={<init>=[I@3b55ae95, getNextMill=[I@7638d6a1, getNewstmp=[I@36457fdc}}
Coming...
doAnalysis Startingqqqqqqqq.....
srcValue=[]
destValue:[]
taint data:[$z0]
Coming in Backward Analysis
srcValue=[]
destValue:[]
taint data:[$z0]
Coming in Backward Analysis
[taint329]i invoke virtualinvoke r0.<cfhider.WordCount$TokenizerMapper: void map(java.lang.Object,org.apache.hadoop.io.Text,org.apache.hadoop.mapreduce.Mapper$Context)>(r1, $r4, r3)
[taint328]i invoke <cfhider.WordCount$TokenizerMapper: void map(java.lang.Object,org.apache.hadoop.io.Text,org.apache.hadoop.mapreduce.Mapper$Context)>
[taint328]i invoke 3
value:r1
in here:[I@492d5404
[invokemap]invoke:map  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
value:$r4
in here:[I@492d5404
[invokemap]invoke:map  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
value:r3
in here:[I@492d5404
[invokemap]invoke:map  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
srcValue=[]
destValue:[]
taint data:[$z0]
Coming in Backward Analysis
currStmt20210420:$r4 = (org.apache.hadoop.io.Text) r2
currStmt left value20210420:$r4
srcValue=[]
destValue:[]
taint data:[$z0]
Coming in Backward Analysis
srcValue=[]
destValue:[]
taint data:[$z0]
Coming in Backward Analysis
srcValue=[]
destValue:[]
taint data:[$z0]
Coming in Backward Analysis
srcValue=[]
destValue:[]
taint data:[$z0]
Coming in Backward Analysis
doAnalysis endqqqqqqq.....
come here
[CFMAP]2021 After BackwardAnalysis:{cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}
[taint into] sootMethod: <clinit>
[]
class name :cfhider.WordCount$TokenizerMapper
method name :<clinit>
method list :[]
clasname=cfhider.WordCount$TokenizerMapper
methodname=<clinit>
sourcelist2021=[]
20210427node :$r0 = new org.apache.hadoop.io.IntWritable
20210427node in :[]
普通复制语句1112:$r0 = new org.apache.hadoop.io.IntWritable
[taint source] u:new org.apache.hadoop.io.IntWritable
SourceList:[]
20210427node out :[]
20210427node :specialinvoke $r0.<org.apache.hadoop.io.IntWritable: void <init>(int)>(1)
20210427node in :[]
20210427node out :[]
[taint329]i invoke specialinvoke $r0.<org.apache.hadoop.io.IntWritable: void <init>(int)>(1)
[taint328]i invoke <org.apache.hadoop.io.IntWritable: void <init>(int)>
[taint328]i invoke 1
value:1
isoutSetContains  false value:1 index:0
20210427node :<cfhider.WordCount$TokenizerMapper: org.apache.hadoop.io.IntWritable one> = $r0
20210427node in :[]
普通复制语句1112:<cfhider.WordCount$TokenizerMapper: org.apache.hadoop.io.IntWritable one> = $r0
[taint source] u:$r0
SourceList:[]
20210427node out :[]
20210427node :return
20210427node in :[]
20210427node out :[]
analysis.outSet.size():0
[CFMAP]2021 After taintAnalysis:{cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}
The data isgggg 
<cfhider.WordCount$TokenizerMapper: void <clinit>()>
The data isgggg cfhider.WordCount$TokenizerMapper <clinit> [] {cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}  {cfhider.WordCount$IntSumReducer={reduce=[I@371766c3}, cfhider.WordCount$TokenizerMapper={map=[I@fbd1ebe}, cfhider.WordCount={main=[I@2ae6ba37}, invoker.SnowFlake={<init>=[I@3b55ae95, getNextMill=[I@7638d6a1, getNewstmp=[I@36457fdc}}
Coming...
doAnalysis Startingqqqqqqqq.....
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:<cfhider.WordCount$TokenizerMapper: org.apache.hadoop.io.IntWritable one> = $r0
currStmt left value20210420:<cfhider.WordCount$TokenizerMapper: org.apache.hadoop.io.IntWritable one>
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
[taint329]i invoke specialinvoke $r0.<org.apache.hadoop.io.IntWritable: void <init>(int)>(1)
[taint328]i invoke <org.apache.hadoop.io.IntWritable: void <init>(int)>
[taint328]i invoke 1
value:1
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$r0 = new org.apache.hadoop.io.IntWritable
currStmt left value20210420:$r0
doAnalysis endqqqqqqq.....
come here
[CFMAP]2021 After BackwardAnalysis:{cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}
[taint]SooClass:invoker.SnowFlake
[taint] class: invoker.SnowFlake
methList :{<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}
[taint into] sootMethod: <init>
[]
class name :invoker.SnowFlake
method name :<init>
method list :[]
clasname=invoker.SnowFlake
methodname=<init>
sourcelist2021=[]
20210427node :r0 := @this: invoker.SnowFlake
20210427node in :[]
20210427node out :[]
currStmt20210423:r0 := @this: invoker.SnowFlake
20210427node :l0 := @parameter0: long
20210427node in :[]
[idStmt]iiiiiii l0 := @parameter0: long  index:0
ClassName:invoker.SnowFlake
MethodName:<init>
aaaa:0
20210427node out :[]
currStmt20210423:l0 := @parameter0: long
20210427node :l1 := @parameter1: long
20210427node in :[]
[idStmt]iiiiiii l1 := @parameter1: long  index:1
ClassName:invoker.SnowFlake
MethodName:<init>
aaaa:0
20210427node out :[]
currStmt20210423:l1 := @parameter1: long
20210427node :specialinvoke r0.<java.lang.Object: void <init>()>()
20210427node in :[]
20210427node out :[]
[taint329]i invoke specialinvoke r0.<java.lang.Object: void <init>()>()
[taint328]i invoke <java.lang.Object: void <init>()>
[taint328]i invoke 0
20210427node :$b2 = l0 cmp 31L
20210427node in :[]
普通复制语句1112:$b2 = l0 cmp 31L
[taint source] u:l0
SourceList:[]
[taint source] u:31L
SourceList:[]
[taint source] u:l0 cmp 31L
SourceList:[]
20210427node out :[]
20210427node :if $b2 > 0 goto $r1 = new java.lang.IllegalArgumentException
20210427node in :[]
20210427node out :[]
Have
Stmt if :if $b2 > 0 goto $r1 = new java.lang.IllegalArgumentExceptionStmt if value:$b2 > 0the value=$b2
the value=0
maintainValues.size0
ifValues1
20210427node :$b3 = l0 cmp 0L
20210427node in :[]
普通复制语句1112:$b3 = l0 cmp 0L
[taint source] u:l0
SourceList:[]
[taint source] u:0L
SourceList:[]
[taint source] u:l0 cmp 0L
SourceList:[]
20210427node out :[]
20210427node :if $b3 >= 0 goto $b4 = l1 cmp 31L
20210427node in :[]
20210427node out :[]
Have
Stmt if :if $b3 >= 0 goto $b4 = l1 cmp 31LStmt if value:$b3 >= 0the value=$b3
the value=0
maintainValues.size0
ifValues1
20210427node :$b4 = l1 cmp 31L
20210427node in :[]
普通复制语句1112:$b4 = l1 cmp 31L
[taint source] u:l1
SourceList:[]
[taint source] u:31L
SourceList:[]
[taint source] u:l1 cmp 31L
SourceList:[]
20210427node out :[]
20210427node :if $b4 > 0 goto $r2 = new java.lang.IllegalArgumentException
20210427node in :[]
20210427node out :[]
Have
Stmt if :if $b4 > 0 goto $r2 = new java.lang.IllegalArgumentExceptionStmt if value:$b4 > 0the value=$b4
the value=0
maintainValues.size0
ifValues1
20210427node :$b5 = l1 cmp 0L
20210427node in :[]
普通复制语句1112:$b5 = l1 cmp 0L
[taint source] u:l1
SourceList:[]
[taint source] u:0L
SourceList:[]
[taint source] u:l1 cmp 0L
SourceList:[]
20210427node out :[]
20210427node :if $b5 >= 0 goto <invoker.SnowFlake: long datacenterId> = 0L
20210427node in :[]
20210427node out :[]
Have
Stmt if :if $b5 >= 0 goto <invoker.SnowFlake: long datacenterId> = 0LStmt if value:$b5 >= 0the value=$b5
the value=0
maintainValues.size0
ifValues1
20210427node :<invoker.SnowFlake: long datacenterId> = 0L
20210427node in :[]
普通复制语句1112:<invoker.SnowFlake: long datacenterId> = 0L
[taint source] u:0L
SourceList:[]
20210427node out :[]
20210427node :<invoker.SnowFlake: long machineId> = 0L
20210427node in :[]
普通复制语句1112:<invoker.SnowFlake: long machineId> = 0L
[taint source] u:0L
SourceList:[]
20210427node out :[]
20210427node :return
20210427node in :[]
20210427node out :[]
20210427node :$r2 = new java.lang.IllegalArgumentException
20210427node in :[]
普通复制语句1112:$r2 = new java.lang.IllegalArgumentException
[taint source] u:new java.lang.IllegalArgumentException
SourceList:[]
20210427node out :[]
20210427node :specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("machineId can\'t be greater than MAX_MACHINE_NUM or less than 0")
20210427node in :[]
20210427node out :[]
[taint329]i invoke specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("machineId can\'t be greater than MAX_MACHINE_NUM or less than 0")
[taint328]i invoke <java.lang.IllegalArgumentException: void <init>(java.lang.String)>
[taint328]i invoke 1
value:"machineId can\'t be greater than MAX_MACHINE_NUM or less than 0"
isoutSetContains  false value:"machineId can\'t be greater than MAX_MACHINE_NUM or less than 0" index:0
20210427node :throw $r2
20210427node in :[]
20210427node out :[]
20210427node :$r1 = new java.lang.IllegalArgumentException
20210427node in :[]
普通复制语句1112:$r1 = new java.lang.IllegalArgumentException
[taint source] u:new java.lang.IllegalArgumentException
SourceList:[]
20210427node out :[]
20210427node :specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("datacenterId can\'t be greater than MAX_DATACENTER_NUM or less than 0")
20210427node in :[]
20210427node out :[]
[taint329]i invoke specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("datacenterId can\'t be greater than MAX_DATACENTER_NUM or less than 0")
[taint328]i invoke <java.lang.IllegalArgumentException: void <init>(java.lang.String)>
[taint328]i invoke 1
value:"datacenterId can\'t be greater than MAX_DATACENTER_NUM or less than 0"
isoutSetContains  false value:"datacenterId can\'t be greater than MAX_DATACENTER_NUM or less than 0" index:0
20210427node :throw $r1
20210427node in :[]
20210427node out :[]
analysis.outSet.size():0
[CFMAP]2021 After taintAnalysis:{cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}
The data isgggg 
<invoker.SnowFlake: void <init>(long,long)>
The data isgggg invoker.SnowFlake <init> [] {cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}  {cfhider.WordCount$IntSumReducer={reduce=[I@371766c3}, cfhider.WordCount$TokenizerMapper={map=[I@fbd1ebe}, cfhider.WordCount={main=[I@2ae6ba37}, invoker.SnowFlake={<init>=[I@3ee6f824, getNextMill=[I@7638d6a1, getNewstmp=[I@36457fdc}}
Coming...
doAnalysis Startingqqqqqqqq.....
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
[taint329]i invoke specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("datacenterId can\'t be greater than MAX_DATACENTER_NUM or less than 0")
[taint328]i invoke <java.lang.IllegalArgumentException: void <init>(java.lang.String)>
[taint328]i invoke 1
value:"datacenterId can\'t be greater than MAX_DATACENTER_NUM or less than 0"
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$r1 = new java.lang.IllegalArgumentException
currStmt left value20210420:$r1
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
[taint329]i invoke specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("machineId can\'t be greater than MAX_MACHINE_NUM or less than 0")
[taint328]i invoke <java.lang.IllegalArgumentException: void <init>(java.lang.String)>
[taint328]i invoke 1
value:"machineId can\'t be greater than MAX_MACHINE_NUM or less than 0"
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$r2 = new java.lang.IllegalArgumentException
currStmt left value20210420:$r2
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:<invoker.SnowFlake: long machineId> = 0L
currStmt left value20210420:<invoker.SnowFlake: long machineId>
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:<invoker.SnowFlake: long datacenterId> = 0L
currStmt left value20210420:<invoker.SnowFlake: long datacenterId>
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
Have
the value=$b5
the value=0
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$b5 = l1 cmp 0L
currStmt left value20210420:$b5
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
Have
the value=$b4
the value=0
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$b4 = l1 cmp 31L
currStmt left value20210420:$b4
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
Have
the value=$b3
the value=0
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$b3 = l0 cmp 0L
currStmt left value20210420:$b3
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
Have
the value=$b2
the value=0
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$b2 = l0 cmp 31L
currStmt left value20210420:$b2
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
[taint329]i invoke specialinvoke r0.<java.lang.Object: void <init>()>()
[taint328]i invoke <java.lang.Object: void <init>()>
[taint328]i invoke 0
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
doAnalysis endqqqqqqq.....
come here
[CFMAP]2021 After BackwardAnalysis:{cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}
[taint into] sootMethod: nextId
[]
class name :invoker.SnowFlake
method name :nextId
method list :[]
clasname=invoker.SnowFlake
methodname=nextId
sourcelist2021=[]
20210427node :l0 = staticinvoke <invoker.SnowFlake: long getNewstmp()>()
20210427node in :[]
调用语句赋值给变量:l0 = staticinvoke <invoker.SnowFlake: long getNewstmp()>()
Invokestmt:getNewstmp
20210427node out :[]
[taint328]a invoke <invoker.SnowFlake: long getNewstmp()>
[taint328]a invoke 0
[invokemap]invoke:getNewstmp  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
20210427node :$l1 = <invoker.SnowFlake: long lastStmp>
20210427node in :[]
普通复制语句1112:$l1 = <invoker.SnowFlake: long lastStmp>
[taint source] u:<invoker.SnowFlake: long lastStmp>
SourceList:[]
20210427node out :[]
20210427node :$b2 = l0 cmp $l1
20210427node in :[]
普通复制语句1112:$b2 = l0 cmp $l1
[taint source] u:l0
SourceList:[]
[taint source] u:$l1
SourceList:[]
[taint source] u:l0 cmp $l1
SourceList:[]
20210427node out :[]
20210427node :if $b2 >= 0 goto $l3 = <invoker.SnowFlake: long lastStmp>
20210427node in :[]
20210427node out :[]
Have
Stmt if :if $b2 >= 0 goto $l3 = <invoker.SnowFlake: long lastStmp>Stmt if value:$b2 >= 0the value=$b2
the value=0
maintainValues.size0
ifValues1
20210427node :$l3 = <invoker.SnowFlake: long lastStmp>
20210427node in :[]
普通复制语句1112:$l3 = <invoker.SnowFlake: long lastStmp>
[taint source] u:<invoker.SnowFlake: long lastStmp>
SourceList:[]
20210427node out :[]
20210427node :$b4 = l0 cmp $l3
20210427node in :[]
普通复制语句1112:$b4 = l0 cmp $l3
[taint source] u:l0
SourceList:[]
[taint source] u:$l3
SourceList:[]
[taint source] u:l0 cmp $l3
SourceList:[]
20210427node out :[]
20210427node :if $b4 != 0 goto <invoker.SnowFlake: long sequence> = 0L
20210427node in :[]
20210427node out :[]
Have
Stmt if :if $b4 != 0 goto <invoker.SnowFlake: long sequence> = 0LStmt if value:$b4 != 0the value=$b4
the value=0
maintainValues.size0
ifValues1
20210427node :<invoker.SnowFlake: long sequence> = 0L
20210427node in :[]
普通复制语句1112:<invoker.SnowFlake: long sequence> = 0L
[taint source] u:0L
SourceList:[]
20210427node out :[]
20210427node :$l5 = <invoker.SnowFlake: long sequence>
20210427node in :[]
普通复制语句1112:$l5 = <invoker.SnowFlake: long sequence>
[taint source] u:<invoker.SnowFlake: long sequence>
SourceList:[]
20210427node out :[]
20210427node :$l6 = $l5 + 1L
20210427node in :[]
普通复制语句1112:$l6 = $l5 + 1L
[taint source] u:$l5
SourceList:[]
[taint source] u:1L
SourceList:[]
[taint source] u:$l5 + 1L
SourceList:[]
20210427node out :[]
20210427node :$l7 = $l6 & 4095L
20210427node in :[]
普通复制语句1112:$l7 = $l6 & 4095L
[taint source] u:$l6
SourceList:[]
[taint source] u:4095L
SourceList:[]
[taint source] u:$l6 & 4095L
SourceList:[]
20210427node out :[]
20210427node :<invoker.SnowFlake: long sequence> = $l7
20210427node in :[]
普通复制语句1112:<invoker.SnowFlake: long sequence> = $l7
[taint source] u:$l7
SourceList:[]
20210427node out :[]
20210427node :$l8 = <invoker.SnowFlake: long sequence>
20210427node in :[]
普通复制语句1112:$l8 = <invoker.SnowFlake: long sequence>
[taint source] u:<invoker.SnowFlake: long sequence>
SourceList:[]
20210427node out :[]
20210427node :$b9 = $l8 cmp 0L
20210427node in :[]
普通复制语句1112:$b9 = $l8 cmp 0L
[taint source] u:$l8
SourceList:[]
[taint source] u:0L
SourceList:[]
[taint source] u:$l8 cmp 0L
SourceList:[]
20210427node out :[]
20210427node :if $b9 != 0 goto <invoker.SnowFlake: long lastStmp> = l0
20210427node in :[]
20210427node out :[]
Have
Stmt if :if $b9 != 0 goto <invoker.SnowFlake: long lastStmp> = l0Stmt if value:$b9 != 0the value=$b9
the value=0
maintainValues.size0
ifValues1
20210427node :l0 = staticinvoke <invoker.SnowFlake: long getNextMill()>()
20210427node in :[]
调用语句赋值给变量:l0 = staticinvoke <invoker.SnowFlake: long getNextMill()>()
Invokestmt:getNextMill
20210427node out :[]
[taint328]a invoke <invoker.SnowFlake: long getNextMill()>
[taint328]a invoke 0
[invokemap]invoke:getNextMill  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
20210427node :goto [?= <invoker.SnowFlake: long lastStmp> = l0]
20210427node in :[]
20210427node out :[]
20210427node :<invoker.SnowFlake: long lastStmp> = l0
20210427node in :[]
普通复制语句1112:<invoker.SnowFlake: long lastStmp> = l0
[taint source] u:l0
SourceList:[]
20210427node out :[]
20210427node :$l10 = l0 - 1480166465631L
20210427node in :[]
普通复制语句1112:$l10 = l0 - 1480166465631L
[taint source] u:l0
SourceList:[]
[taint source] u:1480166465631L
SourceList:[]
[taint source] u:l0 - 1480166465631L
SourceList:[]
20210427node out :[]
20210427node :$l11 = $l10 << 22
20210427node in :[]
普通复制语句1112:$l11 = $l10 << 22
[taint source] u:$l10
SourceList:[]
[taint source] u:22
SourceList:[]
[taint source] u:$l10 << 22
SourceList:[]
20210427node out :[]
20210427node :$l12 = <invoker.SnowFlake: long datacenterId>
20210427node in :[]
普通复制语句1112:$l12 = <invoker.SnowFlake: long datacenterId>
[taint source] u:<invoker.SnowFlake: long datacenterId>
SourceList:[]
20210427node out :[]
20210427node :$l13 = $l12 << 17
20210427node in :[]
普通复制语句1112:$l13 = $l12 << 17
[taint source] u:$l12
SourceList:[]
[taint source] u:17
SourceList:[]
[taint source] u:$l12 << 17
SourceList:[]
20210427node out :[]
20210427node :$l14 = $l11 | $l13
20210427node in :[]
普通复制语句1112:$l14 = $l11 | $l13
[taint source] u:$l11
SourceList:[]
[taint source] u:$l13
SourceList:[]
[taint source] u:$l11 | $l13
SourceList:[]
20210427node out :[]
20210427node :$l15 = <invoker.SnowFlake: long machineId>
20210427node in :[]
普通复制语句1112:$l15 = <invoker.SnowFlake: long machineId>
[taint source] u:<invoker.SnowFlake: long machineId>
SourceList:[]
20210427node out :[]
20210427node :$l16 = $l15 << 12
20210427node in :[]
普通复制语句1112:$l16 = $l15 << 12
[taint source] u:$l15
SourceList:[]
[taint source] u:12
SourceList:[]
[taint source] u:$l15 << 12
SourceList:[]
20210427node out :[]
20210427node :$l17 = $l14 | $l16
20210427node in :[]
普通复制语句1112:$l17 = $l14 | $l16
[taint source] u:$l14
SourceList:[]
[taint source] u:$l16
SourceList:[]
[taint source] u:$l14 | $l16
SourceList:[]
20210427node out :[]
20210427node :$l18 = <invoker.SnowFlake: long sequence>
20210427node in :[]
普通复制语句1112:$l18 = <invoker.SnowFlake: long sequence>
[taint source] u:<invoker.SnowFlake: long sequence>
SourceList:[]
20210427node out :[]
20210427node :$l19 = $l17 | $l18
20210427node in :[]
普通复制语句1112:$l19 = $l17 | $l18
[taint source] u:$l17
SourceList:[]
[taint source] u:$l18
SourceList:[]
[taint source] u:$l17 | $l18
SourceList:[]
20210427node out :[]
20210427node :return $l19
20210427node in :[]
20210427node out :[]
20210427node :$r0 = new java.lang.RuntimeException
20210427node in :[]
普通复制语句1112:$r0 = new java.lang.RuntimeException
[taint source] u:new java.lang.RuntimeException
SourceList:[]
20210427node out :[]
20210427node :specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Clock moved backwards.  Refusing to generate id")
20210427node in :[]
20210427node out :[]
[taint329]i invoke specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Clock moved backwards.  Refusing to generate id")
[taint328]i invoke <java.lang.RuntimeException: void <init>(java.lang.String)>
[taint328]i invoke 1
value:"Clock moved backwards.  Refusing to generate id"
isoutSetContains  false value:"Clock moved backwards.  Refusing to generate id" index:0
20210427node :throw $r0
20210427node in :[]
20210427node out :[]
analysis.outSet.size():0
[CFMAP]2021 After taintAnalysis:{cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}
The data isgggg 
<invoker.SnowFlake: long nextId()>
The data isgggg invoker.SnowFlake nextId [] {cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}  {cfhider.WordCount$IntSumReducer={reduce=[I@371766c3}, cfhider.WordCount$TokenizerMapper={map=[I@fbd1ebe}, cfhider.WordCount={main=[I@2ae6ba37}, invoker.SnowFlake={<init>=[I@3ee6f824, getNextMill=[I@2dad23bf, getNewstmp=[I@4205e806}}
Coming...
doAnalysis Startingqqqqqqqq.....
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
[taint329]i invoke specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Clock moved backwards.  Refusing to generate id")
[taint328]i invoke <java.lang.RuntimeException: void <init>(java.lang.String)>
[taint328]i invoke 1
value:"Clock moved backwards.  Refusing to generate id"
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$r0 = new java.lang.RuntimeException
currStmt left value20210420:$r0
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$l19 = $l17 | $l18
currStmt left value20210420:$l19
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$l18 = <invoker.SnowFlake: long sequence>
currStmt left value20210420:$l18
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$l17 = $l14 | $l16
currStmt left value20210420:$l17
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$l16 = $l15 << 12
currStmt left value20210420:$l16
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$l15 = <invoker.SnowFlake: long machineId>
currStmt left value20210420:$l15
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$l14 = $l11 | $l13
currStmt left value20210420:$l14
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$l13 = $l12 << 17
currStmt left value20210420:$l13
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$l12 = <invoker.SnowFlake: long datacenterId>
currStmt left value20210420:$l12
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$l11 = $l10 << 22
currStmt left value20210420:$l11
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$l10 = l0 - 1480166465631L
currStmt left value20210420:$l10
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:<invoker.SnowFlake: long lastStmp> = l0
currStmt left value20210420:<invoker.SnowFlake: long lastStmp>
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:l0 = staticinvoke <invoker.SnowFlake: long getNextMill()>()
currStmt left value20210420:l0
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
Have
the value=$b9
the value=0
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$b9 = $l8 cmp 0L
currStmt left value20210420:$b9
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$l8 = <invoker.SnowFlake: long sequence>
currStmt left value20210420:$l8
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:<invoker.SnowFlake: long sequence> = $l7
currStmt left value20210420:<invoker.SnowFlake: long sequence>
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$l7 = $l6 & 4095L
currStmt left value20210420:$l7
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$l6 = $l5 + 1L
currStmt left value20210420:$l6
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$l5 = <invoker.SnowFlake: long sequence>
currStmt left value20210420:$l5
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:<invoker.SnowFlake: long sequence> = 0L
currStmt left value20210420:<invoker.SnowFlake: long sequence>
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
Have
the value=$b4
the value=0
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$b4 = l0 cmp $l3
currStmt left value20210420:$b4
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$l3 = <invoker.SnowFlake: long lastStmp>
currStmt left value20210420:$l3
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
Have
the value=$b2
the value=0
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$b2 = l0 cmp $l1
currStmt left value20210420:$b2
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$l1 = <invoker.SnowFlake: long lastStmp>
currStmt left value20210420:$l1
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:l0 = staticinvoke <invoker.SnowFlake: long getNewstmp()>()
currStmt left value20210420:l0
doAnalysis endqqqqqqq.....
come here
[CFMAP]2021 After BackwardAnalysis:{cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}
[taint into] sootMethod: getNextMill
[]
class name :invoker.SnowFlake
method name :getNextMill
method list :[]
clasname=invoker.SnowFlake
methodname=getNextMill
sourcelist2021=[]
20210427node :l0 = staticinvoke <invoker.SnowFlake: long getNewstmp()>()
20210427node in :[]
调用语句赋值给变量:l0 = staticinvoke <invoker.SnowFlake: long getNewstmp()>()
Invokestmt:getNewstmp
20210427node out :[]
[taint328]a invoke <invoker.SnowFlake: long getNewstmp()>
[taint328]a invoke 0
[invokemap]invoke:getNewstmp  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
20210427node :$l1 = <invoker.SnowFlake: long lastStmp>
20210427node in :[]
普通复制语句1112:$l1 = <invoker.SnowFlake: long lastStmp>
[taint source] u:<invoker.SnowFlake: long lastStmp>
SourceList:[]
20210427node out :[]
20210427node :$b2 = l0 cmp $l1
20210427node in :[]
普通复制语句1112:$b2 = l0 cmp $l1
[taint source] u:l0
SourceList:[]
[taint source] u:$l1
SourceList:[]
[taint source] u:l0 cmp $l1
SourceList:[]
20210427node out :[]
20210427node :if $b2 > 0 goto return l0
20210427node in :[]
20210427node out :[]
Have
Stmt if :if $b2 > 0 goto return l0Stmt if value:$b2 > 0the value=$b2
the value=0
maintainValues.size0
ifValues1
20210427node :return l0
20210427node in :[]
20210427node out :[]
20210427node :l0 = staticinvoke <invoker.SnowFlake: long getNewstmp()>()
20210427node in :[]
调用语句赋值给变量:l0 = staticinvoke <invoker.SnowFlake: long getNewstmp()>()
Invokestmt:getNewstmp
20210427node out :[]
[taint328]a invoke <invoker.SnowFlake: long getNewstmp()>
[taint328]a invoke 0
[invokemap]invoke:getNewstmp  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
20210427node :goto [?= $l1 = <invoker.SnowFlake: long lastStmp>]
20210427node in :[]
20210427node out :[]
analysis.outSet.size():0
[CFMAP]2021 After taintAnalysis:{cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}
The data isgggg 
<invoker.SnowFlake: long getNextMill()>
The data isgggg invoker.SnowFlake getNextMill [] {cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}  {cfhider.WordCount$IntSumReducer={reduce=[I@371766c3}, cfhider.WordCount$TokenizerMapper={map=[I@fbd1ebe}, cfhider.WordCount={main=[I@2ae6ba37}, invoker.SnowFlake={<init>=[I@3ee6f824, getNextMill=[I@2dad23bf, getNewstmp=[I@11c403c7}}
Coming...
doAnalysis Startingqqqqqqqq.....
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:l0 = staticinvoke <invoker.SnowFlake: long getNewstmp()>()
currStmt left value20210420:l0
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
Have
the value=$b2
the value=0
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$b2 = l0 cmp $l1
currStmt left value20210420:$b2
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$l1 = <invoker.SnowFlake: long lastStmp>
currStmt left value20210420:$l1
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:l0 = staticinvoke <invoker.SnowFlake: long getNewstmp()>()
currStmt left value20210420:l0
doAnalysis endqqqqqqq.....
come here
[CFMAP]2021 After BackwardAnalysis:{cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}
[taint into] sootMethod: getNewstmp
[]
class name :invoker.SnowFlake
method name :getNewstmp
method list :[]
clasname=invoker.SnowFlake
methodname=getNewstmp
sourcelist2021=[]
20210427node :$l0 = staticinvoke <java.lang.System: long currentTimeMillis()>()
20210427node in :[]
调用语句赋值给变量:$l0 = staticinvoke <java.lang.System: long currentTimeMillis()>()
20210427node out :[]
[taint328]a invoke <java.lang.System: long currentTimeMillis()>
[taint328]a invoke 0
20210427node :return $l0
20210427node in :[]
20210427node out :[]
analysis.outSet.size():0
[CFMAP]2021 After taintAnalysis:{cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}
The data isgggg 
<invoker.SnowFlake: long getNewstmp()>
The data isgggg invoker.SnowFlake getNewstmp [] {cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}  {cfhider.WordCount$IntSumReducer={reduce=[I@371766c3}, cfhider.WordCount$TokenizerMapper={map=[I@fbd1ebe}, cfhider.WordCount={main=[I@2ae6ba37}, invoker.SnowFlake={<init>=[I@3ee6f824, getNextMill=[I@2dad23bf, getNewstmp=[I@11c403c7}}
Coming...
doAnalysis Startingqqqqqqqq.....
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$l0 = staticinvoke <java.lang.System: long currentTimeMillis()>()
currStmt left value20210420:$l0
doAnalysis endqqqqqqq.....
come here
[CFMAP]2021 After BackwardAnalysis:{cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}
[taint into] sootMethod: <clinit>
[]
class name :invoker.SnowFlake
method name :<clinit>
method list :[]
clasname=invoker.SnowFlake
methodname=<clinit>
sourcelist2021=[]
20210427node :<invoker.SnowFlake: long sequence> = 0L
20210427node in :[]
普通复制语句1112:<invoker.SnowFlake: long sequence> = 0L
[taint source] u:0L
SourceList:[]
20210427node out :[]
20210427node :<invoker.SnowFlake: long lastStmp> = -1L
20210427node in :[]
普通复制语句1112:<invoker.SnowFlake: long lastStmp> = -1L
[taint source] u:-1L
SourceList:[]
20210427node out :[]
20210427node :return
20210427node in :[]
20210427node out :[]
analysis.outSet.size():0
[CFMAP]2021 After taintAnalysis:{cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}
The data isgggg 
<invoker.SnowFlake: void <clinit>()>
The data isgggg invoker.SnowFlake <clinit> [] {cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}  {cfhider.WordCount$IntSumReducer={reduce=[I@371766c3}, cfhider.WordCount$TokenizerMapper={map=[I@fbd1ebe}, cfhider.WordCount={main=[I@2ae6ba37}, invoker.SnowFlake={<init>=[I@3ee6f824, getNextMill=[I@2dad23bf, getNewstmp=[I@11c403c7}}
Coming...
doAnalysis Startingqqqqqqqq.....
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:<invoker.SnowFlake: long lastStmp> = -1L
currStmt left value20210420:<invoker.SnowFlake: long lastStmp>
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:<invoker.SnowFlake: long sequence> = 0L
currStmt left value20210420:<invoker.SnowFlake: long sequence>
doAnalysis endqqqqqqq.....
come here
[CFMAP]2021 After BackwardAnalysis:{cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}
[taint into] sootMethod: <init>
[]
class name :invoker.SnowFlake
method name :<init>
method list :[]
clasname=invoker.SnowFlake
methodname=<init>
sourcelist2021=[]
20210427node :r0 := @this: invoker.SnowFlake
20210427node in :[]
20210427node out :[]
currStmt20210423:r0 := @this: invoker.SnowFlake
20210427node :l0 := @parameter0: long
20210427node in :[]
[idStmt]iiiiiii l0 := @parameter0: long  index:0
ClassName:invoker.SnowFlake
MethodName:<init>
aaaa:0
20210427node out :[]
currStmt20210423:l0 := @parameter0: long
20210427node :l1 := @parameter1: long
20210427node in :[]
[idStmt]iiiiiii l1 := @parameter1: long  index:1
ClassName:invoker.SnowFlake
MethodName:<init>
aaaa:0
20210427node out :[]
currStmt20210423:l1 := @parameter1: long
20210427node :specialinvoke r0.<java.lang.Object: void <init>()>()
20210427node in :[]
20210427node out :[]
[taint329]i invoke specialinvoke r0.<java.lang.Object: void <init>()>()
[taint328]i invoke <java.lang.Object: void <init>()>
[taint328]i invoke 0
20210427node :$b2 = l0 cmp 31L
20210427node in :[]
普通复制语句1112:$b2 = l0 cmp 31L
[taint source] u:l0
SourceList:[]
[taint source] u:31L
SourceList:[]
[taint source] u:l0 cmp 31L
SourceList:[]
20210427node out :[]
20210427node :if $b2 > 0 goto $r1 = new java.lang.IllegalArgumentException
20210427node in :[]
20210427node out :[]
Have
Stmt if :if $b2 > 0 goto $r1 = new java.lang.IllegalArgumentExceptionStmt if value:$b2 > 0the value=$b2
the value=0
maintainValues.size0
ifValues1
20210427node :$b3 = l0 cmp 0L
20210427node in :[]
普通复制语句1112:$b3 = l0 cmp 0L
[taint source] u:l0
SourceList:[]
[taint source] u:0L
SourceList:[]
[taint source] u:l0 cmp 0L
SourceList:[]
20210427node out :[]
20210427node :if $b3 >= 0 goto $b4 = l1 cmp 31L
20210427node in :[]
20210427node out :[]
Have
Stmt if :if $b3 >= 0 goto $b4 = l1 cmp 31LStmt if value:$b3 >= 0the value=$b3
the value=0
maintainValues.size0
ifValues1
20210427node :$b4 = l1 cmp 31L
20210427node in :[]
普通复制语句1112:$b4 = l1 cmp 31L
[taint source] u:l1
SourceList:[]
[taint source] u:31L
SourceList:[]
[taint source] u:l1 cmp 31L
SourceList:[]
20210427node out :[]
20210427node :if $b4 > 0 goto $r2 = new java.lang.IllegalArgumentException
20210427node in :[]
20210427node out :[]
Have
Stmt if :if $b4 > 0 goto $r2 = new java.lang.IllegalArgumentExceptionStmt if value:$b4 > 0the value=$b4
the value=0
maintainValues.size0
ifValues1
20210427node :$b5 = l1 cmp 0L
20210427node in :[]
普通复制语句1112:$b5 = l1 cmp 0L
[taint source] u:l1
SourceList:[]
[taint source] u:0L
SourceList:[]
[taint source] u:l1 cmp 0L
SourceList:[]
20210427node out :[]
20210427node :if $b5 >= 0 goto <invoker.SnowFlake: long datacenterId> = 0L
20210427node in :[]
20210427node out :[]
Have
Stmt if :if $b5 >= 0 goto <invoker.SnowFlake: long datacenterId> = 0LStmt if value:$b5 >= 0the value=$b5
the value=0
maintainValues.size0
ifValues1
20210427node :<invoker.SnowFlake: long datacenterId> = 0L
20210427node in :[]
普通复制语句1112:<invoker.SnowFlake: long datacenterId> = 0L
[taint source] u:0L
SourceList:[]
20210427node out :[]
20210427node :<invoker.SnowFlake: long machineId> = 0L
20210427node in :[]
普通复制语句1112:<invoker.SnowFlake: long machineId> = 0L
[taint source] u:0L
SourceList:[]
20210427node out :[]
20210427node :return
20210427node in :[]
20210427node out :[]
20210427node :$r2 = new java.lang.IllegalArgumentException
20210427node in :[]
普通复制语句1112:$r2 = new java.lang.IllegalArgumentException
[taint source] u:new java.lang.IllegalArgumentException
SourceList:[]
20210427node out :[]
20210427node :specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("machineId can\'t be greater than MAX_MACHINE_NUM or less than 0")
20210427node in :[]
20210427node out :[]
[taint329]i invoke specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("machineId can\'t be greater than MAX_MACHINE_NUM or less than 0")
[taint328]i invoke <java.lang.IllegalArgumentException: void <init>(java.lang.String)>
[taint328]i invoke 1
value:"machineId can\'t be greater than MAX_MACHINE_NUM or less than 0"
isoutSetContains  false value:"machineId can\'t be greater than MAX_MACHINE_NUM or less than 0" index:0
20210427node :throw $r2
20210427node in :[]
20210427node out :[]
20210427node :$r1 = new java.lang.IllegalArgumentException
20210427node in :[]
普通复制语句1112:$r1 = new java.lang.IllegalArgumentException
[taint source] u:new java.lang.IllegalArgumentException
SourceList:[]
20210427node out :[]
20210427node :specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("datacenterId can\'t be greater than MAX_DATACENTER_NUM or less than 0")
20210427node in :[]
20210427node out :[]
[taint329]i invoke specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("datacenterId can\'t be greater than MAX_DATACENTER_NUM or less than 0")
[taint328]i invoke <java.lang.IllegalArgumentException: void <init>(java.lang.String)>
[taint328]i invoke 1
value:"datacenterId can\'t be greater than MAX_DATACENTER_NUM or less than 0"
isoutSetContains  false value:"datacenterId can\'t be greater than MAX_DATACENTER_NUM or less than 0" index:0
20210427node :throw $r1
20210427node in :[]
20210427node out :[]
analysis.outSet.size():0
[CFMAP]2021 After taintAnalysis:{cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}
The data isgggg 
<invoker.SnowFlake: void <init>(long,long)>
The data isgggg invoker.SnowFlake <init> [] {cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}  {cfhider.WordCount$IntSumReducer={reduce=[I@371766c3}, cfhider.WordCount$TokenizerMapper={map=[I@fbd1ebe}, cfhider.WordCount={main=[I@2ae6ba37}, invoker.SnowFlake={<init>=[I@5bd406ed, getNextMill=[I@2dad23bf, getNewstmp=[I@11c403c7}}
Coming...
doAnalysis Startingqqqqqqqq.....
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
[taint329]i invoke specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("datacenterId can\'t be greater than MAX_DATACENTER_NUM or less than 0")
[taint328]i invoke <java.lang.IllegalArgumentException: void <init>(java.lang.String)>
[taint328]i invoke 1
value:"datacenterId can\'t be greater than MAX_DATACENTER_NUM or less than 0"
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$r1 = new java.lang.IllegalArgumentException
currStmt left value20210420:$r1
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
[taint329]i invoke specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("machineId can\'t be greater than MAX_MACHINE_NUM or less than 0")
[taint328]i invoke <java.lang.IllegalArgumentException: void <init>(java.lang.String)>
[taint328]i invoke 1
value:"machineId can\'t be greater than MAX_MACHINE_NUM or less than 0"
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$r2 = new java.lang.IllegalArgumentException
currStmt left value20210420:$r2
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:<invoker.SnowFlake: long machineId> = 0L
currStmt left value20210420:<invoker.SnowFlake: long machineId>
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:<invoker.SnowFlake: long datacenterId> = 0L
currStmt left value20210420:<invoker.SnowFlake: long datacenterId>
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
Have
the value=$b5
the value=0
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$b5 = l1 cmp 0L
currStmt left value20210420:$b5
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
Have
the value=$b4
the value=0
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$b4 = l1 cmp 31L
currStmt left value20210420:$b4
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
Have
the value=$b3
the value=0
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$b3 = l0 cmp 0L
currStmt left value20210420:$b3
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
Have
the value=$b2
the value=0
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$b2 = l0 cmp 31L
currStmt left value20210420:$b2
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
[taint329]i invoke specialinvoke r0.<java.lang.Object: void <init>()>()
[taint328]i invoke <java.lang.Object: void <init>()>
[taint328]i invoke 0
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
doAnalysis endqqqqqqq.....
come here
[CFMAP]2021 After BackwardAnalysis:{cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}
[taint into] sootMethod: nextId
[]
class name :invoker.SnowFlake
method name :nextId
method list :[]
clasname=invoker.SnowFlake
methodname=nextId
sourcelist2021=[]
20210427node :l0 = staticinvoke <invoker.SnowFlake: long getNewstmp()>()
20210427node in :[]
调用语句赋值给变量:l0 = staticinvoke <invoker.SnowFlake: long getNewstmp()>()
Invokestmt:getNewstmp
20210427node out :[]
[taint328]a invoke <invoker.SnowFlake: long getNewstmp()>
[taint328]a invoke 0
[invokemap]invoke:getNewstmp  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
20210427node :$l1 = <invoker.SnowFlake: long lastStmp>
20210427node in :[]
普通复制语句1112:$l1 = <invoker.SnowFlake: long lastStmp>
[taint source] u:<invoker.SnowFlake: long lastStmp>
SourceList:[]
20210427node out :[]
20210427node :$b2 = l0 cmp $l1
20210427node in :[]
普通复制语句1112:$b2 = l0 cmp $l1
[taint source] u:l0
SourceList:[]
[taint source] u:$l1
SourceList:[]
[taint source] u:l0 cmp $l1
SourceList:[]
20210427node out :[]
20210427node :if $b2 >= 0 goto $l3 = <invoker.SnowFlake: long lastStmp>
20210427node in :[]
20210427node out :[]
Have
Stmt if :if $b2 >= 0 goto $l3 = <invoker.SnowFlake: long lastStmp>Stmt if value:$b2 >= 0the value=$b2
the value=0
maintainValues.size0
ifValues1
20210427node :$l3 = <invoker.SnowFlake: long lastStmp>
20210427node in :[]
普通复制语句1112:$l3 = <invoker.SnowFlake: long lastStmp>
[taint source] u:<invoker.SnowFlake: long lastStmp>
SourceList:[]
20210427node out :[]
20210427node :$b4 = l0 cmp $l3
20210427node in :[]
普通复制语句1112:$b4 = l0 cmp $l3
[taint source] u:l0
SourceList:[]
[taint source] u:$l3
SourceList:[]
[taint source] u:l0 cmp $l3
SourceList:[]
20210427node out :[]
20210427node :if $b4 != 0 goto <invoker.SnowFlake: long sequence> = 0L
20210427node in :[]
20210427node out :[]
Have
Stmt if :if $b4 != 0 goto <invoker.SnowFlake: long sequence> = 0LStmt if value:$b4 != 0the value=$b4
the value=0
maintainValues.size0
ifValues1
20210427node :<invoker.SnowFlake: long sequence> = 0L
20210427node in :[]
普通复制语句1112:<invoker.SnowFlake: long sequence> = 0L
[taint source] u:0L
SourceList:[]
20210427node out :[]
20210427node :$l5 = <invoker.SnowFlake: long sequence>
20210427node in :[]
普通复制语句1112:$l5 = <invoker.SnowFlake: long sequence>
[taint source] u:<invoker.SnowFlake: long sequence>
SourceList:[]
20210427node out :[]
20210427node :$l6 = $l5 + 1L
20210427node in :[]
普通复制语句1112:$l6 = $l5 + 1L
[taint source] u:$l5
SourceList:[]
[taint source] u:1L
SourceList:[]
[taint source] u:$l5 + 1L
SourceList:[]
20210427node out :[]
20210427node :$l7 = $l6 & 4095L
20210427node in :[]
普通复制语句1112:$l7 = $l6 & 4095L
[taint source] u:$l6
SourceList:[]
[taint source] u:4095L
SourceList:[]
[taint source] u:$l6 & 4095L
SourceList:[]
20210427node out :[]
20210427node :<invoker.SnowFlake: long sequence> = $l7
20210427node in :[]
普通复制语句1112:<invoker.SnowFlake: long sequence> = $l7
[taint source] u:$l7
SourceList:[]
20210427node out :[]
20210427node :$l8 = <invoker.SnowFlake: long sequence>
20210427node in :[]
普通复制语句1112:$l8 = <invoker.SnowFlake: long sequence>
[taint source] u:<invoker.SnowFlake: long sequence>
SourceList:[]
20210427node out :[]
20210427node :$b9 = $l8 cmp 0L
20210427node in :[]
普通复制语句1112:$b9 = $l8 cmp 0L
[taint source] u:$l8
SourceList:[]
[taint source] u:0L
SourceList:[]
[taint source] u:$l8 cmp 0L
SourceList:[]
20210427node out :[]
20210427node :if $b9 != 0 goto <invoker.SnowFlake: long lastStmp> = l0
20210427node in :[]
20210427node out :[]
Have
Stmt if :if $b9 != 0 goto <invoker.SnowFlake: long lastStmp> = l0Stmt if value:$b9 != 0the value=$b9
the value=0
maintainValues.size0
ifValues1
20210427node :l0 = staticinvoke <invoker.SnowFlake: long getNextMill()>()
20210427node in :[]
调用语句赋值给变量:l0 = staticinvoke <invoker.SnowFlake: long getNextMill()>()
Invokestmt:getNextMill
20210427node out :[]
[taint328]a invoke <invoker.SnowFlake: long getNextMill()>
[taint328]a invoke 0
[invokemap]invoke:getNextMill  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
20210427node :goto [?= <invoker.SnowFlake: long lastStmp> = l0]
20210427node in :[]
20210427node out :[]
20210427node :<invoker.SnowFlake: long lastStmp> = l0
20210427node in :[]
普通复制语句1112:<invoker.SnowFlake: long lastStmp> = l0
[taint source] u:l0
SourceList:[]
20210427node out :[]
20210427node :$l10 = l0 - 1480166465631L
20210427node in :[]
普通复制语句1112:$l10 = l0 - 1480166465631L
[taint source] u:l0
SourceList:[]
[taint source] u:1480166465631L
SourceList:[]
[taint source] u:l0 - 1480166465631L
SourceList:[]
20210427node out :[]
20210427node :$l11 = $l10 << 22
20210427node in :[]
普通复制语句1112:$l11 = $l10 << 22
[taint source] u:$l10
SourceList:[]
[taint source] u:22
SourceList:[]
[taint source] u:$l10 << 22
SourceList:[]
20210427node out :[]
20210427node :$l12 = <invoker.SnowFlake: long datacenterId>
20210427node in :[]
普通复制语句1112:$l12 = <invoker.SnowFlake: long datacenterId>
[taint source] u:<invoker.SnowFlake: long datacenterId>
SourceList:[]
20210427node out :[]
20210427node :$l13 = $l12 << 17
20210427node in :[]
普通复制语句1112:$l13 = $l12 << 17
[taint source] u:$l12
SourceList:[]
[taint source] u:17
SourceList:[]
[taint source] u:$l12 << 17
SourceList:[]
20210427node out :[]
20210427node :$l14 = $l11 | $l13
20210427node in :[]
普通复制语句1112:$l14 = $l11 | $l13
[taint source] u:$l11
SourceList:[]
[taint source] u:$l13
SourceList:[]
[taint source] u:$l11 | $l13
SourceList:[]
20210427node out :[]
20210427node :$l15 = <invoker.SnowFlake: long machineId>
20210427node in :[]
普通复制语句1112:$l15 = <invoker.SnowFlake: long machineId>
[taint source] u:<invoker.SnowFlake: long machineId>
SourceList:[]
20210427node out :[]
20210427node :$l16 = $l15 << 12
20210427node in :[]
普通复制语句1112:$l16 = $l15 << 12
[taint source] u:$l15
SourceList:[]
[taint source] u:12
SourceList:[]
[taint source] u:$l15 << 12
SourceList:[]
20210427node out :[]
20210427node :$l17 = $l14 | $l16
20210427node in :[]
普通复制语句1112:$l17 = $l14 | $l16
[taint source] u:$l14
SourceList:[]
[taint source] u:$l16
SourceList:[]
[taint source] u:$l14 | $l16
SourceList:[]
20210427node out :[]
20210427node :$l18 = <invoker.SnowFlake: long sequence>
20210427node in :[]
普通复制语句1112:$l18 = <invoker.SnowFlake: long sequence>
[taint source] u:<invoker.SnowFlake: long sequence>
SourceList:[]
20210427node out :[]
20210427node :$l19 = $l17 | $l18
20210427node in :[]
普通复制语句1112:$l19 = $l17 | $l18
[taint source] u:$l17
SourceList:[]
[taint source] u:$l18
SourceList:[]
[taint source] u:$l17 | $l18
SourceList:[]
20210427node out :[]
20210427node :return $l19
20210427node in :[]
20210427node out :[]
20210427node :$r0 = new java.lang.RuntimeException
20210427node in :[]
普通复制语句1112:$r0 = new java.lang.RuntimeException
[taint source] u:new java.lang.RuntimeException
SourceList:[]
20210427node out :[]
20210427node :specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Clock moved backwards.  Refusing to generate id")
20210427node in :[]
20210427node out :[]
[taint329]i invoke specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Clock moved backwards.  Refusing to generate id")
[taint328]i invoke <java.lang.RuntimeException: void <init>(java.lang.String)>
[taint328]i invoke 1
value:"Clock moved backwards.  Refusing to generate id"
isoutSetContains  false value:"Clock moved backwards.  Refusing to generate id" index:0
20210427node :throw $r0
20210427node in :[]
20210427node out :[]
analysis.outSet.size():0
[CFMAP]2021 After taintAnalysis:{cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}
The data isgggg 
<invoker.SnowFlake: long nextId()>
The data isgggg invoker.SnowFlake nextId [] {cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}  {cfhider.WordCount$IntSumReducer={reduce=[I@371766c3}, cfhider.WordCount$TokenizerMapper={map=[I@fbd1ebe}, cfhider.WordCount={main=[I@2ae6ba37}, invoker.SnowFlake={<init>=[I@5bd406ed, getNextMill=[I@3d12e0b4, getNewstmp=[I@225e68bf}}
Coming...
doAnalysis Startingqqqqqqqq.....
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
[taint329]i invoke specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Clock moved backwards.  Refusing to generate id")
[taint328]i invoke <java.lang.RuntimeException: void <init>(java.lang.String)>
[taint328]i invoke 1
value:"Clock moved backwards.  Refusing to generate id"
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$r0 = new java.lang.RuntimeException
currStmt left value20210420:$r0
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$l19 = $l17 | $l18
currStmt left value20210420:$l19
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$l18 = <invoker.SnowFlake: long sequence>
currStmt left value20210420:$l18
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$l17 = $l14 | $l16
currStmt left value20210420:$l17
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$l16 = $l15 << 12
currStmt left value20210420:$l16
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$l15 = <invoker.SnowFlake: long machineId>
currStmt left value20210420:$l15
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$l14 = $l11 | $l13
currStmt left value20210420:$l14
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$l13 = $l12 << 17
currStmt left value20210420:$l13
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$l12 = <invoker.SnowFlake: long datacenterId>
currStmt left value20210420:$l12
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$l11 = $l10 << 22
currStmt left value20210420:$l11
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$l10 = l0 - 1480166465631L
currStmt left value20210420:$l10
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:<invoker.SnowFlake: long lastStmp> = l0
currStmt left value20210420:<invoker.SnowFlake: long lastStmp>
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:l0 = staticinvoke <invoker.SnowFlake: long getNextMill()>()
currStmt left value20210420:l0
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
Have
the value=$b9
the value=0
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$b9 = $l8 cmp 0L
currStmt left value20210420:$b9
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$l8 = <invoker.SnowFlake: long sequence>
currStmt left value20210420:$l8
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:<invoker.SnowFlake: long sequence> = $l7
currStmt left value20210420:<invoker.SnowFlake: long sequence>
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$l7 = $l6 & 4095L
currStmt left value20210420:$l7
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$l6 = $l5 + 1L
currStmt left value20210420:$l6
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$l5 = <invoker.SnowFlake: long sequence>
currStmt left value20210420:$l5
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:<invoker.SnowFlake: long sequence> = 0L
currStmt left value20210420:<invoker.SnowFlake: long sequence>
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
Have
the value=$b4
the value=0
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$b4 = l0 cmp $l3
currStmt left value20210420:$b4
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$l3 = <invoker.SnowFlake: long lastStmp>
currStmt left value20210420:$l3
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
Have
the value=$b2
the value=0
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$b2 = l0 cmp $l1
currStmt left value20210420:$b2
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$l1 = <invoker.SnowFlake: long lastStmp>
currStmt left value20210420:$l1
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:l0 = staticinvoke <invoker.SnowFlake: long getNewstmp()>()
currStmt left value20210420:l0
doAnalysis endqqqqqqq.....
come here
[CFMAP]2021 After BackwardAnalysis:{cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}
[taint into] sootMethod: getNextMill
[]
class name :invoker.SnowFlake
method name :getNextMill
method list :[]
clasname=invoker.SnowFlake
methodname=getNextMill
sourcelist2021=[]
20210427node :l0 = staticinvoke <invoker.SnowFlake: long getNewstmp()>()
20210427node in :[]
调用语句赋值给变量:l0 = staticinvoke <invoker.SnowFlake: long getNewstmp()>()
Invokestmt:getNewstmp
20210427node out :[]
[taint328]a invoke <invoker.SnowFlake: long getNewstmp()>
[taint328]a invoke 0
[invokemap]invoke:getNewstmp  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
20210427node :$l1 = <invoker.SnowFlake: long lastStmp>
20210427node in :[]
普通复制语句1112:$l1 = <invoker.SnowFlake: long lastStmp>
[taint source] u:<invoker.SnowFlake: long lastStmp>
SourceList:[]
20210427node out :[]
20210427node :$b2 = l0 cmp $l1
20210427node in :[]
普通复制语句1112:$b2 = l0 cmp $l1
[taint source] u:l0
SourceList:[]
[taint source] u:$l1
SourceList:[]
[taint source] u:l0 cmp $l1
SourceList:[]
20210427node out :[]
20210427node :if $b2 > 0 goto return l0
20210427node in :[]
20210427node out :[]
Have
Stmt if :if $b2 > 0 goto return l0Stmt if value:$b2 > 0the value=$b2
the value=0
maintainValues.size0
ifValues1
20210427node :return l0
20210427node in :[]
20210427node out :[]
20210427node :l0 = staticinvoke <invoker.SnowFlake: long getNewstmp()>()
20210427node in :[]
调用语句赋值给变量:l0 = staticinvoke <invoker.SnowFlake: long getNewstmp()>()
Invokestmt:getNewstmp
20210427node out :[]
[taint328]a invoke <invoker.SnowFlake: long getNewstmp()>
[taint328]a invoke 0
[invokemap]invoke:getNewstmp  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
20210427node :goto [?= $l1 = <invoker.SnowFlake: long lastStmp>]
20210427node in :[]
20210427node out :[]
analysis.outSet.size():0
[CFMAP]2021 After taintAnalysis:{cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}
The data isgggg 
<invoker.SnowFlake: long getNextMill()>
The data isgggg invoker.SnowFlake getNextMill [] {cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}  {cfhider.WordCount$IntSumReducer={reduce=[I@371766c3}, cfhider.WordCount$TokenizerMapper={map=[I@fbd1ebe}, cfhider.WordCount={main=[I@2ae6ba37}, invoker.SnowFlake={<init>=[I@5bd406ed, getNextMill=[I@3d12e0b4, getNewstmp=[I@642ee539}}
Coming...
doAnalysis Startingqqqqqqqq.....
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:l0 = staticinvoke <invoker.SnowFlake: long getNewstmp()>()
currStmt left value20210420:l0
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
Have
the value=$b2
the value=0
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$b2 = l0 cmp $l1
currStmt left value20210420:$b2
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$l1 = <invoker.SnowFlake: long lastStmp>
currStmt left value20210420:$l1
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:l0 = staticinvoke <invoker.SnowFlake: long getNewstmp()>()
currStmt left value20210420:l0
doAnalysis endqqqqqqq.....
come here
[CFMAP]2021 After BackwardAnalysis:{cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}
[taint into] sootMethod: getNewstmp
[]
class name :invoker.SnowFlake
method name :getNewstmp
method list :[]
clasname=invoker.SnowFlake
methodname=getNewstmp
sourcelist2021=[]
20210427node :$l0 = staticinvoke <java.lang.System: long currentTimeMillis()>()
20210427node in :[]
调用语句赋值给变量:$l0 = staticinvoke <java.lang.System: long currentTimeMillis()>()
20210427node out :[]
[taint328]a invoke <java.lang.System: long currentTimeMillis()>
[taint328]a invoke 0
20210427node :return $l0
20210427node in :[]
20210427node out :[]
analysis.outSet.size():0
[CFMAP]2021 After taintAnalysis:{cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}
The data isgggg 
<invoker.SnowFlake: long getNewstmp()>
The data isgggg invoker.SnowFlake getNewstmp [] {cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}  {cfhider.WordCount$IntSumReducer={reduce=[I@371766c3}, cfhider.WordCount$TokenizerMapper={map=[I@fbd1ebe}, cfhider.WordCount={main=[I@2ae6ba37}, invoker.SnowFlake={<init>=[I@5bd406ed, getNextMill=[I@3d12e0b4, getNewstmp=[I@642ee539}}
Coming...
doAnalysis Startingqqqqqqqq.....
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$l0 = staticinvoke <java.lang.System: long currentTimeMillis()>()
currStmt left value20210420:$l0
doAnalysis endqqqqqqq.....
come here
[CFMAP]2021 After BackwardAnalysis:{cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}
[taint into] sootMethod: <clinit>
[]
class name :invoker.SnowFlake
method name :<clinit>
method list :[]
clasname=invoker.SnowFlake
methodname=<clinit>
sourcelist2021=[]
20210427node :<invoker.SnowFlake: long sequence> = 0L
20210427node in :[]
普通复制语句1112:<invoker.SnowFlake: long sequence> = 0L
[taint source] u:0L
SourceList:[]
20210427node out :[]
20210427node :<invoker.SnowFlake: long lastStmp> = -1L
20210427node in :[]
普通复制语句1112:<invoker.SnowFlake: long lastStmp> = -1L
[taint source] u:-1L
SourceList:[]
20210427node out :[]
20210427node :return
20210427node in :[]
20210427node out :[]
analysis.outSet.size():0
[CFMAP]2021 After taintAnalysis:{cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}
The data isgggg 
<invoker.SnowFlake: void <clinit>()>
The data isgggg invoker.SnowFlake <clinit> [] {cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}  {cfhider.WordCount$IntSumReducer={reduce=[I@371766c3}, cfhider.WordCount$TokenizerMapper={map=[I@fbd1ebe}, cfhider.WordCount={main=[I@2ae6ba37}, invoker.SnowFlake={<init>=[I@5bd406ed, getNextMill=[I@3d12e0b4, getNewstmp=[I@642ee539}}
Coming...
doAnalysis Startingqqqqqqqq.....
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:<invoker.SnowFlake: long lastStmp> = -1L
currStmt left value20210420:<invoker.SnowFlake: long lastStmp>
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:<invoker.SnowFlake: long sequence> = 0L
currStmt left value20210420:<invoker.SnowFlake: long sequence>
doAnalysis endqqqqqqq.....
come here
[CFMAP]2021 After BackwardAnalysis:{cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}
[taint into] sootMethod: <init>
[]
class name :invoker.SnowFlake
method name :<init>
method list :[]
clasname=invoker.SnowFlake
methodname=<init>
sourcelist2021=[]
20210427node :r0 := @this: invoker.SnowFlake
20210427node in :[]
20210427node out :[]
currStmt20210423:r0 := @this: invoker.SnowFlake
20210427node :l0 := @parameter0: long
20210427node in :[]
[idStmt]iiiiiii l0 := @parameter0: long  index:0
ClassName:invoker.SnowFlake
MethodName:<init>
aaaa:0
20210427node out :[]
currStmt20210423:l0 := @parameter0: long
20210427node :l1 := @parameter1: long
20210427node in :[]
[idStmt]iiiiiii l1 := @parameter1: long  index:1
ClassName:invoker.SnowFlake
MethodName:<init>
aaaa:0
20210427node out :[]
currStmt20210423:l1 := @parameter1: long
20210427node :specialinvoke r0.<java.lang.Object: void <init>()>()
20210427node in :[]
20210427node out :[]
[taint329]i invoke specialinvoke r0.<java.lang.Object: void <init>()>()
[taint328]i invoke <java.lang.Object: void <init>()>
[taint328]i invoke 0
20210427node :$b2 = l0 cmp 31L
20210427node in :[]
普通复制语句1112:$b2 = l0 cmp 31L
[taint source] u:l0
SourceList:[]
[taint source] u:31L
SourceList:[]
[taint source] u:l0 cmp 31L
SourceList:[]
20210427node out :[]
20210427node :if $b2 > 0 goto $r1 = new java.lang.IllegalArgumentException
20210427node in :[]
20210427node out :[]
Have
Stmt if :if $b2 > 0 goto $r1 = new java.lang.IllegalArgumentExceptionStmt if value:$b2 > 0the value=$b2
the value=0
maintainValues.size0
ifValues1
20210427node :$b3 = l0 cmp 0L
20210427node in :[]
普通复制语句1112:$b3 = l0 cmp 0L
[taint source] u:l0
SourceList:[]
[taint source] u:0L
SourceList:[]
[taint source] u:l0 cmp 0L
SourceList:[]
20210427node out :[]
20210427node :if $b3 >= 0 goto $b4 = l1 cmp 31L
20210427node in :[]
20210427node out :[]
Have
Stmt if :if $b3 >= 0 goto $b4 = l1 cmp 31LStmt if value:$b3 >= 0the value=$b3
the value=0
maintainValues.size0
ifValues1
20210427node :$b4 = l1 cmp 31L
20210427node in :[]
普通复制语句1112:$b4 = l1 cmp 31L
[taint source] u:l1
SourceList:[]
[taint source] u:31L
SourceList:[]
[taint source] u:l1 cmp 31L
SourceList:[]
20210427node out :[]
20210427node :if $b4 > 0 goto $r2 = new java.lang.IllegalArgumentException
20210427node in :[]
20210427node out :[]
Have
Stmt if :if $b4 > 0 goto $r2 = new java.lang.IllegalArgumentExceptionStmt if value:$b4 > 0the value=$b4
the value=0
maintainValues.size0
ifValues1
20210427node :$b5 = l1 cmp 0L
20210427node in :[]
普通复制语句1112:$b5 = l1 cmp 0L
[taint source] u:l1
SourceList:[]
[taint source] u:0L
SourceList:[]
[taint source] u:l1 cmp 0L
SourceList:[]
20210427node out :[]
20210427node :if $b5 >= 0 goto <invoker.SnowFlake: long datacenterId> = 0L
20210427node in :[]
20210427node out :[]
Have
Stmt if :if $b5 >= 0 goto <invoker.SnowFlake: long datacenterId> = 0LStmt if value:$b5 >= 0the value=$b5
the value=0
maintainValues.size0
ifValues1
20210427node :<invoker.SnowFlake: long datacenterId> = 0L
20210427node in :[]
普通复制语句1112:<invoker.SnowFlake: long datacenterId> = 0L
[taint source] u:0L
SourceList:[]
20210427node out :[]
20210427node :<invoker.SnowFlake: long machineId> = 0L
20210427node in :[]
普通复制语句1112:<invoker.SnowFlake: long machineId> = 0L
[taint source] u:0L
SourceList:[]
20210427node out :[]
20210427node :return
20210427node in :[]
20210427node out :[]
20210427node :$r2 = new java.lang.IllegalArgumentException
20210427node in :[]
普通复制语句1112:$r2 = new java.lang.IllegalArgumentException
[taint source] u:new java.lang.IllegalArgumentException
SourceList:[]
20210427node out :[]
20210427node :specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("machineId can\'t be greater than MAX_MACHINE_NUM or less than 0")
20210427node in :[]
20210427node out :[]
[taint329]i invoke specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("machineId can\'t be greater than MAX_MACHINE_NUM or less than 0")
[taint328]i invoke <java.lang.IllegalArgumentException: void <init>(java.lang.String)>
[taint328]i invoke 1
value:"machineId can\'t be greater than MAX_MACHINE_NUM or less than 0"
isoutSetContains  false value:"machineId can\'t be greater than MAX_MACHINE_NUM or less than 0" index:0
20210427node :throw $r2
20210427node in :[]
20210427node out :[]
20210427node :$r1 = new java.lang.IllegalArgumentException
20210427node in :[]
普通复制语句1112:$r1 = new java.lang.IllegalArgumentException
[taint source] u:new java.lang.IllegalArgumentException
SourceList:[]
20210427node out :[]
20210427node :specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("datacenterId can\'t be greater than MAX_DATACENTER_NUM or less than 0")
20210427node in :[]
20210427node out :[]
[taint329]i invoke specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("datacenterId can\'t be greater than MAX_DATACENTER_NUM or less than 0")
[taint328]i invoke <java.lang.IllegalArgumentException: void <init>(java.lang.String)>
[taint328]i invoke 1
value:"datacenterId can\'t be greater than MAX_DATACENTER_NUM or less than 0"
isoutSetContains  false value:"datacenterId can\'t be greater than MAX_DATACENTER_NUM or less than 0" index:0
20210427node :throw $r1
20210427node in :[]
20210427node out :[]
analysis.outSet.size():0
[CFMAP]2021 After taintAnalysis:{cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}
The data isgggg 
<invoker.SnowFlake: void <init>(long,long)>
The data isgggg invoker.SnowFlake <init> [] {cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}  {cfhider.WordCount$IntSumReducer={reduce=[I@371766c3}, cfhider.WordCount$TokenizerMapper={map=[I@fbd1ebe}, cfhider.WordCount={main=[I@2ae6ba37}, invoker.SnowFlake={<init>=[I@42cb3491, getNextMill=[I@3d12e0b4, getNewstmp=[I@642ee539}}
Coming...
doAnalysis Startingqqqqqqqq.....
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
[taint329]i invoke specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("datacenterId can\'t be greater than MAX_DATACENTER_NUM or less than 0")
[taint328]i invoke <java.lang.IllegalArgumentException: void <init>(java.lang.String)>
[taint328]i invoke 1
value:"datacenterId can\'t be greater than MAX_DATACENTER_NUM or less than 0"
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$r1 = new java.lang.IllegalArgumentException
currStmt left value20210420:$r1
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
[taint329]i invoke specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("machineId can\'t be greater than MAX_MACHINE_NUM or less than 0")
[taint328]i invoke <java.lang.IllegalArgumentException: void <init>(java.lang.String)>
[taint328]i invoke 1
value:"machineId can\'t be greater than MAX_MACHINE_NUM or less than 0"
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$r2 = new java.lang.IllegalArgumentException
currStmt left value20210420:$r2
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:<invoker.SnowFlake: long machineId> = 0L
currStmt left value20210420:<invoker.SnowFlake: long machineId>
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:<invoker.SnowFlake: long datacenterId> = 0L
currStmt left value20210420:<invoker.SnowFlake: long datacenterId>
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
Have
the value=$b5
the value=0
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$b5 = l1 cmp 0L
currStmt left value20210420:$b5
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
Have
the value=$b4
the value=0
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$b4 = l1 cmp 31L
currStmt left value20210420:$b4
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
Have
the value=$b3
the value=0
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$b3 = l0 cmp 0L
currStmt left value20210420:$b3
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
Have
the value=$b2
the value=0
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$b2 = l0 cmp 31L
currStmt left value20210420:$b2
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
[taint329]i invoke specialinvoke r0.<java.lang.Object: void <init>()>()
[taint328]i invoke <java.lang.Object: void <init>()>
[taint328]i invoke 0
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
doAnalysis endqqqqqqq.....
come here
[CFMAP]2021 After BackwardAnalysis:{cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}
[taint into] sootMethod: nextId
[]
class name :invoker.SnowFlake
method name :nextId
method list :[]
clasname=invoker.SnowFlake
methodname=nextId
sourcelist2021=[]
20210427node :l0 = staticinvoke <invoker.SnowFlake: long getNewstmp()>()
20210427node in :[]
调用语句赋值给变量:l0 = staticinvoke <invoker.SnowFlake: long getNewstmp()>()
Invokestmt:getNewstmp
20210427node out :[]
[taint328]a invoke <invoker.SnowFlake: long getNewstmp()>
[taint328]a invoke 0
[invokemap]invoke:getNewstmp  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
20210427node :$l1 = <invoker.SnowFlake: long lastStmp>
20210427node in :[]
普通复制语句1112:$l1 = <invoker.SnowFlake: long lastStmp>
[taint source] u:<invoker.SnowFlake: long lastStmp>
SourceList:[]
20210427node out :[]
20210427node :$b2 = l0 cmp $l1
20210427node in :[]
普通复制语句1112:$b2 = l0 cmp $l1
[taint source] u:l0
SourceList:[]
[taint source] u:$l1
SourceList:[]
[taint source] u:l0 cmp $l1
SourceList:[]
20210427node out :[]
20210427node :if $b2 >= 0 goto $l3 = <invoker.SnowFlake: long lastStmp>
20210427node in :[]
20210427node out :[]
Have
Stmt if :if $b2 >= 0 goto $l3 = <invoker.SnowFlake: long lastStmp>Stmt if value:$b2 >= 0the value=$b2
the value=0
maintainValues.size0
ifValues1
20210427node :$l3 = <invoker.SnowFlake: long lastStmp>
20210427node in :[]
普通复制语句1112:$l3 = <invoker.SnowFlake: long lastStmp>
[taint source] u:<invoker.SnowFlake: long lastStmp>
SourceList:[]
20210427node out :[]
20210427node :$b4 = l0 cmp $l3
20210427node in :[]
普通复制语句1112:$b4 = l0 cmp $l3
[taint source] u:l0
SourceList:[]
[taint source] u:$l3
SourceList:[]
[taint source] u:l0 cmp $l3
SourceList:[]
20210427node out :[]
20210427node :if $b4 != 0 goto <invoker.SnowFlake: long sequence> = 0L
20210427node in :[]
20210427node out :[]
Have
Stmt if :if $b4 != 0 goto <invoker.SnowFlake: long sequence> = 0LStmt if value:$b4 != 0the value=$b4
the value=0
maintainValues.size0
ifValues1
20210427node :<invoker.SnowFlake: long sequence> = 0L
20210427node in :[]
普通复制语句1112:<invoker.SnowFlake: long sequence> = 0L
[taint source] u:0L
SourceList:[]
20210427node out :[]
20210427node :$l5 = <invoker.SnowFlake: long sequence>
20210427node in :[]
普通复制语句1112:$l5 = <invoker.SnowFlake: long sequence>
[taint source] u:<invoker.SnowFlake: long sequence>
SourceList:[]
20210427node out :[]
20210427node :$l6 = $l5 + 1L
20210427node in :[]
普通复制语句1112:$l6 = $l5 + 1L
[taint source] u:$l5
SourceList:[]
[taint source] u:1L
SourceList:[]
[taint source] u:$l5 + 1L
SourceList:[]
20210427node out :[]
20210427node :$l7 = $l6 & 4095L
20210427node in :[]
普通复制语句1112:$l7 = $l6 & 4095L
[taint source] u:$l6
SourceList:[]
[taint source] u:4095L
SourceList:[]
[taint source] u:$l6 & 4095L
SourceList:[]
20210427node out :[]
20210427node :<invoker.SnowFlake: long sequence> = $l7
20210427node in :[]
普通复制语句1112:<invoker.SnowFlake: long sequence> = $l7
[taint source] u:$l7
SourceList:[]
20210427node out :[]
20210427node :$l8 = <invoker.SnowFlake: long sequence>
20210427node in :[]
普通复制语句1112:$l8 = <invoker.SnowFlake: long sequence>
[taint source] u:<invoker.SnowFlake: long sequence>
SourceList:[]
20210427node out :[]
20210427node :$b9 = $l8 cmp 0L
20210427node in :[]
普通复制语句1112:$b9 = $l8 cmp 0L
[taint source] u:$l8
SourceList:[]
[taint source] u:0L
SourceList:[]
[taint source] u:$l8 cmp 0L
SourceList:[]
20210427node out :[]
20210427node :if $b9 != 0 goto <invoker.SnowFlake: long lastStmp> = l0
20210427node in :[]
20210427node out :[]
Have
Stmt if :if $b9 != 0 goto <invoker.SnowFlake: long lastStmp> = l0Stmt if value:$b9 != 0the value=$b9
the value=0
maintainValues.size0
ifValues1
20210427node :l0 = staticinvoke <invoker.SnowFlake: long getNextMill()>()
20210427node in :[]
调用语句赋值给变量:l0 = staticinvoke <invoker.SnowFlake: long getNextMill()>()
Invokestmt:getNextMill
20210427node out :[]
[taint328]a invoke <invoker.SnowFlake: long getNextMill()>
[taint328]a invoke 0
[invokemap]invoke:getNextMill  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
20210427node :goto [?= <invoker.SnowFlake: long lastStmp> = l0]
20210427node in :[]
20210427node out :[]
20210427node :<invoker.SnowFlake: long lastStmp> = l0
20210427node in :[]
普通复制语句1112:<invoker.SnowFlake: long lastStmp> = l0
[taint source] u:l0
SourceList:[]
20210427node out :[]
20210427node :$l10 = l0 - 1480166465631L
20210427node in :[]
普通复制语句1112:$l10 = l0 - 1480166465631L
[taint source] u:l0
SourceList:[]
[taint source] u:1480166465631L
SourceList:[]
[taint source] u:l0 - 1480166465631L
SourceList:[]
20210427node out :[]
20210427node :$l11 = $l10 << 22
20210427node in :[]
普通复制语句1112:$l11 = $l10 << 22
[taint source] u:$l10
SourceList:[]
[taint source] u:22
SourceList:[]
[taint source] u:$l10 << 22
SourceList:[]
20210427node out :[]
20210427node :$l12 = <invoker.SnowFlake: long datacenterId>
20210427node in :[]
普通复制语句1112:$l12 = <invoker.SnowFlake: long datacenterId>
[taint source] u:<invoker.SnowFlake: long datacenterId>
SourceList:[]
20210427node out :[]
20210427node :$l13 = $l12 << 17
20210427node in :[]
普通复制语句1112:$l13 = $l12 << 17
[taint source] u:$l12
SourceList:[]
[taint source] u:17
SourceList:[]
[taint source] u:$l12 << 17
SourceList:[]
20210427node out :[]
20210427node :$l14 = $l11 | $l13
20210427node in :[]
普通复制语句1112:$l14 = $l11 | $l13
[taint source] u:$l11
SourceList:[]
[taint source] u:$l13
SourceList:[]
[taint source] u:$l11 | $l13
SourceList:[]
20210427node out :[]
20210427node :$l15 = <invoker.SnowFlake: long machineId>
20210427node in :[]
普通复制语句1112:$l15 = <invoker.SnowFlake: long machineId>
[taint source] u:<invoker.SnowFlake: long machineId>
SourceList:[]
20210427node out :[]
20210427node :$l16 = $l15 << 12
20210427node in :[]
普通复制语句1112:$l16 = $l15 << 12
[taint source] u:$l15
SourceList:[]
[taint source] u:12
SourceList:[]
[taint source] u:$l15 << 12
SourceList:[]
20210427node out :[]
20210427node :$l17 = $l14 | $l16
20210427node in :[]
普通复制语句1112:$l17 = $l14 | $l16
[taint source] u:$l14
SourceList:[]
[taint source] u:$l16
SourceList:[]
[taint source] u:$l14 | $l16
SourceList:[]
20210427node out :[]
20210427node :$l18 = <invoker.SnowFlake: long sequence>
20210427node in :[]
普通复制语句1112:$l18 = <invoker.SnowFlake: long sequence>
[taint source] u:<invoker.SnowFlake: long sequence>
SourceList:[]
20210427node out :[]
20210427node :$l19 = $l17 | $l18
20210427node in :[]
普通复制语句1112:$l19 = $l17 | $l18
[taint source] u:$l17
SourceList:[]
[taint source] u:$l18
SourceList:[]
[taint source] u:$l17 | $l18
SourceList:[]
20210427node out :[]
20210427node :return $l19
20210427node in :[]
20210427node out :[]
20210427node :$r0 = new java.lang.RuntimeException
20210427node in :[]
普通复制语句1112:$r0 = new java.lang.RuntimeException
[taint source] u:new java.lang.RuntimeException
SourceList:[]
20210427node out :[]
20210427node :specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Clock moved backwards.  Refusing to generate id")
20210427node in :[]
20210427node out :[]
[taint329]i invoke specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Clock moved backwards.  Refusing to generate id")
[taint328]i invoke <java.lang.RuntimeException: void <init>(java.lang.String)>
[taint328]i invoke 1
value:"Clock moved backwards.  Refusing to generate id"
isoutSetContains  false value:"Clock moved backwards.  Refusing to generate id" index:0
20210427node :throw $r0
20210427node in :[]
20210427node out :[]
analysis.outSet.size():0
[CFMAP]2021 After taintAnalysis:{cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}
The data isgggg 
<invoker.SnowFlake: long nextId()>
The data isgggg invoker.SnowFlake nextId [] {cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}  {cfhider.WordCount$IntSumReducer={reduce=[I@371766c3}, cfhider.WordCount$TokenizerMapper={map=[I@fbd1ebe}, cfhider.WordCount={main=[I@2ae6ba37}, invoker.SnowFlake={<init>=[I@42cb3491, getNextMill=[I@2ae83dd9, getNewstmp=[I@75348790}}
Coming...
doAnalysis Startingqqqqqqqq.....
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
[taint329]i invoke specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Clock moved backwards.  Refusing to generate id")
[taint328]i invoke <java.lang.RuntimeException: void <init>(java.lang.String)>
[taint328]i invoke 1
value:"Clock moved backwards.  Refusing to generate id"
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$r0 = new java.lang.RuntimeException
currStmt left value20210420:$r0
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$l19 = $l17 | $l18
currStmt left value20210420:$l19
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$l18 = <invoker.SnowFlake: long sequence>
currStmt left value20210420:$l18
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$l17 = $l14 | $l16
currStmt left value20210420:$l17
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$l16 = $l15 << 12
currStmt left value20210420:$l16
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$l15 = <invoker.SnowFlake: long machineId>
currStmt left value20210420:$l15
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$l14 = $l11 | $l13
currStmt left value20210420:$l14
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$l13 = $l12 << 17
currStmt left value20210420:$l13
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$l12 = <invoker.SnowFlake: long datacenterId>
currStmt left value20210420:$l12
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$l11 = $l10 << 22
currStmt left value20210420:$l11
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$l10 = l0 - 1480166465631L
currStmt left value20210420:$l10
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:<invoker.SnowFlake: long lastStmp> = l0
currStmt left value20210420:<invoker.SnowFlake: long lastStmp>
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:l0 = staticinvoke <invoker.SnowFlake: long getNextMill()>()
currStmt left value20210420:l0
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
Have
the value=$b9
the value=0
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$b9 = $l8 cmp 0L
currStmt left value20210420:$b9
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$l8 = <invoker.SnowFlake: long sequence>
currStmt left value20210420:$l8
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:<invoker.SnowFlake: long sequence> = $l7
currStmt left value20210420:<invoker.SnowFlake: long sequence>
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$l7 = $l6 & 4095L
currStmt left value20210420:$l7
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$l6 = $l5 + 1L
currStmt left value20210420:$l6
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$l5 = <invoker.SnowFlake: long sequence>
currStmt left value20210420:$l5
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:<invoker.SnowFlake: long sequence> = 0L
currStmt left value20210420:<invoker.SnowFlake: long sequence>
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
Have
the value=$b4
the value=0
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$b4 = l0 cmp $l3
currStmt left value20210420:$b4
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$l3 = <invoker.SnowFlake: long lastStmp>
currStmt left value20210420:$l3
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
Have
the value=$b2
the value=0
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$b2 = l0 cmp $l1
currStmt left value20210420:$b2
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$l1 = <invoker.SnowFlake: long lastStmp>
currStmt left value20210420:$l1
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:l0 = staticinvoke <invoker.SnowFlake: long getNewstmp()>()
currStmt left value20210420:l0
doAnalysis endqqqqqqq.....
come here
[CFMAP]2021 After BackwardAnalysis:{cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}
[taint into] sootMethod: getNextMill
[]
class name :invoker.SnowFlake
method name :getNextMill
method list :[]
clasname=invoker.SnowFlake
methodname=getNextMill
sourcelist2021=[]
20210427node :l0 = staticinvoke <invoker.SnowFlake: long getNewstmp()>()
20210427node in :[]
调用语句赋值给变量:l0 = staticinvoke <invoker.SnowFlake: long getNewstmp()>()
Invokestmt:getNewstmp
20210427node out :[]
[taint328]a invoke <invoker.SnowFlake: long getNewstmp()>
[taint328]a invoke 0
[invokemap]invoke:getNewstmp  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
20210427node :$l1 = <invoker.SnowFlake: long lastStmp>
20210427node in :[]
普通复制语句1112:$l1 = <invoker.SnowFlake: long lastStmp>
[taint source] u:<invoker.SnowFlake: long lastStmp>
SourceList:[]
20210427node out :[]
20210427node :$b2 = l0 cmp $l1
20210427node in :[]
普通复制语句1112:$b2 = l0 cmp $l1
[taint source] u:l0
SourceList:[]
[taint source] u:$l1
SourceList:[]
[taint source] u:l0 cmp $l1
SourceList:[]
20210427node out :[]
20210427node :if $b2 > 0 goto return l0
20210427node in :[]
20210427node out :[]
Have
Stmt if :if $b2 > 0 goto return l0Stmt if value:$b2 > 0the value=$b2
the value=0
maintainValues.size0
ifValues1
20210427node :return l0
20210427node in :[]
20210427node out :[]
20210427node :l0 = staticinvoke <invoker.SnowFlake: long getNewstmp()>()
20210427node in :[]
调用语句赋值给变量:l0 = staticinvoke <invoker.SnowFlake: long getNewstmp()>()
Invokestmt:getNewstmp
20210427node out :[]
[taint328]a invoke <invoker.SnowFlake: long getNewstmp()>
[taint328]a invoke 0
[invokemap]invoke:getNewstmp  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
20210427node :goto [?= $l1 = <invoker.SnowFlake: long lastStmp>]
20210427node in :[]
20210427node out :[]
analysis.outSet.size():0
[CFMAP]2021 After taintAnalysis:{cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}
The data isgggg 
<invoker.SnowFlake: long getNextMill()>
The data isgggg invoker.SnowFlake getNextMill [] {cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}  {cfhider.WordCount$IntSumReducer={reduce=[I@371766c3}, cfhider.WordCount$TokenizerMapper={map=[I@fbd1ebe}, cfhider.WordCount={main=[I@2ae6ba37}, invoker.SnowFlake={<init>=[I@42cb3491, getNextMill=[I@2ae83dd9, getNewstmp=[I@4bb03b0d}}
Coming...
doAnalysis Startingqqqqqqqq.....
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:l0 = staticinvoke <invoker.SnowFlake: long getNewstmp()>()
currStmt left value20210420:l0
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
Have
the value=$b2
the value=0
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$b2 = l0 cmp $l1
currStmt left value20210420:$b2
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$l1 = <invoker.SnowFlake: long lastStmp>
currStmt left value20210420:$l1
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:l0 = staticinvoke <invoker.SnowFlake: long getNewstmp()>()
currStmt left value20210420:l0
doAnalysis endqqqqqqq.....
come here
[CFMAP]2021 After BackwardAnalysis:{cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}
[taint into] sootMethod: getNewstmp
[]
class name :invoker.SnowFlake
method name :getNewstmp
method list :[]
clasname=invoker.SnowFlake
methodname=getNewstmp
sourcelist2021=[]
20210427node :$l0 = staticinvoke <java.lang.System: long currentTimeMillis()>()
20210427node in :[]
调用语句赋值给变量:$l0 = staticinvoke <java.lang.System: long currentTimeMillis()>()
20210427node out :[]
[taint328]a invoke <java.lang.System: long currentTimeMillis()>
[taint328]a invoke 0
20210427node :return $l0
20210427node in :[]
20210427node out :[]
analysis.outSet.size():0
[CFMAP]2021 After taintAnalysis:{cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}
The data isgggg 
<invoker.SnowFlake: long getNewstmp()>
The data isgggg invoker.SnowFlake getNewstmp [] {cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}  {cfhider.WordCount$IntSumReducer={reduce=[I@371766c3}, cfhider.WordCount$TokenizerMapper={map=[I@fbd1ebe}, cfhider.WordCount={main=[I@2ae6ba37}, invoker.SnowFlake={<init>=[I@42cb3491, getNextMill=[I@2ae83dd9, getNewstmp=[I@4bb03b0d}}
Coming...
doAnalysis Startingqqqqqqqq.....
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$l0 = staticinvoke <java.lang.System: long currentTimeMillis()>()
currStmt left value20210420:$l0
doAnalysis endqqqqqqq.....
come here
[CFMAP]2021 After BackwardAnalysis:{cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}
[taint into] sootMethod: <clinit>
[]
class name :invoker.SnowFlake
method name :<clinit>
method list :[]
clasname=invoker.SnowFlake
methodname=<clinit>
sourcelist2021=[]
20210427node :<invoker.SnowFlake: long sequence> = 0L
20210427node in :[]
普通复制语句1112:<invoker.SnowFlake: long sequence> = 0L
[taint source] u:0L
SourceList:[]
20210427node out :[]
20210427node :<invoker.SnowFlake: long lastStmp> = -1L
20210427node in :[]
普通复制语句1112:<invoker.SnowFlake: long lastStmp> = -1L
[taint source] u:-1L
SourceList:[]
20210427node out :[]
20210427node :return
20210427node in :[]
20210427node out :[]
analysis.outSet.size():0
[CFMAP]2021 After taintAnalysis:{cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}
The data isgggg 
<invoker.SnowFlake: void <clinit>()>
The data isgggg invoker.SnowFlake <clinit> [] {cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}  {cfhider.WordCount$IntSumReducer={reduce=[I@371766c3}, cfhider.WordCount$TokenizerMapper={map=[I@fbd1ebe}, cfhider.WordCount={main=[I@2ae6ba37}, invoker.SnowFlake={<init>=[I@42cb3491, getNextMill=[I@2ae83dd9, getNewstmp=[I@4bb03b0d}}
Coming...
doAnalysis Startingqqqqqqqq.....
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:<invoker.SnowFlake: long lastStmp> = -1L
currStmt left value20210420:<invoker.SnowFlake: long lastStmp>
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:<invoker.SnowFlake: long sequence> = 0L
currStmt left value20210420:<invoker.SnowFlake: long sequence>
doAnalysis endqqqqqqq.....
come here
[CFMAP]2021 After BackwardAnalysis:{cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}
[taint into] sootMethod: <init>
[]
class name :invoker.SnowFlake
method name :<init>
method list :[]
clasname=invoker.SnowFlake
methodname=<init>
sourcelist2021=[]
20210427node :r0 := @this: invoker.SnowFlake
20210427node in :[]
20210427node out :[]
currStmt20210423:r0 := @this: invoker.SnowFlake
20210427node :l0 := @parameter0: long
20210427node in :[]
[idStmt]iiiiiii l0 := @parameter0: long  index:0
ClassName:invoker.SnowFlake
MethodName:<init>
aaaa:0
20210427node out :[]
currStmt20210423:l0 := @parameter0: long
20210427node :l1 := @parameter1: long
20210427node in :[]
[idStmt]iiiiiii l1 := @parameter1: long  index:1
ClassName:invoker.SnowFlake
MethodName:<init>
aaaa:0
20210427node out :[]
currStmt20210423:l1 := @parameter1: long
20210427node :specialinvoke r0.<java.lang.Object: void <init>()>()
20210427node in :[]
20210427node out :[]
[taint329]i invoke specialinvoke r0.<java.lang.Object: void <init>()>()
[taint328]i invoke <java.lang.Object: void <init>()>
[taint328]i invoke 0
20210427node :$b2 = l0 cmp 31L
20210427node in :[]
普通复制语句1112:$b2 = l0 cmp 31L
[taint source] u:l0
SourceList:[]
[taint source] u:31L
SourceList:[]
[taint source] u:l0 cmp 31L
SourceList:[]
20210427node out :[]
20210427node :if $b2 > 0 goto $r1 = new java.lang.IllegalArgumentException
20210427node in :[]
20210427node out :[]
Have
Stmt if :if $b2 > 0 goto $r1 = new java.lang.IllegalArgumentExceptionStmt if value:$b2 > 0the value=$b2
the value=0
maintainValues.size0
ifValues1
20210427node :$b3 = l0 cmp 0L
20210427node in :[]
普通复制语句1112:$b3 = l0 cmp 0L
[taint source] u:l0
SourceList:[]
[taint source] u:0L
SourceList:[]
[taint source] u:l0 cmp 0L
SourceList:[]
20210427node out :[]
20210427node :if $b3 >= 0 goto $b4 = l1 cmp 31L
20210427node in :[]
20210427node out :[]
Have
Stmt if :if $b3 >= 0 goto $b4 = l1 cmp 31LStmt if value:$b3 >= 0the value=$b3
the value=0
maintainValues.size0
ifValues1
20210427node :$b4 = l1 cmp 31L
20210427node in :[]
普通复制语句1112:$b4 = l1 cmp 31L
[taint source] u:l1
SourceList:[]
[taint source] u:31L
SourceList:[]
[taint source] u:l1 cmp 31L
SourceList:[]
20210427node out :[]
20210427node :if $b4 > 0 goto $r2 = new java.lang.IllegalArgumentException
20210427node in :[]
20210427node out :[]
Have
Stmt if :if $b4 > 0 goto $r2 = new java.lang.IllegalArgumentExceptionStmt if value:$b4 > 0the value=$b4
the value=0
maintainValues.size0
ifValues1
20210427node :$b5 = l1 cmp 0L
20210427node in :[]
普通复制语句1112:$b5 = l1 cmp 0L
[taint source] u:l1
SourceList:[]
[taint source] u:0L
SourceList:[]
[taint source] u:l1 cmp 0L
SourceList:[]
20210427node out :[]
20210427node :if $b5 >= 0 goto <invoker.SnowFlake: long datacenterId> = 0L
20210427node in :[]
20210427node out :[]
Have
Stmt if :if $b5 >= 0 goto <invoker.SnowFlake: long datacenterId> = 0LStmt if value:$b5 >= 0the value=$b5
the value=0
maintainValues.size0
ifValues1
20210427node :<invoker.SnowFlake: long datacenterId> = 0L
20210427node in :[]
普通复制语句1112:<invoker.SnowFlake: long datacenterId> = 0L
[taint source] u:0L
SourceList:[]
20210427node out :[]
20210427node :<invoker.SnowFlake: long machineId> = 0L
20210427node in :[]
普通复制语句1112:<invoker.SnowFlake: long machineId> = 0L
[taint source] u:0L
SourceList:[]
20210427node out :[]
20210427node :return
20210427node in :[]
20210427node out :[]
20210427node :$r2 = new java.lang.IllegalArgumentException
20210427node in :[]
普通复制语句1112:$r2 = new java.lang.IllegalArgumentException
[taint source] u:new java.lang.IllegalArgumentException
SourceList:[]
20210427node out :[]
20210427node :specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("machineId can\'t be greater than MAX_MACHINE_NUM or less than 0")
20210427node in :[]
20210427node out :[]
[taint329]i invoke specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("machineId can\'t be greater than MAX_MACHINE_NUM or less than 0")
[taint328]i invoke <java.lang.IllegalArgumentException: void <init>(java.lang.String)>
[taint328]i invoke 1
value:"machineId can\'t be greater than MAX_MACHINE_NUM or less than 0"
isoutSetContains  false value:"machineId can\'t be greater than MAX_MACHINE_NUM or less than 0" index:0
20210427node :throw $r2
20210427node in :[]
20210427node out :[]
20210427node :$r1 = new java.lang.IllegalArgumentException
20210427node in :[]
普通复制语句1112:$r1 = new java.lang.IllegalArgumentException
[taint source] u:new java.lang.IllegalArgumentException
SourceList:[]
20210427node out :[]
20210427node :specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("datacenterId can\'t be greater than MAX_DATACENTER_NUM or less than 0")
20210427node in :[]
20210427node out :[]
[taint329]i invoke specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("datacenterId can\'t be greater than MAX_DATACENTER_NUM or less than 0")
[taint328]i invoke <java.lang.IllegalArgumentException: void <init>(java.lang.String)>
[taint328]i invoke 1
value:"datacenterId can\'t be greater than MAX_DATACENTER_NUM or less than 0"
isoutSetContains  false value:"datacenterId can\'t be greater than MAX_DATACENTER_NUM or less than 0" index:0
20210427node :throw $r1
20210427node in :[]
20210427node out :[]
analysis.outSet.size():0
[CFMAP]2021 After taintAnalysis:{cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}
The data isgggg 
<invoker.SnowFlake: void <init>(long,long)>
The data isgggg invoker.SnowFlake <init> [] {cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}  {cfhider.WordCount$IntSumReducer={reduce=[I@371766c3}, cfhider.WordCount$TokenizerMapper={map=[I@fbd1ebe}, cfhider.WordCount={main=[I@2ae6ba37}, invoker.SnowFlake={<init>=[I@1ef4f94d, getNextMill=[I@2ae83dd9, getNewstmp=[I@4bb03b0d}}
Coming...
doAnalysis Startingqqqqqqqq.....
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
[taint329]i invoke specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("datacenterId can\'t be greater than MAX_DATACENTER_NUM or less than 0")
[taint328]i invoke <java.lang.IllegalArgumentException: void <init>(java.lang.String)>
[taint328]i invoke 1
value:"datacenterId can\'t be greater than MAX_DATACENTER_NUM or less than 0"
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$r1 = new java.lang.IllegalArgumentException
currStmt left value20210420:$r1
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
[taint329]i invoke specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("machineId can\'t be greater than MAX_MACHINE_NUM or less than 0")
[taint328]i invoke <java.lang.IllegalArgumentException: void <init>(java.lang.String)>
[taint328]i invoke 1
value:"machineId can\'t be greater than MAX_MACHINE_NUM or less than 0"
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$r2 = new java.lang.IllegalArgumentException
currStmt left value20210420:$r2
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:<invoker.SnowFlake: long machineId> = 0L
currStmt left value20210420:<invoker.SnowFlake: long machineId>
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:<invoker.SnowFlake: long datacenterId> = 0L
currStmt left value20210420:<invoker.SnowFlake: long datacenterId>
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
Have
the value=$b5
the value=0
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$b5 = l1 cmp 0L
currStmt left value20210420:$b5
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
Have
the value=$b4
the value=0
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$b4 = l1 cmp 31L
currStmt left value20210420:$b4
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
Have
the value=$b3
the value=0
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$b3 = l0 cmp 0L
currStmt left value20210420:$b3
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
Have
the value=$b2
the value=0
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$b2 = l0 cmp 31L
currStmt left value20210420:$b2
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
[taint329]i invoke specialinvoke r0.<java.lang.Object: void <init>()>()
[taint328]i invoke <java.lang.Object: void <init>()>
[taint328]i invoke 0
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
doAnalysis endqqqqqqq.....
come here
[CFMAP]2021 After BackwardAnalysis:{cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}
[taint into] sootMethod: nextId
[]
class name :invoker.SnowFlake
method name :nextId
method list :[]
clasname=invoker.SnowFlake
methodname=nextId
sourcelist2021=[]
20210427node :l0 = staticinvoke <invoker.SnowFlake: long getNewstmp()>()
20210427node in :[]
调用语句赋值给变量:l0 = staticinvoke <invoker.SnowFlake: long getNewstmp()>()
Invokestmt:getNewstmp
20210427node out :[]
[taint328]a invoke <invoker.SnowFlake: long getNewstmp()>
[taint328]a invoke 0
[invokemap]invoke:getNewstmp  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
20210427node :$l1 = <invoker.SnowFlake: long lastStmp>
20210427node in :[]
普通复制语句1112:$l1 = <invoker.SnowFlake: long lastStmp>
[taint source] u:<invoker.SnowFlake: long lastStmp>
SourceList:[]
20210427node out :[]
20210427node :$b2 = l0 cmp $l1
20210427node in :[]
普通复制语句1112:$b2 = l0 cmp $l1
[taint source] u:l0
SourceList:[]
[taint source] u:$l1
SourceList:[]
[taint source] u:l0 cmp $l1
SourceList:[]
20210427node out :[]
20210427node :if $b2 >= 0 goto $l3 = <invoker.SnowFlake: long lastStmp>
20210427node in :[]
20210427node out :[]
Have
Stmt if :if $b2 >= 0 goto $l3 = <invoker.SnowFlake: long lastStmp>Stmt if value:$b2 >= 0the value=$b2
the value=0
maintainValues.size0
ifValues1
20210427node :$l3 = <invoker.SnowFlake: long lastStmp>
20210427node in :[]
普通复制语句1112:$l3 = <invoker.SnowFlake: long lastStmp>
[taint source] u:<invoker.SnowFlake: long lastStmp>
SourceList:[]
20210427node out :[]
20210427node :$b4 = l0 cmp $l3
20210427node in :[]
普通复制语句1112:$b4 = l0 cmp $l3
[taint source] u:l0
SourceList:[]
[taint source] u:$l3
SourceList:[]
[taint source] u:l0 cmp $l3
SourceList:[]
20210427node out :[]
20210427node :if $b4 != 0 goto <invoker.SnowFlake: long sequence> = 0L
20210427node in :[]
20210427node out :[]
Have
Stmt if :if $b4 != 0 goto <invoker.SnowFlake: long sequence> = 0LStmt if value:$b4 != 0the value=$b4
the value=0
maintainValues.size0
ifValues1
20210427node :<invoker.SnowFlake: long sequence> = 0L
20210427node in :[]
普通复制语句1112:<invoker.SnowFlake: long sequence> = 0L
[taint source] u:0L
SourceList:[]
20210427node out :[]
20210427node :$l5 = <invoker.SnowFlake: long sequence>
20210427node in :[]
普通复制语句1112:$l5 = <invoker.SnowFlake: long sequence>
[taint source] u:<invoker.SnowFlake: long sequence>
SourceList:[]
20210427node out :[]
20210427node :$l6 = $l5 + 1L
20210427node in :[]
普通复制语句1112:$l6 = $l5 + 1L
[taint source] u:$l5
SourceList:[]
[taint source] u:1L
SourceList:[]
[taint source] u:$l5 + 1L
SourceList:[]
20210427node out :[]
20210427node :$l7 = $l6 & 4095L
20210427node in :[]
普通复制语句1112:$l7 = $l6 & 4095L
[taint source] u:$l6
SourceList:[]
[taint source] u:4095L
SourceList:[]
[taint source] u:$l6 & 4095L
SourceList:[]
20210427node out :[]
20210427node :<invoker.SnowFlake: long sequence> = $l7
20210427node in :[]
普通复制语句1112:<invoker.SnowFlake: long sequence> = $l7
[taint source] u:$l7
SourceList:[]
20210427node out :[]
20210427node :$l8 = <invoker.SnowFlake: long sequence>
20210427node in :[]
普通复制语句1112:$l8 = <invoker.SnowFlake: long sequence>
[taint source] u:<invoker.SnowFlake: long sequence>
SourceList:[]
20210427node out :[]
20210427node :$b9 = $l8 cmp 0L
20210427node in :[]
普通复制语句1112:$b9 = $l8 cmp 0L
[taint source] u:$l8
SourceList:[]
[taint source] u:0L
SourceList:[]
[taint source] u:$l8 cmp 0L
SourceList:[]
20210427node out :[]
20210427node :if $b9 != 0 goto <invoker.SnowFlake: long lastStmp> = l0
20210427node in :[]
20210427node out :[]
Have
Stmt if :if $b9 != 0 goto <invoker.SnowFlake: long lastStmp> = l0Stmt if value:$b9 != 0the value=$b9
the value=0
maintainValues.size0
ifValues1
20210427node :l0 = staticinvoke <invoker.SnowFlake: long getNextMill()>()
20210427node in :[]
调用语句赋值给变量:l0 = staticinvoke <invoker.SnowFlake: long getNextMill()>()
Invokestmt:getNextMill
20210427node out :[]
[taint328]a invoke <invoker.SnowFlake: long getNextMill()>
[taint328]a invoke 0
[invokemap]invoke:getNextMill  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
20210427node :goto [?= <invoker.SnowFlake: long lastStmp> = l0]
20210427node in :[]
20210427node out :[]
20210427node :<invoker.SnowFlake: long lastStmp> = l0
20210427node in :[]
普通复制语句1112:<invoker.SnowFlake: long lastStmp> = l0
[taint source] u:l0
SourceList:[]
20210427node out :[]
20210427node :$l10 = l0 - 1480166465631L
20210427node in :[]
普通复制语句1112:$l10 = l0 - 1480166465631L
[taint source] u:l0
SourceList:[]
[taint source] u:1480166465631L
SourceList:[]
[taint source] u:l0 - 1480166465631L
SourceList:[]
20210427node out :[]
20210427node :$l11 = $l10 << 22
20210427node in :[]
普通复制语句1112:$l11 = $l10 << 22
[taint source] u:$l10
SourceList:[]
[taint source] u:22
SourceList:[]
[taint source] u:$l10 << 22
SourceList:[]
20210427node out :[]
20210427node :$l12 = <invoker.SnowFlake: long datacenterId>
20210427node in :[]
普通复制语句1112:$l12 = <invoker.SnowFlake: long datacenterId>
[taint source] u:<invoker.SnowFlake: long datacenterId>
SourceList:[]
20210427node out :[]
20210427node :$l13 = $l12 << 17
20210427node in :[]
普通复制语句1112:$l13 = $l12 << 17
[taint source] u:$l12
SourceList:[]
[taint source] u:17
SourceList:[]
[taint source] u:$l12 << 17
SourceList:[]
20210427node out :[]
20210427node :$l14 = $l11 | $l13
20210427node in :[]
普通复制语句1112:$l14 = $l11 | $l13
[taint source] u:$l11
SourceList:[]
[taint source] u:$l13
SourceList:[]
[taint source] u:$l11 | $l13
SourceList:[]
20210427node out :[]
20210427node :$l15 = <invoker.SnowFlake: long machineId>
20210427node in :[]
普通复制语句1112:$l15 = <invoker.SnowFlake: long machineId>
[taint source] u:<invoker.SnowFlake: long machineId>
SourceList:[]
20210427node out :[]
20210427node :$l16 = $l15 << 12
20210427node in :[]
普通复制语句1112:$l16 = $l15 << 12
[taint source] u:$l15
SourceList:[]
[taint source] u:12
SourceList:[]
[taint source] u:$l15 << 12
SourceList:[]
20210427node out :[]
20210427node :$l17 = $l14 | $l16
20210427node in :[]
普通复制语句1112:$l17 = $l14 | $l16
[taint source] u:$l14
SourceList:[]
[taint source] u:$l16
SourceList:[]
[taint source] u:$l14 | $l16
SourceList:[]
20210427node out :[]
20210427node :$l18 = <invoker.SnowFlake: long sequence>
20210427node in :[]
普通复制语句1112:$l18 = <invoker.SnowFlake: long sequence>
[taint source] u:<invoker.SnowFlake: long sequence>
SourceList:[]
20210427node out :[]
20210427node :$l19 = $l17 | $l18
20210427node in :[]
普通复制语句1112:$l19 = $l17 | $l18
[taint source] u:$l17
SourceList:[]
[taint source] u:$l18
SourceList:[]
[taint source] u:$l17 | $l18
SourceList:[]
20210427node out :[]
20210427node :return $l19
20210427node in :[]
20210427node out :[]
20210427node :$r0 = new java.lang.RuntimeException
20210427node in :[]
普通复制语句1112:$r0 = new java.lang.RuntimeException
[taint source] u:new java.lang.RuntimeException
SourceList:[]
20210427node out :[]
20210427node :specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Clock moved backwards.  Refusing to generate id")
20210427node in :[]
20210427node out :[]
[taint329]i invoke specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Clock moved backwards.  Refusing to generate id")
[taint328]i invoke <java.lang.RuntimeException: void <init>(java.lang.String)>
[taint328]i invoke 1
value:"Clock moved backwards.  Refusing to generate id"
isoutSetContains  false value:"Clock moved backwards.  Refusing to generate id" index:0
20210427node :throw $r0
20210427node in :[]
20210427node out :[]
analysis.outSet.size():0
[CFMAP]2021 After taintAnalysis:{cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}
The data isgggg 
<invoker.SnowFlake: long nextId()>
The data isgggg invoker.SnowFlake nextId [] {cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}  {cfhider.WordCount$IntSumReducer={reduce=[I@371766c3}, cfhider.WordCount$TokenizerMapper={map=[I@fbd1ebe}, cfhider.WordCount={main=[I@2ae6ba37}, invoker.SnowFlake={<init>=[I@1ef4f94d, getNextMill=[I@651b3e1b, getNewstmp=[I@5f8a9278}}
Coming...
doAnalysis Startingqqqqqqqq.....
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
[taint329]i invoke specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Clock moved backwards.  Refusing to generate id")
[taint328]i invoke <java.lang.RuntimeException: void <init>(java.lang.String)>
[taint328]i invoke 1
value:"Clock moved backwards.  Refusing to generate id"
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$r0 = new java.lang.RuntimeException
currStmt left value20210420:$r0
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$l19 = $l17 | $l18
currStmt left value20210420:$l19
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$l18 = <invoker.SnowFlake: long sequence>
currStmt left value20210420:$l18
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$l17 = $l14 | $l16
currStmt left value20210420:$l17
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$l16 = $l15 << 12
currStmt left value20210420:$l16
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$l15 = <invoker.SnowFlake: long machineId>
currStmt left value20210420:$l15
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$l14 = $l11 | $l13
currStmt left value20210420:$l14
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$l13 = $l12 << 17
currStmt left value20210420:$l13
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$l12 = <invoker.SnowFlake: long datacenterId>
currStmt left value20210420:$l12
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$l11 = $l10 << 22
currStmt left value20210420:$l11
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$l10 = l0 - 1480166465631L
currStmt left value20210420:$l10
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:<invoker.SnowFlake: long lastStmp> = l0
currStmt left value20210420:<invoker.SnowFlake: long lastStmp>
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:l0 = staticinvoke <invoker.SnowFlake: long getNextMill()>()
currStmt left value20210420:l0
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
Have
the value=$b9
the value=0
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$b9 = $l8 cmp 0L
currStmt left value20210420:$b9
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$l8 = <invoker.SnowFlake: long sequence>
currStmt left value20210420:$l8
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:<invoker.SnowFlake: long sequence> = $l7
currStmt left value20210420:<invoker.SnowFlake: long sequence>
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$l7 = $l6 & 4095L
currStmt left value20210420:$l7
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$l6 = $l5 + 1L
currStmt left value20210420:$l6
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$l5 = <invoker.SnowFlake: long sequence>
currStmt left value20210420:$l5
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:<invoker.SnowFlake: long sequence> = 0L
currStmt left value20210420:<invoker.SnowFlake: long sequence>
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
Have
the value=$b4
the value=0
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$b4 = l0 cmp $l3
currStmt left value20210420:$b4
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$l3 = <invoker.SnowFlake: long lastStmp>
currStmt left value20210420:$l3
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
Have
the value=$b2
the value=0
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$b2 = l0 cmp $l1
currStmt left value20210420:$b2
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$l1 = <invoker.SnowFlake: long lastStmp>
currStmt left value20210420:$l1
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:l0 = staticinvoke <invoker.SnowFlake: long getNewstmp()>()
currStmt left value20210420:l0
doAnalysis endqqqqqqq.....
come here
[CFMAP]2021 After BackwardAnalysis:{cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}
[taint into] sootMethod: getNextMill
[]
class name :invoker.SnowFlake
method name :getNextMill
method list :[]
clasname=invoker.SnowFlake
methodname=getNextMill
sourcelist2021=[]
20210427node :l0 = staticinvoke <invoker.SnowFlake: long getNewstmp()>()
20210427node in :[]
调用语句赋值给变量:l0 = staticinvoke <invoker.SnowFlake: long getNewstmp()>()
Invokestmt:getNewstmp
20210427node out :[]
[taint328]a invoke <invoker.SnowFlake: long getNewstmp()>
[taint328]a invoke 0
[invokemap]invoke:getNewstmp  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
20210427node :$l1 = <invoker.SnowFlake: long lastStmp>
20210427node in :[]
普通复制语句1112:$l1 = <invoker.SnowFlake: long lastStmp>
[taint source] u:<invoker.SnowFlake: long lastStmp>
SourceList:[]
20210427node out :[]
20210427node :$b2 = l0 cmp $l1
20210427node in :[]
普通复制语句1112:$b2 = l0 cmp $l1
[taint source] u:l0
SourceList:[]
[taint source] u:$l1
SourceList:[]
[taint source] u:l0 cmp $l1
SourceList:[]
20210427node out :[]
20210427node :if $b2 > 0 goto return l0
20210427node in :[]
20210427node out :[]
Have
Stmt if :if $b2 > 0 goto return l0Stmt if value:$b2 > 0the value=$b2
the value=0
maintainValues.size0
ifValues1
20210427node :return l0
20210427node in :[]
20210427node out :[]
20210427node :l0 = staticinvoke <invoker.SnowFlake: long getNewstmp()>()
20210427node in :[]
调用语句赋值给变量:l0 = staticinvoke <invoker.SnowFlake: long getNewstmp()>()
Invokestmt:getNewstmp
20210427node out :[]
[taint328]a invoke <invoker.SnowFlake: long getNewstmp()>
[taint328]a invoke 0
[invokemap]invoke:getNewstmp  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
20210427node :goto [?= $l1 = <invoker.SnowFlake: long lastStmp>]
20210427node in :[]
20210427node out :[]
analysis.outSet.size():0
[CFMAP]2021 After taintAnalysis:{cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}
The data isgggg 
<invoker.SnowFlake: long getNextMill()>
The data isgggg invoker.SnowFlake getNextMill [] {cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}  {cfhider.WordCount$IntSumReducer={reduce=[I@371766c3}, cfhider.WordCount$TokenizerMapper={map=[I@fbd1ebe}, cfhider.WordCount={main=[I@2ae6ba37}, invoker.SnowFlake={<init>=[I@1ef4f94d, getNextMill=[I@651b3e1b, getNewstmp=[I@2963549}}
Coming...
doAnalysis Startingqqqqqqqq.....
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:l0 = staticinvoke <invoker.SnowFlake: long getNewstmp()>()
currStmt left value20210420:l0
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
Have
the value=$b2
the value=0
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$b2 = l0 cmp $l1
currStmt left value20210420:$b2
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$l1 = <invoker.SnowFlake: long lastStmp>
currStmt left value20210420:$l1
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:l0 = staticinvoke <invoker.SnowFlake: long getNewstmp()>()
currStmt left value20210420:l0
doAnalysis endqqqqqqq.....
come here
[CFMAP]2021 After BackwardAnalysis:{cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}
[taint into] sootMethod: getNewstmp
[]
class name :invoker.SnowFlake
method name :getNewstmp
method list :[]
clasname=invoker.SnowFlake
methodname=getNewstmp
sourcelist2021=[]
20210427node :$l0 = staticinvoke <java.lang.System: long currentTimeMillis()>()
20210427node in :[]
调用语句赋值给变量:$l0 = staticinvoke <java.lang.System: long currentTimeMillis()>()
20210427node out :[]
[taint328]a invoke <java.lang.System: long currentTimeMillis()>
[taint328]a invoke 0
20210427node :return $l0
20210427node in :[]
20210427node out :[]
analysis.outSet.size():0
[CFMAP]2021 After taintAnalysis:{cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}
The data isgggg 
<invoker.SnowFlake: long getNewstmp()>
The data isgggg invoker.SnowFlake getNewstmp [] {cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}  {cfhider.WordCount$IntSumReducer={reduce=[I@371766c3}, cfhider.WordCount$TokenizerMapper={map=[I@fbd1ebe}, cfhider.WordCount={main=[I@2ae6ba37}, invoker.SnowFlake={<init>=[I@1ef4f94d, getNextMill=[I@651b3e1b, getNewstmp=[I@2963549}}
Coming...
doAnalysis Startingqqqqqqqq.....
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$l0 = staticinvoke <java.lang.System: long currentTimeMillis()>()
currStmt left value20210420:$l0
doAnalysis endqqqqqqq.....
come here
[CFMAP]2021 After BackwardAnalysis:{cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}
[taint into] sootMethod: <clinit>
[]
class name :invoker.SnowFlake
method name :<clinit>
method list :[]
clasname=invoker.SnowFlake
methodname=<clinit>
sourcelist2021=[]
20210427node :<invoker.SnowFlake: long sequence> = 0L
20210427node in :[]
普通复制语句1112:<invoker.SnowFlake: long sequence> = 0L
[taint source] u:0L
SourceList:[]
20210427node out :[]
20210427node :<invoker.SnowFlake: long lastStmp> = -1L
20210427node in :[]
普通复制语句1112:<invoker.SnowFlake: long lastStmp> = -1L
[taint source] u:-1L
SourceList:[]
20210427node out :[]
20210427node :return
20210427node in :[]
20210427node out :[]
analysis.outSet.size():0
[CFMAP]2021 After taintAnalysis:{cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}
The data isgggg 
<invoker.SnowFlake: void <clinit>()>
The data isgggg invoker.SnowFlake <clinit> [] {cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}  {cfhider.WordCount$IntSumReducer={reduce=[I@371766c3}, cfhider.WordCount$TokenizerMapper={map=[I@fbd1ebe}, cfhider.WordCount={main=[I@2ae6ba37}, invoker.SnowFlake={<init>=[I@1ef4f94d, getNextMill=[I@651b3e1b, getNewstmp=[I@2963549}}
Coming...
doAnalysis Startingqqqqqqqq.....
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:<invoker.SnowFlake: long lastStmp> = -1L
currStmt left value20210420:<invoker.SnowFlake: long lastStmp>
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:<invoker.SnowFlake: long sequence> = 0L
currStmt left value20210420:<invoker.SnowFlake: long sequence>
doAnalysis endqqqqqqq.....
come here
[CFMAP]2021 After BackwardAnalysis:{cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}
[taint into] sootMethod: <init>
[]
class name :invoker.SnowFlake
method name :<init>
method list :[]
clasname=invoker.SnowFlake
methodname=<init>
sourcelist2021=[]
20210427node :r0 := @this: invoker.SnowFlake
20210427node in :[]
20210427node out :[]
currStmt20210423:r0 := @this: invoker.SnowFlake
20210427node :l0 := @parameter0: long
20210427node in :[]
[idStmt]iiiiiii l0 := @parameter0: long  index:0
ClassName:invoker.SnowFlake
MethodName:<init>
aaaa:0
20210427node out :[]
currStmt20210423:l0 := @parameter0: long
20210427node :l1 := @parameter1: long
20210427node in :[]
[idStmt]iiiiiii l1 := @parameter1: long  index:1
ClassName:invoker.SnowFlake
MethodName:<init>
aaaa:0
20210427node out :[]
currStmt20210423:l1 := @parameter1: long
20210427node :specialinvoke r0.<java.lang.Object: void <init>()>()
20210427node in :[]
20210427node out :[]
[taint329]i invoke specialinvoke r0.<java.lang.Object: void <init>()>()
[taint328]i invoke <java.lang.Object: void <init>()>
[taint328]i invoke 0
20210427node :$b2 = l0 cmp 31L
20210427node in :[]
普通复制语句1112:$b2 = l0 cmp 31L
[taint source] u:l0
SourceList:[]
[taint source] u:31L
SourceList:[]
[taint source] u:l0 cmp 31L
SourceList:[]
20210427node out :[]
20210427node :if $b2 > 0 goto $r1 = new java.lang.IllegalArgumentException
20210427node in :[]
20210427node out :[]
Have
Stmt if :if $b2 > 0 goto $r1 = new java.lang.IllegalArgumentExceptionStmt if value:$b2 > 0the value=$b2
the value=0
maintainValues.size0
ifValues1
20210427node :$b3 = l0 cmp 0L
20210427node in :[]
普通复制语句1112:$b3 = l0 cmp 0L
[taint source] u:l0
SourceList:[]
[taint source] u:0L
SourceList:[]
[taint source] u:l0 cmp 0L
SourceList:[]
20210427node out :[]
20210427node :if $b3 >= 0 goto $b4 = l1 cmp 31L
20210427node in :[]
20210427node out :[]
Have
Stmt if :if $b3 >= 0 goto $b4 = l1 cmp 31LStmt if value:$b3 >= 0the value=$b3
the value=0
maintainValues.size0
ifValues1
20210427node :$b4 = l1 cmp 31L
20210427node in :[]
普通复制语句1112:$b4 = l1 cmp 31L
[taint source] u:l1
SourceList:[]
[taint source] u:31L
SourceList:[]
[taint source] u:l1 cmp 31L
SourceList:[]
20210427node out :[]
20210427node :if $b4 > 0 goto $r2 = new java.lang.IllegalArgumentException
20210427node in :[]
20210427node out :[]
Have
Stmt if :if $b4 > 0 goto $r2 = new java.lang.IllegalArgumentExceptionStmt if value:$b4 > 0the value=$b4
the value=0
maintainValues.size0
ifValues1
20210427node :$b5 = l1 cmp 0L
20210427node in :[]
普通复制语句1112:$b5 = l1 cmp 0L
[taint source] u:l1
SourceList:[]
[taint source] u:0L
SourceList:[]
[taint source] u:l1 cmp 0L
SourceList:[]
20210427node out :[]
20210427node :if $b5 >= 0 goto <invoker.SnowFlake: long datacenterId> = 0L
20210427node in :[]
20210427node out :[]
Have
Stmt if :if $b5 >= 0 goto <invoker.SnowFlake: long datacenterId> = 0LStmt if value:$b5 >= 0the value=$b5
the value=0
maintainValues.size0
ifValues1
20210427node :<invoker.SnowFlake: long datacenterId> = 0L
20210427node in :[]
普通复制语句1112:<invoker.SnowFlake: long datacenterId> = 0L
[taint source] u:0L
SourceList:[]
20210427node out :[]
20210427node :<invoker.SnowFlake: long machineId> = 0L
20210427node in :[]
普通复制语句1112:<invoker.SnowFlake: long machineId> = 0L
[taint source] u:0L
SourceList:[]
20210427node out :[]
20210427node :return
20210427node in :[]
20210427node out :[]
20210427node :$r2 = new java.lang.IllegalArgumentException
20210427node in :[]
普通复制语句1112:$r2 = new java.lang.IllegalArgumentException
[taint source] u:new java.lang.IllegalArgumentException
SourceList:[]
20210427node out :[]
20210427node :specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("machineId can\'t be greater than MAX_MACHINE_NUM or less than 0")
20210427node in :[]
20210427node out :[]
[taint329]i invoke specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("machineId can\'t be greater than MAX_MACHINE_NUM or less than 0")
[taint328]i invoke <java.lang.IllegalArgumentException: void <init>(java.lang.String)>
[taint328]i invoke 1
value:"machineId can\'t be greater than MAX_MACHINE_NUM or less than 0"
isoutSetContains  false value:"machineId can\'t be greater than MAX_MACHINE_NUM or less than 0" index:0
20210427node :throw $r2
20210427node in :[]
20210427node out :[]
20210427node :$r1 = new java.lang.IllegalArgumentException
20210427node in :[]
普通复制语句1112:$r1 = new java.lang.IllegalArgumentException
[taint source] u:new java.lang.IllegalArgumentException
SourceList:[]
20210427node out :[]
20210427node :specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("datacenterId can\'t be greater than MAX_DATACENTER_NUM or less than 0")
20210427node in :[]
20210427node out :[]
[taint329]i invoke specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("datacenterId can\'t be greater than MAX_DATACENTER_NUM or less than 0")
[taint328]i invoke <java.lang.IllegalArgumentException: void <init>(java.lang.String)>
[taint328]i invoke 1
value:"datacenterId can\'t be greater than MAX_DATACENTER_NUM or less than 0"
isoutSetContains  false value:"datacenterId can\'t be greater than MAX_DATACENTER_NUM or less than 0" index:0
20210427node :throw $r1
20210427node in :[]
20210427node out :[]
analysis.outSet.size():0
[CFMAP]2021 After taintAnalysis:{cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}
The data isgggg 
<invoker.SnowFlake: void <init>(long,long)>
The data isgggg invoker.SnowFlake <init> [] {cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}  {cfhider.WordCount$IntSumReducer={reduce=[I@371766c3}, cfhider.WordCount$TokenizerMapper={map=[I@fbd1ebe}, cfhider.WordCount={main=[I@2ae6ba37}, invoker.SnowFlake={<init>=[I@53844cf2, getNextMill=[I@651b3e1b, getNewstmp=[I@2963549}}
Coming...
doAnalysis Startingqqqqqqqq.....
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
[taint329]i invoke specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("datacenterId can\'t be greater than MAX_DATACENTER_NUM or less than 0")
[taint328]i invoke <java.lang.IllegalArgumentException: void <init>(java.lang.String)>
[taint328]i invoke 1
value:"datacenterId can\'t be greater than MAX_DATACENTER_NUM or less than 0"
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$r1 = new java.lang.IllegalArgumentException
currStmt left value20210420:$r1
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
[taint329]i invoke specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("machineId can\'t be greater than MAX_MACHINE_NUM or less than 0")
[taint328]i invoke <java.lang.IllegalArgumentException: void <init>(java.lang.String)>
[taint328]i invoke 1
value:"machineId can\'t be greater than MAX_MACHINE_NUM or less than 0"
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$r2 = new java.lang.IllegalArgumentException
currStmt left value20210420:$r2
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:<invoker.SnowFlake: long machineId> = 0L
currStmt left value20210420:<invoker.SnowFlake: long machineId>
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:<invoker.SnowFlake: long datacenterId> = 0L
currStmt left value20210420:<invoker.SnowFlake: long datacenterId>
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
Have
the value=$b5
the value=0
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$b5 = l1 cmp 0L
currStmt left value20210420:$b5
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
Have
the value=$b4
the value=0
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$b4 = l1 cmp 31L
currStmt left value20210420:$b4
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
Have
the value=$b3
the value=0
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$b3 = l0 cmp 0L
currStmt left value20210420:$b3
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
Have
the value=$b2
the value=0
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$b2 = l0 cmp 31L
currStmt left value20210420:$b2
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
[taint329]i invoke specialinvoke r0.<java.lang.Object: void <init>()>()
[taint328]i invoke <java.lang.Object: void <init>()>
[taint328]i invoke 0
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
doAnalysis endqqqqqqq.....
come here
[CFMAP]2021 After BackwardAnalysis:{cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}
[taint into] sootMethod: nextId
[]
class name :invoker.SnowFlake
method name :nextId
method list :[]
clasname=invoker.SnowFlake
methodname=nextId
sourcelist2021=[]
20210427node :l0 = staticinvoke <invoker.SnowFlake: long getNewstmp()>()
20210427node in :[]
调用语句赋值给变量:l0 = staticinvoke <invoker.SnowFlake: long getNewstmp()>()
Invokestmt:getNewstmp
20210427node out :[]
[taint328]a invoke <invoker.SnowFlake: long getNewstmp()>
[taint328]a invoke 0
[invokemap]invoke:getNewstmp  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
20210427node :$l1 = <invoker.SnowFlake: long lastStmp>
20210427node in :[]
普通复制语句1112:$l1 = <invoker.SnowFlake: long lastStmp>
[taint source] u:<invoker.SnowFlake: long lastStmp>
SourceList:[]
20210427node out :[]
20210427node :$b2 = l0 cmp $l1
20210427node in :[]
普通复制语句1112:$b2 = l0 cmp $l1
[taint source] u:l0
SourceList:[]
[taint source] u:$l1
SourceList:[]
[taint source] u:l0 cmp $l1
SourceList:[]
20210427node out :[]
20210427node :if $b2 >= 0 goto $l3 = <invoker.SnowFlake: long lastStmp>
20210427node in :[]
20210427node out :[]
Have
Stmt if :if $b2 >= 0 goto $l3 = <invoker.SnowFlake: long lastStmp>Stmt if value:$b2 >= 0the value=$b2
the value=0
maintainValues.size0
ifValues1
20210427node :$l3 = <invoker.SnowFlake: long lastStmp>
20210427node in :[]
普通复制语句1112:$l3 = <invoker.SnowFlake: long lastStmp>
[taint source] u:<invoker.SnowFlake: long lastStmp>
SourceList:[]
20210427node out :[]
20210427node :$b4 = l0 cmp $l3
20210427node in :[]
普通复制语句1112:$b4 = l0 cmp $l3
[taint source] u:l0
SourceList:[]
[taint source] u:$l3
SourceList:[]
[taint source] u:l0 cmp $l3
SourceList:[]
20210427node out :[]
20210427node :if $b4 != 0 goto <invoker.SnowFlake: long sequence> = 0L
20210427node in :[]
20210427node out :[]
Have
Stmt if :if $b4 != 0 goto <invoker.SnowFlake: long sequence> = 0LStmt if value:$b4 != 0the value=$b4
the value=0
maintainValues.size0
ifValues1
20210427node :<invoker.SnowFlake: long sequence> = 0L
20210427node in :[]
普通复制语句1112:<invoker.SnowFlake: long sequence> = 0L
[taint source] u:0L
SourceList:[]
20210427node out :[]
20210427node :$l5 = <invoker.SnowFlake: long sequence>
20210427node in :[]
普通复制语句1112:$l5 = <invoker.SnowFlake: long sequence>
[taint source] u:<invoker.SnowFlake: long sequence>
SourceList:[]
20210427node out :[]
20210427node :$l6 = $l5 + 1L
20210427node in :[]
普通复制语句1112:$l6 = $l5 + 1L
[taint source] u:$l5
SourceList:[]
[taint source] u:1L
SourceList:[]
[taint source] u:$l5 + 1L
SourceList:[]
20210427node out :[]
20210427node :$l7 = $l6 & 4095L
20210427node in :[]
普通复制语句1112:$l7 = $l6 & 4095L
[taint source] u:$l6
SourceList:[]
[taint source] u:4095L
SourceList:[]
[taint source] u:$l6 & 4095L
SourceList:[]
20210427node out :[]
20210427node :<invoker.SnowFlake: long sequence> = $l7
20210427node in :[]
普通复制语句1112:<invoker.SnowFlake: long sequence> = $l7
[taint source] u:$l7
SourceList:[]
20210427node out :[]
20210427node :$l8 = <invoker.SnowFlake: long sequence>
20210427node in :[]
普通复制语句1112:$l8 = <invoker.SnowFlake: long sequence>
[taint source] u:<invoker.SnowFlake: long sequence>
SourceList:[]
20210427node out :[]
20210427node :$b9 = $l8 cmp 0L
20210427node in :[]
普通复制语句1112:$b9 = $l8 cmp 0L
[taint source] u:$l8
SourceList:[]
[taint source] u:0L
SourceList:[]
[taint source] u:$l8 cmp 0L
SourceList:[]
20210427node out :[]
20210427node :if $b9 != 0 goto <invoker.SnowFlake: long lastStmp> = l0
20210427node in :[]
20210427node out :[]
Have
Stmt if :if $b9 != 0 goto <invoker.SnowFlake: long lastStmp> = l0Stmt if value:$b9 != 0the value=$b9
the value=0
maintainValues.size0
ifValues1
20210427node :l0 = staticinvoke <invoker.SnowFlake: long getNextMill()>()
20210427node in :[]
调用语句赋值给变量:l0 = staticinvoke <invoker.SnowFlake: long getNextMill()>()
Invokestmt:getNextMill
20210427node out :[]
[taint328]a invoke <invoker.SnowFlake: long getNextMill()>
[taint328]a invoke 0
[invokemap]invoke:getNextMill  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
20210427node :goto [?= <invoker.SnowFlake: long lastStmp> = l0]
20210427node in :[]
20210427node out :[]
20210427node :<invoker.SnowFlake: long lastStmp> = l0
20210427node in :[]
普通复制语句1112:<invoker.SnowFlake: long lastStmp> = l0
[taint source] u:l0
SourceList:[]
20210427node out :[]
20210427node :$l10 = l0 - 1480166465631L
20210427node in :[]
普通复制语句1112:$l10 = l0 - 1480166465631L
[taint source] u:l0
SourceList:[]
[taint source] u:1480166465631L
SourceList:[]
[taint source] u:l0 - 1480166465631L
SourceList:[]
20210427node out :[]
20210427node :$l11 = $l10 << 22
20210427node in :[]
普通复制语句1112:$l11 = $l10 << 22
[taint source] u:$l10
SourceList:[]
[taint source] u:22
SourceList:[]
[taint source] u:$l10 << 22
SourceList:[]
20210427node out :[]
20210427node :$l12 = <invoker.SnowFlake: long datacenterId>
20210427node in :[]
普通复制语句1112:$l12 = <invoker.SnowFlake: long datacenterId>
[taint source] u:<invoker.SnowFlake: long datacenterId>
SourceList:[]
20210427node out :[]
20210427node :$l13 = $l12 << 17
20210427node in :[]
普通复制语句1112:$l13 = $l12 << 17
[taint source] u:$l12
SourceList:[]
[taint source] u:17
SourceList:[]
[taint source] u:$l12 << 17
SourceList:[]
20210427node out :[]
20210427node :$l14 = $l11 | $l13
20210427node in :[]
普通复制语句1112:$l14 = $l11 | $l13
[taint source] u:$l11
SourceList:[]
[taint source] u:$l13
SourceList:[]
[taint source] u:$l11 | $l13
SourceList:[]
20210427node out :[]
20210427node :$l15 = <invoker.SnowFlake: long machineId>
20210427node in :[]
普通复制语句1112:$l15 = <invoker.SnowFlake: long machineId>
[taint source] u:<invoker.SnowFlake: long machineId>
SourceList:[]
20210427node out :[]
20210427node :$l16 = $l15 << 12
20210427node in :[]
普通复制语句1112:$l16 = $l15 << 12
[taint source] u:$l15
SourceList:[]
[taint source] u:12
SourceList:[]
[taint source] u:$l15 << 12
SourceList:[]
20210427node out :[]
20210427node :$l17 = $l14 | $l16
20210427node in :[]
普通复制语句1112:$l17 = $l14 | $l16
[taint source] u:$l14
SourceList:[]
[taint source] u:$l16
SourceList:[]
[taint source] u:$l14 | $l16
SourceList:[]
20210427node out :[]
20210427node :$l18 = <invoker.SnowFlake: long sequence>
20210427node in :[]
普通复制语句1112:$l18 = <invoker.SnowFlake: long sequence>
[taint source] u:<invoker.SnowFlake: long sequence>
SourceList:[]
20210427node out :[]
20210427node :$l19 = $l17 | $l18
20210427node in :[]
普通复制语句1112:$l19 = $l17 | $l18
[taint source] u:$l17
SourceList:[]
[taint source] u:$l18
SourceList:[]
[taint source] u:$l17 | $l18
SourceList:[]
20210427node out :[]
20210427node :return $l19
20210427node in :[]
20210427node out :[]
20210427node :$r0 = new java.lang.RuntimeException
20210427node in :[]
普通复制语句1112:$r0 = new java.lang.RuntimeException
[taint source] u:new java.lang.RuntimeException
SourceList:[]
20210427node out :[]
20210427node :specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Clock moved backwards.  Refusing to generate id")
20210427node in :[]
20210427node out :[]
[taint329]i invoke specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Clock moved backwards.  Refusing to generate id")
[taint328]i invoke <java.lang.RuntimeException: void <init>(java.lang.String)>
[taint328]i invoke 1
value:"Clock moved backwards.  Refusing to generate id"
isoutSetContains  false value:"Clock moved backwards.  Refusing to generate id" index:0
20210427node :throw $r0
20210427node in :[]
20210427node out :[]
analysis.outSet.size():0
[CFMAP]2021 After taintAnalysis:{cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}
The data isgggg 
<invoker.SnowFlake: long nextId()>
The data isgggg invoker.SnowFlake nextId [] {cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}  {cfhider.WordCount$IntSumReducer={reduce=[I@371766c3}, cfhider.WordCount$TokenizerMapper={map=[I@fbd1ebe}, cfhider.WordCount={main=[I@2ae6ba37}, invoker.SnowFlake={<init>=[I@53844cf2, getNextMill=[I@12d7ceb4, getNewstmp=[I@16439516}}
Coming...
doAnalysis Startingqqqqqqqq.....
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
[taint329]i invoke specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Clock moved backwards.  Refusing to generate id")
[taint328]i invoke <java.lang.RuntimeException: void <init>(java.lang.String)>
[taint328]i invoke 1
value:"Clock moved backwards.  Refusing to generate id"
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$r0 = new java.lang.RuntimeException
currStmt left value20210420:$r0
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$l19 = $l17 | $l18
currStmt left value20210420:$l19
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$l18 = <invoker.SnowFlake: long sequence>
currStmt left value20210420:$l18
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$l17 = $l14 | $l16
currStmt left value20210420:$l17
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$l16 = $l15 << 12
currStmt left value20210420:$l16
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$l15 = <invoker.SnowFlake: long machineId>
currStmt left value20210420:$l15
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$l14 = $l11 | $l13
currStmt left value20210420:$l14
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$l13 = $l12 << 17
currStmt left value20210420:$l13
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$l12 = <invoker.SnowFlake: long datacenterId>
currStmt left value20210420:$l12
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$l11 = $l10 << 22
currStmt left value20210420:$l11
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$l10 = l0 - 1480166465631L
currStmt left value20210420:$l10
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:<invoker.SnowFlake: long lastStmp> = l0
currStmt left value20210420:<invoker.SnowFlake: long lastStmp>
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:l0 = staticinvoke <invoker.SnowFlake: long getNextMill()>()
currStmt left value20210420:l0
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
Have
the value=$b9
the value=0
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$b9 = $l8 cmp 0L
currStmt left value20210420:$b9
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$l8 = <invoker.SnowFlake: long sequence>
currStmt left value20210420:$l8
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:<invoker.SnowFlake: long sequence> = $l7
currStmt left value20210420:<invoker.SnowFlake: long sequence>
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$l7 = $l6 & 4095L
currStmt left value20210420:$l7
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$l6 = $l5 + 1L
currStmt left value20210420:$l6
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$l5 = <invoker.SnowFlake: long sequence>
currStmt left value20210420:$l5
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:<invoker.SnowFlake: long sequence> = 0L
currStmt left value20210420:<invoker.SnowFlake: long sequence>
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
Have
the value=$b4
the value=0
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$b4 = l0 cmp $l3
currStmt left value20210420:$b4
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$l3 = <invoker.SnowFlake: long lastStmp>
currStmt left value20210420:$l3
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
Have
the value=$b2
the value=0
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$b2 = l0 cmp $l1
currStmt left value20210420:$b2
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$l1 = <invoker.SnowFlake: long lastStmp>
currStmt left value20210420:$l1
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:l0 = staticinvoke <invoker.SnowFlake: long getNewstmp()>()
currStmt left value20210420:l0
doAnalysis endqqqqqqq.....
come here
[CFMAP]2021 After BackwardAnalysis:{cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}
[taint into] sootMethod: getNextMill
[]
class name :invoker.SnowFlake
method name :getNextMill
method list :[]
clasname=invoker.SnowFlake
methodname=getNextMill
sourcelist2021=[]
20210427node :l0 = staticinvoke <invoker.SnowFlake: long getNewstmp()>()
20210427node in :[]
调用语句赋值给变量:l0 = staticinvoke <invoker.SnowFlake: long getNewstmp()>()
Invokestmt:getNewstmp
20210427node out :[]
[taint328]a invoke <invoker.SnowFlake: long getNewstmp()>
[taint328]a invoke 0
[invokemap]invoke:getNewstmp  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
20210427node :$l1 = <invoker.SnowFlake: long lastStmp>
20210427node in :[]
普通复制语句1112:$l1 = <invoker.SnowFlake: long lastStmp>
[taint source] u:<invoker.SnowFlake: long lastStmp>
SourceList:[]
20210427node out :[]
20210427node :$b2 = l0 cmp $l1
20210427node in :[]
普通复制语句1112:$b2 = l0 cmp $l1
[taint source] u:l0
SourceList:[]
[taint source] u:$l1
SourceList:[]
[taint source] u:l0 cmp $l1
SourceList:[]
20210427node out :[]
20210427node :if $b2 > 0 goto return l0
20210427node in :[]
20210427node out :[]
Have
Stmt if :if $b2 > 0 goto return l0Stmt if value:$b2 > 0the value=$b2
the value=0
maintainValues.size0
ifValues1
20210427node :return l0
20210427node in :[]
20210427node out :[]
20210427node :l0 = staticinvoke <invoker.SnowFlake: long getNewstmp()>()
20210427node in :[]
调用语句赋值给变量:l0 = staticinvoke <invoker.SnowFlake: long getNewstmp()>()
Invokestmt:getNewstmp
20210427node out :[]
[taint328]a invoke <invoker.SnowFlake: long getNewstmp()>
[taint328]a invoke 0
[invokemap]invoke:getNewstmp  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
20210427node :goto [?= $l1 = <invoker.SnowFlake: long lastStmp>]
20210427node in :[]
20210427node out :[]
analysis.outSet.size():0
[CFMAP]2021 After taintAnalysis:{cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}
The data isgggg 
<invoker.SnowFlake: long getNextMill()>
The data isgggg invoker.SnowFlake getNextMill [] {cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}  {cfhider.WordCount$IntSumReducer={reduce=[I@371766c3}, cfhider.WordCount$TokenizerMapper={map=[I@fbd1ebe}, cfhider.WordCount={main=[I@2ae6ba37}, invoker.SnowFlake={<init>=[I@53844cf2, getNextMill=[I@12d7ceb4, getNewstmp=[I@2ef0e2c5}}
Coming...
doAnalysis Startingqqqqqqqq.....
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:l0 = staticinvoke <invoker.SnowFlake: long getNewstmp()>()
currStmt left value20210420:l0
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
Have
the value=$b2
the value=0
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$b2 = l0 cmp $l1
currStmt left value20210420:$b2
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$l1 = <invoker.SnowFlake: long lastStmp>
currStmt left value20210420:$l1
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:l0 = staticinvoke <invoker.SnowFlake: long getNewstmp()>()
currStmt left value20210420:l0
doAnalysis endqqqqqqq.....
come here
[CFMAP]2021 After BackwardAnalysis:{cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}
[taint into] sootMethod: getNewstmp
[]
class name :invoker.SnowFlake
method name :getNewstmp
method list :[]
clasname=invoker.SnowFlake
methodname=getNewstmp
sourcelist2021=[]
20210427node :$l0 = staticinvoke <java.lang.System: long currentTimeMillis()>()
20210427node in :[]
调用语句赋值给变量:$l0 = staticinvoke <java.lang.System: long currentTimeMillis()>()
20210427node out :[]
[taint328]a invoke <java.lang.System: long currentTimeMillis()>
[taint328]a invoke 0
20210427node :return $l0
20210427node in :[]
20210427node out :[]
analysis.outSet.size():0
[CFMAP]2021 After taintAnalysis:{cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}
The data isgggg 
<invoker.SnowFlake: long getNewstmp()>
The data isgggg invoker.SnowFlake getNewstmp [] {cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}  {cfhider.WordCount$IntSumReducer={reduce=[I@371766c3}, cfhider.WordCount$TokenizerMapper={map=[I@fbd1ebe}, cfhider.WordCount={main=[I@2ae6ba37}, invoker.SnowFlake={<init>=[I@53844cf2, getNextMill=[I@12d7ceb4, getNewstmp=[I@2ef0e2c5}}
Coming...
doAnalysis Startingqqqqqqqq.....
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$l0 = staticinvoke <java.lang.System: long currentTimeMillis()>()
currStmt left value20210420:$l0
doAnalysis endqqqqqqq.....
come here
[CFMAP]2021 After BackwardAnalysis:{cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}
[taint into] sootMethod: <clinit>
[]
class name :invoker.SnowFlake
method name :<clinit>
method list :[]
clasname=invoker.SnowFlake
methodname=<clinit>
sourcelist2021=[]
20210427node :<invoker.SnowFlake: long sequence> = 0L
20210427node in :[]
普通复制语句1112:<invoker.SnowFlake: long sequence> = 0L
[taint source] u:0L
SourceList:[]
20210427node out :[]
20210427node :<invoker.SnowFlake: long lastStmp> = -1L
20210427node in :[]
普通复制语句1112:<invoker.SnowFlake: long lastStmp> = -1L
[taint source] u:-1L
SourceList:[]
20210427node out :[]
20210427node :return
20210427node in :[]
20210427node out :[]
analysis.outSet.size():0
[CFMAP]2021 After taintAnalysis:{cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}
The data isgggg 
<invoker.SnowFlake: void <clinit>()>
The data isgggg invoker.SnowFlake <clinit> [] {cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}  {cfhider.WordCount$IntSumReducer={reduce=[I@371766c3}, cfhider.WordCount$TokenizerMapper={map=[I@fbd1ebe}, cfhider.WordCount={main=[I@2ae6ba37}, invoker.SnowFlake={<init>=[I@53844cf2, getNextMill=[I@12d7ceb4, getNewstmp=[I@2ef0e2c5}}
Coming...
doAnalysis Startingqqqqqqqq.....
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:<invoker.SnowFlake: long lastStmp> = -1L
currStmt left value20210420:<invoker.SnowFlake: long lastStmp>
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:<invoker.SnowFlake: long sequence> = 0L
currStmt left value20210420:<invoker.SnowFlake: long sequence>
doAnalysis endqqqqqqq.....
come here
[CFMAP]2021 After BackwardAnalysis:{cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}
[taint]SooClass:invoker.sgx_invoker
[taint]SooClass:cfhider.WordCount$IntSumReducer
[taint] class: cfhider.WordCount$IntSumReducer
methList :{<init>=[], reduce=[]}
[taint into] sootMethod: <init>
[]
class name :cfhider.WordCount$IntSumReducer
method name :<init>
method list :[]
clasname=cfhider.WordCount$IntSumReducer
methodname=<init>
sourcelist2021=[]
20210427node :r0 := @this: cfhider.WordCount$IntSumReducer
20210427node in :[]
20210427node out :[]
currStmt20210423:r0 := @this: cfhider.WordCount$IntSumReducer
20210427node :specialinvoke r0.<org.apache.hadoop.mapreduce.Reducer: void <init>()>()
20210427node in :[]
20210427node out :[]
[taint329]i invoke specialinvoke r0.<org.apache.hadoop.mapreduce.Reducer: void <init>()>()
[taint328]i invoke <org.apache.hadoop.mapreduce.Reducer: void <init>()>
[taint328]i invoke 0
20210427node :$r1 = new org.apache.hadoop.io.IntWritable
20210427node in :[]
普通复制语句1112:$r1 = new org.apache.hadoop.io.IntWritable
[taint source] u:new org.apache.hadoop.io.IntWritable
SourceList:[]
20210427node out :[]
20210427node :specialinvoke $r1.<org.apache.hadoop.io.IntWritable: void <init>()>()
20210427node in :[]
20210427node out :[]
[taint329]i invoke specialinvoke $r1.<org.apache.hadoop.io.IntWritable: void <init>()>()
[taint328]i invoke <org.apache.hadoop.io.IntWritable: void <init>()>
[taint328]i invoke 0
20210427node :r0.<cfhider.WordCount$IntSumReducer: org.apache.hadoop.io.IntWritable result> = $r1
20210427node in :[]
普通复制语句1112:r0.<cfhider.WordCount$IntSumReducer: org.apache.hadoop.io.IntWritable result> = $r1
[taint source] u:r0
SourceList:[]
[taint source] u:$r1
SourceList:[]
20210427node out :[]
20210427node :return
20210427node in :[]
20210427node out :[]
analysis.outSet.size():0
[CFMAP]2021 After taintAnalysis:{cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}
The data isgggg 
<cfhider.WordCount$IntSumReducer: void <init>()>
The data isgggg cfhider.WordCount$IntSumReducer <init> [] {cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}  {cfhider.WordCount$IntSumReducer={reduce=[I@371766c3}, cfhider.WordCount$TokenizerMapper={map=[I@fbd1ebe}, cfhider.WordCount={main=[I@2ae6ba37}, invoker.SnowFlake={<init>=[I@53844cf2, getNextMill=[I@12d7ceb4, getNewstmp=[I@2ef0e2c5}}
Coming...
doAnalysis Startingqqqqqqqq.....
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:r0.<cfhider.WordCount$IntSumReducer: org.apache.hadoop.io.IntWritable result> = $r1
currStmt left value20210420:r0.<cfhider.WordCount$IntSumReducer: org.apache.hadoop.io.IntWritable result>
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
[taint329]i invoke specialinvoke $r1.<org.apache.hadoop.io.IntWritable: void <init>()>()
[taint328]i invoke <org.apache.hadoop.io.IntWritable: void <init>()>
[taint328]i invoke 0
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$r1 = new org.apache.hadoop.io.IntWritable
currStmt left value20210420:$r1
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
[taint329]i invoke specialinvoke r0.<org.apache.hadoop.mapreduce.Reducer: void <init>()>()
[taint328]i invoke <org.apache.hadoop.mapreduce.Reducer: void <init>()>
[taint328]i invoke 0
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
doAnalysis endqqqqqqq.....
come here
[CFMAP]2021 After BackwardAnalysis:{cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}
[taint into] sootMethod: reduce
[]
class name :cfhider.WordCount$IntSumReducer
method name :reduce
method list :[]
clasname=cfhider.WordCount$IntSumReducer
methodname=reduce
sourcelist2021=[]
20210427node :r0 := @this: cfhider.WordCount$IntSumReducer
20210427node in :[]
20210427node out :[]
currStmt20210423:r0 := @this: cfhider.WordCount$IntSumReducer
20210427node :r1 := @parameter0: org.apache.hadoop.io.Text
20210427node in :[]
[idStmt]iiiiiii r1 := @parameter0: org.apache.hadoop.io.Text  index:0
ClassName:cfhider.WordCount$IntSumReducer
MethodName:reduce
aaaa:0
20210427node out :[]
currStmt20210423:r1 := @parameter0: org.apache.hadoop.io.Text
20210427node :r2 := @parameter1: java.lang.Iterable
20210427node in :[]
[idStmt]iiiiiii r2 := @parameter1: java.lang.Iterable  index:1
ClassName:cfhider.WordCount$IntSumReducer
MethodName:reduce
aaaa:0
20210427node out :[]
currStmt20210423:r2 := @parameter1: java.lang.Iterable
20210427node :r3 := @parameter2: org.apache.hadoop.mapreduce.Reducer$Context
20210427node in :[]
[idStmt]iiiiiii r3 := @parameter2: org.apache.hadoop.mapreduce.Reducer$Context  index:2
ClassName:cfhider.WordCount$IntSumReducer
MethodName:reduce
aaaa:0
20210427node out :[]
currStmt20210423:r3 := @parameter2: org.apache.hadoop.mapreduce.Reducer$Context
20210427node :i0 = 0
20210427node in :[]
普通复制语句1112:i0 = 0
[taint source] u:0
SourceList:[]
20210427node out :[]
20210427node :r4 = interfaceinvoke r2.<java.lang.Iterable: java.util.Iterator iterator()>()
20210427node in :[]
调用语句赋值给变量:r4 = interfaceinvoke r2.<java.lang.Iterable: java.util.Iterator iterator()>()
20210427node out :[]
[taint328]a invoke <java.lang.Iterable: java.util.Iterator iterator()>
[taint328]a invoke 0
20210427node :$z0 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>()
20210427node in :[]
调用语句赋值给变量:$z0 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>()
20210427node out :[]
[taint328]a invoke <java.util.Iterator: boolean hasNext()>
[taint328]a invoke 0
20210427node :if $z0 == 0 goto $r7 = r0.<cfhider.WordCount$IntSumReducer: org.apache.hadoop.io.IntWritable result>
20210427node in :[]
20210427node out :[]
Have
Stmt if :if $z0 == 0 goto $r7 = r0.<cfhider.WordCount$IntSumReducer: org.apache.hadoop.io.IntWritable result>Stmt if value:$z0 == 0the value=$z0
the value=0
maintainValues.size0
ifValues1
20210427node :$r7 = r0.<cfhider.WordCount$IntSumReducer: org.apache.hadoop.io.IntWritable result>
20210427node in :[]
普通复制语句1112:$r7 = r0.<cfhider.WordCount$IntSumReducer: org.apache.hadoop.io.IntWritable result>
[taint source] u:r0
SourceList:[]
[taint source] u:r0.<cfhider.WordCount$IntSumReducer: org.apache.hadoop.io.IntWritable result>
SourceList:[]
20210427node out :[]
20210427node :virtualinvoke $r7.<org.apache.hadoop.io.IntWritable: void set(int)>(i0)
20210427node in :[]
20210427node out :[]
[taint329]i invoke virtualinvoke $r7.<org.apache.hadoop.io.IntWritable: void set(int)>(i0)
[taint328]i invoke <org.apache.hadoop.io.IntWritable: void set(int)>
[taint328]i invoke 1
value:i0
isoutSetContains  false value:i0 index:0
20210427node :$r8 = r0.<cfhider.WordCount$IntSumReducer: org.apache.hadoop.io.IntWritable result>
20210427node in :[]
普通复制语句1112:$r8 = r0.<cfhider.WordCount$IntSumReducer: org.apache.hadoop.io.IntWritable result>
[taint source] u:r0
SourceList:[]
[taint source] u:r0.<cfhider.WordCount$IntSumReducer: org.apache.hadoop.io.IntWritable result>
SourceList:[]
20210427node out :[]
20210427node :virtualinvoke r3.<org.apache.hadoop.mapreduce.Reducer$Context: void write(java.lang.Object,java.lang.Object)>(r1, $r8)
20210427node in :[]
20210427node out :[]
[taint329]i invoke virtualinvoke r3.<org.apache.hadoop.mapreduce.Reducer$Context: void write(java.lang.Object,java.lang.Object)>(r1, $r8)
[taint328]i invoke <org.apache.hadoop.mapreduce.TaskInputOutputContext: void write(java.lang.Object,java.lang.Object)>
[taint328]i invoke 2
value:r1
isoutSetContains  false value:r1 index:0
value:$r8
isoutSetContains  false value:$r8 index:1
20210427node :return
20210427node in :[]
20210427node out :[]
20210427node :$r6 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>()
20210427node in :[]
调用语句赋值给变量:$r6 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>()
20210427node out :[]
[taint328]a invoke <java.util.Iterator: java.lang.Object next()>
[taint328]a invoke 0
20210427node :r5 = (org.apache.hadoop.io.IntWritable) $r6
20210427node in :[]
普通复制语句1112:r5 = (org.apache.hadoop.io.IntWritable) $r6
[taint source] u:$r6
SourceList:[]
[taint source] u:(org.apache.hadoop.io.IntWritable) $r6
SourceList:[]
20210427node out :[]
20210427node :$i1 = virtualinvoke r5.<org.apache.hadoop.io.IntWritable: int get()>()
20210427node in :[]
调用语句赋值给变量:$i1 = virtualinvoke r5.<org.apache.hadoop.io.IntWritable: int get()>()
20210427node out :[]
[taint328]a invoke <org.apache.hadoop.io.IntWritable: int get()>
[taint328]a invoke 0
20210427node :i0 = i0 + $i1
20210427node in :[]
普通复制语句1112:i0 = i0 + $i1
[taint source] u:i0
SourceList:[]
[taint source] u:$i1
SourceList:[]
[taint source] u:i0 + $i1
SourceList:[]
20210427node out :[]
20210427node :goto [?= $z0 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>()]
20210427node in :[]
20210427node out :[]
analysis.outSet.size():0
[CFMAP]2021 After taintAnalysis:{cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}
The data isgggg 
<cfhider.WordCount$IntSumReducer: void reduce(org.apache.hadoop.io.Text,java.lang.Iterable,org.apache.hadoop.mapreduce.Reducer$Context)>
The data isgggg cfhider.WordCount$IntSumReducer reduce [] {cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}  {cfhider.WordCount$IntSumReducer={reduce=[I@48b80b96}, cfhider.WordCount$TokenizerMapper={map=[I@fbd1ebe}, cfhider.WordCount={main=[I@2ae6ba37}, invoker.SnowFlake={<init>=[I@53844cf2, getNextMill=[I@12d7ceb4, getNewstmp=[I@2ef0e2c5}}
Coming...
doAnalysis Startingqqqqqqqq.....
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:i0 = i0 + $i1
currStmt left value20210420:i0
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$i1 = virtualinvoke r5.<org.apache.hadoop.io.IntWritable: int get()>()
currStmt left value20210420:$i1
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:r5 = (org.apache.hadoop.io.IntWritable) $r6
currStmt left value20210420:r5
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$r6 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>()
currStmt left value20210420:$r6
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
[taint329]i invoke virtualinvoke r3.<org.apache.hadoop.mapreduce.Reducer$Context: void write(java.lang.Object,java.lang.Object)>(r1, $r8)
[taint328]i invoke <org.apache.hadoop.mapreduce.TaskInputOutputContext: void write(java.lang.Object,java.lang.Object)>
[taint328]i invoke 2
value:r1
value:$r8
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$r8 = r0.<cfhider.WordCount$IntSumReducer: org.apache.hadoop.io.IntWritable result>
currStmt left value20210420:$r8
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
[taint329]i invoke virtualinvoke $r7.<org.apache.hadoop.io.IntWritable: void set(int)>(i0)
[taint328]i invoke <org.apache.hadoop.io.IntWritable: void set(int)>
[taint328]i invoke 1
value:i0
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$r7 = r0.<cfhider.WordCount$IntSumReducer: org.apache.hadoop.io.IntWritable result>
currStmt left value20210420:$r7
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
Have
the value=$z0
the value=0
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$z0 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>()
currStmt left value20210420:$z0
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:r4 = interfaceinvoke r2.<java.lang.Iterable: java.util.Iterator iterator()>()
currStmt left value20210420:r4
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:i0 = 0
currStmt left value20210420:i0
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
doAnalysis endqqqqqqq.....
come here
[CFMAP]2021 After BackwardAnalysis:{cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}
[taint into] sootMethod: reduce
[]
class name :cfhider.WordCount$IntSumReducer
method name :reduce
method list :[]
clasname=cfhider.WordCount$IntSumReducer
methodname=reduce
sourcelist2021=[]
20210427node :r0 := @this: cfhider.WordCount$IntSumReducer
20210427node in :[]
20210427node out :[]
currStmt20210423:r0 := @this: cfhider.WordCount$IntSumReducer
20210427node :r1 := @parameter0: java.lang.Object
20210427node in :[]
[idStmt]iiiiiii r1 := @parameter0: java.lang.Object  index:0
ClassName:cfhider.WordCount$IntSumReducer
MethodName:reduce
aaaa:0
20210427node out :[]
currStmt20210423:r1 := @parameter0: java.lang.Object
20210427node :r2 := @parameter1: java.lang.Iterable
20210427node in :[]
[idStmt]iiiiiii r2 := @parameter1: java.lang.Iterable  index:1
ClassName:cfhider.WordCount$IntSumReducer
MethodName:reduce
aaaa:0
20210427node out :[]
currStmt20210423:r2 := @parameter1: java.lang.Iterable
20210427node :r3 := @parameter2: org.apache.hadoop.mapreduce.Reducer$Context
20210427node in :[]
[idStmt]iiiiiii r3 := @parameter2: org.apache.hadoop.mapreduce.Reducer$Context  index:2
ClassName:cfhider.WordCount$IntSumReducer
MethodName:reduce
aaaa:0
20210427node out :[]
currStmt20210423:r3 := @parameter2: org.apache.hadoop.mapreduce.Reducer$Context
20210427node :$r4 = (org.apache.hadoop.io.Text) r1
20210427node in :[]
普通复制语句1112:$r4 = (org.apache.hadoop.io.Text) r1
[taint source] u:r1
SourceList:[]
[taint source] u:(org.apache.hadoop.io.Text) r1
SourceList:[]
20210427node out :[]
20210427node :virtualinvoke r0.<cfhider.WordCount$IntSumReducer: void reduce(org.apache.hadoop.io.Text,java.lang.Iterable,org.apache.hadoop.mapreduce.Reducer$Context)>($r4, r2, r3)
20210427node in :[]
20210427node out :[]
[taint329]i invoke virtualinvoke r0.<cfhider.WordCount$IntSumReducer: void reduce(org.apache.hadoop.io.Text,java.lang.Iterable,org.apache.hadoop.mapreduce.Reducer$Context)>($r4, r2, r3)
[taint328]i invoke <cfhider.WordCount$IntSumReducer: void reduce(org.apache.hadoop.io.Text,java.lang.Iterable,org.apache.hadoop.mapreduce.Reducer$Context)>
[taint328]i invoke 3
value:$r4
isoutSetContains  false value:$r4 index:0
value:r2
isoutSetContains  false value:r2 index:1
value:r3
isoutSetContains  false value:r3 index:2
[invokemap]invoke:reduce  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
20210427node :return
20210427node in :[]
20210427node out :[]
analysis.outSet.size():0
[CFMAP]2021 After taintAnalysis:{cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}
The data isgggg 
<cfhider.WordCount$IntSumReducer: void reduce(java.lang.Object,java.lang.Iterable,org.apache.hadoop.mapreduce.Reducer$Context)>
The data isgggg cfhider.WordCount$IntSumReducer reduce [] {cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}  {cfhider.WordCount$IntSumReducer={reduce=[I@2b00ca26}, cfhider.WordCount$TokenizerMapper={map=[I@fbd1ebe}, cfhider.WordCount={main=[I@2ae6ba37}, invoker.SnowFlake={<init>=[I@53844cf2, getNextMill=[I@12d7ceb4, getNewstmp=[I@2ef0e2c5}}
Coming...
doAnalysis Startingqqqqqqqq.....
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
[taint329]i invoke virtualinvoke r0.<cfhider.WordCount$IntSumReducer: void reduce(org.apache.hadoop.io.Text,java.lang.Iterable,org.apache.hadoop.mapreduce.Reducer$Context)>($r4, r2, r3)
[taint328]i invoke <cfhider.WordCount$IntSumReducer: void reduce(org.apache.hadoop.io.Text,java.lang.Iterable,org.apache.hadoop.mapreduce.Reducer$Context)>
[taint328]i invoke 3
value:$r4
in here:[I@40d79ad8
[invokemap]invoke:reduce  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
value:r2
in here:[I@40d79ad8
[invokemap]invoke:reduce  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
value:r3
in here:[I@40d79ad8
[invokemap]invoke:reduce  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$r4 = (org.apache.hadoop.io.Text) r1
currStmt left value20210420:$r4
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
doAnalysis endqqqqqqq.....
come here
[CFMAP]2021 After BackwardAnalysis:{cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}
[taint into] sootMethod: <init>
[]
class name :cfhider.WordCount$IntSumReducer
method name :<init>
method list :[]
clasname=cfhider.WordCount$IntSumReducer
methodname=<init>
sourcelist2021=[]
20210427node :r0 := @this: cfhider.WordCount$IntSumReducer
20210427node in :[]
20210427node out :[]
currStmt20210423:r0 := @this: cfhider.WordCount$IntSumReducer
20210427node :specialinvoke r0.<org.apache.hadoop.mapreduce.Reducer: void <init>()>()
20210427node in :[]
20210427node out :[]
[taint329]i invoke specialinvoke r0.<org.apache.hadoop.mapreduce.Reducer: void <init>()>()
[taint328]i invoke <org.apache.hadoop.mapreduce.Reducer: void <init>()>
[taint328]i invoke 0
20210427node :$r1 = new org.apache.hadoop.io.IntWritable
20210427node in :[]
普通复制语句1112:$r1 = new org.apache.hadoop.io.IntWritable
[taint source] u:new org.apache.hadoop.io.IntWritable
SourceList:[]
20210427node out :[]
20210427node :specialinvoke $r1.<org.apache.hadoop.io.IntWritable: void <init>()>()
20210427node in :[]
20210427node out :[]
[taint329]i invoke specialinvoke $r1.<org.apache.hadoop.io.IntWritable: void <init>()>()
[taint328]i invoke <org.apache.hadoop.io.IntWritable: void <init>()>
[taint328]i invoke 0
20210427node :r0.<cfhider.WordCount$IntSumReducer: org.apache.hadoop.io.IntWritable result> = $r1
20210427node in :[]
普通复制语句1112:r0.<cfhider.WordCount$IntSumReducer: org.apache.hadoop.io.IntWritable result> = $r1
[taint source] u:r0
SourceList:[]
[taint source] u:$r1
SourceList:[]
20210427node out :[]
20210427node :return
20210427node in :[]
20210427node out :[]
analysis.outSet.size():0
[CFMAP]2021 After taintAnalysis:{cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}
The data isgggg 
<cfhider.WordCount$IntSumReducer: void <init>()>
The data isgggg cfhider.WordCount$IntSumReducer <init> [] {cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}  {cfhider.WordCount$IntSumReducer={reduce=[I@2b00ca26}, cfhider.WordCount$TokenizerMapper={map=[I@fbd1ebe}, cfhider.WordCount={main=[I@2ae6ba37}, invoker.SnowFlake={<init>=[I@53844cf2, getNextMill=[I@12d7ceb4, getNewstmp=[I@2ef0e2c5}}
Coming...
doAnalysis Startingqqqqqqqq.....
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:r0.<cfhider.WordCount$IntSumReducer: org.apache.hadoop.io.IntWritable result> = $r1
currStmt left value20210420:r0.<cfhider.WordCount$IntSumReducer: org.apache.hadoop.io.IntWritable result>
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
[taint329]i invoke specialinvoke $r1.<org.apache.hadoop.io.IntWritable: void <init>()>()
[taint328]i invoke <org.apache.hadoop.io.IntWritable: void <init>()>
[taint328]i invoke 0
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$r1 = new org.apache.hadoop.io.IntWritable
currStmt left value20210420:$r1
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
[taint329]i invoke specialinvoke r0.<org.apache.hadoop.mapreduce.Reducer: void <init>()>()
[taint328]i invoke <org.apache.hadoop.mapreduce.Reducer: void <init>()>
[taint328]i invoke 0
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
doAnalysis endqqqqqqq.....
come here
[CFMAP]2021 After BackwardAnalysis:{cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}
[taint into] sootMethod: reduce
[]
class name :cfhider.WordCount$IntSumReducer
method name :reduce
method list :[]
clasname=cfhider.WordCount$IntSumReducer
methodname=reduce
sourcelist2021=[]
20210427node :r0 := @this: cfhider.WordCount$IntSumReducer
20210427node in :[]
20210427node out :[]
currStmt20210423:r0 := @this: cfhider.WordCount$IntSumReducer
20210427node :r1 := @parameter0: org.apache.hadoop.io.Text
20210427node in :[]
[idStmt]iiiiiii r1 := @parameter0: org.apache.hadoop.io.Text  index:0
ClassName:cfhider.WordCount$IntSumReducer
MethodName:reduce
aaaa:0
20210427node out :[]
currStmt20210423:r1 := @parameter0: org.apache.hadoop.io.Text
20210427node :r2 := @parameter1: java.lang.Iterable
20210427node in :[]
[idStmt]iiiiiii r2 := @parameter1: java.lang.Iterable  index:1
ClassName:cfhider.WordCount$IntSumReducer
MethodName:reduce
aaaa:0
20210427node out :[]
currStmt20210423:r2 := @parameter1: java.lang.Iterable
20210427node :r3 := @parameter2: org.apache.hadoop.mapreduce.Reducer$Context
20210427node in :[]
[idStmt]iiiiiii r3 := @parameter2: org.apache.hadoop.mapreduce.Reducer$Context  index:2
ClassName:cfhider.WordCount$IntSumReducer
MethodName:reduce
aaaa:0
20210427node out :[]
currStmt20210423:r3 := @parameter2: org.apache.hadoop.mapreduce.Reducer$Context
20210427node :i0 = 0
20210427node in :[]
普通复制语句1112:i0 = 0
[taint source] u:0
SourceList:[]
20210427node out :[]
20210427node :r4 = interfaceinvoke r2.<java.lang.Iterable: java.util.Iterator iterator()>()
20210427node in :[]
调用语句赋值给变量:r4 = interfaceinvoke r2.<java.lang.Iterable: java.util.Iterator iterator()>()
20210427node out :[]
[taint328]a invoke <java.lang.Iterable: java.util.Iterator iterator()>
[taint328]a invoke 0
20210427node :$z0 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>()
20210427node in :[]
调用语句赋值给变量:$z0 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>()
20210427node out :[]
[taint328]a invoke <java.util.Iterator: boolean hasNext()>
[taint328]a invoke 0
20210427node :if $z0 == 0 goto $r7 = r0.<cfhider.WordCount$IntSumReducer: org.apache.hadoop.io.IntWritable result>
20210427node in :[]
20210427node out :[]
Have
Stmt if :if $z0 == 0 goto $r7 = r0.<cfhider.WordCount$IntSumReducer: org.apache.hadoop.io.IntWritable result>Stmt if value:$z0 == 0the value=$z0
the value=0
maintainValues.size0
ifValues1
20210427node :$r7 = r0.<cfhider.WordCount$IntSumReducer: org.apache.hadoop.io.IntWritable result>
20210427node in :[]
普通复制语句1112:$r7 = r0.<cfhider.WordCount$IntSumReducer: org.apache.hadoop.io.IntWritable result>
[taint source] u:r0
SourceList:[]
[taint source] u:r0.<cfhider.WordCount$IntSumReducer: org.apache.hadoop.io.IntWritable result>
SourceList:[]
20210427node out :[]
20210427node :virtualinvoke $r7.<org.apache.hadoop.io.IntWritable: void set(int)>(i0)
20210427node in :[]
20210427node out :[]
[taint329]i invoke virtualinvoke $r7.<org.apache.hadoop.io.IntWritable: void set(int)>(i0)
[taint328]i invoke <org.apache.hadoop.io.IntWritable: void set(int)>
[taint328]i invoke 1
value:i0
isoutSetContains  false value:i0 index:0
20210427node :$r8 = r0.<cfhider.WordCount$IntSumReducer: org.apache.hadoop.io.IntWritable result>
20210427node in :[]
普通复制语句1112:$r8 = r0.<cfhider.WordCount$IntSumReducer: org.apache.hadoop.io.IntWritable result>
[taint source] u:r0
SourceList:[]
[taint source] u:r0.<cfhider.WordCount$IntSumReducer: org.apache.hadoop.io.IntWritable result>
SourceList:[]
20210427node out :[]
20210427node :virtualinvoke r3.<org.apache.hadoop.mapreduce.Reducer$Context: void write(java.lang.Object,java.lang.Object)>(r1, $r8)
20210427node in :[]
20210427node out :[]
[taint329]i invoke virtualinvoke r3.<org.apache.hadoop.mapreduce.Reducer$Context: void write(java.lang.Object,java.lang.Object)>(r1, $r8)
[taint328]i invoke <org.apache.hadoop.mapreduce.TaskInputOutputContext: void write(java.lang.Object,java.lang.Object)>
[taint328]i invoke 2
value:r1
isoutSetContains  false value:r1 index:0
value:$r8
isoutSetContains  false value:$r8 index:1
20210427node :return
20210427node in :[]
20210427node out :[]
20210427node :$r6 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>()
20210427node in :[]
调用语句赋值给变量:$r6 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>()
20210427node out :[]
[taint328]a invoke <java.util.Iterator: java.lang.Object next()>
[taint328]a invoke 0
20210427node :r5 = (org.apache.hadoop.io.IntWritable) $r6
20210427node in :[]
普通复制语句1112:r5 = (org.apache.hadoop.io.IntWritable) $r6
[taint source] u:$r6
SourceList:[]
[taint source] u:(org.apache.hadoop.io.IntWritable) $r6
SourceList:[]
20210427node out :[]
20210427node :$i1 = virtualinvoke r5.<org.apache.hadoop.io.IntWritable: int get()>()
20210427node in :[]
调用语句赋值给变量:$i1 = virtualinvoke r5.<org.apache.hadoop.io.IntWritable: int get()>()
20210427node out :[]
[taint328]a invoke <org.apache.hadoop.io.IntWritable: int get()>
[taint328]a invoke 0
20210427node :i0 = i0 + $i1
20210427node in :[]
普通复制语句1112:i0 = i0 + $i1
[taint source] u:i0
SourceList:[]
[taint source] u:$i1
SourceList:[]
[taint source] u:i0 + $i1
SourceList:[]
20210427node out :[]
20210427node :goto [?= $z0 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>()]
20210427node in :[]
20210427node out :[]
analysis.outSet.size():0
[CFMAP]2021 After taintAnalysis:{cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}
The data isgggg 
<cfhider.WordCount$IntSumReducer: void reduce(org.apache.hadoop.io.Text,java.lang.Iterable,org.apache.hadoop.mapreduce.Reducer$Context)>
The data isgggg cfhider.WordCount$IntSumReducer reduce [] {cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}  {cfhider.WordCount$IntSumReducer={reduce=[I@af6fc2a}, cfhider.WordCount$TokenizerMapper={map=[I@fbd1ebe}, cfhider.WordCount={main=[I@2ae6ba37}, invoker.SnowFlake={<init>=[I@53844cf2, getNextMill=[I@12d7ceb4, getNewstmp=[I@2ef0e2c5}}
Coming...
doAnalysis Startingqqqqqqqq.....
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:i0 = i0 + $i1
currStmt left value20210420:i0
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$i1 = virtualinvoke r5.<org.apache.hadoop.io.IntWritable: int get()>()
currStmt left value20210420:$i1
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:r5 = (org.apache.hadoop.io.IntWritable) $r6
currStmt left value20210420:r5
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$r6 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>()
currStmt left value20210420:$r6
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
[taint329]i invoke virtualinvoke r3.<org.apache.hadoop.mapreduce.Reducer$Context: void write(java.lang.Object,java.lang.Object)>(r1, $r8)
[taint328]i invoke <org.apache.hadoop.mapreduce.TaskInputOutputContext: void write(java.lang.Object,java.lang.Object)>
[taint328]i invoke 2
value:r1
value:$r8
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$r8 = r0.<cfhider.WordCount$IntSumReducer: org.apache.hadoop.io.IntWritable result>
currStmt left value20210420:$r8
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
[taint329]i invoke virtualinvoke $r7.<org.apache.hadoop.io.IntWritable: void set(int)>(i0)
[taint328]i invoke <org.apache.hadoop.io.IntWritable: void set(int)>
[taint328]i invoke 1
value:i0
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$r7 = r0.<cfhider.WordCount$IntSumReducer: org.apache.hadoop.io.IntWritable result>
currStmt left value20210420:$r7
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
Have
the value=$z0
the value=0
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$z0 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>()
currStmt left value20210420:$z0
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:r4 = interfaceinvoke r2.<java.lang.Iterable: java.util.Iterator iterator()>()
currStmt left value20210420:r4
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:i0 = 0
currStmt left value20210420:i0
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
doAnalysis endqqqqqqq.....
come here
[CFMAP]2021 After BackwardAnalysis:{cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}
[taint into] sootMethod: reduce
[]
class name :cfhider.WordCount$IntSumReducer
method name :reduce
method list :[]
clasname=cfhider.WordCount$IntSumReducer
methodname=reduce
sourcelist2021=[]
20210427node :r0 := @this: cfhider.WordCount$IntSumReducer
20210427node in :[]
20210427node out :[]
currStmt20210423:r0 := @this: cfhider.WordCount$IntSumReducer
20210427node :r1 := @parameter0: java.lang.Object
20210427node in :[]
[idStmt]iiiiiii r1 := @parameter0: java.lang.Object  index:0
ClassName:cfhider.WordCount$IntSumReducer
MethodName:reduce
aaaa:0
20210427node out :[]
currStmt20210423:r1 := @parameter0: java.lang.Object
20210427node :r2 := @parameter1: java.lang.Iterable
20210427node in :[]
[idStmt]iiiiiii r2 := @parameter1: java.lang.Iterable  index:1
ClassName:cfhider.WordCount$IntSumReducer
MethodName:reduce
aaaa:0
20210427node out :[]
currStmt20210423:r2 := @parameter1: java.lang.Iterable
20210427node :r3 := @parameter2: org.apache.hadoop.mapreduce.Reducer$Context
20210427node in :[]
[idStmt]iiiiiii r3 := @parameter2: org.apache.hadoop.mapreduce.Reducer$Context  index:2
ClassName:cfhider.WordCount$IntSumReducer
MethodName:reduce
aaaa:0
20210427node out :[]
currStmt20210423:r3 := @parameter2: org.apache.hadoop.mapreduce.Reducer$Context
20210427node :$r4 = (org.apache.hadoop.io.Text) r1
20210427node in :[]
普通复制语句1112:$r4 = (org.apache.hadoop.io.Text) r1
[taint source] u:r1
SourceList:[]
[taint source] u:(org.apache.hadoop.io.Text) r1
SourceList:[]
20210427node out :[]
20210427node :virtualinvoke r0.<cfhider.WordCount$IntSumReducer: void reduce(org.apache.hadoop.io.Text,java.lang.Iterable,org.apache.hadoop.mapreduce.Reducer$Context)>($r4, r2, r3)
20210427node in :[]
20210427node out :[]
[taint329]i invoke virtualinvoke r0.<cfhider.WordCount$IntSumReducer: void reduce(org.apache.hadoop.io.Text,java.lang.Iterable,org.apache.hadoop.mapreduce.Reducer$Context)>($r4, r2, r3)
[taint328]i invoke <cfhider.WordCount$IntSumReducer: void reduce(org.apache.hadoop.io.Text,java.lang.Iterable,org.apache.hadoop.mapreduce.Reducer$Context)>
[taint328]i invoke 3
value:$r4
isoutSetContains  false value:$r4 index:0
value:r2
isoutSetContains  false value:r2 index:1
value:r3
isoutSetContains  false value:r3 index:2
[invokemap]invoke:reduce  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
20210427node :return
20210427node in :[]
20210427node out :[]
analysis.outSet.size():0
[CFMAP]2021 After taintAnalysis:{cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}
The data isgggg 
<cfhider.WordCount$IntSumReducer: void reduce(java.lang.Object,java.lang.Iterable,org.apache.hadoop.mapreduce.Reducer$Context)>
The data isgggg cfhider.WordCount$IntSumReducer reduce [] {cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}  {cfhider.WordCount$IntSumReducer={reduce=[I@5d252f05}, cfhider.WordCount$TokenizerMapper={map=[I@fbd1ebe}, cfhider.WordCount={main=[I@2ae6ba37}, invoker.SnowFlake={<init>=[I@53844cf2, getNextMill=[I@12d7ceb4, getNewstmp=[I@2ef0e2c5}}
Coming...
doAnalysis Startingqqqqqqqq.....
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
[taint329]i invoke virtualinvoke r0.<cfhider.WordCount$IntSumReducer: void reduce(org.apache.hadoop.io.Text,java.lang.Iterable,org.apache.hadoop.mapreduce.Reducer$Context)>($r4, r2, r3)
[taint328]i invoke <cfhider.WordCount$IntSumReducer: void reduce(org.apache.hadoop.io.Text,java.lang.Iterable,org.apache.hadoop.mapreduce.Reducer$Context)>
[taint328]i invoke 3
value:$r4
in here:[I@34322109
[invokemap]invoke:reduce  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
value:r2
in here:[I@34322109
[invokemap]invoke:reduce  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
value:r3
in here:[I@34322109
[invokemap]invoke:reduce  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$r4 = (org.apache.hadoop.io.Text) r1
currStmt left value20210420:$r4
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
doAnalysis endqqqqqqq.....
come here
[CFMAP]2021 After BackwardAnalysis:{cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}
[taint into] sootMethod: <init>
[]
class name :cfhider.WordCount$IntSumReducer
method name :<init>
method list :[]
clasname=cfhider.WordCount$IntSumReducer
methodname=<init>
sourcelist2021=[]
20210427node :r0 := @this: cfhider.WordCount$IntSumReducer
20210427node in :[]
20210427node out :[]
currStmt20210423:r0 := @this: cfhider.WordCount$IntSumReducer
20210427node :specialinvoke r0.<org.apache.hadoop.mapreduce.Reducer: void <init>()>()
20210427node in :[]
20210427node out :[]
[taint329]i invoke specialinvoke r0.<org.apache.hadoop.mapreduce.Reducer: void <init>()>()
[taint328]i invoke <org.apache.hadoop.mapreduce.Reducer: void <init>()>
[taint328]i invoke 0
20210427node :$r1 = new org.apache.hadoop.io.IntWritable
20210427node in :[]
普通复制语句1112:$r1 = new org.apache.hadoop.io.IntWritable
[taint source] u:new org.apache.hadoop.io.IntWritable
SourceList:[]
20210427node out :[]
20210427node :specialinvoke $r1.<org.apache.hadoop.io.IntWritable: void <init>()>()
20210427node in :[]
20210427node out :[]
[taint329]i invoke specialinvoke $r1.<org.apache.hadoop.io.IntWritable: void <init>()>()
[taint328]i invoke <org.apache.hadoop.io.IntWritable: void <init>()>
[taint328]i invoke 0
20210427node :r0.<cfhider.WordCount$IntSumReducer: org.apache.hadoop.io.IntWritable result> = $r1
20210427node in :[]
普通复制语句1112:r0.<cfhider.WordCount$IntSumReducer: org.apache.hadoop.io.IntWritable result> = $r1
[taint source] u:r0
SourceList:[]
[taint source] u:$r1
SourceList:[]
20210427node out :[]
20210427node :return
20210427node in :[]
20210427node out :[]
analysis.outSet.size():0
[CFMAP]2021 After taintAnalysis:{cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}
The data isgggg 
<cfhider.WordCount$IntSumReducer: void <init>()>
The data isgggg cfhider.WordCount$IntSumReducer <init> [] {cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}  {cfhider.WordCount$IntSumReducer={reduce=[I@5d252f05}, cfhider.WordCount$TokenizerMapper={map=[I@fbd1ebe}, cfhider.WordCount={main=[I@2ae6ba37}, invoker.SnowFlake={<init>=[I@53844cf2, getNextMill=[I@12d7ceb4, getNewstmp=[I@2ef0e2c5}}
Coming...
doAnalysis Startingqqqqqqqq.....
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:r0.<cfhider.WordCount$IntSumReducer: org.apache.hadoop.io.IntWritable result> = $r1
currStmt left value20210420:r0.<cfhider.WordCount$IntSumReducer: org.apache.hadoop.io.IntWritable result>
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
[taint329]i invoke specialinvoke $r1.<org.apache.hadoop.io.IntWritable: void <init>()>()
[taint328]i invoke <org.apache.hadoop.io.IntWritable: void <init>()>
[taint328]i invoke 0
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$r1 = new org.apache.hadoop.io.IntWritable
currStmt left value20210420:$r1
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
[taint329]i invoke specialinvoke r0.<org.apache.hadoop.mapreduce.Reducer: void <init>()>()
[taint328]i invoke <org.apache.hadoop.mapreduce.Reducer: void <init>()>
[taint328]i invoke 0
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
doAnalysis endqqqqqqq.....
come here
[CFMAP]2021 After BackwardAnalysis:{cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}
[taint into] sootMethod: reduce
[]
class name :cfhider.WordCount$IntSumReducer
method name :reduce
method list :[]
clasname=cfhider.WordCount$IntSumReducer
methodname=reduce
sourcelist2021=[]
20210427node :r0 := @this: cfhider.WordCount$IntSumReducer
20210427node in :[]
20210427node out :[]
currStmt20210423:r0 := @this: cfhider.WordCount$IntSumReducer
20210427node :r1 := @parameter0: org.apache.hadoop.io.Text
20210427node in :[]
[idStmt]iiiiiii r1 := @parameter0: org.apache.hadoop.io.Text  index:0
ClassName:cfhider.WordCount$IntSumReducer
MethodName:reduce
aaaa:0
20210427node out :[]
currStmt20210423:r1 := @parameter0: org.apache.hadoop.io.Text
20210427node :r2 := @parameter1: java.lang.Iterable
20210427node in :[]
[idStmt]iiiiiii r2 := @parameter1: java.lang.Iterable  index:1
ClassName:cfhider.WordCount$IntSumReducer
MethodName:reduce
aaaa:0
20210427node out :[]
currStmt20210423:r2 := @parameter1: java.lang.Iterable
20210427node :r3 := @parameter2: org.apache.hadoop.mapreduce.Reducer$Context
20210427node in :[]
[idStmt]iiiiiii r3 := @parameter2: org.apache.hadoop.mapreduce.Reducer$Context  index:2
ClassName:cfhider.WordCount$IntSumReducer
MethodName:reduce
aaaa:0
20210427node out :[]
currStmt20210423:r3 := @parameter2: org.apache.hadoop.mapreduce.Reducer$Context
20210427node :i0 = 0
20210427node in :[]
普通复制语句1112:i0 = 0
[taint source] u:0
SourceList:[]
20210427node out :[]
20210427node :r4 = interfaceinvoke r2.<java.lang.Iterable: java.util.Iterator iterator()>()
20210427node in :[]
调用语句赋值给变量:r4 = interfaceinvoke r2.<java.lang.Iterable: java.util.Iterator iterator()>()
20210427node out :[]
[taint328]a invoke <java.lang.Iterable: java.util.Iterator iterator()>
[taint328]a invoke 0
20210427node :$z0 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>()
20210427node in :[]
调用语句赋值给变量:$z0 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>()
20210427node out :[]
[taint328]a invoke <java.util.Iterator: boolean hasNext()>
[taint328]a invoke 0
20210427node :if $z0 == 0 goto $r7 = r0.<cfhider.WordCount$IntSumReducer: org.apache.hadoop.io.IntWritable result>
20210427node in :[]
20210427node out :[]
Have
Stmt if :if $z0 == 0 goto $r7 = r0.<cfhider.WordCount$IntSumReducer: org.apache.hadoop.io.IntWritable result>Stmt if value:$z0 == 0the value=$z0
the value=0
maintainValues.size0
ifValues1
20210427node :$r7 = r0.<cfhider.WordCount$IntSumReducer: org.apache.hadoop.io.IntWritable result>
20210427node in :[]
普通复制语句1112:$r7 = r0.<cfhider.WordCount$IntSumReducer: org.apache.hadoop.io.IntWritable result>
[taint source] u:r0
SourceList:[]
[taint source] u:r0.<cfhider.WordCount$IntSumReducer: org.apache.hadoop.io.IntWritable result>
SourceList:[]
20210427node out :[]
20210427node :virtualinvoke $r7.<org.apache.hadoop.io.IntWritable: void set(int)>(i0)
20210427node in :[]
20210427node out :[]
[taint329]i invoke virtualinvoke $r7.<org.apache.hadoop.io.IntWritable: void set(int)>(i0)
[taint328]i invoke <org.apache.hadoop.io.IntWritable: void set(int)>
[taint328]i invoke 1
value:i0
isoutSetContains  false value:i0 index:0
20210427node :$r8 = r0.<cfhider.WordCount$IntSumReducer: org.apache.hadoop.io.IntWritable result>
20210427node in :[]
普通复制语句1112:$r8 = r0.<cfhider.WordCount$IntSumReducer: org.apache.hadoop.io.IntWritable result>
[taint source] u:r0
SourceList:[]
[taint source] u:r0.<cfhider.WordCount$IntSumReducer: org.apache.hadoop.io.IntWritable result>
SourceList:[]
20210427node out :[]
20210427node :virtualinvoke r3.<org.apache.hadoop.mapreduce.Reducer$Context: void write(java.lang.Object,java.lang.Object)>(r1, $r8)
20210427node in :[]
20210427node out :[]
[taint329]i invoke virtualinvoke r3.<org.apache.hadoop.mapreduce.Reducer$Context: void write(java.lang.Object,java.lang.Object)>(r1, $r8)
[taint328]i invoke <org.apache.hadoop.mapreduce.TaskInputOutputContext: void write(java.lang.Object,java.lang.Object)>
[taint328]i invoke 2
value:r1
isoutSetContains  false value:r1 index:0
value:$r8
isoutSetContains  false value:$r8 index:1
20210427node :return
20210427node in :[]
20210427node out :[]
20210427node :$r6 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>()
20210427node in :[]
调用语句赋值给变量:$r6 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>()
20210427node out :[]
[taint328]a invoke <java.util.Iterator: java.lang.Object next()>
[taint328]a invoke 0
20210427node :r5 = (org.apache.hadoop.io.IntWritable) $r6
20210427node in :[]
普通复制语句1112:r5 = (org.apache.hadoop.io.IntWritable) $r6
[taint source] u:$r6
SourceList:[]
[taint source] u:(org.apache.hadoop.io.IntWritable) $r6
SourceList:[]
20210427node out :[]
20210427node :$i1 = virtualinvoke r5.<org.apache.hadoop.io.IntWritable: int get()>()
20210427node in :[]
调用语句赋值给变量:$i1 = virtualinvoke r5.<org.apache.hadoop.io.IntWritable: int get()>()
20210427node out :[]
[taint328]a invoke <org.apache.hadoop.io.IntWritable: int get()>
[taint328]a invoke 0
20210427node :i0 = i0 + $i1
20210427node in :[]
普通复制语句1112:i0 = i0 + $i1
[taint source] u:i0
SourceList:[]
[taint source] u:$i1
SourceList:[]
[taint source] u:i0 + $i1
SourceList:[]
20210427node out :[]
20210427node :goto [?= $z0 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>()]
20210427node in :[]
20210427node out :[]
analysis.outSet.size():0
[CFMAP]2021 After taintAnalysis:{cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}
The data isgggg 
<cfhider.WordCount$IntSumReducer: void reduce(org.apache.hadoop.io.Text,java.lang.Iterable,org.apache.hadoop.mapreduce.Reducer$Context)>
The data isgggg cfhider.WordCount$IntSumReducer reduce [] {cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}  {cfhider.WordCount$IntSumReducer={reduce=[I@4716f0a4}, cfhider.WordCount$TokenizerMapper={map=[I@fbd1ebe}, cfhider.WordCount={main=[I@2ae6ba37}, invoker.SnowFlake={<init>=[I@53844cf2, getNextMill=[I@12d7ceb4, getNewstmp=[I@2ef0e2c5}}
Coming...
doAnalysis Startingqqqqqqqq.....
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:i0 = i0 + $i1
currStmt left value20210420:i0
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$i1 = virtualinvoke r5.<org.apache.hadoop.io.IntWritable: int get()>()
currStmt left value20210420:$i1
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:r5 = (org.apache.hadoop.io.IntWritable) $r6
currStmt left value20210420:r5
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$r6 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>()
currStmt left value20210420:$r6
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
[taint329]i invoke virtualinvoke r3.<org.apache.hadoop.mapreduce.Reducer$Context: void write(java.lang.Object,java.lang.Object)>(r1, $r8)
[taint328]i invoke <org.apache.hadoop.mapreduce.TaskInputOutputContext: void write(java.lang.Object,java.lang.Object)>
[taint328]i invoke 2
value:r1
value:$r8
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$r8 = r0.<cfhider.WordCount$IntSumReducer: org.apache.hadoop.io.IntWritable result>
currStmt left value20210420:$r8
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
[taint329]i invoke virtualinvoke $r7.<org.apache.hadoop.io.IntWritable: void set(int)>(i0)
[taint328]i invoke <org.apache.hadoop.io.IntWritable: void set(int)>
[taint328]i invoke 1
value:i0
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$r7 = r0.<cfhider.WordCount$IntSumReducer: org.apache.hadoop.io.IntWritable result>
currStmt left value20210420:$r7
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
Have
the value=$z0
the value=0
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$z0 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>()
currStmt left value20210420:$z0
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:r4 = interfaceinvoke r2.<java.lang.Iterable: java.util.Iterator iterator()>()
currStmt left value20210420:r4
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:i0 = 0
currStmt left value20210420:i0
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
doAnalysis endqqqqqqq.....
come here
[CFMAP]2021 After BackwardAnalysis:{cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}
[taint into] sootMethod: reduce
[]
class name :cfhider.WordCount$IntSumReducer
method name :reduce
method list :[]
clasname=cfhider.WordCount$IntSumReducer
methodname=reduce
sourcelist2021=[]
20210427node :r0 := @this: cfhider.WordCount$IntSumReducer
20210427node in :[]
20210427node out :[]
currStmt20210423:r0 := @this: cfhider.WordCount$IntSumReducer
20210427node :r1 := @parameter0: java.lang.Object
20210427node in :[]
[idStmt]iiiiiii r1 := @parameter0: java.lang.Object  index:0
ClassName:cfhider.WordCount$IntSumReducer
MethodName:reduce
aaaa:0
20210427node out :[]
currStmt20210423:r1 := @parameter0: java.lang.Object
20210427node :r2 := @parameter1: java.lang.Iterable
20210427node in :[]
[idStmt]iiiiiii r2 := @parameter1: java.lang.Iterable  index:1
ClassName:cfhider.WordCount$IntSumReducer
MethodName:reduce
aaaa:0
20210427node out :[]
currStmt20210423:r2 := @parameter1: java.lang.Iterable
20210427node :r3 := @parameter2: org.apache.hadoop.mapreduce.Reducer$Context
20210427node in :[]
[idStmt]iiiiiii r3 := @parameter2: org.apache.hadoop.mapreduce.Reducer$Context  index:2
ClassName:cfhider.WordCount$IntSumReducer
MethodName:reduce
aaaa:0
20210427node out :[]
currStmt20210423:r3 := @parameter2: org.apache.hadoop.mapreduce.Reducer$Context
20210427node :$r4 = (org.apache.hadoop.io.Text) r1
20210427node in :[]
普通复制语句1112:$r4 = (org.apache.hadoop.io.Text) r1
[taint source] u:r1
SourceList:[]
[taint source] u:(org.apache.hadoop.io.Text) r1
SourceList:[]
20210427node out :[]
20210427node :virtualinvoke r0.<cfhider.WordCount$IntSumReducer: void reduce(org.apache.hadoop.io.Text,java.lang.Iterable,org.apache.hadoop.mapreduce.Reducer$Context)>($r4, r2, r3)
20210427node in :[]
20210427node out :[]
[taint329]i invoke virtualinvoke r0.<cfhider.WordCount$IntSumReducer: void reduce(org.apache.hadoop.io.Text,java.lang.Iterable,org.apache.hadoop.mapreduce.Reducer$Context)>($r4, r2, r3)
[taint328]i invoke <cfhider.WordCount$IntSumReducer: void reduce(org.apache.hadoop.io.Text,java.lang.Iterable,org.apache.hadoop.mapreduce.Reducer$Context)>
[taint328]i invoke 3
value:$r4
isoutSetContains  false value:$r4 index:0
value:r2
isoutSetContains  false value:r2 index:1
value:r3
isoutSetContains  false value:r3 index:2
[invokemap]invoke:reduce  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
20210427node :return
20210427node in :[]
20210427node out :[]
analysis.outSet.size():0
[CFMAP]2021 After taintAnalysis:{cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}
The data isgggg 
<cfhider.WordCount$IntSumReducer: void reduce(java.lang.Object,java.lang.Iterable,org.apache.hadoop.mapreduce.Reducer$Context)>
The data isgggg cfhider.WordCount$IntSumReducer reduce [] {cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}  {cfhider.WordCount$IntSumReducer={reduce=[I@3310c372}, cfhider.WordCount$TokenizerMapper={map=[I@fbd1ebe}, cfhider.WordCount={main=[I@2ae6ba37}, invoker.SnowFlake={<init>=[I@53844cf2, getNextMill=[I@12d7ceb4, getNewstmp=[I@2ef0e2c5}}
Coming...
doAnalysis Startingqqqqqqqq.....
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
[taint329]i invoke virtualinvoke r0.<cfhider.WordCount$IntSumReducer: void reduce(org.apache.hadoop.io.Text,java.lang.Iterable,org.apache.hadoop.mapreduce.Reducer$Context)>($r4, r2, r3)
[taint328]i invoke <cfhider.WordCount$IntSumReducer: void reduce(org.apache.hadoop.io.Text,java.lang.Iterable,org.apache.hadoop.mapreduce.Reducer$Context)>
[taint328]i invoke 3
value:$r4
in here:[I@118f8b8f
[invokemap]invoke:reduce  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
value:r2
in here:[I@118f8b8f
[invokemap]invoke:reduce  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
value:r3
in here:[I@118f8b8f
[invokemap]invoke:reduce  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$r4 = (org.apache.hadoop.io.Text) r1
currStmt left value20210420:$r4
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
doAnalysis endqqqqqqq.....
come here
[CFMAP]2021 After BackwardAnalysis:{cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}
[taint]SooClass:cfhider.WordCount
[taint] class: cfhider.WordCount
methList :{<init>=[], main=[]}
[taint into] sootMethod: <init>
[]
class name :cfhider.WordCount
method name :<init>
method list :[]
clasname=cfhider.WordCount
methodname=<init>
sourcelist2021=[]
20210427node :r0 := @this: cfhider.WordCount
20210427node in :[]
20210427node out :[]
currStmt20210423:r0 := @this: cfhider.WordCount
20210427node :specialinvoke r0.<java.lang.Object: void <init>()>()
20210427node in :[]
20210427node out :[]
[taint329]i invoke specialinvoke r0.<java.lang.Object: void <init>()>()
[taint328]i invoke <java.lang.Object: void <init>()>
[taint328]i invoke 0
20210427node :return
20210427node in :[]
20210427node out :[]
analysis.outSet.size():0
[CFMAP]2021 After taintAnalysis:{cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}
The data isgggg 
<cfhider.WordCount: void <init>()>
The data isgggg cfhider.WordCount <init> [] {cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}  {cfhider.WordCount$IntSumReducer={reduce=[I@3310c372}, cfhider.WordCount$TokenizerMapper={map=[I@fbd1ebe}, cfhider.WordCount={main=[I@2ae6ba37}, invoker.SnowFlake={<init>=[I@53844cf2, getNextMill=[I@12d7ceb4, getNewstmp=[I@2ef0e2c5}}
Coming...
doAnalysis Startingqqqqqqqq.....
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
[taint329]i invoke specialinvoke r0.<java.lang.Object: void <init>()>()
[taint328]i invoke <java.lang.Object: void <init>()>
[taint328]i invoke 0
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
doAnalysis endqqqqqqq.....
come here
[CFMAP]2021 After BackwardAnalysis:{cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}
[taint into] sootMethod: main
[]
class name :cfhider.WordCount
method name :main
method list :[]
clasname=cfhider.WordCount
methodname=main
sourcelist2021=[]
20210427node :r0 := @parameter0: java.lang.String[]
20210427node in :[]
[idStmt]iiiiiii r0 := @parameter0: java.lang.String[]  index:0
ClassName:cfhider.WordCount
MethodName:main
aaaa:0
20210427node out :[]
currStmt20210423:r0 := @parameter0: java.lang.String[]
20210427node :$r1 = <java.lang.System: java.io.PrintStream out>
20210427node in :[]
普通复制语句1112:$r1 = <java.lang.System: java.io.PrintStream out>
[taint source] u:<java.lang.System: java.io.PrintStream out>
SourceList:[]
20210427node out :[]
20210427node :virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>("In this project, we test wordcount with SGX!\n")
20210427node in :[]
20210427node out :[]
[taint329]i invoke virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>("In this project, we test wordcount with SGX!\n")
[taint328]i invoke <java.io.PrintStream: void println(java.lang.String)>
[taint328]i invoke 1
value:"In this project, we test wordcount with SGX!\n"
isoutSetContains  false value:"In this project, we test wordcount with SGX!\n" index:0
20210427node :$r6 = new org.apache.hadoop.conf.Configuration
20210427node in :[]
普通复制语句1112:$r6 = new org.apache.hadoop.conf.Configuration
[taint source] u:new org.apache.hadoop.conf.Configuration
SourceList:[]
20210427node out :[]
20210427node :specialinvoke $r6.<org.apache.hadoop.conf.Configuration: void <init>()>()
20210427node in :[]
20210427node out :[]
[taint329]i invoke specialinvoke $r6.<org.apache.hadoop.conf.Configuration: void <init>()>()
[taint328]i invoke <org.apache.hadoop.conf.Configuration: void <init>()>
[taint328]i invoke 0
20210427node :r2 = $r6
20210427node in :[]
普通复制语句1112:r2 = $r6
[taint source] u:$r6
SourceList:[]
20210427node out :[]
20210427node :$r7 = new org.apache.hadoop.util.GenericOptionsParser
20210427node in :[]
普通复制语句1112:$r7 = new org.apache.hadoop.util.GenericOptionsParser
[taint source] u:new org.apache.hadoop.util.GenericOptionsParser
SourceList:[]
20210427node out :[]
20210427node :specialinvoke $r7.<org.apache.hadoop.util.GenericOptionsParser: void <init>(org.apache.hadoop.conf.Configuration,java.lang.String[])>(r2, r0)
20210427node in :[]
20210427node out :[]
[taint329]i invoke specialinvoke $r7.<org.apache.hadoop.util.GenericOptionsParser: void <init>(org.apache.hadoop.conf.Configuration,java.lang.String[])>(r2, r0)
[taint328]i invoke <org.apache.hadoop.util.GenericOptionsParser: void <init>(org.apache.hadoop.conf.Configuration,java.lang.String[])>
[taint328]i invoke 2
value:r2
isoutSetContains  false value:r2 index:0
value:r0
isoutSetContains  false value:r0 index:1
20210427node :r3 = $r7
20210427node in :[]
普通复制语句1112:r3 = $r7
[taint source] u:$r7
SourceList:[]
20210427node out :[]
20210427node :r4 = virtualinvoke r3.<org.apache.hadoop.util.GenericOptionsParser: java.lang.String[] getRemainingArgs()>()
20210427node in :[]
调用语句赋值给变量:r4 = virtualinvoke r3.<org.apache.hadoop.util.GenericOptionsParser: java.lang.String[] getRemainingArgs()>()
20210427node out :[]
[taint328]a invoke <org.apache.hadoop.util.GenericOptionsParser: java.lang.String[] getRemainingArgs()>
[taint328]a invoke 0
20210427node :l0 = staticinvoke <java.lang.System: long currentTimeMillis()>()
20210427node in :[]
调用语句赋值给变量:l0 = staticinvoke <java.lang.System: long currentTimeMillis()>()
20210427node out :[]
[taint328]a invoke <java.lang.System: long currentTimeMillis()>
[taint328]a invoke 0
20210427node :$r8 = new org.apache.hadoop.mapreduce.Job
20210427node in :[]
普通复制语句1112:$r8 = new org.apache.hadoop.mapreduce.Job
[taint source] u:new org.apache.hadoop.mapreduce.Job
SourceList:[]
20210427node out :[]
20210427node :specialinvoke $r8.<org.apache.hadoop.mapreduce.Job: void <init>(org.apache.hadoop.conf.Configuration,java.lang.String)>(r2, "word count")
20210427node in :[]
20210427node out :[]
[taint329]i invoke specialinvoke $r8.<org.apache.hadoop.mapreduce.Job: void <init>(org.apache.hadoop.conf.Configuration,java.lang.String)>(r2, "word count")
[taint328]i invoke <org.apache.hadoop.mapreduce.Job: void <init>(org.apache.hadoop.conf.Configuration,java.lang.String)>
[taint328]i invoke 2
value:r2
isoutSetContains  false value:r2 index:0
value:"word count"
isoutSetContains  false value:"word count" index:1
20210427node :r5 = $r8
20210427node in :[]
普通复制语句1112:r5 = $r8
[taint source] u:$r8
SourceList:[]
20210427node out :[]
20210427node :virtualinvoke r5.<org.apache.hadoop.mapreduce.Job: void setJarByClass(java.lang.Class)>(class "cfhider/WordCount")
20210427node in :[]
20210427node out :[]
[taint329]i invoke virtualinvoke r5.<org.apache.hadoop.mapreduce.Job: void setJarByClass(java.lang.Class)>(class "cfhider/WordCount")
[taint328]i invoke <org.apache.hadoop.mapreduce.Job: void setJarByClass(java.lang.Class)>
[taint328]i invoke 1
value:class "cfhider/WordCount"
isoutSetContains  false value:class "cfhider/WordCount" index:0
20210427node :virtualinvoke r5.<org.apache.hadoop.mapreduce.Job: void setMapperClass(java.lang.Class)>(class "cfhider/WordCount$TokenizerMapper")
20210427node in :[]
20210427node out :[]
[taint329]i invoke virtualinvoke r5.<org.apache.hadoop.mapreduce.Job: void setMapperClass(java.lang.Class)>(class "cfhider/WordCount$TokenizerMapper")
[taint328]i invoke <org.apache.hadoop.mapreduce.Job: void setMapperClass(java.lang.Class)>
[taint328]i invoke 1
value:class "cfhider/WordCount$TokenizerMapper"
isoutSetContains  false value:class "cfhider/WordCount$TokenizerMapper" index:0
20210427node :virtualinvoke r5.<org.apache.hadoop.mapreduce.Job: void setCombinerClass(java.lang.Class)>(class "cfhider/WordCount$IntSumReducer")
20210427node in :[]
20210427node out :[]
[taint329]i invoke virtualinvoke r5.<org.apache.hadoop.mapreduce.Job: void setCombinerClass(java.lang.Class)>(class "cfhider/WordCount$IntSumReducer")
[taint328]i invoke <org.apache.hadoop.mapreduce.Job: void setCombinerClass(java.lang.Class)>
[taint328]i invoke 1
value:class "cfhider/WordCount$IntSumReducer"
isoutSetContains  false value:class "cfhider/WordCount$IntSumReducer" index:0
20210427node :virtualinvoke r5.<org.apache.hadoop.mapreduce.Job: void setReducerClass(java.lang.Class)>(class "cfhider/WordCount$IntSumReducer")
20210427node in :[]
20210427node out :[]
[taint329]i invoke virtualinvoke r5.<org.apache.hadoop.mapreduce.Job: void setReducerClass(java.lang.Class)>(class "cfhider/WordCount$IntSumReducer")
[taint328]i invoke <org.apache.hadoop.mapreduce.Job: void setReducerClass(java.lang.Class)>
[taint328]i invoke 1
value:class "cfhider/WordCount$IntSumReducer"
isoutSetContains  false value:class "cfhider/WordCount$IntSumReducer" index:0
20210427node :virtualinvoke r5.<org.apache.hadoop.mapreduce.Job: void setOutputKeyClass(java.lang.Class)>(class "org/apache/hadoop/io/Text")
20210427node in :[]
20210427node out :[]
[taint329]i invoke virtualinvoke r5.<org.apache.hadoop.mapreduce.Job: void setOutputKeyClass(java.lang.Class)>(class "org/apache/hadoop/io/Text")
[taint328]i invoke <org.apache.hadoop.mapreduce.Job: void setOutputKeyClass(java.lang.Class)>
[taint328]i invoke 1
value:class "org/apache/hadoop/io/Text"
isoutSetContains  false value:class "org/apache/hadoop/io/Text" index:0
20210427node :virtualinvoke r5.<org.apache.hadoop.mapreduce.Job: void setOutputValueClass(java.lang.Class)>(class "org/apache/hadoop/io/IntWritable")
20210427node in :[]
20210427node out :[]
[taint329]i invoke virtualinvoke r5.<org.apache.hadoop.mapreduce.Job: void setOutputValueClass(java.lang.Class)>(class "org/apache/hadoop/io/IntWritable")
[taint328]i invoke <org.apache.hadoop.mapreduce.Job: void setOutputValueClass(java.lang.Class)>
[taint328]i invoke 1
value:class "org/apache/hadoop/io/IntWritable"
isoutSetContains  false value:class "org/apache/hadoop/io/IntWritable" index:0
20210427node :$r9 = new org.apache.hadoop.fs.Path
20210427node in :[]
普通复制语句1112:$r9 = new org.apache.hadoop.fs.Path
[taint source] u:new org.apache.hadoop.fs.Path
SourceList:[]
20210427node out :[]
20210427node :$r10 = r4[0]
20210427node in :[]
普通复制语句1112:$r10 = r4[0]
[taint source] u:r4
SourceList:[]
[taint source] u:0
SourceList:[]
[taint source] u:r4[0]
SourceList:[]
20210427node out :[]
20210427node :specialinvoke $r9.<org.apache.hadoop.fs.Path: void <init>(java.lang.String)>($r10)
20210427node in :[]
20210427node out :[]
[taint329]i invoke specialinvoke $r9.<org.apache.hadoop.fs.Path: void <init>(java.lang.String)>($r10)
[taint328]i invoke <org.apache.hadoop.fs.Path: void <init>(java.lang.String)>
[taint328]i invoke 1
value:$r10
isoutSetContains  false value:$r10 index:0
20210427node :staticinvoke <org.apache.hadoop.mapreduce.lib.input.FileInputFormat: void addInputPath(org.apache.hadoop.mapreduce.Job,org.apache.hadoop.fs.Path)>(r5, $r9)
20210427node in :[]
20210427node out :[]
[taint329]i invoke staticinvoke <org.apache.hadoop.mapreduce.lib.input.FileInputFormat: void addInputPath(org.apache.hadoop.mapreduce.Job,org.apache.hadoop.fs.Path)>(r5, $r9)
[taint328]i invoke <org.apache.hadoop.mapreduce.lib.input.FileInputFormat: void addInputPath(org.apache.hadoop.mapreduce.Job,org.apache.hadoop.fs.Path)>
[taint328]i invoke 2
value:r5
isoutSetContains  false value:r5 index:0
value:$r9
isoutSetContains  false value:$r9 index:1
20210427node :$r11 = new org.apache.hadoop.fs.Path
20210427node in :[]
普通复制语句1112:$r11 = new org.apache.hadoop.fs.Path
[taint source] u:new org.apache.hadoop.fs.Path
SourceList:[]
20210427node out :[]
20210427node :$r12 = r4[1]
20210427node in :[]
普通复制语句1112:$r12 = r4[1]
[taint source] u:r4
SourceList:[]
[taint source] u:1
SourceList:[]
[taint source] u:r4[1]
SourceList:[]
20210427node out :[]
20210427node :specialinvoke $r11.<org.apache.hadoop.fs.Path: void <init>(java.lang.String)>($r12)
20210427node in :[]
20210427node out :[]
[taint329]i invoke specialinvoke $r11.<org.apache.hadoop.fs.Path: void <init>(java.lang.String)>($r12)
[taint328]i invoke <org.apache.hadoop.fs.Path: void <init>(java.lang.String)>
[taint328]i invoke 1
value:$r12
isoutSetContains  false value:$r12 index:0
20210427node :staticinvoke <org.apache.hadoop.mapreduce.lib.output.FileOutputFormat: void setOutputPath(org.apache.hadoop.mapreduce.Job,org.apache.hadoop.fs.Path)>(r5, $r11)
20210427node in :[]
20210427node out :[]
[taint329]i invoke staticinvoke <org.apache.hadoop.mapreduce.lib.output.FileOutputFormat: void setOutputPath(org.apache.hadoop.mapreduce.Job,org.apache.hadoop.fs.Path)>(r5, $r11)
[taint328]i invoke <org.apache.hadoop.mapreduce.lib.output.FileOutputFormat: void setOutputPath(org.apache.hadoop.mapreduce.Job,org.apache.hadoop.fs.Path)>
[taint328]i invoke 2
value:r5
isoutSetContains  false value:r5 index:0
value:$r11
isoutSetContains  false value:$r11 index:1
20210427node :$z0 = virtualinvoke r5.<org.apache.hadoop.mapreduce.Job: boolean waitForCompletion(boolean)>(1)
20210427node in :[]
调用语句赋值给变量:$z0 = virtualinvoke r5.<org.apache.hadoop.mapreduce.Job: boolean waitForCompletion(boolean)>(1)
20210427node out :[]
[taint328]a invoke <org.apache.hadoop.mapreduce.Job: boolean waitForCompletion(boolean)>
[taint328]a invoke 1
assi isoutSet  false value:1 index:0
20210427node :if $z0 == 0 goto $b2 = 1
20210427node in :[]
20210427node out :[]
Have
Stmt if :if $z0 == 0 goto $b2 = 1Stmt if value:$z0 == 0the value=$z0
the value=0
maintainValues.size0
ifValues1
20210427node :$b2 = 1
20210427node in :[]
普通复制语句1112:$b2 = 1
[taint source] u:1
SourceList:[]
20210427node out :[]
20210427node :$b2 = 0
20210427node in :[]
普通复制语句1112:$b2 = 0
[taint source] u:0
SourceList:[]
20210427node out :[]
20210427node :goto [?= b1 = $b2]
20210427node in :[]
20210427node out :[]
20210427node :b1 = $b2
20210427node in :[]
普通复制语句1112:b1 = $b2
[taint source] u:$b2
SourceList:[]
20210427node out :[]
20210427node :$l3 = staticinvoke <java.lang.System: long currentTimeMillis()>()
20210427node in :[]
调用语句赋值给变量:$l3 = staticinvoke <java.lang.System: long currentTimeMillis()>()
20210427node out :[]
[taint328]a invoke <java.lang.System: long currentTimeMillis()>
[taint328]a invoke 0
20210427node :$l4 = $l3 - l0
20210427node in :[]
普通复制语句1112:$l4 = $l3 - l0
[taint source] u:$l3
SourceList:[]
[taint source] u:l0
SourceList:[]
[taint source] u:$l3 - l0
SourceList:[]
20210427node out :[]
20210427node :$d1 = (double) $l4
20210427node in :[]
普通复制语句1112:$d1 = (double) $l4
[taint source] u:$l4
SourceList:[]
[taint source] u:(double) $l4
SourceList:[]
20210427node out :[]
20210427node :d0 = $d1 / 1000.0
20210427node in :[]
普通复制语句1112:d0 = $d1 / 1000.0
[taint source] u:$d1
SourceList:[]
[taint source] u:1000.0
SourceList:[]
[taint source] u:$d1 / 1000.0
SourceList:[]
20210427node out :[]
20210427node :$r13 = <java.lang.System: java.io.PrintStream out>
20210427node in :[]
普通复制语句1112:$r13 = <java.lang.System: java.io.PrintStream out>
[taint source] u:<java.lang.System: java.io.PrintStream out>
SourceList:[]
20210427node out :[]
20210427node :$r14 = new java.lang.StringBuilder
20210427node in :[]
普通复制语句1112:$r14 = new java.lang.StringBuilder
[taint source] u:new java.lang.StringBuilder
SourceList:[]
20210427node out :[]
20210427node :specialinvoke $r14.<java.lang.StringBuilder: void <init>()>()
20210427node in :[]
20210427node out :[]
[taint329]i invoke specialinvoke $r14.<java.lang.StringBuilder: void <init>()>()
[taint328]i invoke <java.lang.StringBuilder: void <init>()>
[taint328]i invoke 0
20210427node :$r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Job Finished in ")
20210427node in :[]
调用语句赋值给变量:$r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Job Finished in ")
20210427node out :[]
[taint328]a invoke <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
[taint328]a invoke 1
assi isoutSet  false value:"Job Finished in " index:0
20210427node :$r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(double)>(d0)
20210427node in :[]
调用语句赋值给变量:$r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(double)>(d0)
20210427node out :[]
[taint328]a invoke <java.lang.StringBuilder: java.lang.StringBuilder append(double)>
[taint328]a invoke 1
assi isoutSet  false value:d0 index:0
20210427node :$r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" seconds")
20210427node in :[]
调用语句赋值给变量:$r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" seconds")
20210427node out :[]
[taint328]a invoke <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
[taint328]a invoke 1
assi isoutSet  false value:" seconds" index:0
20210427node :$r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>()
20210427node in :[]
调用语句赋值给变量:$r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>()
20210427node out :[]
[taint328]a invoke <java.lang.StringBuilder: java.lang.String toString()>
[taint328]a invoke 0
20210427node :virtualinvoke $r13.<java.io.PrintStream: void println(java.lang.String)>($r18)
20210427node in :[]
20210427node out :[]
[taint329]i invoke virtualinvoke $r13.<java.io.PrintStream: void println(java.lang.String)>($r18)
[taint328]i invoke <java.io.PrintStream: void println(java.lang.String)>
[taint328]i invoke 1
value:$r18
isoutSetContains  false value:$r18 index:0
20210427node :staticinvoke <java.lang.System: void exit(int)>(b1)
20210427node in :[]
20210427node out :[]
[taint329]i invoke staticinvoke <java.lang.System: void exit(int)>(b1)
[taint328]i invoke <java.lang.System: void exit(int)>
[taint328]i invoke 1
value:b1
isoutSetContains  false value:b1 index:0
20210427node :return
20210427node in :[]
20210427node out :[]
analysis.outSet.size():0
[CFMAP]2021 After taintAnalysis:{cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}
The data isgggg 
<cfhider.WordCount: void main(java.lang.String[])>
The data isgggg cfhider.WordCount main [] {cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}  {cfhider.WordCount$IntSumReducer={reduce=[I@3310c372}, cfhider.WordCount$TokenizerMapper={map=[I@fbd1ebe}, cfhider.WordCount={main=[I@6713624a}, invoker.SnowFlake={<init>=[I@53844cf2, getNextMill=[I@12d7ceb4, getNewstmp=[I@2ef0e2c5}}
Coming...
doAnalysis Startingqqqqqqqq.....
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
[taint329]i invoke staticinvoke <java.lang.System: void exit(int)>(b1)
[taint328]i invoke <java.lang.System: void exit(int)>
[taint328]i invoke 1
value:b1
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
[taint329]i invoke virtualinvoke $r13.<java.io.PrintStream: void println(java.lang.String)>($r18)
[taint328]i invoke <java.io.PrintStream: void println(java.lang.String)>
[taint328]i invoke 1
value:$r18
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>()
currStmt left value20210420:$r18
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" seconds")
currStmt left value20210420:$r17
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(double)>(d0)
currStmt left value20210420:$r16
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Job Finished in ")
currStmt left value20210420:$r15
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
[taint329]i invoke specialinvoke $r14.<java.lang.StringBuilder: void <init>()>()
[taint328]i invoke <java.lang.StringBuilder: void <init>()>
[taint328]i invoke 0
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$r14 = new java.lang.StringBuilder
currStmt left value20210420:$r14
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$r13 = <java.lang.System: java.io.PrintStream out>
currStmt left value20210420:$r13
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:d0 = $d1 / 1000.0
currStmt left value20210420:d0
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$d1 = (double) $l4
currStmt left value20210420:$d1
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$l4 = $l3 - l0
currStmt left value20210420:$l4
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$l3 = staticinvoke <java.lang.System: long currentTimeMillis()>()
currStmt left value20210420:$l3
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:b1 = $b2
currStmt left value20210420:b1
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$b2 = 0
currStmt left value20210420:$b2
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$b2 = 1
currStmt left value20210420:$b2
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
Have
the value=$z0
the value=0
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$z0 = virtualinvoke r5.<org.apache.hadoop.mapreduce.Job: boolean waitForCompletion(boolean)>(1)
currStmt left value20210420:$z0
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
[taint329]i invoke staticinvoke <org.apache.hadoop.mapreduce.lib.output.FileOutputFormat: void setOutputPath(org.apache.hadoop.mapreduce.Job,org.apache.hadoop.fs.Path)>(r5, $r11)
[taint328]i invoke <org.apache.hadoop.mapreduce.lib.output.FileOutputFormat: void setOutputPath(org.apache.hadoop.mapreduce.Job,org.apache.hadoop.fs.Path)>
[taint328]i invoke 2
value:r5
value:$r11
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
[taint329]i invoke specialinvoke $r11.<org.apache.hadoop.fs.Path: void <init>(java.lang.String)>($r12)
[taint328]i invoke <org.apache.hadoop.fs.Path: void <init>(java.lang.String)>
[taint328]i invoke 1
value:$r12
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$r12 = r4[1]
currStmt left value20210420:$r12
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$r11 = new org.apache.hadoop.fs.Path
currStmt left value20210420:$r11
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
[taint329]i invoke staticinvoke <org.apache.hadoop.mapreduce.lib.input.FileInputFormat: void addInputPath(org.apache.hadoop.mapreduce.Job,org.apache.hadoop.fs.Path)>(r5, $r9)
[taint328]i invoke <org.apache.hadoop.mapreduce.lib.input.FileInputFormat: void addInputPath(org.apache.hadoop.mapreduce.Job,org.apache.hadoop.fs.Path)>
[taint328]i invoke 2
value:r5
value:$r9
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
[taint329]i invoke specialinvoke $r9.<org.apache.hadoop.fs.Path: void <init>(java.lang.String)>($r10)
[taint328]i invoke <org.apache.hadoop.fs.Path: void <init>(java.lang.String)>
[taint328]i invoke 1
value:$r10
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$r10 = r4[0]
currStmt left value20210420:$r10
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$r9 = new org.apache.hadoop.fs.Path
currStmt left value20210420:$r9
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
[taint329]i invoke virtualinvoke r5.<org.apache.hadoop.mapreduce.Job: void setOutputValueClass(java.lang.Class)>(class "org/apache/hadoop/io/IntWritable")
[taint328]i invoke <org.apache.hadoop.mapreduce.Job: void setOutputValueClass(java.lang.Class)>
[taint328]i invoke 1
value:class "org/apache/hadoop/io/IntWritable"
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
[taint329]i invoke virtualinvoke r5.<org.apache.hadoop.mapreduce.Job: void setOutputKeyClass(java.lang.Class)>(class "org/apache/hadoop/io/Text")
[taint328]i invoke <org.apache.hadoop.mapreduce.Job: void setOutputKeyClass(java.lang.Class)>
[taint328]i invoke 1
value:class "org/apache/hadoop/io/Text"
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
[taint329]i invoke virtualinvoke r5.<org.apache.hadoop.mapreduce.Job: void setReducerClass(java.lang.Class)>(class "cfhider/WordCount$IntSumReducer")
[taint328]i invoke <org.apache.hadoop.mapreduce.Job: void setReducerClass(java.lang.Class)>
[taint328]i invoke 1
value:class "cfhider/WordCount$IntSumReducer"
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
[taint329]i invoke virtualinvoke r5.<org.apache.hadoop.mapreduce.Job: void setCombinerClass(java.lang.Class)>(class "cfhider/WordCount$IntSumReducer")
[taint328]i invoke <org.apache.hadoop.mapreduce.Job: void setCombinerClass(java.lang.Class)>
[taint328]i invoke 1
value:class "cfhider/WordCount$IntSumReducer"
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
[taint329]i invoke virtualinvoke r5.<org.apache.hadoop.mapreduce.Job: void setMapperClass(java.lang.Class)>(class "cfhider/WordCount$TokenizerMapper")
[taint328]i invoke <org.apache.hadoop.mapreduce.Job: void setMapperClass(java.lang.Class)>
[taint328]i invoke 1
value:class "cfhider/WordCount$TokenizerMapper"
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
[taint329]i invoke virtualinvoke r5.<org.apache.hadoop.mapreduce.Job: void setJarByClass(java.lang.Class)>(class "cfhider/WordCount")
[taint328]i invoke <org.apache.hadoop.mapreduce.Job: void setJarByClass(java.lang.Class)>
[taint328]i invoke 1
value:class "cfhider/WordCount"
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:r5 = $r8
currStmt left value20210420:r5
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
[taint329]i invoke specialinvoke $r8.<org.apache.hadoop.mapreduce.Job: void <init>(org.apache.hadoop.conf.Configuration,java.lang.String)>(r2, "word count")
[taint328]i invoke <org.apache.hadoop.mapreduce.Job: void <init>(org.apache.hadoop.conf.Configuration,java.lang.String)>
[taint328]i invoke 2
value:r2
value:"word count"
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$r8 = new org.apache.hadoop.mapreduce.Job
currStmt left value20210420:$r8
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:l0 = staticinvoke <java.lang.System: long currentTimeMillis()>()
currStmt left value20210420:l0
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:r4 = virtualinvoke r3.<org.apache.hadoop.util.GenericOptionsParser: java.lang.String[] getRemainingArgs()>()
currStmt left value20210420:r4
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:r3 = $r7
currStmt left value20210420:r3
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
[taint329]i invoke specialinvoke $r7.<org.apache.hadoop.util.GenericOptionsParser: void <init>(org.apache.hadoop.conf.Configuration,java.lang.String[])>(r2, r0)
[taint328]i invoke <org.apache.hadoop.util.GenericOptionsParser: void <init>(org.apache.hadoop.conf.Configuration,java.lang.String[])>
[taint328]i invoke 2
value:r2
value:r0
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$r7 = new org.apache.hadoop.util.GenericOptionsParser
currStmt left value20210420:$r7
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:r2 = $r6
currStmt left value20210420:r2
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
[taint329]i invoke specialinvoke $r6.<org.apache.hadoop.conf.Configuration: void <init>()>()
[taint328]i invoke <org.apache.hadoop.conf.Configuration: void <init>()>
[taint328]i invoke 0
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$r6 = new org.apache.hadoop.conf.Configuration
currStmt left value20210420:$r6
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
[taint329]i invoke virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>("In this project, we test wordcount with SGX!\n")
[taint328]i invoke <java.io.PrintStream: void println(java.lang.String)>
[taint328]i invoke 1
value:"In this project, we test wordcount with SGX!\n"
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$r1 = <java.lang.System: java.io.PrintStream out>
currStmt left value20210420:$r1
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
doAnalysis endqqqqqqq.....
come here
[CFMAP]2021 After BackwardAnalysis:{cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}
[taint into] sootMethod: <init>
[]
class name :cfhider.WordCount
method name :<init>
method list :[]
clasname=cfhider.WordCount
methodname=<init>
sourcelist2021=[]
20210427node :r0 := @this: cfhider.WordCount
20210427node in :[]
20210427node out :[]
currStmt20210423:r0 := @this: cfhider.WordCount
20210427node :specialinvoke r0.<java.lang.Object: void <init>()>()
20210427node in :[]
20210427node out :[]
[taint329]i invoke specialinvoke r0.<java.lang.Object: void <init>()>()
[taint328]i invoke <java.lang.Object: void <init>()>
[taint328]i invoke 0
20210427node :return
20210427node in :[]
20210427node out :[]
analysis.outSet.size():0
[CFMAP]2021 After taintAnalysis:{cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}
The data isgggg 
<cfhider.WordCount: void <init>()>
The data isgggg cfhider.WordCount <init> [] {cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}  {cfhider.WordCount$IntSumReducer={reduce=[I@3310c372}, cfhider.WordCount$TokenizerMapper={map=[I@fbd1ebe}, cfhider.WordCount={main=[I@6713624a}, invoker.SnowFlake={<init>=[I@53844cf2, getNextMill=[I@12d7ceb4, getNewstmp=[I@2ef0e2c5}}
Coming...
doAnalysis Startingqqqqqqqq.....
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
[taint329]i invoke specialinvoke r0.<java.lang.Object: void <init>()>()
[taint328]i invoke <java.lang.Object: void <init>()>
[taint328]i invoke 0
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
doAnalysis endqqqqqqq.....
come here
[CFMAP]2021 After BackwardAnalysis:{cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}
[taint into] sootMethod: main
[]
class name :cfhider.WordCount
method name :main
method list :[]
clasname=cfhider.WordCount
methodname=main
sourcelist2021=[]
20210427node :r0 := @parameter0: java.lang.String[]
20210427node in :[]
[idStmt]iiiiiii r0 := @parameter0: java.lang.String[]  index:0
ClassName:cfhider.WordCount
MethodName:main
aaaa:0
20210427node out :[]
currStmt20210423:r0 := @parameter0: java.lang.String[]
20210427node :$r1 = <java.lang.System: java.io.PrintStream out>
20210427node in :[]
普通复制语句1112:$r1 = <java.lang.System: java.io.PrintStream out>
[taint source] u:<java.lang.System: java.io.PrintStream out>
SourceList:[]
20210427node out :[]
20210427node :virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>("In this project, we test wordcount with SGX!\n")
20210427node in :[]
20210427node out :[]
[taint329]i invoke virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>("In this project, we test wordcount with SGX!\n")
[taint328]i invoke <java.io.PrintStream: void println(java.lang.String)>
[taint328]i invoke 1
value:"In this project, we test wordcount with SGX!\n"
isoutSetContains  false value:"In this project, we test wordcount with SGX!\n" index:0
20210427node :$r6 = new org.apache.hadoop.conf.Configuration
20210427node in :[]
普通复制语句1112:$r6 = new org.apache.hadoop.conf.Configuration
[taint source] u:new org.apache.hadoop.conf.Configuration
SourceList:[]
20210427node out :[]
20210427node :specialinvoke $r6.<org.apache.hadoop.conf.Configuration: void <init>()>()
20210427node in :[]
20210427node out :[]
[taint329]i invoke specialinvoke $r6.<org.apache.hadoop.conf.Configuration: void <init>()>()
[taint328]i invoke <org.apache.hadoop.conf.Configuration: void <init>()>
[taint328]i invoke 0
20210427node :r2 = $r6
20210427node in :[]
普通复制语句1112:r2 = $r6
[taint source] u:$r6
SourceList:[]
20210427node out :[]
20210427node :$r7 = new org.apache.hadoop.util.GenericOptionsParser
20210427node in :[]
普通复制语句1112:$r7 = new org.apache.hadoop.util.GenericOptionsParser
[taint source] u:new org.apache.hadoop.util.GenericOptionsParser
SourceList:[]
20210427node out :[]
20210427node :specialinvoke $r7.<org.apache.hadoop.util.GenericOptionsParser: void <init>(org.apache.hadoop.conf.Configuration,java.lang.String[])>(r2, r0)
20210427node in :[]
20210427node out :[]
[taint329]i invoke specialinvoke $r7.<org.apache.hadoop.util.GenericOptionsParser: void <init>(org.apache.hadoop.conf.Configuration,java.lang.String[])>(r2, r0)
[taint328]i invoke <org.apache.hadoop.util.GenericOptionsParser: void <init>(org.apache.hadoop.conf.Configuration,java.lang.String[])>
[taint328]i invoke 2
value:r2
isoutSetContains  false value:r2 index:0
value:r0
isoutSetContains  false value:r0 index:1
20210427node :r3 = $r7
20210427node in :[]
普通复制语句1112:r3 = $r7
[taint source] u:$r7
SourceList:[]
20210427node out :[]
20210427node :r4 = virtualinvoke r3.<org.apache.hadoop.util.GenericOptionsParser: java.lang.String[] getRemainingArgs()>()
20210427node in :[]
调用语句赋值给变量:r4 = virtualinvoke r3.<org.apache.hadoop.util.GenericOptionsParser: java.lang.String[] getRemainingArgs()>()
20210427node out :[]
[taint328]a invoke <org.apache.hadoop.util.GenericOptionsParser: java.lang.String[] getRemainingArgs()>
[taint328]a invoke 0
20210427node :l0 = staticinvoke <java.lang.System: long currentTimeMillis()>()
20210427node in :[]
调用语句赋值给变量:l0 = staticinvoke <java.lang.System: long currentTimeMillis()>()
20210427node out :[]
[taint328]a invoke <java.lang.System: long currentTimeMillis()>
[taint328]a invoke 0
20210427node :$r8 = new org.apache.hadoop.mapreduce.Job
20210427node in :[]
普通复制语句1112:$r8 = new org.apache.hadoop.mapreduce.Job
[taint source] u:new org.apache.hadoop.mapreduce.Job
SourceList:[]
20210427node out :[]
20210427node :specialinvoke $r8.<org.apache.hadoop.mapreduce.Job: void <init>(org.apache.hadoop.conf.Configuration,java.lang.String)>(r2, "word count")
20210427node in :[]
20210427node out :[]
[taint329]i invoke specialinvoke $r8.<org.apache.hadoop.mapreduce.Job: void <init>(org.apache.hadoop.conf.Configuration,java.lang.String)>(r2, "word count")
[taint328]i invoke <org.apache.hadoop.mapreduce.Job: void <init>(org.apache.hadoop.conf.Configuration,java.lang.String)>
[taint328]i invoke 2
value:r2
isoutSetContains  false value:r2 index:0
value:"word count"
isoutSetContains  false value:"word count" index:1
20210427node :r5 = $r8
20210427node in :[]
普通复制语句1112:r5 = $r8
[taint source] u:$r8
SourceList:[]
20210427node out :[]
20210427node :virtualinvoke r5.<org.apache.hadoop.mapreduce.Job: void setJarByClass(java.lang.Class)>(class "cfhider/WordCount")
20210427node in :[]
20210427node out :[]
[taint329]i invoke virtualinvoke r5.<org.apache.hadoop.mapreduce.Job: void setJarByClass(java.lang.Class)>(class "cfhider/WordCount")
[taint328]i invoke <org.apache.hadoop.mapreduce.Job: void setJarByClass(java.lang.Class)>
[taint328]i invoke 1
value:class "cfhider/WordCount"
isoutSetContains  false value:class "cfhider/WordCount" index:0
20210427node :virtualinvoke r5.<org.apache.hadoop.mapreduce.Job: void setMapperClass(java.lang.Class)>(class "cfhider/WordCount$TokenizerMapper")
20210427node in :[]
20210427node out :[]
[taint329]i invoke virtualinvoke r5.<org.apache.hadoop.mapreduce.Job: void setMapperClass(java.lang.Class)>(class "cfhider/WordCount$TokenizerMapper")
[taint328]i invoke <org.apache.hadoop.mapreduce.Job: void setMapperClass(java.lang.Class)>
[taint328]i invoke 1
value:class "cfhider/WordCount$TokenizerMapper"
isoutSetContains  false value:class "cfhider/WordCount$TokenizerMapper" index:0
20210427node :virtualinvoke r5.<org.apache.hadoop.mapreduce.Job: void setCombinerClass(java.lang.Class)>(class "cfhider/WordCount$IntSumReducer")
20210427node in :[]
20210427node out :[]
[taint329]i invoke virtualinvoke r5.<org.apache.hadoop.mapreduce.Job: void setCombinerClass(java.lang.Class)>(class "cfhider/WordCount$IntSumReducer")
[taint328]i invoke <org.apache.hadoop.mapreduce.Job: void setCombinerClass(java.lang.Class)>
[taint328]i invoke 1
value:class "cfhider/WordCount$IntSumReducer"
isoutSetContains  false value:class "cfhider/WordCount$IntSumReducer" index:0
20210427node :virtualinvoke r5.<org.apache.hadoop.mapreduce.Job: void setReducerClass(java.lang.Class)>(class "cfhider/WordCount$IntSumReducer")
20210427node in :[]
20210427node out :[]
[taint329]i invoke virtualinvoke r5.<org.apache.hadoop.mapreduce.Job: void setReducerClass(java.lang.Class)>(class "cfhider/WordCount$IntSumReducer")
[taint328]i invoke <org.apache.hadoop.mapreduce.Job: void setReducerClass(java.lang.Class)>
[taint328]i invoke 1
value:class "cfhider/WordCount$IntSumReducer"
isoutSetContains  false value:class "cfhider/WordCount$IntSumReducer" index:0
20210427node :virtualinvoke r5.<org.apache.hadoop.mapreduce.Job: void setOutputKeyClass(java.lang.Class)>(class "org/apache/hadoop/io/Text")
20210427node in :[]
20210427node out :[]
[taint329]i invoke virtualinvoke r5.<org.apache.hadoop.mapreduce.Job: void setOutputKeyClass(java.lang.Class)>(class "org/apache/hadoop/io/Text")
[taint328]i invoke <org.apache.hadoop.mapreduce.Job: void setOutputKeyClass(java.lang.Class)>
[taint328]i invoke 1
value:class "org/apache/hadoop/io/Text"
isoutSetContains  false value:class "org/apache/hadoop/io/Text" index:0
20210427node :virtualinvoke r5.<org.apache.hadoop.mapreduce.Job: void setOutputValueClass(java.lang.Class)>(class "org/apache/hadoop/io/IntWritable")
20210427node in :[]
20210427node out :[]
[taint329]i invoke virtualinvoke r5.<org.apache.hadoop.mapreduce.Job: void setOutputValueClass(java.lang.Class)>(class "org/apache/hadoop/io/IntWritable")
[taint328]i invoke <org.apache.hadoop.mapreduce.Job: void setOutputValueClass(java.lang.Class)>
[taint328]i invoke 1
value:class "org/apache/hadoop/io/IntWritable"
isoutSetContains  false value:class "org/apache/hadoop/io/IntWritable" index:0
20210427node :$r9 = new org.apache.hadoop.fs.Path
20210427node in :[]
普通复制语句1112:$r9 = new org.apache.hadoop.fs.Path
[taint source] u:new org.apache.hadoop.fs.Path
SourceList:[]
20210427node out :[]
20210427node :$r10 = r4[0]
20210427node in :[]
普通复制语句1112:$r10 = r4[0]
[taint source] u:r4
SourceList:[]
[taint source] u:0
SourceList:[]
[taint source] u:r4[0]
SourceList:[]
20210427node out :[]
20210427node :specialinvoke $r9.<org.apache.hadoop.fs.Path: void <init>(java.lang.String)>($r10)
20210427node in :[]
20210427node out :[]
[taint329]i invoke specialinvoke $r9.<org.apache.hadoop.fs.Path: void <init>(java.lang.String)>($r10)
[taint328]i invoke <org.apache.hadoop.fs.Path: void <init>(java.lang.String)>
[taint328]i invoke 1
value:$r10
isoutSetContains  false value:$r10 index:0
20210427node :staticinvoke <org.apache.hadoop.mapreduce.lib.input.FileInputFormat: void addInputPath(org.apache.hadoop.mapreduce.Job,org.apache.hadoop.fs.Path)>(r5, $r9)
20210427node in :[]
20210427node out :[]
[taint329]i invoke staticinvoke <org.apache.hadoop.mapreduce.lib.input.FileInputFormat: void addInputPath(org.apache.hadoop.mapreduce.Job,org.apache.hadoop.fs.Path)>(r5, $r9)
[taint328]i invoke <org.apache.hadoop.mapreduce.lib.input.FileInputFormat: void addInputPath(org.apache.hadoop.mapreduce.Job,org.apache.hadoop.fs.Path)>
[taint328]i invoke 2
value:r5
isoutSetContains  false value:r5 index:0
value:$r9
isoutSetContains  false value:$r9 index:1
20210427node :$r11 = new org.apache.hadoop.fs.Path
20210427node in :[]
普通复制语句1112:$r11 = new org.apache.hadoop.fs.Path
[taint source] u:new org.apache.hadoop.fs.Path
SourceList:[]
20210427node out :[]
20210427node :$r12 = r4[1]
20210427node in :[]
普通复制语句1112:$r12 = r4[1]
[taint source] u:r4
SourceList:[]
[taint source] u:1
SourceList:[]
[taint source] u:r4[1]
SourceList:[]
20210427node out :[]
20210427node :specialinvoke $r11.<org.apache.hadoop.fs.Path: void <init>(java.lang.String)>($r12)
20210427node in :[]
20210427node out :[]
[taint329]i invoke specialinvoke $r11.<org.apache.hadoop.fs.Path: void <init>(java.lang.String)>($r12)
[taint328]i invoke <org.apache.hadoop.fs.Path: void <init>(java.lang.String)>
[taint328]i invoke 1
value:$r12
isoutSetContains  false value:$r12 index:0
20210427node :staticinvoke <org.apache.hadoop.mapreduce.lib.output.FileOutputFormat: void setOutputPath(org.apache.hadoop.mapreduce.Job,org.apache.hadoop.fs.Path)>(r5, $r11)
20210427node in :[]
20210427node out :[]
[taint329]i invoke staticinvoke <org.apache.hadoop.mapreduce.lib.output.FileOutputFormat: void setOutputPath(org.apache.hadoop.mapreduce.Job,org.apache.hadoop.fs.Path)>(r5, $r11)
[taint328]i invoke <org.apache.hadoop.mapreduce.lib.output.FileOutputFormat: void setOutputPath(org.apache.hadoop.mapreduce.Job,org.apache.hadoop.fs.Path)>
[taint328]i invoke 2
value:r5
isoutSetContains  false value:r5 index:0
value:$r11
isoutSetContains  false value:$r11 index:1
20210427node :$z0 = virtualinvoke r5.<org.apache.hadoop.mapreduce.Job: boolean waitForCompletion(boolean)>(1)
20210427node in :[]
调用语句赋值给变量:$z0 = virtualinvoke r5.<org.apache.hadoop.mapreduce.Job: boolean waitForCompletion(boolean)>(1)
20210427node out :[]
[taint328]a invoke <org.apache.hadoop.mapreduce.Job: boolean waitForCompletion(boolean)>
[taint328]a invoke 1
assi isoutSet  false value:1 index:0
20210427node :if $z0 == 0 goto $b2 = 1
20210427node in :[]
20210427node out :[]
Have
Stmt if :if $z0 == 0 goto $b2 = 1Stmt if value:$z0 == 0the value=$z0
the value=0
maintainValues.size0
ifValues1
20210427node :$b2 = 1
20210427node in :[]
普通复制语句1112:$b2 = 1
[taint source] u:1
SourceList:[]
20210427node out :[]
20210427node :$b2 = 0
20210427node in :[]
普通复制语句1112:$b2 = 0
[taint source] u:0
SourceList:[]
20210427node out :[]
20210427node :goto [?= b1 = $b2]
20210427node in :[]
20210427node out :[]
20210427node :b1 = $b2
20210427node in :[]
普通复制语句1112:b1 = $b2
[taint source] u:$b2
SourceList:[]
20210427node out :[]
20210427node :$l3 = staticinvoke <java.lang.System: long currentTimeMillis()>()
20210427node in :[]
调用语句赋值给变量:$l3 = staticinvoke <java.lang.System: long currentTimeMillis()>()
20210427node out :[]
[taint328]a invoke <java.lang.System: long currentTimeMillis()>
[taint328]a invoke 0
20210427node :$l4 = $l3 - l0
20210427node in :[]
普通复制语句1112:$l4 = $l3 - l0
[taint source] u:$l3
SourceList:[]
[taint source] u:l0
SourceList:[]
[taint source] u:$l3 - l0
SourceList:[]
20210427node out :[]
20210427node :$d1 = (double) $l4
20210427node in :[]
普通复制语句1112:$d1 = (double) $l4
[taint source] u:$l4
SourceList:[]
[taint source] u:(double) $l4
SourceList:[]
20210427node out :[]
20210427node :d0 = $d1 / 1000.0
20210427node in :[]
普通复制语句1112:d0 = $d1 / 1000.0
[taint source] u:$d1
SourceList:[]
[taint source] u:1000.0
SourceList:[]
[taint source] u:$d1 / 1000.0
SourceList:[]
20210427node out :[]
20210427node :$r13 = <java.lang.System: java.io.PrintStream out>
20210427node in :[]
普通复制语句1112:$r13 = <java.lang.System: java.io.PrintStream out>
[taint source] u:<java.lang.System: java.io.PrintStream out>
SourceList:[]
20210427node out :[]
20210427node :$r14 = new java.lang.StringBuilder
20210427node in :[]
普通复制语句1112:$r14 = new java.lang.StringBuilder
[taint source] u:new java.lang.StringBuilder
SourceList:[]
20210427node out :[]
20210427node :specialinvoke $r14.<java.lang.StringBuilder: void <init>()>()
20210427node in :[]
20210427node out :[]
[taint329]i invoke specialinvoke $r14.<java.lang.StringBuilder: void <init>()>()
[taint328]i invoke <java.lang.StringBuilder: void <init>()>
[taint328]i invoke 0
20210427node :$r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Job Finished in ")
20210427node in :[]
调用语句赋值给变量:$r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Job Finished in ")
20210427node out :[]
[taint328]a invoke <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
[taint328]a invoke 1
assi isoutSet  false value:"Job Finished in " index:0
20210427node :$r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(double)>(d0)
20210427node in :[]
调用语句赋值给变量:$r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(double)>(d0)
20210427node out :[]
[taint328]a invoke <java.lang.StringBuilder: java.lang.StringBuilder append(double)>
[taint328]a invoke 1
assi isoutSet  false value:d0 index:0
20210427node :$r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" seconds")
20210427node in :[]
调用语句赋值给变量:$r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" seconds")
20210427node out :[]
[taint328]a invoke <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
[taint328]a invoke 1
assi isoutSet  false value:" seconds" index:0
20210427node :$r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>()
20210427node in :[]
调用语句赋值给变量:$r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>()
20210427node out :[]
[taint328]a invoke <java.lang.StringBuilder: java.lang.String toString()>
[taint328]a invoke 0
20210427node :virtualinvoke $r13.<java.io.PrintStream: void println(java.lang.String)>($r18)
20210427node in :[]
20210427node out :[]
[taint329]i invoke virtualinvoke $r13.<java.io.PrintStream: void println(java.lang.String)>($r18)
[taint328]i invoke <java.io.PrintStream: void println(java.lang.String)>
[taint328]i invoke 1
value:$r18
isoutSetContains  false value:$r18 index:0
20210427node :staticinvoke <java.lang.System: void exit(int)>(b1)
20210427node in :[]
20210427node out :[]
[taint329]i invoke staticinvoke <java.lang.System: void exit(int)>(b1)
[taint328]i invoke <java.lang.System: void exit(int)>
[taint328]i invoke 1
value:b1
isoutSetContains  false value:b1 index:0
20210427node :return
20210427node in :[]
20210427node out :[]
analysis.outSet.size():0
[CFMAP]2021 After taintAnalysis:{cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}
The data isgggg 
<cfhider.WordCount: void main(java.lang.String[])>
The data isgggg cfhider.WordCount main [] {cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}  {cfhider.WordCount$IntSumReducer={reduce=[I@3310c372}, cfhider.WordCount$TokenizerMapper={map=[I@fbd1ebe}, cfhider.WordCount={main=[I@299a1d24}, invoker.SnowFlake={<init>=[I@53844cf2, getNextMill=[I@12d7ceb4, getNewstmp=[I@2ef0e2c5}}
Coming...
doAnalysis Startingqqqqqqqq.....
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
[taint329]i invoke staticinvoke <java.lang.System: void exit(int)>(b1)
[taint328]i invoke <java.lang.System: void exit(int)>
[taint328]i invoke 1
value:b1
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
[taint329]i invoke virtualinvoke $r13.<java.io.PrintStream: void println(java.lang.String)>($r18)
[taint328]i invoke <java.io.PrintStream: void println(java.lang.String)>
[taint328]i invoke 1
value:$r18
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>()
currStmt left value20210420:$r18
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" seconds")
currStmt left value20210420:$r17
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(double)>(d0)
currStmt left value20210420:$r16
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Job Finished in ")
currStmt left value20210420:$r15
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
[taint329]i invoke specialinvoke $r14.<java.lang.StringBuilder: void <init>()>()
[taint328]i invoke <java.lang.StringBuilder: void <init>()>
[taint328]i invoke 0
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$r14 = new java.lang.StringBuilder
currStmt left value20210420:$r14
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$r13 = <java.lang.System: java.io.PrintStream out>
currStmt left value20210420:$r13
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:d0 = $d1 / 1000.0
currStmt left value20210420:d0
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$d1 = (double) $l4
currStmt left value20210420:$d1
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$l4 = $l3 - l0
currStmt left value20210420:$l4
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$l3 = staticinvoke <java.lang.System: long currentTimeMillis()>()
currStmt left value20210420:$l3
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:b1 = $b2
currStmt left value20210420:b1
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$b2 = 0
currStmt left value20210420:$b2
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$b2 = 1
currStmt left value20210420:$b2
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
Have
the value=$z0
the value=0
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$z0 = virtualinvoke r5.<org.apache.hadoop.mapreduce.Job: boolean waitForCompletion(boolean)>(1)
currStmt left value20210420:$z0
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
[taint329]i invoke staticinvoke <org.apache.hadoop.mapreduce.lib.output.FileOutputFormat: void setOutputPath(org.apache.hadoop.mapreduce.Job,org.apache.hadoop.fs.Path)>(r5, $r11)
[taint328]i invoke <org.apache.hadoop.mapreduce.lib.output.FileOutputFormat: void setOutputPath(org.apache.hadoop.mapreduce.Job,org.apache.hadoop.fs.Path)>
[taint328]i invoke 2
value:r5
value:$r11
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
[taint329]i invoke specialinvoke $r11.<org.apache.hadoop.fs.Path: void <init>(java.lang.String)>($r12)
[taint328]i invoke <org.apache.hadoop.fs.Path: void <init>(java.lang.String)>
[taint328]i invoke 1
value:$r12
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$r12 = r4[1]
currStmt left value20210420:$r12
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$r11 = new org.apache.hadoop.fs.Path
currStmt left value20210420:$r11
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
[taint329]i invoke staticinvoke <org.apache.hadoop.mapreduce.lib.input.FileInputFormat: void addInputPath(org.apache.hadoop.mapreduce.Job,org.apache.hadoop.fs.Path)>(r5, $r9)
[taint328]i invoke <org.apache.hadoop.mapreduce.lib.input.FileInputFormat: void addInputPath(org.apache.hadoop.mapreduce.Job,org.apache.hadoop.fs.Path)>
[taint328]i invoke 2
value:r5
value:$r9
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
[taint329]i invoke specialinvoke $r9.<org.apache.hadoop.fs.Path: void <init>(java.lang.String)>($r10)
[taint328]i invoke <org.apache.hadoop.fs.Path: void <init>(java.lang.String)>
[taint328]i invoke 1
value:$r10
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$r10 = r4[0]
currStmt left value20210420:$r10
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$r9 = new org.apache.hadoop.fs.Path
currStmt left value20210420:$r9
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
[taint329]i invoke virtualinvoke r5.<org.apache.hadoop.mapreduce.Job: void setOutputValueClass(java.lang.Class)>(class "org/apache/hadoop/io/IntWritable")
[taint328]i invoke <org.apache.hadoop.mapreduce.Job: void setOutputValueClass(java.lang.Class)>
[taint328]i invoke 1
value:class "org/apache/hadoop/io/IntWritable"
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
[taint329]i invoke virtualinvoke r5.<org.apache.hadoop.mapreduce.Job: void setOutputKeyClass(java.lang.Class)>(class "org/apache/hadoop/io/Text")
[taint328]i invoke <org.apache.hadoop.mapreduce.Job: void setOutputKeyClass(java.lang.Class)>
[taint328]i invoke 1
value:class "org/apache/hadoop/io/Text"
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
[taint329]i invoke virtualinvoke r5.<org.apache.hadoop.mapreduce.Job: void setReducerClass(java.lang.Class)>(class "cfhider/WordCount$IntSumReducer")
[taint328]i invoke <org.apache.hadoop.mapreduce.Job: void setReducerClass(java.lang.Class)>
[taint328]i invoke 1
value:class "cfhider/WordCount$IntSumReducer"
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
[taint329]i invoke virtualinvoke r5.<org.apache.hadoop.mapreduce.Job: void setCombinerClass(java.lang.Class)>(class "cfhider/WordCount$IntSumReducer")
[taint328]i invoke <org.apache.hadoop.mapreduce.Job: void setCombinerClass(java.lang.Class)>
[taint328]i invoke 1
value:class "cfhider/WordCount$IntSumReducer"
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
[taint329]i invoke virtualinvoke r5.<org.apache.hadoop.mapreduce.Job: void setMapperClass(java.lang.Class)>(class "cfhider/WordCount$TokenizerMapper")
[taint328]i invoke <org.apache.hadoop.mapreduce.Job: void setMapperClass(java.lang.Class)>
[taint328]i invoke 1
value:class "cfhider/WordCount$TokenizerMapper"
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
[taint329]i invoke virtualinvoke r5.<org.apache.hadoop.mapreduce.Job: void setJarByClass(java.lang.Class)>(class "cfhider/WordCount")
[taint328]i invoke <org.apache.hadoop.mapreduce.Job: void setJarByClass(java.lang.Class)>
[taint328]i invoke 1
value:class "cfhider/WordCount"
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:r5 = $r8
currStmt left value20210420:r5
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
[taint329]i invoke specialinvoke $r8.<org.apache.hadoop.mapreduce.Job: void <init>(org.apache.hadoop.conf.Configuration,java.lang.String)>(r2, "word count")
[taint328]i invoke <org.apache.hadoop.mapreduce.Job: void <init>(org.apache.hadoop.conf.Configuration,java.lang.String)>
[taint328]i invoke 2
value:r2
value:"word count"
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$r8 = new org.apache.hadoop.mapreduce.Job
currStmt left value20210420:$r8
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:l0 = staticinvoke <java.lang.System: long currentTimeMillis()>()
currStmt left value20210420:l0
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:r4 = virtualinvoke r3.<org.apache.hadoop.util.GenericOptionsParser: java.lang.String[] getRemainingArgs()>()
currStmt left value20210420:r4
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:r3 = $r7
currStmt left value20210420:r3
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
[taint329]i invoke specialinvoke $r7.<org.apache.hadoop.util.GenericOptionsParser: void <init>(org.apache.hadoop.conf.Configuration,java.lang.String[])>(r2, r0)
[taint328]i invoke <org.apache.hadoop.util.GenericOptionsParser: void <init>(org.apache.hadoop.conf.Configuration,java.lang.String[])>
[taint328]i invoke 2
value:r2
value:r0
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$r7 = new org.apache.hadoop.util.GenericOptionsParser
currStmt left value20210420:$r7
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:r2 = $r6
currStmt left value20210420:r2
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
[taint329]i invoke specialinvoke $r6.<org.apache.hadoop.conf.Configuration: void <init>()>()
[taint328]i invoke <org.apache.hadoop.conf.Configuration: void <init>()>
[taint328]i invoke 0
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$r6 = new org.apache.hadoop.conf.Configuration
currStmt left value20210420:$r6
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
[taint329]i invoke virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>("In this project, we test wordcount with SGX!\n")
[taint328]i invoke <java.io.PrintStream: void println(java.lang.String)>
[taint328]i invoke 1
value:"In this project, we test wordcount with SGX!\n"
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$r1 = <java.lang.System: java.io.PrintStream out>
currStmt left value20210420:$r1
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
doAnalysis endqqqqqqq.....
come here
[CFMAP]2021 After BackwardAnalysis:{cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}
[taint]SooClass:cfhider.WordCount$TokenizerMapper
[taint] class: cfhider.WordCount$TokenizerMapper
methList :{<init>=[], <clinit>=[], map=[$z0]}
[taint into] sootMethod: <init>
[]
class name :cfhider.WordCount$TokenizerMapper
method name :<init>
method list :[]
clasname=cfhider.WordCount$TokenizerMapper
methodname=<init>
sourcelist2021=[]
20210427node :r0 := @this: cfhider.WordCount$TokenizerMapper
20210427node in :[]
20210427node out :[]
currStmt20210423:r0 := @this: cfhider.WordCount$TokenizerMapper
20210427node :specialinvoke r0.<org.apache.hadoop.mapreduce.Mapper: void <init>()>()
20210427node in :[]
20210427node out :[]
[taint329]i invoke specialinvoke r0.<org.apache.hadoop.mapreduce.Mapper: void <init>()>()
[taint328]i invoke <org.apache.hadoop.mapreduce.Mapper: void <init>()>
[taint328]i invoke 0
20210427node :$r1 = new org.apache.hadoop.io.Text
20210427node in :[]
普通复制语句1112:$r1 = new org.apache.hadoop.io.Text
[taint source] u:new org.apache.hadoop.io.Text
SourceList:[]
20210427node out :[]
20210427node :specialinvoke $r1.<org.apache.hadoop.io.Text: void <init>()>()
20210427node in :[]
20210427node out :[]
[taint329]i invoke specialinvoke $r1.<org.apache.hadoop.io.Text: void <init>()>()
[taint328]i invoke <org.apache.hadoop.io.Text: void <init>()>
[taint328]i invoke 0
20210427node :r0.<cfhider.WordCount$TokenizerMapper: org.apache.hadoop.io.Text word> = $r1
20210427node in :[]
普通复制语句1112:r0.<cfhider.WordCount$TokenizerMapper: org.apache.hadoop.io.Text word> = $r1
[taint source] u:r0
SourceList:[]
[taint source] u:$r1
SourceList:[]
20210427node out :[]
20210427node :return
20210427node in :[]
20210427node out :[]
analysis.outSet.size():0
[CFMAP]2021 After taintAnalysis:{cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}
The data isgggg 
<cfhider.WordCount$TokenizerMapper: void <init>()>
The data isgggg cfhider.WordCount$TokenizerMapper <init> [] {cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}  {cfhider.WordCount$IntSumReducer={reduce=[I@3310c372}, cfhider.WordCount$TokenizerMapper={map=[I@fbd1ebe}, cfhider.WordCount={main=[I@299a1d24}, invoker.SnowFlake={<init>=[I@53844cf2, getNextMill=[I@12d7ceb4, getNewstmp=[I@2ef0e2c5}}
Coming...
doAnalysis Startingqqqqqqqq.....
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:r0.<cfhider.WordCount$TokenizerMapper: org.apache.hadoop.io.Text word> = $r1
currStmt left value20210420:r0.<cfhider.WordCount$TokenizerMapper: org.apache.hadoop.io.Text word>
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
[taint329]i invoke specialinvoke $r1.<org.apache.hadoop.io.Text: void <init>()>()
[taint328]i invoke <org.apache.hadoop.io.Text: void <init>()>
[taint328]i invoke 0
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$r1 = new org.apache.hadoop.io.Text
currStmt left value20210420:$r1
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
[taint329]i invoke specialinvoke r0.<org.apache.hadoop.mapreduce.Mapper: void <init>()>()
[taint328]i invoke <org.apache.hadoop.mapreduce.Mapper: void <init>()>
[taint328]i invoke 0
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
doAnalysis endqqqqqqq.....
come here
[CFMAP]2021 After BackwardAnalysis:{cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}
[taint into] sootMethod: map
[$z0]
class name :cfhider.WordCount$TokenizerMapper
method name :map
method list :[$z0]
clasname=cfhider.WordCount$TokenizerMapper
methodname=map
sourcelist2021=[$z0]
20210427node :r0 := @this: cfhider.WordCount$TokenizerMapper
20210427node in :[]
20210427node out :[]
currStmt20210423:r0 := @this: cfhider.WordCount$TokenizerMapper
20210427node :r1 := @parameter0: java.lang.Object
20210427node in :[]
[idStmt]iiiiiii r1 := @parameter0: java.lang.Object  index:0
ClassName:cfhider.WordCount$TokenizerMapper
MethodName:map
aaaa:0
20210427node out :[]
currStmt20210423:r1 := @parameter0: java.lang.Object
20210427node :r2 := @parameter1: org.apache.hadoop.io.Text
20210427node in :[]
[idStmt]iiiiiii r2 := @parameter1: org.apache.hadoop.io.Text  index:1
ClassName:cfhider.WordCount$TokenizerMapper
MethodName:map
aaaa:0
20210427node out :[]
currStmt20210423:r2 := @parameter1: org.apache.hadoop.io.Text
20210427node :r3 := @parameter2: org.apache.hadoop.mapreduce.Mapper$Context
20210427node in :[]
[idStmt]iiiiiii r3 := @parameter2: org.apache.hadoop.mapreduce.Mapper$Context  index:2
ClassName:cfhider.WordCount$TokenizerMapper
MethodName:map
aaaa:0
20210427node out :[]
currStmt20210423:r3 := @parameter2: org.apache.hadoop.mapreduce.Mapper$Context
20210427node :$r4 = new java.util.StringTokenizer
20210427node in :[]
普通复制语句1112:$r4 = new java.util.StringTokenizer
[taint source] u:new java.util.StringTokenizer
SourceList:[$z0]
20210427node out :[]
20210427node :$r6 = virtualinvoke r2.<org.apache.hadoop.io.Text: java.lang.String toString()>()
20210427node in :[]
调用语句赋值给变量:$r6 = virtualinvoke r2.<org.apache.hadoop.io.Text: java.lang.String toString()>()
20210427node out :[]
[taint328]a invoke <org.apache.hadoop.io.Text: java.lang.String toString()>
[taint328]a invoke 0
20210427node :specialinvoke $r4.<java.util.StringTokenizer: void <init>(java.lang.String)>($r6)
20210427node in :[]
20210427node out :[]
[taint329]i invoke specialinvoke $r4.<java.util.StringTokenizer: void <init>(java.lang.String)>($r6)
[taint328]i invoke <java.util.StringTokenizer: void <init>(java.lang.String)>
[taint328]i invoke 1
value:$r6
isoutSetContains  false value:$r6 index:0
20210427node :r5 = $r4
20210427node in :[]
普通复制语句1112:r5 = $r4
[taint source] u:$r4
SourceList:[$z0]
20210427node out :[]
20210427node :$z0 = virtualinvoke r5.<java.util.StringTokenizer: boolean hasMoreTokens()>()
20210427node in :[]
调用语句赋值给变量:$z0 = virtualinvoke r5.<java.util.StringTokenizer: boolean hasMoreTokens()>()
20210427node out :[]
[taint328]a invoke <java.util.StringTokenizer: boolean hasMoreTokens()>
[taint328]a invoke 0
20210427node :if $z0 == 0 goto return
20210427node in :[]
20210427node out :[]
Have
Stmt if :if $z0 == 0 goto returnStmt if value:$z0 == 0the value=$z0
the value=0
maintainValues.size1
ifValues1
20210427node :return
20210427node in :[]
20210427node out :[]
20210427node :$r7 = r0.<cfhider.WordCount$TokenizerMapper: org.apache.hadoop.io.Text word>
20210427node in :[]
普通复制语句1112:$r7 = r0.<cfhider.WordCount$TokenizerMapper: org.apache.hadoop.io.Text word>
[taint source] u:r0
SourceList:[$z0]
[taint source] u:r0.<cfhider.WordCount$TokenizerMapper: org.apache.hadoop.io.Text word>
SourceList:[$z0]
20210427node out :[]
20210427node :$r8 = virtualinvoke r5.<java.util.StringTokenizer: java.lang.String nextToken()>()
20210427node in :[]
调用语句赋值给变量:$r8 = virtualinvoke r5.<java.util.StringTokenizer: java.lang.String nextToken()>()
20210427node out :[]
[taint328]a invoke <java.util.StringTokenizer: java.lang.String nextToken()>
[taint328]a invoke 0
20210427node :virtualinvoke $r7.<org.apache.hadoop.io.Text: void set(java.lang.String)>($r8)
20210427node in :[]
20210427node out :[]
[taint329]i invoke virtualinvoke $r7.<org.apache.hadoop.io.Text: void set(java.lang.String)>($r8)
[taint328]i invoke <org.apache.hadoop.io.Text: void set(java.lang.String)>
[taint328]i invoke 1
value:$r8
isoutSetContains  false value:$r8 index:0
20210427node :$r9 = r0.<cfhider.WordCount$TokenizerMapper: org.apache.hadoop.io.Text word>
20210427node in :[]
普通复制语句1112:$r9 = r0.<cfhider.WordCount$TokenizerMapper: org.apache.hadoop.io.Text word>
[taint source] u:r0
SourceList:[$z0]
[taint source] u:r0.<cfhider.WordCount$TokenizerMapper: org.apache.hadoop.io.Text word>
SourceList:[$z0]
20210427node out :[]
20210427node :$r10 = <cfhider.WordCount$TokenizerMapper: org.apache.hadoop.io.IntWritable one>
20210427node in :[]
普通复制语句1112:$r10 = <cfhider.WordCount$TokenizerMapper: org.apache.hadoop.io.IntWritable one>
[taint source] u:<cfhider.WordCount$TokenizerMapper: org.apache.hadoop.io.IntWritable one>
SourceList:[$z0]
20210427node out :[]
20210427node :virtualinvoke r3.<org.apache.hadoop.mapreduce.Mapper$Context: void write(java.lang.Object,java.lang.Object)>($r9, $r10)
20210427node in :[]
20210427node out :[]
[taint329]i invoke virtualinvoke r3.<org.apache.hadoop.mapreduce.Mapper$Context: void write(java.lang.Object,java.lang.Object)>($r9, $r10)
[taint328]i invoke <org.apache.hadoop.mapreduce.TaskInputOutputContext: void write(java.lang.Object,java.lang.Object)>
[taint328]i invoke 2
value:$r9
isoutSetContains  false value:$r9 index:0
value:$r10
isoutSetContains  false value:$r10 index:1
20210427node :goto [?= $z0 = virtualinvoke r5.<java.util.StringTokenizer: boolean hasMoreTokens()>()]
20210427node in :[]
20210427node out :[]
analysis.outSet.size():0
[CFMAP]2021 After taintAnalysis:{cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}
The data isgggg 
<cfhider.WordCount$TokenizerMapper: void map(java.lang.Object,org.apache.hadoop.io.Text,org.apache.hadoop.mapreduce.Mapper$Context)>
The data isgggg cfhider.WordCount$TokenizerMapper map [$z0] {cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}  {cfhider.WordCount$IntSumReducer={reduce=[I@3310c372}, cfhider.WordCount$TokenizerMapper={map=[I@44ef3bd2}, cfhider.WordCount={main=[I@299a1d24}, invoker.SnowFlake={<init>=[I@53844cf2, getNextMill=[I@12d7ceb4, getNewstmp=[I@2ef0e2c5}}
Coming...
doAnalysis Startingqqqqqqqq.....
srcValue=[]
destValue:[]
taint data:[$z0]
Coming in Backward Analysis
srcValue=[]
destValue:[]
taint data:[$z0]
Coming in Backward Analysis
[taint329]i invoke virtualinvoke r3.<org.apache.hadoop.mapreduce.Mapper$Context: void write(java.lang.Object,java.lang.Object)>($r9, $r10)
[taint328]i invoke <org.apache.hadoop.mapreduce.TaskInputOutputContext: void write(java.lang.Object,java.lang.Object)>
[taint328]i invoke 2
value:$r9
value:$r10
srcValue=[]
destValue:[]
taint data:[$z0]
Coming in Backward Analysis
currStmt20210420:$r10 = <cfhider.WordCount$TokenizerMapper: org.apache.hadoop.io.IntWritable one>
currStmt left value20210420:$r10
srcValue=[]
destValue:[]
taint data:[$z0]
Coming in Backward Analysis
currStmt20210420:$r9 = r0.<cfhider.WordCount$TokenizerMapper: org.apache.hadoop.io.Text word>
currStmt left value20210420:$r9
srcValue=[]
destValue:[]
taint data:[$z0]
Coming in Backward Analysis
[taint329]i invoke virtualinvoke $r7.<org.apache.hadoop.io.Text: void set(java.lang.String)>($r8)
[taint328]i invoke <org.apache.hadoop.io.Text: void set(java.lang.String)>
[taint328]i invoke 1
value:$r8
srcValue=[]
destValue:[]
taint data:[$z0]
Coming in Backward Analysis
currStmt20210420:$r8 = virtualinvoke r5.<java.util.StringTokenizer: java.lang.String nextToken()>()
currStmt left value20210420:$r8
srcValue=[]
destValue:[]
taint data:[$z0]
Coming in Backward Analysis
currStmt20210420:$r7 = r0.<cfhider.WordCount$TokenizerMapper: org.apache.hadoop.io.Text word>
currStmt left value20210420:$r7
srcValue=[]
destValue:[]
taint data:[$z0]
Coming in Backward Analysis
srcValue=[]
destValue:[]
taint data:[$z0]
Coming in Backward Analysis
Have
the value=$z0
the value=0
srcValue=[]
destValue:[]
taint data:[$z0]
Coming in Backward Analysis
currStmt20210420:$z0 = virtualinvoke r5.<java.util.StringTokenizer: boolean hasMoreTokens()>()
currStmt left value20210420:$z0
BackWard 20210419===virtualinvoke r5.<java.util.StringTokenizer: boolean hasMoreTokens()>()
[BackWard taint329]i invoke $z0 = virtualinvoke r5.<java.util.StringTokenizer: boolean hasMoreTokens()>()
[BackWard taint328]i invoke <java.util.StringTokenizer: boolean hasMoreTokens()>
srcValue=[]
destValue:[]
taint data:[$z0]
Coming in Backward Analysis
currStmt20210420:r5 = $r4
currStmt left value20210420:r5
srcValue=[]
destValue:[]
taint data:[$z0]
Coming in Backward Analysis
[taint329]i invoke specialinvoke $r4.<java.util.StringTokenizer: void <init>(java.lang.String)>($r6)
[taint328]i invoke <java.util.StringTokenizer: void <init>(java.lang.String)>
[taint328]i invoke 1
value:$r6
srcValue=[]
destValue:[]
taint data:[$z0]
Coming in Backward Analysis
currStmt20210420:$r6 = virtualinvoke r2.<org.apache.hadoop.io.Text: java.lang.String toString()>()
currStmt left value20210420:$r6
srcValue=[]
destValue:[]
taint data:[$z0]
Coming in Backward Analysis
currStmt20210420:$r4 = new java.util.StringTokenizer
currStmt left value20210420:$r4
srcValue=[]
destValue:[]
taint data:[$z0]
Coming in Backward Analysis
srcValue=[]
destValue:[]
taint data:[$z0]
Coming in Backward Analysis
srcValue=[]
destValue:[]
taint data:[$z0]
Coming in Backward Analysis
srcValue=[]
destValue:[]
taint data:[$z0]
Coming in Backward Analysis
doAnalysis endqqqqqqq.....
come here
[CFMAP]2021 After BackwardAnalysis:{cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}
[taint into] sootMethod: map
[$z0]
class name :cfhider.WordCount$TokenizerMapper
method name :map
method list :[$z0]
clasname=cfhider.WordCount$TokenizerMapper
methodname=map
sourcelist2021=[$z0]
20210427node :r0 := @this: cfhider.WordCount$TokenizerMapper
20210427node in :[]
20210427node out :[]
currStmt20210423:r0 := @this: cfhider.WordCount$TokenizerMapper
20210427node :r1 := @parameter0: java.lang.Object
20210427node in :[]
[idStmt]iiiiiii r1 := @parameter0: java.lang.Object  index:0
ClassName:cfhider.WordCount$TokenizerMapper
MethodName:map
aaaa:0
20210427node out :[]
currStmt20210423:r1 := @parameter0: java.lang.Object
20210427node :r2 := @parameter1: java.lang.Object
20210427node in :[]
[idStmt]iiiiiii r2 := @parameter1: java.lang.Object  index:1
ClassName:cfhider.WordCount$TokenizerMapper
MethodName:map
aaaa:0
20210427node out :[]
currStmt20210423:r2 := @parameter1: java.lang.Object
20210427node :r3 := @parameter2: org.apache.hadoop.mapreduce.Mapper$Context
20210427node in :[]
[idStmt]iiiiiii r3 := @parameter2: org.apache.hadoop.mapreduce.Mapper$Context  index:2
ClassName:cfhider.WordCount$TokenizerMapper
MethodName:map
aaaa:0
20210427node out :[]
currStmt20210423:r3 := @parameter2: org.apache.hadoop.mapreduce.Mapper$Context
20210427node :$r4 = (org.apache.hadoop.io.Text) r2
20210427node in :[]
普通复制语句1112:$r4 = (org.apache.hadoop.io.Text) r2
[taint source] u:r2
SourceList:[$z0]
[taint source] u:(org.apache.hadoop.io.Text) r2
SourceList:[$z0]
20210427node out :[]
20210427node :virtualinvoke r0.<cfhider.WordCount$TokenizerMapper: void map(java.lang.Object,org.apache.hadoop.io.Text,org.apache.hadoop.mapreduce.Mapper$Context)>(r1, $r4, r3)
20210427node in :[]
20210427node out :[]
[taint329]i invoke virtualinvoke r0.<cfhider.WordCount$TokenizerMapper: void map(java.lang.Object,org.apache.hadoop.io.Text,org.apache.hadoop.mapreduce.Mapper$Context)>(r1, $r4, r3)
[taint328]i invoke <cfhider.WordCount$TokenizerMapper: void map(java.lang.Object,org.apache.hadoop.io.Text,org.apache.hadoop.mapreduce.Mapper$Context)>
[taint328]i invoke 3
value:r1
isoutSetContains  false value:r1 index:0
value:$r4
isoutSetContains  false value:$r4 index:1
value:r3
isoutSetContains  false value:r3 index:2
[invokemap]invoke:map  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
20210427node :return
20210427node in :[]
20210427node out :[]
analysis.outSet.size():0
[CFMAP]2021 After taintAnalysis:{cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}
The data isgggg 
<cfhider.WordCount$TokenizerMapper: void map(java.lang.Object,java.lang.Object,org.apache.hadoop.mapreduce.Mapper$Context)>
The data isgggg cfhider.WordCount$TokenizerMapper map [$z0] {cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}  {cfhider.WordCount$IntSumReducer={reduce=[I@3310c372}, cfhider.WordCount$TokenizerMapper={map=[I@36407b59}, cfhider.WordCount={main=[I@299a1d24}, invoker.SnowFlake={<init>=[I@53844cf2, getNextMill=[I@12d7ceb4, getNewstmp=[I@2ef0e2c5}}
Coming...
doAnalysis Startingqqqqqqqq.....
srcValue=[]
destValue:[]
taint data:[$z0]
Coming in Backward Analysis
srcValue=[]
destValue:[]
taint data:[$z0]
Coming in Backward Analysis
[taint329]i invoke virtualinvoke r0.<cfhider.WordCount$TokenizerMapper: void map(java.lang.Object,org.apache.hadoop.io.Text,org.apache.hadoop.mapreduce.Mapper$Context)>(r1, $r4, r3)
[taint328]i invoke <cfhider.WordCount$TokenizerMapper: void map(java.lang.Object,org.apache.hadoop.io.Text,org.apache.hadoop.mapreduce.Mapper$Context)>
[taint328]i invoke 3
value:r1
in here:[I@43622be2
[invokemap]invoke:map  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
value:$r4
in here:[I@43622be2
[invokemap]invoke:map  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
value:r3
in here:[I@43622be2
[invokemap]invoke:map  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
srcValue=[]
destValue:[]
taint data:[$z0]
Coming in Backward Analysis
currStmt20210420:$r4 = (org.apache.hadoop.io.Text) r2
currStmt left value20210420:$r4
srcValue=[]
destValue:[]
taint data:[$z0]
Coming in Backward Analysis
srcValue=[]
destValue:[]
taint data:[$z0]
Coming in Backward Analysis
srcValue=[]
destValue:[]
taint data:[$z0]
Coming in Backward Analysis
srcValue=[]
destValue:[]
taint data:[$z0]
Coming in Backward Analysis
doAnalysis endqqqqqqq.....
come here
[CFMAP]2021 After BackwardAnalysis:{cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}
[taint into] sootMethod: <clinit>
[]
class name :cfhider.WordCount$TokenizerMapper
method name :<clinit>
method list :[]
clasname=cfhider.WordCount$TokenizerMapper
methodname=<clinit>
sourcelist2021=[]
20210427node :$r0 = new org.apache.hadoop.io.IntWritable
20210427node in :[]
普通复制语句1112:$r0 = new org.apache.hadoop.io.IntWritable
[taint source] u:new org.apache.hadoop.io.IntWritable
SourceList:[]
20210427node out :[]
20210427node :specialinvoke $r0.<org.apache.hadoop.io.IntWritable: void <init>(int)>(1)
20210427node in :[]
20210427node out :[]
[taint329]i invoke specialinvoke $r0.<org.apache.hadoop.io.IntWritable: void <init>(int)>(1)
[taint328]i invoke <org.apache.hadoop.io.IntWritable: void <init>(int)>
[taint328]i invoke 1
value:1
isoutSetContains  false value:1 index:0
20210427node :<cfhider.WordCount$TokenizerMapper: org.apache.hadoop.io.IntWritable one> = $r0
20210427node in :[]
普通复制语句1112:<cfhider.WordCount$TokenizerMapper: org.apache.hadoop.io.IntWritable one> = $r0
[taint source] u:$r0
SourceList:[]
20210427node out :[]
20210427node :return
20210427node in :[]
20210427node out :[]
analysis.outSet.size():0
[CFMAP]2021 After taintAnalysis:{cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}
The data isgggg 
<cfhider.WordCount$TokenizerMapper: void <clinit>()>
The data isgggg cfhider.WordCount$TokenizerMapper <clinit> [] {cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}  {cfhider.WordCount$IntSumReducer={reduce=[I@3310c372}, cfhider.WordCount$TokenizerMapper={map=[I@36407b59}, cfhider.WordCount={main=[I@299a1d24}, invoker.SnowFlake={<init>=[I@53844cf2, getNextMill=[I@12d7ceb4, getNewstmp=[I@2ef0e2c5}}
Coming...
doAnalysis Startingqqqqqqqq.....
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:<cfhider.WordCount$TokenizerMapper: org.apache.hadoop.io.IntWritable one> = $r0
currStmt left value20210420:<cfhider.WordCount$TokenizerMapper: org.apache.hadoop.io.IntWritable one>
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
[taint329]i invoke specialinvoke $r0.<org.apache.hadoop.io.IntWritable: void <init>(int)>(1)
[taint328]i invoke <org.apache.hadoop.io.IntWritable: void <init>(int)>
[taint328]i invoke 1
value:1
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$r0 = new org.apache.hadoop.io.IntWritable
currStmt left value20210420:$r0
doAnalysis endqqqqqqq.....
come here
[CFMAP]2021 After BackwardAnalysis:{cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}
[taint into] sootMethod: <init>
[]
class name :cfhider.WordCount$TokenizerMapper
method name :<init>
method list :[]
clasname=cfhider.WordCount$TokenizerMapper
methodname=<init>
sourcelist2021=[]
20210427node :r0 := @this: cfhider.WordCount$TokenizerMapper
20210427node in :[]
20210427node out :[]
currStmt20210423:r0 := @this: cfhider.WordCount$TokenizerMapper
20210427node :specialinvoke r0.<org.apache.hadoop.mapreduce.Mapper: void <init>()>()
20210427node in :[]
20210427node out :[]
[taint329]i invoke specialinvoke r0.<org.apache.hadoop.mapreduce.Mapper: void <init>()>()
[taint328]i invoke <org.apache.hadoop.mapreduce.Mapper: void <init>()>
[taint328]i invoke 0
20210427node :$r1 = new org.apache.hadoop.io.Text
20210427node in :[]
普通复制语句1112:$r1 = new org.apache.hadoop.io.Text
[taint source] u:new org.apache.hadoop.io.Text
SourceList:[]
20210427node out :[]
20210427node :specialinvoke $r1.<org.apache.hadoop.io.Text: void <init>()>()
20210427node in :[]
20210427node out :[]
[taint329]i invoke specialinvoke $r1.<org.apache.hadoop.io.Text: void <init>()>()
[taint328]i invoke <org.apache.hadoop.io.Text: void <init>()>
[taint328]i invoke 0
20210427node :r0.<cfhider.WordCount$TokenizerMapper: org.apache.hadoop.io.Text word> = $r1
20210427node in :[]
普通复制语句1112:r0.<cfhider.WordCount$TokenizerMapper: org.apache.hadoop.io.Text word> = $r1
[taint source] u:r0
SourceList:[]
[taint source] u:$r1
SourceList:[]
20210427node out :[]
20210427node :return
20210427node in :[]
20210427node out :[]
analysis.outSet.size():0
[CFMAP]2021 After taintAnalysis:{cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}
The data isgggg 
<cfhider.WordCount$TokenizerMapper: void <init>()>
The data isgggg cfhider.WordCount$TokenizerMapper <init> [] {cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}  {cfhider.WordCount$IntSumReducer={reduce=[I@3310c372}, cfhider.WordCount$TokenizerMapper={map=[I@36407b59}, cfhider.WordCount={main=[I@299a1d24}, invoker.SnowFlake={<init>=[I@53844cf2, getNextMill=[I@12d7ceb4, getNewstmp=[I@2ef0e2c5}}
Coming...
doAnalysis Startingqqqqqqqq.....
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:r0.<cfhider.WordCount$TokenizerMapper: org.apache.hadoop.io.Text word> = $r1
currStmt left value20210420:r0.<cfhider.WordCount$TokenizerMapper: org.apache.hadoop.io.Text word>
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
[taint329]i invoke specialinvoke $r1.<org.apache.hadoop.io.Text: void <init>()>()
[taint328]i invoke <org.apache.hadoop.io.Text: void <init>()>
[taint328]i invoke 0
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$r1 = new org.apache.hadoop.io.Text
currStmt left value20210420:$r1
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
[taint329]i invoke specialinvoke r0.<org.apache.hadoop.mapreduce.Mapper: void <init>()>()
[taint328]i invoke <org.apache.hadoop.mapreduce.Mapper: void <init>()>
[taint328]i invoke 0
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
doAnalysis endqqqqqqq.....
come here
[CFMAP]2021 After BackwardAnalysis:{cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}
[taint into] sootMethod: map
[$z0]
class name :cfhider.WordCount$TokenizerMapper
method name :map
method list :[$z0]
clasname=cfhider.WordCount$TokenizerMapper
methodname=map
sourcelist2021=[$z0]
20210427node :r0 := @this: cfhider.WordCount$TokenizerMapper
20210427node in :[]
20210427node out :[]
currStmt20210423:r0 := @this: cfhider.WordCount$TokenizerMapper
20210427node :r1 := @parameter0: java.lang.Object
20210427node in :[]
[idStmt]iiiiiii r1 := @parameter0: java.lang.Object  index:0
ClassName:cfhider.WordCount$TokenizerMapper
MethodName:map
aaaa:0
20210427node out :[]
currStmt20210423:r1 := @parameter0: java.lang.Object
20210427node :r2 := @parameter1: org.apache.hadoop.io.Text
20210427node in :[]
[idStmt]iiiiiii r2 := @parameter1: org.apache.hadoop.io.Text  index:1
ClassName:cfhider.WordCount$TokenizerMapper
MethodName:map
aaaa:0
20210427node out :[]
currStmt20210423:r2 := @parameter1: org.apache.hadoop.io.Text
20210427node :r3 := @parameter2: org.apache.hadoop.mapreduce.Mapper$Context
20210427node in :[]
[idStmt]iiiiiii r3 := @parameter2: org.apache.hadoop.mapreduce.Mapper$Context  index:2
ClassName:cfhider.WordCount$TokenizerMapper
MethodName:map
aaaa:0
20210427node out :[]
currStmt20210423:r3 := @parameter2: org.apache.hadoop.mapreduce.Mapper$Context
20210427node :$r4 = new java.util.StringTokenizer
20210427node in :[]
普通复制语句1112:$r4 = new java.util.StringTokenizer
[taint source] u:new java.util.StringTokenizer
SourceList:[$z0]
20210427node out :[]
20210427node :$r6 = virtualinvoke r2.<org.apache.hadoop.io.Text: java.lang.String toString()>()
20210427node in :[]
调用语句赋值给变量:$r6 = virtualinvoke r2.<org.apache.hadoop.io.Text: java.lang.String toString()>()
20210427node out :[]
[taint328]a invoke <org.apache.hadoop.io.Text: java.lang.String toString()>
[taint328]a invoke 0
20210427node :specialinvoke $r4.<java.util.StringTokenizer: void <init>(java.lang.String)>($r6)
20210427node in :[]
20210427node out :[]
[taint329]i invoke specialinvoke $r4.<java.util.StringTokenizer: void <init>(java.lang.String)>($r6)
[taint328]i invoke <java.util.StringTokenizer: void <init>(java.lang.String)>
[taint328]i invoke 1
value:$r6
isoutSetContains  false value:$r6 index:0
20210427node :r5 = $r4
20210427node in :[]
普通复制语句1112:r5 = $r4
[taint source] u:$r4
SourceList:[$z0]
20210427node out :[]
20210427node :$z0 = virtualinvoke r5.<java.util.StringTokenizer: boolean hasMoreTokens()>()
20210427node in :[]
调用语句赋值给变量:$z0 = virtualinvoke r5.<java.util.StringTokenizer: boolean hasMoreTokens()>()
20210427node out :[]
[taint328]a invoke <java.util.StringTokenizer: boolean hasMoreTokens()>
[taint328]a invoke 0
20210427node :if $z0 == 0 goto return
20210427node in :[]
20210427node out :[]
Have
Stmt if :if $z0 == 0 goto returnStmt if value:$z0 == 0the value=$z0
the value=0
maintainValues.size1
ifValues1
20210427node :return
20210427node in :[]
20210427node out :[]
20210427node :$r7 = r0.<cfhider.WordCount$TokenizerMapper: org.apache.hadoop.io.Text word>
20210427node in :[]
普通复制语句1112:$r7 = r0.<cfhider.WordCount$TokenizerMapper: org.apache.hadoop.io.Text word>
[taint source] u:r0
SourceList:[$z0]
[taint source] u:r0.<cfhider.WordCount$TokenizerMapper: org.apache.hadoop.io.Text word>
SourceList:[$z0]
20210427node out :[]
20210427node :$r8 = virtualinvoke r5.<java.util.StringTokenizer: java.lang.String nextToken()>()
20210427node in :[]
调用语句赋值给变量:$r8 = virtualinvoke r5.<java.util.StringTokenizer: java.lang.String nextToken()>()
20210427node out :[]
[taint328]a invoke <java.util.StringTokenizer: java.lang.String nextToken()>
[taint328]a invoke 0
20210427node :virtualinvoke $r7.<org.apache.hadoop.io.Text: void set(java.lang.String)>($r8)
20210427node in :[]
20210427node out :[]
[taint329]i invoke virtualinvoke $r7.<org.apache.hadoop.io.Text: void set(java.lang.String)>($r8)
[taint328]i invoke <org.apache.hadoop.io.Text: void set(java.lang.String)>
[taint328]i invoke 1
value:$r8
isoutSetContains  false value:$r8 index:0
20210427node :$r9 = r0.<cfhider.WordCount$TokenizerMapper: org.apache.hadoop.io.Text word>
20210427node in :[]
普通复制语句1112:$r9 = r0.<cfhider.WordCount$TokenizerMapper: org.apache.hadoop.io.Text word>
[taint source] u:r0
SourceList:[$z0]
[taint source] u:r0.<cfhider.WordCount$TokenizerMapper: org.apache.hadoop.io.Text word>
SourceList:[$z0]
20210427node out :[]
20210427node :$r10 = <cfhider.WordCount$TokenizerMapper: org.apache.hadoop.io.IntWritable one>
20210427node in :[]
普通复制语句1112:$r10 = <cfhider.WordCount$TokenizerMapper: org.apache.hadoop.io.IntWritable one>
[taint source] u:<cfhider.WordCount$TokenizerMapper: org.apache.hadoop.io.IntWritable one>
SourceList:[$z0]
20210427node out :[]
20210427node :virtualinvoke r3.<org.apache.hadoop.mapreduce.Mapper$Context: void write(java.lang.Object,java.lang.Object)>($r9, $r10)
20210427node in :[]
20210427node out :[]
[taint329]i invoke virtualinvoke r3.<org.apache.hadoop.mapreduce.Mapper$Context: void write(java.lang.Object,java.lang.Object)>($r9, $r10)
[taint328]i invoke <org.apache.hadoop.mapreduce.TaskInputOutputContext: void write(java.lang.Object,java.lang.Object)>
[taint328]i invoke 2
value:$r9
isoutSetContains  false value:$r9 index:0
value:$r10
isoutSetContains  false value:$r10 index:1
20210427node :goto [?= $z0 = virtualinvoke r5.<java.util.StringTokenizer: boolean hasMoreTokens()>()]
20210427node in :[]
20210427node out :[]
analysis.outSet.size():0
[CFMAP]2021 After taintAnalysis:{cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}
The data isgggg 
<cfhider.WordCount$TokenizerMapper: void map(java.lang.Object,org.apache.hadoop.io.Text,org.apache.hadoop.mapreduce.Mapper$Context)>
The data isgggg cfhider.WordCount$TokenizerMapper map [$z0] {cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}  {cfhider.WordCount$IntSumReducer={reduce=[I@3310c372}, cfhider.WordCount$TokenizerMapper={map=[I@622f24fd}, cfhider.WordCount={main=[I@299a1d24}, invoker.SnowFlake={<init>=[I@53844cf2, getNextMill=[I@12d7ceb4, getNewstmp=[I@2ef0e2c5}}
Coming...
doAnalysis Startingqqqqqqqq.....
srcValue=[]
destValue:[]
taint data:[$z0]
Coming in Backward Analysis
srcValue=[]
destValue:[]
taint data:[$z0]
Coming in Backward Analysis
[taint329]i invoke virtualinvoke r3.<org.apache.hadoop.mapreduce.Mapper$Context: void write(java.lang.Object,java.lang.Object)>($r9, $r10)
[taint328]i invoke <org.apache.hadoop.mapreduce.TaskInputOutputContext: void write(java.lang.Object,java.lang.Object)>
[taint328]i invoke 2
value:$r9
value:$r10
srcValue=[]
destValue:[]
taint data:[$z0]
Coming in Backward Analysis
currStmt20210420:$r10 = <cfhider.WordCount$TokenizerMapper: org.apache.hadoop.io.IntWritable one>
currStmt left value20210420:$r10
srcValue=[]
destValue:[]
taint data:[$z0]
Coming in Backward Analysis
currStmt20210420:$r9 = r0.<cfhider.WordCount$TokenizerMapper: org.apache.hadoop.io.Text word>
currStmt left value20210420:$r9
srcValue=[]
destValue:[]
taint data:[$z0]
Coming in Backward Analysis
[taint329]i invoke virtualinvoke $r7.<org.apache.hadoop.io.Text: void set(java.lang.String)>($r8)
[taint328]i invoke <org.apache.hadoop.io.Text: void set(java.lang.String)>
[taint328]i invoke 1
value:$r8
srcValue=[]
destValue:[]
taint data:[$z0]
Coming in Backward Analysis
currStmt20210420:$r8 = virtualinvoke r5.<java.util.StringTokenizer: java.lang.String nextToken()>()
currStmt left value20210420:$r8
srcValue=[]
destValue:[]
taint data:[$z0]
Coming in Backward Analysis
currStmt20210420:$r7 = r0.<cfhider.WordCount$TokenizerMapper: org.apache.hadoop.io.Text word>
currStmt left value20210420:$r7
srcValue=[]
destValue:[]
taint data:[$z0]
Coming in Backward Analysis
srcValue=[]
destValue:[]
taint data:[$z0]
Coming in Backward Analysis
Have
the value=$z0
the value=0
srcValue=[]
destValue:[]
taint data:[$z0]
Coming in Backward Analysis
currStmt20210420:$z0 = virtualinvoke r5.<java.util.StringTokenizer: boolean hasMoreTokens()>()
currStmt left value20210420:$z0
BackWard 20210419===virtualinvoke r5.<java.util.StringTokenizer: boolean hasMoreTokens()>()
[BackWard taint329]i invoke $z0 = virtualinvoke r5.<java.util.StringTokenizer: boolean hasMoreTokens()>()
[BackWard taint328]i invoke <java.util.StringTokenizer: boolean hasMoreTokens()>
srcValue=[]
destValue:[]
taint data:[$z0]
Coming in Backward Analysis
currStmt20210420:r5 = $r4
currStmt left value20210420:r5
srcValue=[]
destValue:[]
taint data:[$z0]
Coming in Backward Analysis
[taint329]i invoke specialinvoke $r4.<java.util.StringTokenizer: void <init>(java.lang.String)>($r6)
[taint328]i invoke <java.util.StringTokenizer: void <init>(java.lang.String)>
[taint328]i invoke 1
value:$r6
srcValue=[]
destValue:[]
taint data:[$z0]
Coming in Backward Analysis
currStmt20210420:$r6 = virtualinvoke r2.<org.apache.hadoop.io.Text: java.lang.String toString()>()
currStmt left value20210420:$r6
srcValue=[]
destValue:[]
taint data:[$z0]
Coming in Backward Analysis
currStmt20210420:$r4 = new java.util.StringTokenizer
currStmt left value20210420:$r4
srcValue=[]
destValue:[]
taint data:[$z0]
Coming in Backward Analysis
srcValue=[]
destValue:[]
taint data:[$z0]
Coming in Backward Analysis
srcValue=[]
destValue:[]
taint data:[$z0]
Coming in Backward Analysis
srcValue=[]
destValue:[]
taint data:[$z0]
Coming in Backward Analysis
doAnalysis endqqqqqqq.....
come here
[CFMAP]2021 After BackwardAnalysis:{cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}
[taint into] sootMethod: map
[$z0]
class name :cfhider.WordCount$TokenizerMapper
method name :map
method list :[$z0]
clasname=cfhider.WordCount$TokenizerMapper
methodname=map
sourcelist2021=[$z0]
20210427node :r0 := @this: cfhider.WordCount$TokenizerMapper
20210427node in :[]
20210427node out :[]
currStmt20210423:r0 := @this: cfhider.WordCount$TokenizerMapper
20210427node :r1 := @parameter0: java.lang.Object
20210427node in :[]
[idStmt]iiiiiii r1 := @parameter0: java.lang.Object  index:0
ClassName:cfhider.WordCount$TokenizerMapper
MethodName:map
aaaa:0
20210427node out :[]
currStmt20210423:r1 := @parameter0: java.lang.Object
20210427node :r2 := @parameter1: java.lang.Object
20210427node in :[]
[idStmt]iiiiiii r2 := @parameter1: java.lang.Object  index:1
ClassName:cfhider.WordCount$TokenizerMapper
MethodName:map
aaaa:0
20210427node out :[]
currStmt20210423:r2 := @parameter1: java.lang.Object
20210427node :r3 := @parameter2: org.apache.hadoop.mapreduce.Mapper$Context
20210427node in :[]
[idStmt]iiiiiii r3 := @parameter2: org.apache.hadoop.mapreduce.Mapper$Context  index:2
ClassName:cfhider.WordCount$TokenizerMapper
MethodName:map
aaaa:0
20210427node out :[]
currStmt20210423:r3 := @parameter2: org.apache.hadoop.mapreduce.Mapper$Context
20210427node :$r4 = (org.apache.hadoop.io.Text) r2
20210427node in :[]
普通复制语句1112:$r4 = (org.apache.hadoop.io.Text) r2
[taint source] u:r2
SourceList:[$z0]
[taint source] u:(org.apache.hadoop.io.Text) r2
SourceList:[$z0]
20210427node out :[]
20210427node :virtualinvoke r0.<cfhider.WordCount$TokenizerMapper: void map(java.lang.Object,org.apache.hadoop.io.Text,org.apache.hadoop.mapreduce.Mapper$Context)>(r1, $r4, r3)
20210427node in :[]
20210427node out :[]
[taint329]i invoke virtualinvoke r0.<cfhider.WordCount$TokenizerMapper: void map(java.lang.Object,org.apache.hadoop.io.Text,org.apache.hadoop.mapreduce.Mapper$Context)>(r1, $r4, r3)
[taint328]i invoke <cfhider.WordCount$TokenizerMapper: void map(java.lang.Object,org.apache.hadoop.io.Text,org.apache.hadoop.mapreduce.Mapper$Context)>
[taint328]i invoke 3
value:r1
isoutSetContains  false value:r1 index:0
value:$r4
isoutSetContains  false value:$r4 index:1
value:r3
isoutSetContains  false value:r3 index:2
[invokemap]invoke:map  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
20210427node :return
20210427node in :[]
20210427node out :[]
analysis.outSet.size():0
[CFMAP]2021 After taintAnalysis:{cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}
The data isgggg 
<cfhider.WordCount$TokenizerMapper: void map(java.lang.Object,java.lang.Object,org.apache.hadoop.mapreduce.Mapper$Context)>
The data isgggg cfhider.WordCount$TokenizerMapper map [$z0] {cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}  {cfhider.WordCount$IntSumReducer={reduce=[I@3310c372}, cfhider.WordCount$TokenizerMapper={map=[I@5259067}, cfhider.WordCount={main=[I@299a1d24}, invoker.SnowFlake={<init>=[I@53844cf2, getNextMill=[I@12d7ceb4, getNewstmp=[I@2ef0e2c5}}
Coming...
doAnalysis Startingqqqqqqqq.....
srcValue=[]
destValue:[]
taint data:[$z0]
Coming in Backward Analysis
srcValue=[]
destValue:[]
taint data:[$z0]
Coming in Backward Analysis
[taint329]i invoke virtualinvoke r0.<cfhider.WordCount$TokenizerMapper: void map(java.lang.Object,org.apache.hadoop.io.Text,org.apache.hadoop.mapreduce.Mapper$Context)>(r1, $r4, r3)
[taint328]i invoke <cfhider.WordCount$TokenizerMapper: void map(java.lang.Object,org.apache.hadoop.io.Text,org.apache.hadoop.mapreduce.Mapper$Context)>
[taint328]i invoke 3
value:r1
in here:[I@652b5cd4
[invokemap]invoke:map  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
value:$r4
in here:[I@652b5cd4
[invokemap]invoke:map  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
value:r3
in here:[I@652b5cd4
[invokemap]invoke:map  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
srcValue=[]
destValue:[]
taint data:[$z0]
Coming in Backward Analysis
currStmt20210420:$r4 = (org.apache.hadoop.io.Text) r2
currStmt left value20210420:$r4
srcValue=[]
destValue:[]
taint data:[$z0]
Coming in Backward Analysis
srcValue=[]
destValue:[]
taint data:[$z0]
Coming in Backward Analysis
srcValue=[]
destValue:[]
taint data:[$z0]
Coming in Backward Analysis
srcValue=[]
destValue:[]
taint data:[$z0]
Coming in Backward Analysis
doAnalysis endqqqqqqq.....
come here
[CFMAP]2021 After BackwardAnalysis:{cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}
[taint into] sootMethod: <clinit>
[]
class name :cfhider.WordCount$TokenizerMapper
method name :<clinit>
method list :[]
clasname=cfhider.WordCount$TokenizerMapper
methodname=<clinit>
sourcelist2021=[]
20210427node :$r0 = new org.apache.hadoop.io.IntWritable
20210427node in :[]
普通复制语句1112:$r0 = new org.apache.hadoop.io.IntWritable
[taint source] u:new org.apache.hadoop.io.IntWritable
SourceList:[]
20210427node out :[]
20210427node :specialinvoke $r0.<org.apache.hadoop.io.IntWritable: void <init>(int)>(1)
20210427node in :[]
20210427node out :[]
[taint329]i invoke specialinvoke $r0.<org.apache.hadoop.io.IntWritable: void <init>(int)>(1)
[taint328]i invoke <org.apache.hadoop.io.IntWritable: void <init>(int)>
[taint328]i invoke 1
value:1
isoutSetContains  false value:1 index:0
20210427node :<cfhider.WordCount$TokenizerMapper: org.apache.hadoop.io.IntWritable one> = $r0
20210427node in :[]
普通复制语句1112:<cfhider.WordCount$TokenizerMapper: org.apache.hadoop.io.IntWritable one> = $r0
[taint source] u:$r0
SourceList:[]
20210427node out :[]
20210427node :return
20210427node in :[]
20210427node out :[]
analysis.outSet.size():0
[CFMAP]2021 After taintAnalysis:{cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}
The data isgggg 
<cfhider.WordCount$TokenizerMapper: void <clinit>()>
The data isgggg cfhider.WordCount$TokenizerMapper <clinit> [] {cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}  {cfhider.WordCount$IntSumReducer={reduce=[I@3310c372}, cfhider.WordCount$TokenizerMapper={map=[I@5259067}, cfhider.WordCount={main=[I@299a1d24}, invoker.SnowFlake={<init>=[I@53844cf2, getNextMill=[I@12d7ceb4, getNewstmp=[I@2ef0e2c5}}
Coming...
doAnalysis Startingqqqqqqqq.....
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:<cfhider.WordCount$TokenizerMapper: org.apache.hadoop.io.IntWritable one> = $r0
currStmt left value20210420:<cfhider.WordCount$TokenizerMapper: org.apache.hadoop.io.IntWritable one>
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
[taint329]i invoke specialinvoke $r0.<org.apache.hadoop.io.IntWritable: void <init>(int)>(1)
[taint328]i invoke <org.apache.hadoop.io.IntWritable: void <init>(int)>
[taint328]i invoke 1
value:1
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$r0 = new org.apache.hadoop.io.IntWritable
currStmt left value20210420:$r0
doAnalysis endqqqqqqq.....
come here
[CFMAP]2021 After BackwardAnalysis:{cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}
[taint into] sootMethod: <init>
[]
class name :cfhider.WordCount$TokenizerMapper
method name :<init>
method list :[]
clasname=cfhider.WordCount$TokenizerMapper
methodname=<init>
sourcelist2021=[]
20210427node :r0 := @this: cfhider.WordCount$TokenizerMapper
20210427node in :[]
20210427node out :[]
currStmt20210423:r0 := @this: cfhider.WordCount$TokenizerMapper
20210427node :specialinvoke r0.<org.apache.hadoop.mapreduce.Mapper: void <init>()>()
20210427node in :[]
20210427node out :[]
[taint329]i invoke specialinvoke r0.<org.apache.hadoop.mapreduce.Mapper: void <init>()>()
[taint328]i invoke <org.apache.hadoop.mapreduce.Mapper: void <init>()>
[taint328]i invoke 0
20210427node :$r1 = new org.apache.hadoop.io.Text
20210427node in :[]
普通复制语句1112:$r1 = new org.apache.hadoop.io.Text
[taint source] u:new org.apache.hadoop.io.Text
SourceList:[]
20210427node out :[]
20210427node :specialinvoke $r1.<org.apache.hadoop.io.Text: void <init>()>()
20210427node in :[]
20210427node out :[]
[taint329]i invoke specialinvoke $r1.<org.apache.hadoop.io.Text: void <init>()>()
[taint328]i invoke <org.apache.hadoop.io.Text: void <init>()>
[taint328]i invoke 0
20210427node :r0.<cfhider.WordCount$TokenizerMapper: org.apache.hadoop.io.Text word> = $r1
20210427node in :[]
普通复制语句1112:r0.<cfhider.WordCount$TokenizerMapper: org.apache.hadoop.io.Text word> = $r1
[taint source] u:r0
SourceList:[]
[taint source] u:$r1
SourceList:[]
20210427node out :[]
20210427node :return
20210427node in :[]
20210427node out :[]
analysis.outSet.size():0
[CFMAP]2021 After taintAnalysis:{cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}
The data isgggg 
<cfhider.WordCount$TokenizerMapper: void <init>()>
The data isgggg cfhider.WordCount$TokenizerMapper <init> [] {cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}  {cfhider.WordCount$IntSumReducer={reduce=[I@3310c372}, cfhider.WordCount$TokenizerMapper={map=[I@5259067}, cfhider.WordCount={main=[I@299a1d24}, invoker.SnowFlake={<init>=[I@53844cf2, getNextMill=[I@12d7ceb4, getNewstmp=[I@2ef0e2c5}}
Coming...
doAnalysis Startingqqqqqqqq.....
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:r0.<cfhider.WordCount$TokenizerMapper: org.apache.hadoop.io.Text word> = $r1
currStmt left value20210420:r0.<cfhider.WordCount$TokenizerMapper: org.apache.hadoop.io.Text word>
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
[taint329]i invoke specialinvoke $r1.<org.apache.hadoop.io.Text: void <init>()>()
[taint328]i invoke <org.apache.hadoop.io.Text: void <init>()>
[taint328]i invoke 0
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$r1 = new org.apache.hadoop.io.Text
currStmt left value20210420:$r1
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
[taint329]i invoke specialinvoke r0.<org.apache.hadoop.mapreduce.Mapper: void <init>()>()
[taint328]i invoke <org.apache.hadoop.mapreduce.Mapper: void <init>()>
[taint328]i invoke 0
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
doAnalysis endqqqqqqq.....
come here
[CFMAP]2021 After BackwardAnalysis:{cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}
[taint into] sootMethod: map
[$z0]
class name :cfhider.WordCount$TokenizerMapper
method name :map
method list :[$z0]
clasname=cfhider.WordCount$TokenizerMapper
methodname=map
sourcelist2021=[$z0]
20210427node :r0 := @this: cfhider.WordCount$TokenizerMapper
20210427node in :[]
20210427node out :[]
currStmt20210423:r0 := @this: cfhider.WordCount$TokenizerMapper
20210427node :r1 := @parameter0: java.lang.Object
20210427node in :[]
[idStmt]iiiiiii r1 := @parameter0: java.lang.Object  index:0
ClassName:cfhider.WordCount$TokenizerMapper
MethodName:map
aaaa:0
20210427node out :[]
currStmt20210423:r1 := @parameter0: java.lang.Object
20210427node :r2 := @parameter1: org.apache.hadoop.io.Text
20210427node in :[]
[idStmt]iiiiiii r2 := @parameter1: org.apache.hadoop.io.Text  index:1
ClassName:cfhider.WordCount$TokenizerMapper
MethodName:map
aaaa:0
20210427node out :[]
currStmt20210423:r2 := @parameter1: org.apache.hadoop.io.Text
20210427node :r3 := @parameter2: org.apache.hadoop.mapreduce.Mapper$Context
20210427node in :[]
[idStmt]iiiiiii r3 := @parameter2: org.apache.hadoop.mapreduce.Mapper$Context  index:2
ClassName:cfhider.WordCount$TokenizerMapper
MethodName:map
aaaa:0
20210427node out :[]
currStmt20210423:r3 := @parameter2: org.apache.hadoop.mapreduce.Mapper$Context
20210427node :$r4 = new java.util.StringTokenizer
20210427node in :[]
普通复制语句1112:$r4 = new java.util.StringTokenizer
[taint source] u:new java.util.StringTokenizer
SourceList:[$z0]
20210427node out :[]
20210427node :$r6 = virtualinvoke r2.<org.apache.hadoop.io.Text: java.lang.String toString()>()
20210427node in :[]
调用语句赋值给变量:$r6 = virtualinvoke r2.<org.apache.hadoop.io.Text: java.lang.String toString()>()
20210427node out :[]
[taint328]a invoke <org.apache.hadoop.io.Text: java.lang.String toString()>
[taint328]a invoke 0
20210427node :specialinvoke $r4.<java.util.StringTokenizer: void <init>(java.lang.String)>($r6)
20210427node in :[]
20210427node out :[]
[taint329]i invoke specialinvoke $r4.<java.util.StringTokenizer: void <init>(java.lang.String)>($r6)
[taint328]i invoke <java.util.StringTokenizer: void <init>(java.lang.String)>
[taint328]i invoke 1
value:$r6
isoutSetContains  false value:$r6 index:0
20210427node :r5 = $r4
20210427node in :[]
普通复制语句1112:r5 = $r4
[taint source] u:$r4
SourceList:[$z0]
20210427node out :[]
20210427node :$z0 = virtualinvoke r5.<java.util.StringTokenizer: boolean hasMoreTokens()>()
20210427node in :[]
调用语句赋值给变量:$z0 = virtualinvoke r5.<java.util.StringTokenizer: boolean hasMoreTokens()>()
20210427node out :[]
[taint328]a invoke <java.util.StringTokenizer: boolean hasMoreTokens()>
[taint328]a invoke 0
20210427node :if $z0 == 0 goto return
20210427node in :[]
20210427node out :[]
Have
Stmt if :if $z0 == 0 goto returnStmt if value:$z0 == 0the value=$z0
the value=0
maintainValues.size1
ifValues1
20210427node :return
20210427node in :[]
20210427node out :[]
20210427node :$r7 = r0.<cfhider.WordCount$TokenizerMapper: org.apache.hadoop.io.Text word>
20210427node in :[]
普通复制语句1112:$r7 = r0.<cfhider.WordCount$TokenizerMapper: org.apache.hadoop.io.Text word>
[taint source] u:r0
SourceList:[$z0]
[taint source] u:r0.<cfhider.WordCount$TokenizerMapper: org.apache.hadoop.io.Text word>
SourceList:[$z0]
20210427node out :[]
20210427node :$r8 = virtualinvoke r5.<java.util.StringTokenizer: java.lang.String nextToken()>()
20210427node in :[]
调用语句赋值给变量:$r8 = virtualinvoke r5.<java.util.StringTokenizer: java.lang.String nextToken()>()
20210427node out :[]
[taint328]a invoke <java.util.StringTokenizer: java.lang.String nextToken()>
[taint328]a invoke 0
20210427node :virtualinvoke $r7.<org.apache.hadoop.io.Text: void set(java.lang.String)>($r8)
20210427node in :[]
20210427node out :[]
[taint329]i invoke virtualinvoke $r7.<org.apache.hadoop.io.Text: void set(java.lang.String)>($r8)
[taint328]i invoke <org.apache.hadoop.io.Text: void set(java.lang.String)>
[taint328]i invoke 1
value:$r8
isoutSetContains  false value:$r8 index:0
20210427node :$r9 = r0.<cfhider.WordCount$TokenizerMapper: org.apache.hadoop.io.Text word>
20210427node in :[]
普通复制语句1112:$r9 = r0.<cfhider.WordCount$TokenizerMapper: org.apache.hadoop.io.Text word>
[taint source] u:r0
SourceList:[$z0]
[taint source] u:r0.<cfhider.WordCount$TokenizerMapper: org.apache.hadoop.io.Text word>
SourceList:[$z0]
20210427node out :[]
20210427node :$r10 = <cfhider.WordCount$TokenizerMapper: org.apache.hadoop.io.IntWritable one>
20210427node in :[]
普通复制语句1112:$r10 = <cfhider.WordCount$TokenizerMapper: org.apache.hadoop.io.IntWritable one>
[taint source] u:<cfhider.WordCount$TokenizerMapper: org.apache.hadoop.io.IntWritable one>
SourceList:[$z0]
20210427node out :[]
20210427node :virtualinvoke r3.<org.apache.hadoop.mapreduce.Mapper$Context: void write(java.lang.Object,java.lang.Object)>($r9, $r10)
20210427node in :[]
20210427node out :[]
[taint329]i invoke virtualinvoke r3.<org.apache.hadoop.mapreduce.Mapper$Context: void write(java.lang.Object,java.lang.Object)>($r9, $r10)
[taint328]i invoke <org.apache.hadoop.mapreduce.TaskInputOutputContext: void write(java.lang.Object,java.lang.Object)>
[taint328]i invoke 2
value:$r9
isoutSetContains  false value:$r9 index:0
value:$r10
isoutSetContains  false value:$r10 index:1
20210427node :goto [?= $z0 = virtualinvoke r5.<java.util.StringTokenizer: boolean hasMoreTokens()>()]
20210427node in :[]
20210427node out :[]
analysis.outSet.size():0
[CFMAP]2021 After taintAnalysis:{cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}
The data isgggg 
<cfhider.WordCount$TokenizerMapper: void map(java.lang.Object,org.apache.hadoop.io.Text,org.apache.hadoop.mapreduce.Mapper$Context)>
The data isgggg cfhider.WordCount$TokenizerMapper map [$z0] {cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}  {cfhider.WordCount$IntSumReducer={reduce=[I@3310c372}, cfhider.WordCount$TokenizerMapper={map=[I@1db9630}, cfhider.WordCount={main=[I@299a1d24}, invoker.SnowFlake={<init>=[I@53844cf2, getNextMill=[I@12d7ceb4, getNewstmp=[I@2ef0e2c5}}
Coming...
doAnalysis Startingqqqqqqqq.....
srcValue=[]
destValue:[]
taint data:[$z0]
Coming in Backward Analysis
srcValue=[]
destValue:[]
taint data:[$z0]
Coming in Backward Analysis
[taint329]i invoke virtualinvoke r3.<org.apache.hadoop.mapreduce.Mapper$Context: void write(java.lang.Object,java.lang.Object)>($r9, $r10)
[taint328]i invoke <org.apache.hadoop.mapreduce.TaskInputOutputContext: void write(java.lang.Object,java.lang.Object)>
[taint328]i invoke 2
value:$r9
value:$r10
srcValue=[]
destValue:[]
taint data:[$z0]
Coming in Backward Analysis
currStmt20210420:$r10 = <cfhider.WordCount$TokenizerMapper: org.apache.hadoop.io.IntWritable one>
currStmt left value20210420:$r10
srcValue=[]
destValue:[]
taint data:[$z0]
Coming in Backward Analysis
currStmt20210420:$r9 = r0.<cfhider.WordCount$TokenizerMapper: org.apache.hadoop.io.Text word>
currStmt left value20210420:$r9
srcValue=[]
destValue:[]
taint data:[$z0]
Coming in Backward Analysis
[taint329]i invoke virtualinvoke $r7.<org.apache.hadoop.io.Text: void set(java.lang.String)>($r8)
[taint328]i invoke <org.apache.hadoop.io.Text: void set(java.lang.String)>
[taint328]i invoke 1
value:$r8
srcValue=[]
destValue:[]
taint data:[$z0]
Coming in Backward Analysis
currStmt20210420:$r8 = virtualinvoke r5.<java.util.StringTokenizer: java.lang.String nextToken()>()
currStmt left value20210420:$r8
srcValue=[]
destValue:[]
taint data:[$z0]
Coming in Backward Analysis
currStmt20210420:$r7 = r0.<cfhider.WordCount$TokenizerMapper: org.apache.hadoop.io.Text word>
currStmt left value20210420:$r7
srcValue=[]
destValue:[]
taint data:[$z0]
Coming in Backward Analysis
srcValue=[]
destValue:[]
taint data:[$z0]
Coming in Backward Analysis
Have
the value=$z0
the value=0
srcValue=[]
destValue:[]
taint data:[$z0]
Coming in Backward Analysis
currStmt20210420:$z0 = virtualinvoke r5.<java.util.StringTokenizer: boolean hasMoreTokens()>()
currStmt left value20210420:$z0
BackWard 20210419===virtualinvoke r5.<java.util.StringTokenizer: boolean hasMoreTokens()>()
[BackWard taint329]i invoke $z0 = virtualinvoke r5.<java.util.StringTokenizer: boolean hasMoreTokens()>()
[BackWard taint328]i invoke <java.util.StringTokenizer: boolean hasMoreTokens()>
srcValue=[]
destValue:[]
taint data:[$z0]
Coming in Backward Analysis
currStmt20210420:r5 = $r4
currStmt left value20210420:r5
srcValue=[]
destValue:[]
taint data:[$z0]
Coming in Backward Analysis
[taint329]i invoke specialinvoke $r4.<java.util.StringTokenizer: void <init>(java.lang.String)>($r6)
[taint328]i invoke <java.util.StringTokenizer: void <init>(java.lang.String)>
[taint328]i invoke 1
value:$r6
srcValue=[]
destValue:[]
taint data:[$z0]
Coming in Backward Analysis
currStmt20210420:$r6 = virtualinvoke r2.<org.apache.hadoop.io.Text: java.lang.String toString()>()
currStmt left value20210420:$r6
srcValue=[]
destValue:[]
taint data:[$z0]
Coming in Backward Analysis
currStmt20210420:$r4 = new java.util.StringTokenizer
currStmt left value20210420:$r4
srcValue=[]
destValue:[]
taint data:[$z0]
Coming in Backward Analysis
srcValue=[]
destValue:[]
taint data:[$z0]
Coming in Backward Analysis
srcValue=[]
destValue:[]
taint data:[$z0]
Coming in Backward Analysis
srcValue=[]
destValue:[]
taint data:[$z0]
Coming in Backward Analysis
doAnalysis endqqqqqqq.....
come here
[CFMAP]2021 After BackwardAnalysis:{cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}
[taint into] sootMethod: map
[$z0]
class name :cfhider.WordCount$TokenizerMapper
method name :map
method list :[$z0]
clasname=cfhider.WordCount$TokenizerMapper
methodname=map
sourcelist2021=[$z0]
20210427node :r0 := @this: cfhider.WordCount$TokenizerMapper
20210427node in :[]
20210427node out :[]
currStmt20210423:r0 := @this: cfhider.WordCount$TokenizerMapper
20210427node :r1 := @parameter0: java.lang.Object
20210427node in :[]
[idStmt]iiiiiii r1 := @parameter0: java.lang.Object  index:0
ClassName:cfhider.WordCount$TokenizerMapper
MethodName:map
aaaa:0
20210427node out :[]
currStmt20210423:r1 := @parameter0: java.lang.Object
20210427node :r2 := @parameter1: java.lang.Object
20210427node in :[]
[idStmt]iiiiiii r2 := @parameter1: java.lang.Object  index:1
ClassName:cfhider.WordCount$TokenizerMapper
MethodName:map
aaaa:0
20210427node out :[]
currStmt20210423:r2 := @parameter1: java.lang.Object
20210427node :r3 := @parameter2: org.apache.hadoop.mapreduce.Mapper$Context
20210427node in :[]
[idStmt]iiiiiii r3 := @parameter2: org.apache.hadoop.mapreduce.Mapper$Context  index:2
ClassName:cfhider.WordCount$TokenizerMapper
MethodName:map
aaaa:0
20210427node out :[]
currStmt20210423:r3 := @parameter2: org.apache.hadoop.mapreduce.Mapper$Context
20210427node :$r4 = (org.apache.hadoop.io.Text) r2
20210427node in :[]
普通复制语句1112:$r4 = (org.apache.hadoop.io.Text) r2
[taint source] u:r2
SourceList:[$z0]
[taint source] u:(org.apache.hadoop.io.Text) r2
SourceList:[$z0]
20210427node out :[]
20210427node :virtualinvoke r0.<cfhider.WordCount$TokenizerMapper: void map(java.lang.Object,org.apache.hadoop.io.Text,org.apache.hadoop.mapreduce.Mapper$Context)>(r1, $r4, r3)
20210427node in :[]
20210427node out :[]
[taint329]i invoke virtualinvoke r0.<cfhider.WordCount$TokenizerMapper: void map(java.lang.Object,org.apache.hadoop.io.Text,org.apache.hadoop.mapreduce.Mapper$Context)>(r1, $r4, r3)
[taint328]i invoke <cfhider.WordCount$TokenizerMapper: void map(java.lang.Object,org.apache.hadoop.io.Text,org.apache.hadoop.mapreduce.Mapper$Context)>
[taint328]i invoke 3
value:r1
isoutSetContains  false value:r1 index:0
value:$r4
isoutSetContains  false value:$r4 index:1
value:r3
isoutSetContains  false value:r3 index:2
[invokemap]invoke:map  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
20210427node :return
20210427node in :[]
20210427node out :[]
analysis.outSet.size():0
[CFMAP]2021 After taintAnalysis:{cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}
The data isgggg 
<cfhider.WordCount$TokenizerMapper: void map(java.lang.Object,java.lang.Object,org.apache.hadoop.mapreduce.Mapper$Context)>
The data isgggg cfhider.WordCount$TokenizerMapper map [$z0] {cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}  {cfhider.WordCount$IntSumReducer={reduce=[I@3310c372}, cfhider.WordCount$TokenizerMapper={map=[I@77612a43}, cfhider.WordCount={main=[I@299a1d24}, invoker.SnowFlake={<init>=[I@53844cf2, getNextMill=[I@12d7ceb4, getNewstmp=[I@2ef0e2c5}}
Coming...
doAnalysis Startingqqqqqqqq.....
srcValue=[]
destValue:[]
taint data:[$z0]
Coming in Backward Analysis
srcValue=[]
destValue:[]
taint data:[$z0]
Coming in Backward Analysis
[taint329]i invoke virtualinvoke r0.<cfhider.WordCount$TokenizerMapper: void map(java.lang.Object,org.apache.hadoop.io.Text,org.apache.hadoop.mapreduce.Mapper$Context)>(r1, $r4, r3)
[taint328]i invoke <cfhider.WordCount$TokenizerMapper: void map(java.lang.Object,org.apache.hadoop.io.Text,org.apache.hadoop.mapreduce.Mapper$Context)>
[taint328]i invoke 3
value:r1
in here:[I@c1dd1f0
[invokemap]invoke:map  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
value:$r4
in here:[I@c1dd1f0
[invokemap]invoke:map  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
value:r3
in here:[I@c1dd1f0
[invokemap]invoke:map  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
srcValue=[]
destValue:[]
taint data:[$z0]
Coming in Backward Analysis
currStmt20210420:$r4 = (org.apache.hadoop.io.Text) r2
currStmt left value20210420:$r4
srcValue=[]
destValue:[]
taint data:[$z0]
Coming in Backward Analysis
srcValue=[]
destValue:[]
taint data:[$z0]
Coming in Backward Analysis
srcValue=[]
destValue:[]
taint data:[$z0]
Coming in Backward Analysis
srcValue=[]
destValue:[]
taint data:[$z0]
Coming in Backward Analysis
doAnalysis endqqqqqqq.....
come here
[CFMAP]2021 After BackwardAnalysis:{cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}
[taint into] sootMethod: <clinit>
[]
class name :cfhider.WordCount$TokenizerMapper
method name :<clinit>
method list :[]
clasname=cfhider.WordCount$TokenizerMapper
methodname=<clinit>
sourcelist2021=[]
20210427node :$r0 = new org.apache.hadoop.io.IntWritable
20210427node in :[]
普通复制语句1112:$r0 = new org.apache.hadoop.io.IntWritable
[taint source] u:new org.apache.hadoop.io.IntWritable
SourceList:[]
20210427node out :[]
20210427node :specialinvoke $r0.<org.apache.hadoop.io.IntWritable: void <init>(int)>(1)
20210427node in :[]
20210427node out :[]
[taint329]i invoke specialinvoke $r0.<org.apache.hadoop.io.IntWritable: void <init>(int)>(1)
[taint328]i invoke <org.apache.hadoop.io.IntWritable: void <init>(int)>
[taint328]i invoke 1
value:1
isoutSetContains  false value:1 index:0
20210427node :<cfhider.WordCount$TokenizerMapper: org.apache.hadoop.io.IntWritable one> = $r0
20210427node in :[]
普通复制语句1112:<cfhider.WordCount$TokenizerMapper: org.apache.hadoop.io.IntWritable one> = $r0
[taint source] u:$r0
SourceList:[]
20210427node out :[]
20210427node :return
20210427node in :[]
20210427node out :[]
analysis.outSet.size():0
[CFMAP]2021 After taintAnalysis:{cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}
The data isgggg 
<cfhider.WordCount$TokenizerMapper: void <clinit>()>
The data isgggg cfhider.WordCount$TokenizerMapper <clinit> [] {cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}  {cfhider.WordCount$IntSumReducer={reduce=[I@3310c372}, cfhider.WordCount$TokenizerMapper={map=[I@77612a43}, cfhider.WordCount={main=[I@299a1d24}, invoker.SnowFlake={<init>=[I@53844cf2, getNextMill=[I@12d7ceb4, getNewstmp=[I@2ef0e2c5}}
Coming...
doAnalysis Startingqqqqqqqq.....
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:<cfhider.WordCount$TokenizerMapper: org.apache.hadoop.io.IntWritable one> = $r0
currStmt left value20210420:<cfhider.WordCount$TokenizerMapper: org.apache.hadoop.io.IntWritable one>
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
[taint329]i invoke specialinvoke $r0.<org.apache.hadoop.io.IntWritable: void <init>(int)>(1)
[taint328]i invoke <org.apache.hadoop.io.IntWritable: void <init>(int)>
[taint328]i invoke 1
value:1
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$r0 = new org.apache.hadoop.io.IntWritable
currStmt left value20210420:$r0
doAnalysis endqqqqqqq.....
come here
[CFMAP]2021 After BackwardAnalysis:{cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}
[taint into] sootMethod: <init>
[]
class name :cfhider.WordCount$TokenizerMapper
method name :<init>
method list :[]
clasname=cfhider.WordCount$TokenizerMapper
methodname=<init>
sourcelist2021=[]
20210427node :r0 := @this: cfhider.WordCount$TokenizerMapper
20210427node in :[]
20210427node out :[]
currStmt20210423:r0 := @this: cfhider.WordCount$TokenizerMapper
20210427node :specialinvoke r0.<org.apache.hadoop.mapreduce.Mapper: void <init>()>()
20210427node in :[]
20210427node out :[]
[taint329]i invoke specialinvoke r0.<org.apache.hadoop.mapreduce.Mapper: void <init>()>()
[taint328]i invoke <org.apache.hadoop.mapreduce.Mapper: void <init>()>
[taint328]i invoke 0
20210427node :$r1 = new org.apache.hadoop.io.Text
20210427node in :[]
普通复制语句1112:$r1 = new org.apache.hadoop.io.Text
[taint source] u:new org.apache.hadoop.io.Text
SourceList:[]
20210427node out :[]
20210427node :specialinvoke $r1.<org.apache.hadoop.io.Text: void <init>()>()
20210427node in :[]
20210427node out :[]
[taint329]i invoke specialinvoke $r1.<org.apache.hadoop.io.Text: void <init>()>()
[taint328]i invoke <org.apache.hadoop.io.Text: void <init>()>
[taint328]i invoke 0
20210427node :r0.<cfhider.WordCount$TokenizerMapper: org.apache.hadoop.io.Text word> = $r1
20210427node in :[]
普通复制语句1112:r0.<cfhider.WordCount$TokenizerMapper: org.apache.hadoop.io.Text word> = $r1
[taint source] u:r0
SourceList:[]
[taint source] u:$r1
SourceList:[]
20210427node out :[]
20210427node :return
20210427node in :[]
20210427node out :[]
analysis.outSet.size():0
[CFMAP]2021 After taintAnalysis:{cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}
The data isgggg 
<cfhider.WordCount$TokenizerMapper: void <init>()>
The data isgggg cfhider.WordCount$TokenizerMapper <init> [] {cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}  {cfhider.WordCount$IntSumReducer={reduce=[I@3310c372}, cfhider.WordCount$TokenizerMapper={map=[I@77612a43}, cfhider.WordCount={main=[I@299a1d24}, invoker.SnowFlake={<init>=[I@53844cf2, getNextMill=[I@12d7ceb4, getNewstmp=[I@2ef0e2c5}}
Coming...
doAnalysis Startingqqqqqqqq.....
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:r0.<cfhider.WordCount$TokenizerMapper: org.apache.hadoop.io.Text word> = $r1
currStmt left value20210420:r0.<cfhider.WordCount$TokenizerMapper: org.apache.hadoop.io.Text word>
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
[taint329]i invoke specialinvoke $r1.<org.apache.hadoop.io.Text: void <init>()>()
[taint328]i invoke <org.apache.hadoop.io.Text: void <init>()>
[taint328]i invoke 0
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$r1 = new org.apache.hadoop.io.Text
currStmt left value20210420:$r1
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
[taint329]i invoke specialinvoke r0.<org.apache.hadoop.mapreduce.Mapper: void <init>()>()
[taint328]i invoke <org.apache.hadoop.mapreduce.Mapper: void <init>()>
[taint328]i invoke 0
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
doAnalysis endqqqqqqq.....
come here
[CFMAP]2021 After BackwardAnalysis:{cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}
[taint into] sootMethod: map
[$z0]
class name :cfhider.WordCount$TokenizerMapper
method name :map
method list :[$z0]
clasname=cfhider.WordCount$TokenizerMapper
methodname=map
sourcelist2021=[$z0]
20210427node :r0 := @this: cfhider.WordCount$TokenizerMapper
20210427node in :[]
20210427node out :[]
currStmt20210423:r0 := @this: cfhider.WordCount$TokenizerMapper
20210427node :r1 := @parameter0: java.lang.Object
20210427node in :[]
[idStmt]iiiiiii r1 := @parameter0: java.lang.Object  index:0
ClassName:cfhider.WordCount$TokenizerMapper
MethodName:map
aaaa:0
20210427node out :[]
currStmt20210423:r1 := @parameter0: java.lang.Object
20210427node :r2 := @parameter1: org.apache.hadoop.io.Text
20210427node in :[]
[idStmt]iiiiiii r2 := @parameter1: org.apache.hadoop.io.Text  index:1
ClassName:cfhider.WordCount$TokenizerMapper
MethodName:map
aaaa:0
20210427node out :[]
currStmt20210423:r2 := @parameter1: org.apache.hadoop.io.Text
20210427node :r3 := @parameter2: org.apache.hadoop.mapreduce.Mapper$Context
20210427node in :[]
[idStmt]iiiiiii r3 := @parameter2: org.apache.hadoop.mapreduce.Mapper$Context  index:2
ClassName:cfhider.WordCount$TokenizerMapper
MethodName:map
aaaa:0
20210427node out :[]
currStmt20210423:r3 := @parameter2: org.apache.hadoop.mapreduce.Mapper$Context
20210427node :$r4 = new java.util.StringTokenizer
20210427node in :[]
普通复制语句1112:$r4 = new java.util.StringTokenizer
[taint source] u:new java.util.StringTokenizer
SourceList:[$z0]
20210427node out :[]
20210427node :$r6 = virtualinvoke r2.<org.apache.hadoop.io.Text: java.lang.String toString()>()
20210427node in :[]
调用语句赋值给变量:$r6 = virtualinvoke r2.<org.apache.hadoop.io.Text: java.lang.String toString()>()
20210427node out :[]
[taint328]a invoke <org.apache.hadoop.io.Text: java.lang.String toString()>
[taint328]a invoke 0
20210427node :specialinvoke $r4.<java.util.StringTokenizer: void <init>(java.lang.String)>($r6)
20210427node in :[]
20210427node out :[]
[taint329]i invoke specialinvoke $r4.<java.util.StringTokenizer: void <init>(java.lang.String)>($r6)
[taint328]i invoke <java.util.StringTokenizer: void <init>(java.lang.String)>
[taint328]i invoke 1
value:$r6
isoutSetContains  false value:$r6 index:0
20210427node :r5 = $r4
20210427node in :[]
普通复制语句1112:r5 = $r4
[taint source] u:$r4
SourceList:[$z0]
20210427node out :[]
20210427node :$z0 = virtualinvoke r5.<java.util.StringTokenizer: boolean hasMoreTokens()>()
20210427node in :[]
调用语句赋值给变量:$z0 = virtualinvoke r5.<java.util.StringTokenizer: boolean hasMoreTokens()>()
20210427node out :[]
[taint328]a invoke <java.util.StringTokenizer: boolean hasMoreTokens()>
[taint328]a invoke 0
20210427node :if $z0 == 0 goto return
20210427node in :[]
20210427node out :[]
Have
Stmt if :if $z0 == 0 goto returnStmt if value:$z0 == 0the value=$z0
the value=0
maintainValues.size1
ifValues1
20210427node :return
20210427node in :[]
20210427node out :[]
20210427node :$r7 = r0.<cfhider.WordCount$TokenizerMapper: org.apache.hadoop.io.Text word>
20210427node in :[]
普通复制语句1112:$r7 = r0.<cfhider.WordCount$TokenizerMapper: org.apache.hadoop.io.Text word>
[taint source] u:r0
SourceList:[$z0]
[taint source] u:r0.<cfhider.WordCount$TokenizerMapper: org.apache.hadoop.io.Text word>
SourceList:[$z0]
20210427node out :[]
20210427node :$r8 = virtualinvoke r5.<java.util.StringTokenizer: java.lang.String nextToken()>()
20210427node in :[]
调用语句赋值给变量:$r8 = virtualinvoke r5.<java.util.StringTokenizer: java.lang.String nextToken()>()
20210427node out :[]
[taint328]a invoke <java.util.StringTokenizer: java.lang.String nextToken()>
[taint328]a invoke 0
20210427node :virtualinvoke $r7.<org.apache.hadoop.io.Text: void set(java.lang.String)>($r8)
20210427node in :[]
20210427node out :[]
[taint329]i invoke virtualinvoke $r7.<org.apache.hadoop.io.Text: void set(java.lang.String)>($r8)
[taint328]i invoke <org.apache.hadoop.io.Text: void set(java.lang.String)>
[taint328]i invoke 1
value:$r8
isoutSetContains  false value:$r8 index:0
20210427node :$r9 = r0.<cfhider.WordCount$TokenizerMapper: org.apache.hadoop.io.Text word>
20210427node in :[]
普通复制语句1112:$r9 = r0.<cfhider.WordCount$TokenizerMapper: org.apache.hadoop.io.Text word>
[taint source] u:r0
SourceList:[$z0]
[taint source] u:r0.<cfhider.WordCount$TokenizerMapper: org.apache.hadoop.io.Text word>
SourceList:[$z0]
20210427node out :[]
20210427node :$r10 = <cfhider.WordCount$TokenizerMapper: org.apache.hadoop.io.IntWritable one>
20210427node in :[]
普通复制语句1112:$r10 = <cfhider.WordCount$TokenizerMapper: org.apache.hadoop.io.IntWritable one>
[taint source] u:<cfhider.WordCount$TokenizerMapper: org.apache.hadoop.io.IntWritable one>
SourceList:[$z0]
20210427node out :[]
20210427node :virtualinvoke r3.<org.apache.hadoop.mapreduce.Mapper$Context: void write(java.lang.Object,java.lang.Object)>($r9, $r10)
20210427node in :[]
20210427node out :[]
[taint329]i invoke virtualinvoke r3.<org.apache.hadoop.mapreduce.Mapper$Context: void write(java.lang.Object,java.lang.Object)>($r9, $r10)
[taint328]i invoke <org.apache.hadoop.mapreduce.TaskInputOutputContext: void write(java.lang.Object,java.lang.Object)>
[taint328]i invoke 2
value:$r9
isoutSetContains  false value:$r9 index:0
value:$r10
isoutSetContains  false value:$r10 index:1
20210427node :goto [?= $z0 = virtualinvoke r5.<java.util.StringTokenizer: boolean hasMoreTokens()>()]
20210427node in :[]
20210427node out :[]
analysis.outSet.size():0
[CFMAP]2021 After taintAnalysis:{cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}
The data isgggg 
<cfhider.WordCount$TokenizerMapper: void map(java.lang.Object,org.apache.hadoop.io.Text,org.apache.hadoop.mapreduce.Mapper$Context)>
The data isgggg cfhider.WordCount$TokenizerMapper map [$z0] {cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}  {cfhider.WordCount$IntSumReducer={reduce=[I@3310c372}, cfhider.WordCount$TokenizerMapper={map=[I@79c1e9c6}, cfhider.WordCount={main=[I@299a1d24}, invoker.SnowFlake={<init>=[I@53844cf2, getNextMill=[I@12d7ceb4, getNewstmp=[I@2ef0e2c5}}
Coming...
doAnalysis Startingqqqqqqqq.....
srcValue=[]
destValue:[]
taint data:[$z0]
Coming in Backward Analysis
srcValue=[]
destValue:[]
taint data:[$z0]
Coming in Backward Analysis
[taint329]i invoke virtualinvoke r3.<org.apache.hadoop.mapreduce.Mapper$Context: void write(java.lang.Object,java.lang.Object)>($r9, $r10)
[taint328]i invoke <org.apache.hadoop.mapreduce.TaskInputOutputContext: void write(java.lang.Object,java.lang.Object)>
[taint328]i invoke 2
value:$r9
value:$r10
srcValue=[]
destValue:[]
taint data:[$z0]
Coming in Backward Analysis
currStmt20210420:$r10 = <cfhider.WordCount$TokenizerMapper: org.apache.hadoop.io.IntWritable one>
currStmt left value20210420:$r10
srcValue=[]
destValue:[]
taint data:[$z0]
Coming in Backward Analysis
currStmt20210420:$r9 = r0.<cfhider.WordCount$TokenizerMapper: org.apache.hadoop.io.Text word>
currStmt left value20210420:$r9
srcValue=[]
destValue:[]
taint data:[$z0]
Coming in Backward Analysis
[taint329]i invoke virtualinvoke $r7.<org.apache.hadoop.io.Text: void set(java.lang.String)>($r8)
[taint328]i invoke <org.apache.hadoop.io.Text: void set(java.lang.String)>
[taint328]i invoke 1
value:$r8
srcValue=[]
destValue:[]
taint data:[$z0]
Coming in Backward Analysis
currStmt20210420:$r8 = virtualinvoke r5.<java.util.StringTokenizer: java.lang.String nextToken()>()
currStmt left value20210420:$r8
srcValue=[]
destValue:[]
taint data:[$z0]
Coming in Backward Analysis
currStmt20210420:$r7 = r0.<cfhider.WordCount$TokenizerMapper: org.apache.hadoop.io.Text word>
currStmt left value20210420:$r7
srcValue=[]
destValue:[]
taint data:[$z0]
Coming in Backward Analysis
srcValue=[]
destValue:[]
taint data:[$z0]
Coming in Backward Analysis
Have
the value=$z0
the value=0
srcValue=[]
destValue:[]
taint data:[$z0]
Coming in Backward Analysis
currStmt20210420:$z0 = virtualinvoke r5.<java.util.StringTokenizer: boolean hasMoreTokens()>()
currStmt left value20210420:$z0
BackWard 20210419===virtualinvoke r5.<java.util.StringTokenizer: boolean hasMoreTokens()>()
[BackWard taint329]i invoke $z0 = virtualinvoke r5.<java.util.StringTokenizer: boolean hasMoreTokens()>()
[BackWard taint328]i invoke <java.util.StringTokenizer: boolean hasMoreTokens()>
srcValue=[]
destValue:[]
taint data:[$z0]
Coming in Backward Analysis
currStmt20210420:r5 = $r4
currStmt left value20210420:r5
srcValue=[]
destValue:[]
taint data:[$z0]
Coming in Backward Analysis
[taint329]i invoke specialinvoke $r4.<java.util.StringTokenizer: void <init>(java.lang.String)>($r6)
[taint328]i invoke <java.util.StringTokenizer: void <init>(java.lang.String)>
[taint328]i invoke 1
value:$r6
srcValue=[]
destValue:[]
taint data:[$z0]
Coming in Backward Analysis
currStmt20210420:$r6 = virtualinvoke r2.<org.apache.hadoop.io.Text: java.lang.String toString()>()
currStmt left value20210420:$r6
srcValue=[]
destValue:[]
taint data:[$z0]
Coming in Backward Analysis
currStmt20210420:$r4 = new java.util.StringTokenizer
currStmt left value20210420:$r4
srcValue=[]
destValue:[]
taint data:[$z0]
Coming in Backward Analysis
srcValue=[]
destValue:[]
taint data:[$z0]
Coming in Backward Analysis
srcValue=[]
destValue:[]
taint data:[$z0]
Coming in Backward Analysis
srcValue=[]
destValue:[]
taint data:[$z0]
Coming in Backward Analysis
doAnalysis endqqqqqqq.....
come here
[CFMAP]2021 After BackwardAnalysis:{cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}
[taint into] sootMethod: map
[$z0]
class name :cfhider.WordCount$TokenizerMapper
method name :map
method list :[$z0]
clasname=cfhider.WordCount$TokenizerMapper
methodname=map
sourcelist2021=[$z0]
20210427node :r0 := @this: cfhider.WordCount$TokenizerMapper
20210427node in :[]
20210427node out :[]
currStmt20210423:r0 := @this: cfhider.WordCount$TokenizerMapper
20210427node :r1 := @parameter0: java.lang.Object
20210427node in :[]
[idStmt]iiiiiii r1 := @parameter0: java.lang.Object  index:0
ClassName:cfhider.WordCount$TokenizerMapper
MethodName:map
aaaa:0
20210427node out :[]
currStmt20210423:r1 := @parameter0: java.lang.Object
20210427node :r2 := @parameter1: java.lang.Object
20210427node in :[]
[idStmt]iiiiiii r2 := @parameter1: java.lang.Object  index:1
ClassName:cfhider.WordCount$TokenizerMapper
MethodName:map
aaaa:0
20210427node out :[]
currStmt20210423:r2 := @parameter1: java.lang.Object
20210427node :r3 := @parameter2: org.apache.hadoop.mapreduce.Mapper$Context
20210427node in :[]
[idStmt]iiiiiii r3 := @parameter2: org.apache.hadoop.mapreduce.Mapper$Context  index:2
ClassName:cfhider.WordCount$TokenizerMapper
MethodName:map
aaaa:0
20210427node out :[]
currStmt20210423:r3 := @parameter2: org.apache.hadoop.mapreduce.Mapper$Context
20210427node :$r4 = (org.apache.hadoop.io.Text) r2
20210427node in :[]
普通复制语句1112:$r4 = (org.apache.hadoop.io.Text) r2
[taint source] u:r2
SourceList:[$z0]
[taint source] u:(org.apache.hadoop.io.Text) r2
SourceList:[$z0]
20210427node out :[]
20210427node :virtualinvoke r0.<cfhider.WordCount$TokenizerMapper: void map(java.lang.Object,org.apache.hadoop.io.Text,org.apache.hadoop.mapreduce.Mapper$Context)>(r1, $r4, r3)
20210427node in :[]
20210427node out :[]
[taint329]i invoke virtualinvoke r0.<cfhider.WordCount$TokenizerMapper: void map(java.lang.Object,org.apache.hadoop.io.Text,org.apache.hadoop.mapreduce.Mapper$Context)>(r1, $r4, r3)
[taint328]i invoke <cfhider.WordCount$TokenizerMapper: void map(java.lang.Object,org.apache.hadoop.io.Text,org.apache.hadoop.mapreduce.Mapper$Context)>
[taint328]i invoke 3
value:r1
isoutSetContains  false value:r1 index:0
value:$r4
isoutSetContains  false value:$r4 index:1
value:r3
isoutSetContains  false value:r3 index:2
[invokemap]invoke:map  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
20210427node :return
20210427node in :[]
20210427node out :[]
analysis.outSet.size():0
[CFMAP]2021 After taintAnalysis:{cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}
The data isgggg 
<cfhider.WordCount$TokenizerMapper: void map(java.lang.Object,java.lang.Object,org.apache.hadoop.mapreduce.Mapper$Context)>
The data isgggg cfhider.WordCount$TokenizerMapper map [$z0] {cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}  {cfhider.WordCount$IntSumReducer={reduce=[I@3310c372}, cfhider.WordCount$TokenizerMapper={map=[I@29db049d}, cfhider.WordCount={main=[I@299a1d24}, invoker.SnowFlake={<init>=[I@53844cf2, getNextMill=[I@12d7ceb4, getNewstmp=[I@2ef0e2c5}}
Coming...
doAnalysis Startingqqqqqqqq.....
srcValue=[]
destValue:[]
taint data:[$z0]
Coming in Backward Analysis
srcValue=[]
destValue:[]
taint data:[$z0]
Coming in Backward Analysis
[taint329]i invoke virtualinvoke r0.<cfhider.WordCount$TokenizerMapper: void map(java.lang.Object,org.apache.hadoop.io.Text,org.apache.hadoop.mapreduce.Mapper$Context)>(r1, $r4, r3)
[taint328]i invoke <cfhider.WordCount$TokenizerMapper: void map(java.lang.Object,org.apache.hadoop.io.Text,org.apache.hadoop.mapreduce.Mapper$Context)>
[taint328]i invoke 3
value:r1
in here:[I@6a0bf4e2
[invokemap]invoke:map  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
value:$r4
in here:[I@6a0bf4e2
[invokemap]invoke:map  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
value:r3
in here:[I@6a0bf4e2
[invokemap]invoke:map  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
srcValue=[]
destValue:[]
taint data:[$z0]
Coming in Backward Analysis
currStmt20210420:$r4 = (org.apache.hadoop.io.Text) r2
currStmt left value20210420:$r4
srcValue=[]
destValue:[]
taint data:[$z0]
Coming in Backward Analysis
srcValue=[]
destValue:[]
taint data:[$z0]
Coming in Backward Analysis
srcValue=[]
destValue:[]
taint data:[$z0]
Coming in Backward Analysis
srcValue=[]
destValue:[]
taint data:[$z0]
Coming in Backward Analysis
doAnalysis endqqqqqqq.....
come here
[CFMAP]2021 After BackwardAnalysis:{cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}
[taint into] sootMethod: <clinit>
[]
class name :cfhider.WordCount$TokenizerMapper
method name :<clinit>
method list :[]
clasname=cfhider.WordCount$TokenizerMapper
methodname=<clinit>
sourcelist2021=[]
20210427node :$r0 = new org.apache.hadoop.io.IntWritable
20210427node in :[]
普通复制语句1112:$r0 = new org.apache.hadoop.io.IntWritable
[taint source] u:new org.apache.hadoop.io.IntWritable
SourceList:[]
20210427node out :[]
20210427node :specialinvoke $r0.<org.apache.hadoop.io.IntWritable: void <init>(int)>(1)
20210427node in :[]
20210427node out :[]
[taint329]i invoke specialinvoke $r0.<org.apache.hadoop.io.IntWritable: void <init>(int)>(1)
[taint328]i invoke <org.apache.hadoop.io.IntWritable: void <init>(int)>
[taint328]i invoke 1
value:1
isoutSetContains  false value:1 index:0
20210427node :<cfhider.WordCount$TokenizerMapper: org.apache.hadoop.io.IntWritable one> = $r0
20210427node in :[]
普通复制语句1112:<cfhider.WordCount$TokenizerMapper: org.apache.hadoop.io.IntWritable one> = $r0
[taint source] u:$r0
SourceList:[]
20210427node out :[]
20210427node :return
20210427node in :[]
20210427node out :[]
analysis.outSet.size():0
[CFMAP]2021 After taintAnalysis:{cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}
The data isgggg 
<cfhider.WordCount$TokenizerMapper: void <clinit>()>
The data isgggg cfhider.WordCount$TokenizerMapper <clinit> [] {cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}  {cfhider.WordCount$IntSumReducer={reduce=[I@3310c372}, cfhider.WordCount$TokenizerMapper={map=[I@29db049d}, cfhider.WordCount={main=[I@299a1d24}, invoker.SnowFlake={<init>=[I@53844cf2, getNextMill=[I@12d7ceb4, getNewstmp=[I@2ef0e2c5}}
Coming...
doAnalysis Startingqqqqqqqq.....
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:<cfhider.WordCount$TokenizerMapper: org.apache.hadoop.io.IntWritable one> = $r0
currStmt left value20210420:<cfhider.WordCount$TokenizerMapper: org.apache.hadoop.io.IntWritable one>
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
[taint329]i invoke specialinvoke $r0.<org.apache.hadoop.io.IntWritable: void <init>(int)>(1)
[taint328]i invoke <org.apache.hadoop.io.IntWritable: void <init>(int)>
[taint328]i invoke 1
value:1
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$r0 = new org.apache.hadoop.io.IntWritable
currStmt left value20210420:$r0
doAnalysis endqqqqqqq.....
come here
[CFMAP]2021 After BackwardAnalysis:{cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}
[taint]SooClass:invoker.SnowFlake
[taint] class: invoker.SnowFlake
methList :{<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}
[taint into] sootMethod: <init>
[]
class name :invoker.SnowFlake
method name :<init>
method list :[]
clasname=invoker.SnowFlake
methodname=<init>
sourcelist2021=[]
20210427node :r0 := @this: invoker.SnowFlake
20210427node in :[]
20210427node out :[]
currStmt20210423:r0 := @this: invoker.SnowFlake
20210427node :l0 := @parameter0: long
20210427node in :[]
[idStmt]iiiiiii l0 := @parameter0: long  index:0
ClassName:invoker.SnowFlake
MethodName:<init>
aaaa:0
20210427node out :[]
currStmt20210423:l0 := @parameter0: long
20210427node :l1 := @parameter1: long
20210427node in :[]
[idStmt]iiiiiii l1 := @parameter1: long  index:1
ClassName:invoker.SnowFlake
MethodName:<init>
aaaa:0
20210427node out :[]
currStmt20210423:l1 := @parameter1: long
20210427node :specialinvoke r0.<java.lang.Object: void <init>()>()
20210427node in :[]
20210427node out :[]
[taint329]i invoke specialinvoke r0.<java.lang.Object: void <init>()>()
[taint328]i invoke <java.lang.Object: void <init>()>
[taint328]i invoke 0
20210427node :$b2 = l0 cmp 31L
20210427node in :[]
普通复制语句1112:$b2 = l0 cmp 31L
[taint source] u:l0
SourceList:[]
[taint source] u:31L
SourceList:[]
[taint source] u:l0 cmp 31L
SourceList:[]
20210427node out :[]
20210427node :if $b2 > 0 goto $r1 = new java.lang.IllegalArgumentException
20210427node in :[]
20210427node out :[]
Have
Stmt if :if $b2 > 0 goto $r1 = new java.lang.IllegalArgumentExceptionStmt if value:$b2 > 0the value=$b2
the value=0
maintainValues.size0
ifValues1
20210427node :$b3 = l0 cmp 0L
20210427node in :[]
普通复制语句1112:$b3 = l0 cmp 0L
[taint source] u:l0
SourceList:[]
[taint source] u:0L
SourceList:[]
[taint source] u:l0 cmp 0L
SourceList:[]
20210427node out :[]
20210427node :if $b3 >= 0 goto $b4 = l1 cmp 31L
20210427node in :[]
20210427node out :[]
Have
Stmt if :if $b3 >= 0 goto $b4 = l1 cmp 31LStmt if value:$b3 >= 0the value=$b3
the value=0
maintainValues.size0
ifValues1
20210427node :$b4 = l1 cmp 31L
20210427node in :[]
普通复制语句1112:$b4 = l1 cmp 31L
[taint source] u:l1
SourceList:[]
[taint source] u:31L
SourceList:[]
[taint source] u:l1 cmp 31L
SourceList:[]
20210427node out :[]
20210427node :if $b4 > 0 goto $r2 = new java.lang.IllegalArgumentException
20210427node in :[]
20210427node out :[]
Have
Stmt if :if $b4 > 0 goto $r2 = new java.lang.IllegalArgumentExceptionStmt if value:$b4 > 0the value=$b4
the value=0
maintainValues.size0
ifValues1
20210427node :$b5 = l1 cmp 0L
20210427node in :[]
普通复制语句1112:$b5 = l1 cmp 0L
[taint source] u:l1
SourceList:[]
[taint source] u:0L
SourceList:[]
[taint source] u:l1 cmp 0L
SourceList:[]
20210427node out :[]
20210427node :if $b5 >= 0 goto <invoker.SnowFlake: long datacenterId> = 0L
20210427node in :[]
20210427node out :[]
Have
Stmt if :if $b5 >= 0 goto <invoker.SnowFlake: long datacenterId> = 0LStmt if value:$b5 >= 0the value=$b5
the value=0
maintainValues.size0
ifValues1
20210427node :<invoker.SnowFlake: long datacenterId> = 0L
20210427node in :[]
普通复制语句1112:<invoker.SnowFlake: long datacenterId> = 0L
[taint source] u:0L
SourceList:[]
20210427node out :[]
20210427node :<invoker.SnowFlake: long machineId> = 0L
20210427node in :[]
普通复制语句1112:<invoker.SnowFlake: long machineId> = 0L
[taint source] u:0L
SourceList:[]
20210427node out :[]
20210427node :return
20210427node in :[]
20210427node out :[]
20210427node :$r2 = new java.lang.IllegalArgumentException
20210427node in :[]
普通复制语句1112:$r2 = new java.lang.IllegalArgumentException
[taint source] u:new java.lang.IllegalArgumentException
SourceList:[]
20210427node out :[]
20210427node :specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("machineId can\'t be greater than MAX_MACHINE_NUM or less than 0")
20210427node in :[]
20210427node out :[]
[taint329]i invoke specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("machineId can\'t be greater than MAX_MACHINE_NUM or less than 0")
[taint328]i invoke <java.lang.IllegalArgumentException: void <init>(java.lang.String)>
[taint328]i invoke 1
value:"machineId can\'t be greater than MAX_MACHINE_NUM or less than 0"
isoutSetContains  false value:"machineId can\'t be greater than MAX_MACHINE_NUM or less than 0" index:0
20210427node :throw $r2
20210427node in :[]
20210427node out :[]
20210427node :$r1 = new java.lang.IllegalArgumentException
20210427node in :[]
普通复制语句1112:$r1 = new java.lang.IllegalArgumentException
[taint source] u:new java.lang.IllegalArgumentException
SourceList:[]
20210427node out :[]
20210427node :specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("datacenterId can\'t be greater than MAX_DATACENTER_NUM or less than 0")
20210427node in :[]
20210427node out :[]
[taint329]i invoke specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("datacenterId can\'t be greater than MAX_DATACENTER_NUM or less than 0")
[taint328]i invoke <java.lang.IllegalArgumentException: void <init>(java.lang.String)>
[taint328]i invoke 1
value:"datacenterId can\'t be greater than MAX_DATACENTER_NUM or less than 0"
isoutSetContains  false value:"datacenterId can\'t be greater than MAX_DATACENTER_NUM or less than 0" index:0
20210427node :throw $r1
20210427node in :[]
20210427node out :[]
analysis.outSet.size():0
[CFMAP]2021 After taintAnalysis:{cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}
The data isgggg 
<invoker.SnowFlake: void <init>(long,long)>
The data isgggg invoker.SnowFlake <init> [] {cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}  {cfhider.WordCount$IntSumReducer={reduce=[I@3310c372}, cfhider.WordCount$TokenizerMapper={map=[I@29db049d}, cfhider.WordCount={main=[I@299a1d24}, invoker.SnowFlake={<init>=[I@36fa57d2, getNextMill=[I@12d7ceb4, getNewstmp=[I@2ef0e2c5}}
Coming...
doAnalysis Startingqqqqqqqq.....
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
[taint329]i invoke specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("datacenterId can\'t be greater than MAX_DATACENTER_NUM or less than 0")
[taint328]i invoke <java.lang.IllegalArgumentException: void <init>(java.lang.String)>
[taint328]i invoke 1
value:"datacenterId can\'t be greater than MAX_DATACENTER_NUM or less than 0"
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$r1 = new java.lang.IllegalArgumentException
currStmt left value20210420:$r1
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
[taint329]i invoke specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("machineId can\'t be greater than MAX_MACHINE_NUM or less than 0")
[taint328]i invoke <java.lang.IllegalArgumentException: void <init>(java.lang.String)>
[taint328]i invoke 1
value:"machineId can\'t be greater than MAX_MACHINE_NUM or less than 0"
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$r2 = new java.lang.IllegalArgumentException
currStmt left value20210420:$r2
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:<invoker.SnowFlake: long machineId> = 0L
currStmt left value20210420:<invoker.SnowFlake: long machineId>
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:<invoker.SnowFlake: long datacenterId> = 0L
currStmt left value20210420:<invoker.SnowFlake: long datacenterId>
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
Have
the value=$b5
the value=0
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$b5 = l1 cmp 0L
currStmt left value20210420:$b5
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
Have
the value=$b4
the value=0
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$b4 = l1 cmp 31L
currStmt left value20210420:$b4
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
Have
the value=$b3
the value=0
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$b3 = l0 cmp 0L
currStmt left value20210420:$b3
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
Have
the value=$b2
the value=0
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$b2 = l0 cmp 31L
currStmt left value20210420:$b2
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
[taint329]i invoke specialinvoke r0.<java.lang.Object: void <init>()>()
[taint328]i invoke <java.lang.Object: void <init>()>
[taint328]i invoke 0
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
doAnalysis endqqqqqqq.....
come here
[CFMAP]2021 After BackwardAnalysis:{cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}
[taint into] sootMethod: nextId
[]
class name :invoker.SnowFlake
method name :nextId
method list :[]
clasname=invoker.SnowFlake
methodname=nextId
sourcelist2021=[]
20210427node :l0 = staticinvoke <invoker.SnowFlake: long getNewstmp()>()
20210427node in :[]
调用语句赋值给变量:l0 = staticinvoke <invoker.SnowFlake: long getNewstmp()>()
Invokestmt:getNewstmp
20210427node out :[]
[taint328]a invoke <invoker.SnowFlake: long getNewstmp()>
[taint328]a invoke 0
[invokemap]invoke:getNewstmp  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
20210427node :$l1 = <invoker.SnowFlake: long lastStmp>
20210427node in :[]
普通复制语句1112:$l1 = <invoker.SnowFlake: long lastStmp>
[taint source] u:<invoker.SnowFlake: long lastStmp>
SourceList:[]
20210427node out :[]
20210427node :$b2 = l0 cmp $l1
20210427node in :[]
普通复制语句1112:$b2 = l0 cmp $l1
[taint source] u:l0
SourceList:[]
[taint source] u:$l1
SourceList:[]
[taint source] u:l0 cmp $l1
SourceList:[]
20210427node out :[]
20210427node :if $b2 >= 0 goto $l3 = <invoker.SnowFlake: long lastStmp>
20210427node in :[]
20210427node out :[]
Have
Stmt if :if $b2 >= 0 goto $l3 = <invoker.SnowFlake: long lastStmp>Stmt if value:$b2 >= 0the value=$b2
the value=0
maintainValues.size0
ifValues1
20210427node :$l3 = <invoker.SnowFlake: long lastStmp>
20210427node in :[]
普通复制语句1112:$l3 = <invoker.SnowFlake: long lastStmp>
[taint source] u:<invoker.SnowFlake: long lastStmp>
SourceList:[]
20210427node out :[]
20210427node :$b4 = l0 cmp $l3
20210427node in :[]
普通复制语句1112:$b4 = l0 cmp $l3
[taint source] u:l0
SourceList:[]
[taint source] u:$l3
SourceList:[]
[taint source] u:l0 cmp $l3
SourceList:[]
20210427node out :[]
20210427node :if $b4 != 0 goto <invoker.SnowFlake: long sequence> = 0L
20210427node in :[]
20210427node out :[]
Have
Stmt if :if $b4 != 0 goto <invoker.SnowFlake: long sequence> = 0LStmt if value:$b4 != 0the value=$b4
the value=0
maintainValues.size0
ifValues1
20210427node :<invoker.SnowFlake: long sequence> = 0L
20210427node in :[]
普通复制语句1112:<invoker.SnowFlake: long sequence> = 0L
[taint source] u:0L
SourceList:[]
20210427node out :[]
20210427node :$l5 = <invoker.SnowFlake: long sequence>
20210427node in :[]
普通复制语句1112:$l5 = <invoker.SnowFlake: long sequence>
[taint source] u:<invoker.SnowFlake: long sequence>
SourceList:[]
20210427node out :[]
20210427node :$l6 = $l5 + 1L
20210427node in :[]
普通复制语句1112:$l6 = $l5 + 1L
[taint source] u:$l5
SourceList:[]
[taint source] u:1L
SourceList:[]
[taint source] u:$l5 + 1L
SourceList:[]
20210427node out :[]
20210427node :$l7 = $l6 & 4095L
20210427node in :[]
普通复制语句1112:$l7 = $l6 & 4095L
[taint source] u:$l6
SourceList:[]
[taint source] u:4095L
SourceList:[]
[taint source] u:$l6 & 4095L
SourceList:[]
20210427node out :[]
20210427node :<invoker.SnowFlake: long sequence> = $l7
20210427node in :[]
普通复制语句1112:<invoker.SnowFlake: long sequence> = $l7
[taint source] u:$l7
SourceList:[]
20210427node out :[]
20210427node :$l8 = <invoker.SnowFlake: long sequence>
20210427node in :[]
普通复制语句1112:$l8 = <invoker.SnowFlake: long sequence>
[taint source] u:<invoker.SnowFlake: long sequence>
SourceList:[]
20210427node out :[]
20210427node :$b9 = $l8 cmp 0L
20210427node in :[]
普通复制语句1112:$b9 = $l8 cmp 0L
[taint source] u:$l8
SourceList:[]
[taint source] u:0L
SourceList:[]
[taint source] u:$l8 cmp 0L
SourceList:[]
20210427node out :[]
20210427node :if $b9 != 0 goto <invoker.SnowFlake: long lastStmp> = l0
20210427node in :[]
20210427node out :[]
Have
Stmt if :if $b9 != 0 goto <invoker.SnowFlake: long lastStmp> = l0Stmt if value:$b9 != 0the value=$b9
the value=0
maintainValues.size0
ifValues1
20210427node :l0 = staticinvoke <invoker.SnowFlake: long getNextMill()>()
20210427node in :[]
调用语句赋值给变量:l0 = staticinvoke <invoker.SnowFlake: long getNextMill()>()
Invokestmt:getNextMill
20210427node out :[]
[taint328]a invoke <invoker.SnowFlake: long getNextMill()>
[taint328]a invoke 0
[invokemap]invoke:getNextMill  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
20210427node :goto [?= <invoker.SnowFlake: long lastStmp> = l0]
20210427node in :[]
20210427node out :[]
20210427node :<invoker.SnowFlake: long lastStmp> = l0
20210427node in :[]
普通复制语句1112:<invoker.SnowFlake: long lastStmp> = l0
[taint source] u:l0
SourceList:[]
20210427node out :[]
20210427node :$l10 = l0 - 1480166465631L
20210427node in :[]
普通复制语句1112:$l10 = l0 - 1480166465631L
[taint source] u:l0
SourceList:[]
[taint source] u:1480166465631L
SourceList:[]
[taint source] u:l0 - 1480166465631L
SourceList:[]
20210427node out :[]
20210427node :$l11 = $l10 << 22
20210427node in :[]
普通复制语句1112:$l11 = $l10 << 22
[taint source] u:$l10
SourceList:[]
[taint source] u:22
SourceList:[]
[taint source] u:$l10 << 22
SourceList:[]
20210427node out :[]
20210427node :$l12 = <invoker.SnowFlake: long datacenterId>
20210427node in :[]
普通复制语句1112:$l12 = <invoker.SnowFlake: long datacenterId>
[taint source] u:<invoker.SnowFlake: long datacenterId>
SourceList:[]
20210427node out :[]
20210427node :$l13 = $l12 << 17
20210427node in :[]
普通复制语句1112:$l13 = $l12 << 17
[taint source] u:$l12
SourceList:[]
[taint source] u:17
SourceList:[]
[taint source] u:$l12 << 17
SourceList:[]
20210427node out :[]
20210427node :$l14 = $l11 | $l13
20210427node in :[]
普通复制语句1112:$l14 = $l11 | $l13
[taint source] u:$l11
SourceList:[]
[taint source] u:$l13
SourceList:[]
[taint source] u:$l11 | $l13
SourceList:[]
20210427node out :[]
20210427node :$l15 = <invoker.SnowFlake: long machineId>
20210427node in :[]
普通复制语句1112:$l15 = <invoker.SnowFlake: long machineId>
[taint source] u:<invoker.SnowFlake: long machineId>
SourceList:[]
20210427node out :[]
20210427node :$l16 = $l15 << 12
20210427node in :[]
普通复制语句1112:$l16 = $l15 << 12
[taint source] u:$l15
SourceList:[]
[taint source] u:12
SourceList:[]
[taint source] u:$l15 << 12
SourceList:[]
20210427node out :[]
20210427node :$l17 = $l14 | $l16
20210427node in :[]
普通复制语句1112:$l17 = $l14 | $l16
[taint source] u:$l14
SourceList:[]
[taint source] u:$l16
SourceList:[]
[taint source] u:$l14 | $l16
SourceList:[]
20210427node out :[]
20210427node :$l18 = <invoker.SnowFlake: long sequence>
20210427node in :[]
普通复制语句1112:$l18 = <invoker.SnowFlake: long sequence>
[taint source] u:<invoker.SnowFlake: long sequence>
SourceList:[]
20210427node out :[]
20210427node :$l19 = $l17 | $l18
20210427node in :[]
普通复制语句1112:$l19 = $l17 | $l18
[taint source] u:$l17
SourceList:[]
[taint source] u:$l18
SourceList:[]
[taint source] u:$l17 | $l18
SourceList:[]
20210427node out :[]
20210427node :return $l19
20210427node in :[]
20210427node out :[]
20210427node :$r0 = new java.lang.RuntimeException
20210427node in :[]
普通复制语句1112:$r0 = new java.lang.RuntimeException
[taint source] u:new java.lang.RuntimeException
SourceList:[]
20210427node out :[]
20210427node :specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Clock moved backwards.  Refusing to generate id")
20210427node in :[]
20210427node out :[]
[taint329]i invoke specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Clock moved backwards.  Refusing to generate id")
[taint328]i invoke <java.lang.RuntimeException: void <init>(java.lang.String)>
[taint328]i invoke 1
value:"Clock moved backwards.  Refusing to generate id"
isoutSetContains  false value:"Clock moved backwards.  Refusing to generate id" index:0
20210427node :throw $r0
20210427node in :[]
20210427node out :[]
analysis.outSet.size():0
[CFMAP]2021 After taintAnalysis:{cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}
The data isgggg 
<invoker.SnowFlake: long nextId()>
The data isgggg invoker.SnowFlake nextId [] {cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}  {cfhider.WordCount$IntSumReducer={reduce=[I@3310c372}, cfhider.WordCount$TokenizerMapper={map=[I@29db049d}, cfhider.WordCount={main=[I@299a1d24}, invoker.SnowFlake={<init>=[I@36fa57d2, getNextMill=[I@6d9bb830, getNewstmp=[I@a598f88}}
Coming...
doAnalysis Startingqqqqqqqq.....
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
[taint329]i invoke specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Clock moved backwards.  Refusing to generate id")
[taint328]i invoke <java.lang.RuntimeException: void <init>(java.lang.String)>
[taint328]i invoke 1
value:"Clock moved backwards.  Refusing to generate id"
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$r0 = new java.lang.RuntimeException
currStmt left value20210420:$r0
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$l19 = $l17 | $l18
currStmt left value20210420:$l19
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$l18 = <invoker.SnowFlake: long sequence>
currStmt left value20210420:$l18
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$l17 = $l14 | $l16
currStmt left value20210420:$l17
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$l16 = $l15 << 12
currStmt left value20210420:$l16
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$l15 = <invoker.SnowFlake: long machineId>
currStmt left value20210420:$l15
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$l14 = $l11 | $l13
currStmt left value20210420:$l14
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$l13 = $l12 << 17
currStmt left value20210420:$l13
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$l12 = <invoker.SnowFlake: long datacenterId>
currStmt left value20210420:$l12
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$l11 = $l10 << 22
currStmt left value20210420:$l11
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$l10 = l0 - 1480166465631L
currStmt left value20210420:$l10
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:<invoker.SnowFlake: long lastStmp> = l0
currStmt left value20210420:<invoker.SnowFlake: long lastStmp>
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:l0 = staticinvoke <invoker.SnowFlake: long getNextMill()>()
currStmt left value20210420:l0
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
Have
the value=$b9
the value=0
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$b9 = $l8 cmp 0L
currStmt left value20210420:$b9
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$l8 = <invoker.SnowFlake: long sequence>
currStmt left value20210420:$l8
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:<invoker.SnowFlake: long sequence> = $l7
currStmt left value20210420:<invoker.SnowFlake: long sequence>
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$l7 = $l6 & 4095L
currStmt left value20210420:$l7
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$l6 = $l5 + 1L
currStmt left value20210420:$l6
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$l5 = <invoker.SnowFlake: long sequence>
currStmt left value20210420:$l5
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:<invoker.SnowFlake: long sequence> = 0L
currStmt left value20210420:<invoker.SnowFlake: long sequence>
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
Have
the value=$b4
the value=0
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$b4 = l0 cmp $l3
currStmt left value20210420:$b4
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$l3 = <invoker.SnowFlake: long lastStmp>
currStmt left value20210420:$l3
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
Have
the value=$b2
the value=0
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$b2 = l0 cmp $l1
currStmt left value20210420:$b2
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$l1 = <invoker.SnowFlake: long lastStmp>
currStmt left value20210420:$l1
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:l0 = staticinvoke <invoker.SnowFlake: long getNewstmp()>()
currStmt left value20210420:l0
doAnalysis endqqqqqqq.....
come here
[CFMAP]2021 After BackwardAnalysis:{cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}
[taint into] sootMethod: getNextMill
[]
class name :invoker.SnowFlake
method name :getNextMill
method list :[]
clasname=invoker.SnowFlake
methodname=getNextMill
sourcelist2021=[]
20210427node :l0 = staticinvoke <invoker.SnowFlake: long getNewstmp()>()
20210427node in :[]
调用语句赋值给变量:l0 = staticinvoke <invoker.SnowFlake: long getNewstmp()>()
Invokestmt:getNewstmp
20210427node out :[]
[taint328]a invoke <invoker.SnowFlake: long getNewstmp()>
[taint328]a invoke 0
[invokemap]invoke:getNewstmp  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
20210427node :$l1 = <invoker.SnowFlake: long lastStmp>
20210427node in :[]
普通复制语句1112:$l1 = <invoker.SnowFlake: long lastStmp>
[taint source] u:<invoker.SnowFlake: long lastStmp>
SourceList:[]
20210427node out :[]
20210427node :$b2 = l0 cmp $l1
20210427node in :[]
普通复制语句1112:$b2 = l0 cmp $l1
[taint source] u:l0
SourceList:[]
[taint source] u:$l1
SourceList:[]
[taint source] u:l0 cmp $l1
SourceList:[]
20210427node out :[]
20210427node :if $b2 > 0 goto return l0
20210427node in :[]
20210427node out :[]
Have
Stmt if :if $b2 > 0 goto return l0Stmt if value:$b2 > 0the value=$b2
the value=0
maintainValues.size0
ifValues1
20210427node :return l0
20210427node in :[]
20210427node out :[]
20210427node :l0 = staticinvoke <invoker.SnowFlake: long getNewstmp()>()
20210427node in :[]
调用语句赋值给变量:l0 = staticinvoke <invoker.SnowFlake: long getNewstmp()>()
Invokestmt:getNewstmp
20210427node out :[]
[taint328]a invoke <invoker.SnowFlake: long getNewstmp()>
[taint328]a invoke 0
[invokemap]invoke:getNewstmp  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
20210427node :goto [?= $l1 = <invoker.SnowFlake: long lastStmp>]
20210427node in :[]
20210427node out :[]
analysis.outSet.size():0
[CFMAP]2021 After taintAnalysis:{cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}
The data isgggg 
<invoker.SnowFlake: long getNextMill()>
The data isgggg invoker.SnowFlake getNextMill [] {cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}  {cfhider.WordCount$IntSumReducer={reduce=[I@3310c372}, cfhider.WordCount$TokenizerMapper={map=[I@29db049d}, cfhider.WordCount={main=[I@299a1d24}, invoker.SnowFlake={<init>=[I@36fa57d2, getNextMill=[I@6d9bb830, getNewstmp=[I@7dde2f06}}
Coming...
doAnalysis Startingqqqqqqqq.....
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:l0 = staticinvoke <invoker.SnowFlake: long getNewstmp()>()
currStmt left value20210420:l0
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
Have
the value=$b2
the value=0
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$b2 = l0 cmp $l1
currStmt left value20210420:$b2
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$l1 = <invoker.SnowFlake: long lastStmp>
currStmt left value20210420:$l1
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:l0 = staticinvoke <invoker.SnowFlake: long getNewstmp()>()
currStmt left value20210420:l0
doAnalysis endqqqqqqq.....
come here
[CFMAP]2021 After BackwardAnalysis:{cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}
[taint into] sootMethod: getNewstmp
[]
class name :invoker.SnowFlake
method name :getNewstmp
method list :[]
clasname=invoker.SnowFlake
methodname=getNewstmp
sourcelist2021=[]
20210427node :$l0 = staticinvoke <java.lang.System: long currentTimeMillis()>()
20210427node in :[]
调用语句赋值给变量:$l0 = staticinvoke <java.lang.System: long currentTimeMillis()>()
20210427node out :[]
[taint328]a invoke <java.lang.System: long currentTimeMillis()>
[taint328]a invoke 0
20210427node :return $l0
20210427node in :[]
20210427node out :[]
analysis.outSet.size():0
[CFMAP]2021 After taintAnalysis:{cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}
The data isgggg 
<invoker.SnowFlake: long getNewstmp()>
The data isgggg invoker.SnowFlake getNewstmp [] {cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}  {cfhider.WordCount$IntSumReducer={reduce=[I@3310c372}, cfhider.WordCount$TokenizerMapper={map=[I@29db049d}, cfhider.WordCount={main=[I@299a1d24}, invoker.SnowFlake={<init>=[I@36fa57d2, getNextMill=[I@6d9bb830, getNewstmp=[I@7dde2f06}}
Coming...
doAnalysis Startingqqqqqqqq.....
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$l0 = staticinvoke <java.lang.System: long currentTimeMillis()>()
currStmt left value20210420:$l0
doAnalysis endqqqqqqq.....
come here
[CFMAP]2021 After BackwardAnalysis:{cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}
[taint into] sootMethod: <clinit>
[]
class name :invoker.SnowFlake
method name :<clinit>
method list :[]
clasname=invoker.SnowFlake
methodname=<clinit>
sourcelist2021=[]
20210427node :<invoker.SnowFlake: long sequence> = 0L
20210427node in :[]
普通复制语句1112:<invoker.SnowFlake: long sequence> = 0L
[taint source] u:0L
SourceList:[]
20210427node out :[]
20210427node :<invoker.SnowFlake: long lastStmp> = -1L
20210427node in :[]
普通复制语句1112:<invoker.SnowFlake: long lastStmp> = -1L
[taint source] u:-1L
SourceList:[]
20210427node out :[]
20210427node :return
20210427node in :[]
20210427node out :[]
analysis.outSet.size():0
[CFMAP]2021 After taintAnalysis:{cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}
The data isgggg 
<invoker.SnowFlake: void <clinit>()>
The data isgggg invoker.SnowFlake <clinit> [] {cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}  {cfhider.WordCount$IntSumReducer={reduce=[I@3310c372}, cfhider.WordCount$TokenizerMapper={map=[I@29db049d}, cfhider.WordCount={main=[I@299a1d24}, invoker.SnowFlake={<init>=[I@36fa57d2, getNextMill=[I@6d9bb830, getNewstmp=[I@7dde2f06}}
Coming...
doAnalysis Startingqqqqqqqq.....
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:<invoker.SnowFlake: long lastStmp> = -1L
currStmt left value20210420:<invoker.SnowFlake: long lastStmp>
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:<invoker.SnowFlake: long sequence> = 0L
currStmt left value20210420:<invoker.SnowFlake: long sequence>
doAnalysis endqqqqqqq.....
come here
[CFMAP]2021 After BackwardAnalysis:{cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}
[taint into] sootMethod: <init>
[]
class name :invoker.SnowFlake
method name :<init>
method list :[]
clasname=invoker.SnowFlake
methodname=<init>
sourcelist2021=[]
20210427node :r0 := @this: invoker.SnowFlake
20210427node in :[]
20210427node out :[]
currStmt20210423:r0 := @this: invoker.SnowFlake
20210427node :l0 := @parameter0: long
20210427node in :[]
[idStmt]iiiiiii l0 := @parameter0: long  index:0
ClassName:invoker.SnowFlake
MethodName:<init>
aaaa:0
20210427node out :[]
currStmt20210423:l0 := @parameter0: long
20210427node :l1 := @parameter1: long
20210427node in :[]
[idStmt]iiiiiii l1 := @parameter1: long  index:1
ClassName:invoker.SnowFlake
MethodName:<init>
aaaa:0
20210427node out :[]
currStmt20210423:l1 := @parameter1: long
20210427node :specialinvoke r0.<java.lang.Object: void <init>()>()
20210427node in :[]
20210427node out :[]
[taint329]i invoke specialinvoke r0.<java.lang.Object: void <init>()>()
[taint328]i invoke <java.lang.Object: void <init>()>
[taint328]i invoke 0
20210427node :$b2 = l0 cmp 31L
20210427node in :[]
普通复制语句1112:$b2 = l0 cmp 31L
[taint source] u:l0
SourceList:[]
[taint source] u:31L
SourceList:[]
[taint source] u:l0 cmp 31L
SourceList:[]
20210427node out :[]
20210427node :if $b2 > 0 goto $r1 = new java.lang.IllegalArgumentException
20210427node in :[]
20210427node out :[]
Have
Stmt if :if $b2 > 0 goto $r1 = new java.lang.IllegalArgumentExceptionStmt if value:$b2 > 0the value=$b2
the value=0
maintainValues.size0
ifValues1
20210427node :$b3 = l0 cmp 0L
20210427node in :[]
普通复制语句1112:$b3 = l0 cmp 0L
[taint source] u:l0
SourceList:[]
[taint source] u:0L
SourceList:[]
[taint source] u:l0 cmp 0L
SourceList:[]
20210427node out :[]
20210427node :if $b3 >= 0 goto $b4 = l1 cmp 31L
20210427node in :[]
20210427node out :[]
Have
Stmt if :if $b3 >= 0 goto $b4 = l1 cmp 31LStmt if value:$b3 >= 0the value=$b3
the value=0
maintainValues.size0
ifValues1
20210427node :$b4 = l1 cmp 31L
20210427node in :[]
普通复制语句1112:$b4 = l1 cmp 31L
[taint source] u:l1
SourceList:[]
[taint source] u:31L
SourceList:[]
[taint source] u:l1 cmp 31L
SourceList:[]
20210427node out :[]
20210427node :if $b4 > 0 goto $r2 = new java.lang.IllegalArgumentException
20210427node in :[]
20210427node out :[]
Have
Stmt if :if $b4 > 0 goto $r2 = new java.lang.IllegalArgumentExceptionStmt if value:$b4 > 0the value=$b4
the value=0
maintainValues.size0
ifValues1
20210427node :$b5 = l1 cmp 0L
20210427node in :[]
普通复制语句1112:$b5 = l1 cmp 0L
[taint source] u:l1
SourceList:[]
[taint source] u:0L
SourceList:[]
[taint source] u:l1 cmp 0L
SourceList:[]
20210427node out :[]
20210427node :if $b5 >= 0 goto <invoker.SnowFlake: long datacenterId> = 0L
20210427node in :[]
20210427node out :[]
Have
Stmt if :if $b5 >= 0 goto <invoker.SnowFlake: long datacenterId> = 0LStmt if value:$b5 >= 0the value=$b5
the value=0
maintainValues.size0
ifValues1
20210427node :<invoker.SnowFlake: long datacenterId> = 0L
20210427node in :[]
普通复制语句1112:<invoker.SnowFlake: long datacenterId> = 0L
[taint source] u:0L
SourceList:[]
20210427node out :[]
20210427node :<invoker.SnowFlake: long machineId> = 0L
20210427node in :[]
普通复制语句1112:<invoker.SnowFlake: long machineId> = 0L
[taint source] u:0L
SourceList:[]
20210427node out :[]
20210427node :return
20210427node in :[]
20210427node out :[]
20210427node :$r2 = new java.lang.IllegalArgumentException
20210427node in :[]
普通复制语句1112:$r2 = new java.lang.IllegalArgumentException
[taint source] u:new java.lang.IllegalArgumentException
SourceList:[]
20210427node out :[]
20210427node :specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("machineId can\'t be greater than MAX_MACHINE_NUM or less than 0")
20210427node in :[]
20210427node out :[]
[taint329]i invoke specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("machineId can\'t be greater than MAX_MACHINE_NUM or less than 0")
[taint328]i invoke <java.lang.IllegalArgumentException: void <init>(java.lang.String)>
[taint328]i invoke 1
value:"machineId can\'t be greater than MAX_MACHINE_NUM or less than 0"
isoutSetContains  false value:"machineId can\'t be greater than MAX_MACHINE_NUM or less than 0" index:0
20210427node :throw $r2
20210427node in :[]
20210427node out :[]
20210427node :$r1 = new java.lang.IllegalArgumentException
20210427node in :[]
普通复制语句1112:$r1 = new java.lang.IllegalArgumentException
[taint source] u:new java.lang.IllegalArgumentException
SourceList:[]
20210427node out :[]
20210427node :specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("datacenterId can\'t be greater than MAX_DATACENTER_NUM or less than 0")
20210427node in :[]
20210427node out :[]
[taint329]i invoke specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("datacenterId can\'t be greater than MAX_DATACENTER_NUM or less than 0")
[taint328]i invoke <java.lang.IllegalArgumentException: void <init>(java.lang.String)>
[taint328]i invoke 1
value:"datacenterId can\'t be greater than MAX_DATACENTER_NUM or less than 0"
isoutSetContains  false value:"datacenterId can\'t be greater than MAX_DATACENTER_NUM or less than 0" index:0
20210427node :throw $r1
20210427node in :[]
20210427node out :[]
analysis.outSet.size():0
[CFMAP]2021 After taintAnalysis:{cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}
The data isgggg 
<invoker.SnowFlake: void <init>(long,long)>
The data isgggg invoker.SnowFlake <init> [] {cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}  {cfhider.WordCount$IntSumReducer={reduce=[I@3310c372}, cfhider.WordCount$TokenizerMapper={map=[I@29db049d}, cfhider.WordCount={main=[I@299a1d24}, invoker.SnowFlake={<init>=[I@2341a274, getNextMill=[I@6d9bb830, getNewstmp=[I@7dde2f06}}
Coming...
doAnalysis Startingqqqqqqqq.....
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
[taint329]i invoke specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("datacenterId can\'t be greater than MAX_DATACENTER_NUM or less than 0")
[taint328]i invoke <java.lang.IllegalArgumentException: void <init>(java.lang.String)>
[taint328]i invoke 1
value:"datacenterId can\'t be greater than MAX_DATACENTER_NUM or less than 0"
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$r1 = new java.lang.IllegalArgumentException
currStmt left value20210420:$r1
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
[taint329]i invoke specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("machineId can\'t be greater than MAX_MACHINE_NUM or less than 0")
[taint328]i invoke <java.lang.IllegalArgumentException: void <init>(java.lang.String)>
[taint328]i invoke 1
value:"machineId can\'t be greater than MAX_MACHINE_NUM or less than 0"
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$r2 = new java.lang.IllegalArgumentException
currStmt left value20210420:$r2
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:<invoker.SnowFlake: long machineId> = 0L
currStmt left value20210420:<invoker.SnowFlake: long machineId>
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:<invoker.SnowFlake: long datacenterId> = 0L
currStmt left value20210420:<invoker.SnowFlake: long datacenterId>
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
Have
the value=$b5
the value=0
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$b5 = l1 cmp 0L
currStmt left value20210420:$b5
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
Have
the value=$b4
the value=0
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$b4 = l1 cmp 31L
currStmt left value20210420:$b4
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
Have
the value=$b3
the value=0
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$b3 = l0 cmp 0L
currStmt left value20210420:$b3
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
Have
the value=$b2
the value=0
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$b2 = l0 cmp 31L
currStmt left value20210420:$b2
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
[taint329]i invoke specialinvoke r0.<java.lang.Object: void <init>()>()
[taint328]i invoke <java.lang.Object: void <init>()>
[taint328]i invoke 0
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
doAnalysis endqqqqqqq.....
come here
[CFMAP]2021 After BackwardAnalysis:{cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}
[taint into] sootMethod: nextId
[]
class name :invoker.SnowFlake
method name :nextId
method list :[]
clasname=invoker.SnowFlake
methodname=nextId
sourcelist2021=[]
20210427node :l0 = staticinvoke <invoker.SnowFlake: long getNewstmp()>()
20210427node in :[]
调用语句赋值给变量:l0 = staticinvoke <invoker.SnowFlake: long getNewstmp()>()
Invokestmt:getNewstmp
20210427node out :[]
[taint328]a invoke <invoker.SnowFlake: long getNewstmp()>
[taint328]a invoke 0
[invokemap]invoke:getNewstmp  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
20210427node :$l1 = <invoker.SnowFlake: long lastStmp>
20210427node in :[]
普通复制语句1112:$l1 = <invoker.SnowFlake: long lastStmp>
[taint source] u:<invoker.SnowFlake: long lastStmp>
SourceList:[]
20210427node out :[]
20210427node :$b2 = l0 cmp $l1
20210427node in :[]
普通复制语句1112:$b2 = l0 cmp $l1
[taint source] u:l0
SourceList:[]
[taint source] u:$l1
SourceList:[]
[taint source] u:l0 cmp $l1
SourceList:[]
20210427node out :[]
20210427node :if $b2 >= 0 goto $l3 = <invoker.SnowFlake: long lastStmp>
20210427node in :[]
20210427node out :[]
Have
Stmt if :if $b2 >= 0 goto $l3 = <invoker.SnowFlake: long lastStmp>Stmt if value:$b2 >= 0the value=$b2
the value=0
maintainValues.size0
ifValues1
20210427node :$l3 = <invoker.SnowFlake: long lastStmp>
20210427node in :[]
普通复制语句1112:$l3 = <invoker.SnowFlake: long lastStmp>
[taint source] u:<invoker.SnowFlake: long lastStmp>
SourceList:[]
20210427node out :[]
20210427node :$b4 = l0 cmp $l3
20210427node in :[]
普通复制语句1112:$b4 = l0 cmp $l3
[taint source] u:l0
SourceList:[]
[taint source] u:$l3
SourceList:[]
[taint source] u:l0 cmp $l3
SourceList:[]
20210427node out :[]
20210427node :if $b4 != 0 goto <invoker.SnowFlake: long sequence> = 0L
20210427node in :[]
20210427node out :[]
Have
Stmt if :if $b4 != 0 goto <invoker.SnowFlake: long sequence> = 0LStmt if value:$b4 != 0the value=$b4
the value=0
maintainValues.size0
ifValues1
20210427node :<invoker.SnowFlake: long sequence> = 0L
20210427node in :[]
普通复制语句1112:<invoker.SnowFlake: long sequence> = 0L
[taint source] u:0L
SourceList:[]
20210427node out :[]
20210427node :$l5 = <invoker.SnowFlake: long sequence>
20210427node in :[]
普通复制语句1112:$l5 = <invoker.SnowFlake: long sequence>
[taint source] u:<invoker.SnowFlake: long sequence>
SourceList:[]
20210427node out :[]
20210427node :$l6 = $l5 + 1L
20210427node in :[]
普通复制语句1112:$l6 = $l5 + 1L
[taint source] u:$l5
SourceList:[]
[taint source] u:1L
SourceList:[]
[taint source] u:$l5 + 1L
SourceList:[]
20210427node out :[]
20210427node :$l7 = $l6 & 4095L
20210427node in :[]
普通复制语句1112:$l7 = $l6 & 4095L
[taint source] u:$l6
SourceList:[]
[taint source] u:4095L
SourceList:[]
[taint source] u:$l6 & 4095L
SourceList:[]
20210427node out :[]
20210427node :<invoker.SnowFlake: long sequence> = $l7
20210427node in :[]
普通复制语句1112:<invoker.SnowFlake: long sequence> = $l7
[taint source] u:$l7
SourceList:[]
20210427node out :[]
20210427node :$l8 = <invoker.SnowFlake: long sequence>
20210427node in :[]
普通复制语句1112:$l8 = <invoker.SnowFlake: long sequence>
[taint source] u:<invoker.SnowFlake: long sequence>
SourceList:[]
20210427node out :[]
20210427node :$b9 = $l8 cmp 0L
20210427node in :[]
普通复制语句1112:$b9 = $l8 cmp 0L
[taint source] u:$l8
SourceList:[]
[taint source] u:0L
SourceList:[]
[taint source] u:$l8 cmp 0L
SourceList:[]
20210427node out :[]
20210427node :if $b9 != 0 goto <invoker.SnowFlake: long lastStmp> = l0
20210427node in :[]
20210427node out :[]
Have
Stmt if :if $b9 != 0 goto <invoker.SnowFlake: long lastStmp> = l0Stmt if value:$b9 != 0the value=$b9
the value=0
maintainValues.size0
ifValues1
20210427node :l0 = staticinvoke <invoker.SnowFlake: long getNextMill()>()
20210427node in :[]
调用语句赋值给变量:l0 = staticinvoke <invoker.SnowFlake: long getNextMill()>()
Invokestmt:getNextMill
20210427node out :[]
[taint328]a invoke <invoker.SnowFlake: long getNextMill()>
[taint328]a invoke 0
[invokemap]invoke:getNextMill  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
20210427node :goto [?= <invoker.SnowFlake: long lastStmp> = l0]
20210427node in :[]
20210427node out :[]
20210427node :<invoker.SnowFlake: long lastStmp> = l0
20210427node in :[]
普通复制语句1112:<invoker.SnowFlake: long lastStmp> = l0
[taint source] u:l0
SourceList:[]
20210427node out :[]
20210427node :$l10 = l0 - 1480166465631L
20210427node in :[]
普通复制语句1112:$l10 = l0 - 1480166465631L
[taint source] u:l0
SourceList:[]
[taint source] u:1480166465631L
SourceList:[]
[taint source] u:l0 - 1480166465631L
SourceList:[]
20210427node out :[]
20210427node :$l11 = $l10 << 22
20210427node in :[]
普通复制语句1112:$l11 = $l10 << 22
[taint source] u:$l10
SourceList:[]
[taint source] u:22
SourceList:[]
[taint source] u:$l10 << 22
SourceList:[]
20210427node out :[]
20210427node :$l12 = <invoker.SnowFlake: long datacenterId>
20210427node in :[]
普通复制语句1112:$l12 = <invoker.SnowFlake: long datacenterId>
[taint source] u:<invoker.SnowFlake: long datacenterId>
SourceList:[]
20210427node out :[]
20210427node :$l13 = $l12 << 17
20210427node in :[]
普通复制语句1112:$l13 = $l12 << 17
[taint source] u:$l12
SourceList:[]
[taint source] u:17
SourceList:[]
[taint source] u:$l12 << 17
SourceList:[]
20210427node out :[]
20210427node :$l14 = $l11 | $l13
20210427node in :[]
普通复制语句1112:$l14 = $l11 | $l13
[taint source] u:$l11
SourceList:[]
[taint source] u:$l13
SourceList:[]
[taint source] u:$l11 | $l13
SourceList:[]
20210427node out :[]
20210427node :$l15 = <invoker.SnowFlake: long machineId>
20210427node in :[]
普通复制语句1112:$l15 = <invoker.SnowFlake: long machineId>
[taint source] u:<invoker.SnowFlake: long machineId>
SourceList:[]
20210427node out :[]
20210427node :$l16 = $l15 << 12
20210427node in :[]
普通复制语句1112:$l16 = $l15 << 12
[taint source] u:$l15
SourceList:[]
[taint source] u:12
SourceList:[]
[taint source] u:$l15 << 12
SourceList:[]
20210427node out :[]
20210427node :$l17 = $l14 | $l16
20210427node in :[]
普通复制语句1112:$l17 = $l14 | $l16
[taint source] u:$l14
SourceList:[]
[taint source] u:$l16
SourceList:[]
[taint source] u:$l14 | $l16
SourceList:[]
20210427node out :[]
20210427node :$l18 = <invoker.SnowFlake: long sequence>
20210427node in :[]
普通复制语句1112:$l18 = <invoker.SnowFlake: long sequence>
[taint source] u:<invoker.SnowFlake: long sequence>
SourceList:[]
20210427node out :[]
20210427node :$l19 = $l17 | $l18
20210427node in :[]
普通复制语句1112:$l19 = $l17 | $l18
[taint source] u:$l17
SourceList:[]
[taint source] u:$l18
SourceList:[]
[taint source] u:$l17 | $l18
SourceList:[]
20210427node out :[]
20210427node :return $l19
20210427node in :[]
20210427node out :[]
20210427node :$r0 = new java.lang.RuntimeException
20210427node in :[]
普通复制语句1112:$r0 = new java.lang.RuntimeException
[taint source] u:new java.lang.RuntimeException
SourceList:[]
20210427node out :[]
20210427node :specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Clock moved backwards.  Refusing to generate id")
20210427node in :[]
20210427node out :[]
[taint329]i invoke specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Clock moved backwards.  Refusing to generate id")
[taint328]i invoke <java.lang.RuntimeException: void <init>(java.lang.String)>
[taint328]i invoke 1
value:"Clock moved backwards.  Refusing to generate id"
isoutSetContains  false value:"Clock moved backwards.  Refusing to generate id" index:0
20210427node :throw $r0
20210427node in :[]
20210427node out :[]
analysis.outSet.size():0
[CFMAP]2021 After taintAnalysis:{cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}
The data isgggg 
<invoker.SnowFlake: long nextId()>
The data isgggg invoker.SnowFlake nextId [] {cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}  {cfhider.WordCount$IntSumReducer={reduce=[I@3310c372}, cfhider.WordCount$TokenizerMapper={map=[I@29db049d}, cfhider.WordCount={main=[I@299a1d24}, invoker.SnowFlake={<init>=[I@2341a274, getNextMill=[I@2a107fc1, getNewstmp=[I@21336d7a}}
Coming...
doAnalysis Startingqqqqqqqq.....
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
[taint329]i invoke specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Clock moved backwards.  Refusing to generate id")
[taint328]i invoke <java.lang.RuntimeException: void <init>(java.lang.String)>
[taint328]i invoke 1
value:"Clock moved backwards.  Refusing to generate id"
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$r0 = new java.lang.RuntimeException
currStmt left value20210420:$r0
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$l19 = $l17 | $l18
currStmt left value20210420:$l19
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$l18 = <invoker.SnowFlake: long sequence>
currStmt left value20210420:$l18
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$l17 = $l14 | $l16
currStmt left value20210420:$l17
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$l16 = $l15 << 12
currStmt left value20210420:$l16
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$l15 = <invoker.SnowFlake: long machineId>
currStmt left value20210420:$l15
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$l14 = $l11 | $l13
currStmt left value20210420:$l14
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$l13 = $l12 << 17
currStmt left value20210420:$l13
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$l12 = <invoker.SnowFlake: long datacenterId>
currStmt left value20210420:$l12
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$l11 = $l10 << 22
currStmt left value20210420:$l11
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$l10 = l0 - 1480166465631L
currStmt left value20210420:$l10
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:<invoker.SnowFlake: long lastStmp> = l0
currStmt left value20210420:<invoker.SnowFlake: long lastStmp>
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:l0 = staticinvoke <invoker.SnowFlake: long getNextMill()>()
currStmt left value20210420:l0
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
Have
the value=$b9
the value=0
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$b9 = $l8 cmp 0L
currStmt left value20210420:$b9
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$l8 = <invoker.SnowFlake: long sequence>
currStmt left value20210420:$l8
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:<invoker.SnowFlake: long sequence> = $l7
currStmt left value20210420:<invoker.SnowFlake: long sequence>
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$l7 = $l6 & 4095L
currStmt left value20210420:$l7
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$l6 = $l5 + 1L
currStmt left value20210420:$l6
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$l5 = <invoker.SnowFlake: long sequence>
currStmt left value20210420:$l5
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:<invoker.SnowFlake: long sequence> = 0L
currStmt left value20210420:<invoker.SnowFlake: long sequence>
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
Have
the value=$b4
the value=0
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$b4 = l0 cmp $l3
currStmt left value20210420:$b4
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$l3 = <invoker.SnowFlake: long lastStmp>
currStmt left value20210420:$l3
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
Have
the value=$b2
the value=0
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$b2 = l0 cmp $l1
currStmt left value20210420:$b2
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$l1 = <invoker.SnowFlake: long lastStmp>
currStmt left value20210420:$l1
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:l0 = staticinvoke <invoker.SnowFlake: long getNewstmp()>()
currStmt left value20210420:l0
doAnalysis endqqqqqqq.....
come here
[CFMAP]2021 After BackwardAnalysis:{cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}
[taint into] sootMethod: getNextMill
[]
class name :invoker.SnowFlake
method name :getNextMill
method list :[]
clasname=invoker.SnowFlake
methodname=getNextMill
sourcelist2021=[]
20210427node :l0 = staticinvoke <invoker.SnowFlake: long getNewstmp()>()
20210427node in :[]
调用语句赋值给变量:l0 = staticinvoke <invoker.SnowFlake: long getNewstmp()>()
Invokestmt:getNewstmp
20210427node out :[]
[taint328]a invoke <invoker.SnowFlake: long getNewstmp()>
[taint328]a invoke 0
[invokemap]invoke:getNewstmp  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
20210427node :$l1 = <invoker.SnowFlake: long lastStmp>
20210427node in :[]
普通复制语句1112:$l1 = <invoker.SnowFlake: long lastStmp>
[taint source] u:<invoker.SnowFlake: long lastStmp>
SourceList:[]
20210427node out :[]
20210427node :$b2 = l0 cmp $l1
20210427node in :[]
普通复制语句1112:$b2 = l0 cmp $l1
[taint source] u:l0
SourceList:[]
[taint source] u:$l1
SourceList:[]
[taint source] u:l0 cmp $l1
SourceList:[]
20210427node out :[]
20210427node :if $b2 > 0 goto return l0
20210427node in :[]
20210427node out :[]
Have
Stmt if :if $b2 > 0 goto return l0Stmt if value:$b2 > 0the value=$b2
the value=0
maintainValues.size0
ifValues1
20210427node :return l0
20210427node in :[]
20210427node out :[]
20210427node :l0 = staticinvoke <invoker.SnowFlake: long getNewstmp()>()
20210427node in :[]
调用语句赋值给变量:l0 = staticinvoke <invoker.SnowFlake: long getNewstmp()>()
Invokestmt:getNewstmp
20210427node out :[]
[taint328]a invoke <invoker.SnowFlake: long getNewstmp()>
[taint328]a invoke 0
[invokemap]invoke:getNewstmp  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
20210427node :goto [?= $l1 = <invoker.SnowFlake: long lastStmp>]
20210427node in :[]
20210427node out :[]
analysis.outSet.size():0
[CFMAP]2021 After taintAnalysis:{cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}
The data isgggg 
<invoker.SnowFlake: long getNextMill()>
The data isgggg invoker.SnowFlake getNextMill [] {cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}  {cfhider.WordCount$IntSumReducer={reduce=[I@3310c372}, cfhider.WordCount$TokenizerMapper={map=[I@29db049d}, cfhider.WordCount={main=[I@299a1d24}, invoker.SnowFlake={<init>=[I@2341a274, getNextMill=[I@2a107fc1, getNewstmp=[I@3758759d}}
Coming...
doAnalysis Startingqqqqqqqq.....
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:l0 = staticinvoke <invoker.SnowFlake: long getNewstmp()>()
currStmt left value20210420:l0
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
Have
the value=$b2
the value=0
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$b2 = l0 cmp $l1
currStmt left value20210420:$b2
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$l1 = <invoker.SnowFlake: long lastStmp>
currStmt left value20210420:$l1
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:l0 = staticinvoke <invoker.SnowFlake: long getNewstmp()>()
currStmt left value20210420:l0
doAnalysis endqqqqqqq.....
come here
[CFMAP]2021 After BackwardAnalysis:{cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}
[taint into] sootMethod: getNewstmp
[]
class name :invoker.SnowFlake
method name :getNewstmp
method list :[]
clasname=invoker.SnowFlake
methodname=getNewstmp
sourcelist2021=[]
20210427node :$l0 = staticinvoke <java.lang.System: long currentTimeMillis()>()
20210427node in :[]
调用语句赋值给变量:$l0 = staticinvoke <java.lang.System: long currentTimeMillis()>()
20210427node out :[]
[taint328]a invoke <java.lang.System: long currentTimeMillis()>
[taint328]a invoke 0
20210427node :return $l0
20210427node in :[]
20210427node out :[]
analysis.outSet.size():0
[CFMAP]2021 After taintAnalysis:{cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}
The data isgggg 
<invoker.SnowFlake: long getNewstmp()>
The data isgggg invoker.SnowFlake getNewstmp [] {cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}  {cfhider.WordCount$IntSumReducer={reduce=[I@3310c372}, cfhider.WordCount$TokenizerMapper={map=[I@29db049d}, cfhider.WordCount={main=[I@299a1d24}, invoker.SnowFlake={<init>=[I@2341a274, getNextMill=[I@2a107fc1, getNewstmp=[I@3758759d}}
Coming...
doAnalysis Startingqqqqqqqq.....
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$l0 = staticinvoke <java.lang.System: long currentTimeMillis()>()
currStmt left value20210420:$l0
doAnalysis endqqqqqqq.....
come here
[CFMAP]2021 After BackwardAnalysis:{cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}
[taint into] sootMethod: <clinit>
[]
class name :invoker.SnowFlake
method name :<clinit>
method list :[]
clasname=invoker.SnowFlake
methodname=<clinit>
sourcelist2021=[]
20210427node :<invoker.SnowFlake: long sequence> = 0L
20210427node in :[]
普通复制语句1112:<invoker.SnowFlake: long sequence> = 0L
[taint source] u:0L
SourceList:[]
20210427node out :[]
20210427node :<invoker.SnowFlake: long lastStmp> = -1L
20210427node in :[]
普通复制语句1112:<invoker.SnowFlake: long lastStmp> = -1L
[taint source] u:-1L
SourceList:[]
20210427node out :[]
20210427node :return
20210427node in :[]
20210427node out :[]
analysis.outSet.size():0
[CFMAP]2021 After taintAnalysis:{cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}
The data isgggg 
<invoker.SnowFlake: void <clinit>()>
The data isgggg invoker.SnowFlake <clinit> [] {cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}  {cfhider.WordCount$IntSumReducer={reduce=[I@3310c372}, cfhider.WordCount$TokenizerMapper={map=[I@29db049d}, cfhider.WordCount={main=[I@299a1d24}, invoker.SnowFlake={<init>=[I@2341a274, getNextMill=[I@2a107fc1, getNewstmp=[I@3758759d}}
Coming...
doAnalysis Startingqqqqqqqq.....
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:<invoker.SnowFlake: long lastStmp> = -1L
currStmt left value20210420:<invoker.SnowFlake: long lastStmp>
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:<invoker.SnowFlake: long sequence> = 0L
currStmt left value20210420:<invoker.SnowFlake: long sequence>
doAnalysis endqqqqqqq.....
come here
[CFMAP]2021 After BackwardAnalysis:{cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}
[taint into] sootMethod: <init>
[]
class name :invoker.SnowFlake
method name :<init>
method list :[]
clasname=invoker.SnowFlake
methodname=<init>
sourcelist2021=[]
20210427node :r0 := @this: invoker.SnowFlake
20210427node in :[]
20210427node out :[]
currStmt20210423:r0 := @this: invoker.SnowFlake
20210427node :l0 := @parameter0: long
20210427node in :[]
[idStmt]iiiiiii l0 := @parameter0: long  index:0
ClassName:invoker.SnowFlake
MethodName:<init>
aaaa:0
20210427node out :[]
currStmt20210423:l0 := @parameter0: long
20210427node :l1 := @parameter1: long
20210427node in :[]
[idStmt]iiiiiii l1 := @parameter1: long  index:1
ClassName:invoker.SnowFlake
MethodName:<init>
aaaa:0
20210427node out :[]
currStmt20210423:l1 := @parameter1: long
20210427node :specialinvoke r0.<java.lang.Object: void <init>()>()
20210427node in :[]
20210427node out :[]
[taint329]i invoke specialinvoke r0.<java.lang.Object: void <init>()>()
[taint328]i invoke <java.lang.Object: void <init>()>
[taint328]i invoke 0
20210427node :$b2 = l0 cmp 31L
20210427node in :[]
普通复制语句1112:$b2 = l0 cmp 31L
[taint source] u:l0
SourceList:[]
[taint source] u:31L
SourceList:[]
[taint source] u:l0 cmp 31L
SourceList:[]
20210427node out :[]
20210427node :if $b2 > 0 goto $r1 = new java.lang.IllegalArgumentException
20210427node in :[]
20210427node out :[]
Have
Stmt if :if $b2 > 0 goto $r1 = new java.lang.IllegalArgumentExceptionStmt if value:$b2 > 0the value=$b2
the value=0
maintainValues.size0
ifValues1
20210427node :$b3 = l0 cmp 0L
20210427node in :[]
普通复制语句1112:$b3 = l0 cmp 0L
[taint source] u:l0
SourceList:[]
[taint source] u:0L
SourceList:[]
[taint source] u:l0 cmp 0L
SourceList:[]
20210427node out :[]
20210427node :if $b3 >= 0 goto $b4 = l1 cmp 31L
20210427node in :[]
20210427node out :[]
Have
Stmt if :if $b3 >= 0 goto $b4 = l1 cmp 31LStmt if value:$b3 >= 0the value=$b3
the value=0
maintainValues.size0
ifValues1
20210427node :$b4 = l1 cmp 31L
20210427node in :[]
普通复制语句1112:$b4 = l1 cmp 31L
[taint source] u:l1
SourceList:[]
[taint source] u:31L
SourceList:[]
[taint source] u:l1 cmp 31L
SourceList:[]
20210427node out :[]
20210427node :if $b4 > 0 goto $r2 = new java.lang.IllegalArgumentException
20210427node in :[]
20210427node out :[]
Have
Stmt if :if $b4 > 0 goto $r2 = new java.lang.IllegalArgumentExceptionStmt if value:$b4 > 0the value=$b4
the value=0
maintainValues.size0
ifValues1
20210427node :$b5 = l1 cmp 0L
20210427node in :[]
普通复制语句1112:$b5 = l1 cmp 0L
[taint source] u:l1
SourceList:[]
[taint source] u:0L
SourceList:[]
[taint source] u:l1 cmp 0L
SourceList:[]
20210427node out :[]
20210427node :if $b5 >= 0 goto <invoker.SnowFlake: long datacenterId> = 0L
20210427node in :[]
20210427node out :[]
Have
Stmt if :if $b5 >= 0 goto <invoker.SnowFlake: long datacenterId> = 0LStmt if value:$b5 >= 0the value=$b5
the value=0
maintainValues.size0
ifValues1
20210427node :<invoker.SnowFlake: long datacenterId> = 0L
20210427node in :[]
普通复制语句1112:<invoker.SnowFlake: long datacenterId> = 0L
[taint source] u:0L
SourceList:[]
20210427node out :[]
20210427node :<invoker.SnowFlake: long machineId> = 0L
20210427node in :[]
普通复制语句1112:<invoker.SnowFlake: long machineId> = 0L
[taint source] u:0L
SourceList:[]
20210427node out :[]
20210427node :return
20210427node in :[]
20210427node out :[]
20210427node :$r2 = new java.lang.IllegalArgumentException
20210427node in :[]
普通复制语句1112:$r2 = new java.lang.IllegalArgumentException
[taint source] u:new java.lang.IllegalArgumentException
SourceList:[]
20210427node out :[]
20210427node :specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("machineId can\'t be greater than MAX_MACHINE_NUM or less than 0")
20210427node in :[]
20210427node out :[]
[taint329]i invoke specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("machineId can\'t be greater than MAX_MACHINE_NUM or less than 0")
[taint328]i invoke <java.lang.IllegalArgumentException: void <init>(java.lang.String)>
[taint328]i invoke 1
value:"machineId can\'t be greater than MAX_MACHINE_NUM or less than 0"
isoutSetContains  false value:"machineId can\'t be greater than MAX_MACHINE_NUM or less than 0" index:0
20210427node :throw $r2
20210427node in :[]
20210427node out :[]
20210427node :$r1 = new java.lang.IllegalArgumentException
20210427node in :[]
普通复制语句1112:$r1 = new java.lang.IllegalArgumentException
[taint source] u:new java.lang.IllegalArgumentException
SourceList:[]
20210427node out :[]
20210427node :specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("datacenterId can\'t be greater than MAX_DATACENTER_NUM or less than 0")
20210427node in :[]
20210427node out :[]
[taint329]i invoke specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("datacenterId can\'t be greater than MAX_DATACENTER_NUM or less than 0")
[taint328]i invoke <java.lang.IllegalArgumentException: void <init>(java.lang.String)>
[taint328]i invoke 1
value:"datacenterId can\'t be greater than MAX_DATACENTER_NUM or less than 0"
isoutSetContains  false value:"datacenterId can\'t be greater than MAX_DATACENTER_NUM or less than 0" index:0
20210427node :throw $r1
20210427node in :[]
20210427node out :[]
analysis.outSet.size():0
[CFMAP]2021 After taintAnalysis:{cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}
The data isgggg 
<invoker.SnowFlake: void <init>(long,long)>
The data isgggg invoker.SnowFlake <init> [] {cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}  {cfhider.WordCount$IntSumReducer={reduce=[I@3310c372}, cfhider.WordCount$TokenizerMapper={map=[I@29db049d}, cfhider.WordCount={main=[I@299a1d24}, invoker.SnowFlake={<init>=[I@1091b2ce, getNextMill=[I@2a107fc1, getNewstmp=[I@3758759d}}
Coming...
doAnalysis Startingqqqqqqqq.....
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
[taint329]i invoke specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("datacenterId can\'t be greater than MAX_DATACENTER_NUM or less than 0")
[taint328]i invoke <java.lang.IllegalArgumentException: void <init>(java.lang.String)>
[taint328]i invoke 1
value:"datacenterId can\'t be greater than MAX_DATACENTER_NUM or less than 0"
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$r1 = new java.lang.IllegalArgumentException
currStmt left value20210420:$r1
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
[taint329]i invoke specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("machineId can\'t be greater than MAX_MACHINE_NUM or less than 0")
[taint328]i invoke <java.lang.IllegalArgumentException: void <init>(java.lang.String)>
[taint328]i invoke 1
value:"machineId can\'t be greater than MAX_MACHINE_NUM or less than 0"
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$r2 = new java.lang.IllegalArgumentException
currStmt left value20210420:$r2
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:<invoker.SnowFlake: long machineId> = 0L
currStmt left value20210420:<invoker.SnowFlake: long machineId>
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:<invoker.SnowFlake: long datacenterId> = 0L
currStmt left value20210420:<invoker.SnowFlake: long datacenterId>
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
Have
the value=$b5
the value=0
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$b5 = l1 cmp 0L
currStmt left value20210420:$b5
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
Have
the value=$b4
the value=0
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$b4 = l1 cmp 31L
currStmt left value20210420:$b4
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
Have
the value=$b3
the value=0
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$b3 = l0 cmp 0L
currStmt left value20210420:$b3
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
Have
the value=$b2
the value=0
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$b2 = l0 cmp 31L
currStmt left value20210420:$b2
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
[taint329]i invoke specialinvoke r0.<java.lang.Object: void <init>()>()
[taint328]i invoke <java.lang.Object: void <init>()>
[taint328]i invoke 0
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
doAnalysis endqqqqqqq.....
come here
[CFMAP]2021 After BackwardAnalysis:{cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}
[taint into] sootMethod: nextId
[]
class name :invoker.SnowFlake
method name :nextId
method list :[]
clasname=invoker.SnowFlake
methodname=nextId
sourcelist2021=[]
20210427node :l0 = staticinvoke <invoker.SnowFlake: long getNewstmp()>()
20210427node in :[]
调用语句赋值给变量:l0 = staticinvoke <invoker.SnowFlake: long getNewstmp()>()
Invokestmt:getNewstmp
20210427node out :[]
[taint328]a invoke <invoker.SnowFlake: long getNewstmp()>
[taint328]a invoke 0
[invokemap]invoke:getNewstmp  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
20210427node :$l1 = <invoker.SnowFlake: long lastStmp>
20210427node in :[]
普通复制语句1112:$l1 = <invoker.SnowFlake: long lastStmp>
[taint source] u:<invoker.SnowFlake: long lastStmp>
SourceList:[]
20210427node out :[]
20210427node :$b2 = l0 cmp $l1
20210427node in :[]
普通复制语句1112:$b2 = l0 cmp $l1
[taint source] u:l0
SourceList:[]
[taint source] u:$l1
SourceList:[]
[taint source] u:l0 cmp $l1
SourceList:[]
20210427node out :[]
20210427node :if $b2 >= 0 goto $l3 = <invoker.SnowFlake: long lastStmp>
20210427node in :[]
20210427node out :[]
Have
Stmt if :if $b2 >= 0 goto $l3 = <invoker.SnowFlake: long lastStmp>Stmt if value:$b2 >= 0the value=$b2
the value=0
maintainValues.size0
ifValues1
20210427node :$l3 = <invoker.SnowFlake: long lastStmp>
20210427node in :[]
普通复制语句1112:$l3 = <invoker.SnowFlake: long lastStmp>
[taint source] u:<invoker.SnowFlake: long lastStmp>
SourceList:[]
20210427node out :[]
20210427node :$b4 = l0 cmp $l3
20210427node in :[]
普通复制语句1112:$b4 = l0 cmp $l3
[taint source] u:l0
SourceList:[]
[taint source] u:$l3
SourceList:[]
[taint source] u:l0 cmp $l3
SourceList:[]
20210427node out :[]
20210427node :if $b4 != 0 goto <invoker.SnowFlake: long sequence> = 0L
20210427node in :[]
20210427node out :[]
Have
Stmt if :if $b4 != 0 goto <invoker.SnowFlake: long sequence> = 0LStmt if value:$b4 != 0the value=$b4
the value=0
maintainValues.size0
ifValues1
20210427node :<invoker.SnowFlake: long sequence> = 0L
20210427node in :[]
普通复制语句1112:<invoker.SnowFlake: long sequence> = 0L
[taint source] u:0L
SourceList:[]
20210427node out :[]
20210427node :$l5 = <invoker.SnowFlake: long sequence>
20210427node in :[]
普通复制语句1112:$l5 = <invoker.SnowFlake: long sequence>
[taint source] u:<invoker.SnowFlake: long sequence>
SourceList:[]
20210427node out :[]
20210427node :$l6 = $l5 + 1L
20210427node in :[]
普通复制语句1112:$l6 = $l5 + 1L
[taint source] u:$l5
SourceList:[]
[taint source] u:1L
SourceList:[]
[taint source] u:$l5 + 1L
SourceList:[]
20210427node out :[]
20210427node :$l7 = $l6 & 4095L
20210427node in :[]
普通复制语句1112:$l7 = $l6 & 4095L
[taint source] u:$l6
SourceList:[]
[taint source] u:4095L
SourceList:[]
[taint source] u:$l6 & 4095L
SourceList:[]
20210427node out :[]
20210427node :<invoker.SnowFlake: long sequence> = $l7
20210427node in :[]
普通复制语句1112:<invoker.SnowFlake: long sequence> = $l7
[taint source] u:$l7
SourceList:[]
20210427node out :[]
20210427node :$l8 = <invoker.SnowFlake: long sequence>
20210427node in :[]
普通复制语句1112:$l8 = <invoker.SnowFlake: long sequence>
[taint source] u:<invoker.SnowFlake: long sequence>
SourceList:[]
20210427node out :[]
20210427node :$b9 = $l8 cmp 0L
20210427node in :[]
普通复制语句1112:$b9 = $l8 cmp 0L
[taint source] u:$l8
SourceList:[]
[taint source] u:0L
SourceList:[]
[taint source] u:$l8 cmp 0L
SourceList:[]
20210427node out :[]
20210427node :if $b9 != 0 goto <invoker.SnowFlake: long lastStmp> = l0
20210427node in :[]
20210427node out :[]
Have
Stmt if :if $b9 != 0 goto <invoker.SnowFlake: long lastStmp> = l0Stmt if value:$b9 != 0the value=$b9
the value=0
maintainValues.size0
ifValues1
20210427node :l0 = staticinvoke <invoker.SnowFlake: long getNextMill()>()
20210427node in :[]
调用语句赋值给变量:l0 = staticinvoke <invoker.SnowFlake: long getNextMill()>()
Invokestmt:getNextMill
20210427node out :[]
[taint328]a invoke <invoker.SnowFlake: long getNextMill()>
[taint328]a invoke 0
[invokemap]invoke:getNextMill  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
20210427node :goto [?= <invoker.SnowFlake: long lastStmp> = l0]
20210427node in :[]
20210427node out :[]
20210427node :<invoker.SnowFlake: long lastStmp> = l0
20210427node in :[]
普通复制语句1112:<invoker.SnowFlake: long lastStmp> = l0
[taint source] u:l0
SourceList:[]
20210427node out :[]
20210427node :$l10 = l0 - 1480166465631L
20210427node in :[]
普通复制语句1112:$l10 = l0 - 1480166465631L
[taint source] u:l0
SourceList:[]
[taint source] u:1480166465631L
SourceList:[]
[taint source] u:l0 - 1480166465631L
SourceList:[]
20210427node out :[]
20210427node :$l11 = $l10 << 22
20210427node in :[]
普通复制语句1112:$l11 = $l10 << 22
[taint source] u:$l10
SourceList:[]
[taint source] u:22
SourceList:[]
[taint source] u:$l10 << 22
SourceList:[]
20210427node out :[]
20210427node :$l12 = <invoker.SnowFlake: long datacenterId>
20210427node in :[]
普通复制语句1112:$l12 = <invoker.SnowFlake: long datacenterId>
[taint source] u:<invoker.SnowFlake: long datacenterId>
SourceList:[]
20210427node out :[]
20210427node :$l13 = $l12 << 17
20210427node in :[]
普通复制语句1112:$l13 = $l12 << 17
[taint source] u:$l12
SourceList:[]
[taint source] u:17
SourceList:[]
[taint source] u:$l12 << 17
SourceList:[]
20210427node out :[]
20210427node :$l14 = $l11 | $l13
20210427node in :[]
普通复制语句1112:$l14 = $l11 | $l13
[taint source] u:$l11
SourceList:[]
[taint source] u:$l13
SourceList:[]
[taint source] u:$l11 | $l13
SourceList:[]
20210427node out :[]
20210427node :$l15 = <invoker.SnowFlake: long machineId>
20210427node in :[]
普通复制语句1112:$l15 = <invoker.SnowFlake: long machineId>
[taint source] u:<invoker.SnowFlake: long machineId>
SourceList:[]
20210427node out :[]
20210427node :$l16 = $l15 << 12
20210427node in :[]
普通复制语句1112:$l16 = $l15 << 12
[taint source] u:$l15
SourceList:[]
[taint source] u:12
SourceList:[]
[taint source] u:$l15 << 12
SourceList:[]
20210427node out :[]
20210427node :$l17 = $l14 | $l16
20210427node in :[]
普通复制语句1112:$l17 = $l14 | $l16
[taint source] u:$l14
SourceList:[]
[taint source] u:$l16
SourceList:[]
[taint source] u:$l14 | $l16
SourceList:[]
20210427node out :[]
20210427node :$l18 = <invoker.SnowFlake: long sequence>
20210427node in :[]
普通复制语句1112:$l18 = <invoker.SnowFlake: long sequence>
[taint source] u:<invoker.SnowFlake: long sequence>
SourceList:[]
20210427node out :[]
20210427node :$l19 = $l17 | $l18
20210427node in :[]
普通复制语句1112:$l19 = $l17 | $l18
[taint source] u:$l17
SourceList:[]
[taint source] u:$l18
SourceList:[]
[taint source] u:$l17 | $l18
SourceList:[]
20210427node out :[]
20210427node :return $l19
20210427node in :[]
20210427node out :[]
20210427node :$r0 = new java.lang.RuntimeException
20210427node in :[]
普通复制语句1112:$r0 = new java.lang.RuntimeException
[taint source] u:new java.lang.RuntimeException
SourceList:[]
20210427node out :[]
20210427node :specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Clock moved backwards.  Refusing to generate id")
20210427node in :[]
20210427node out :[]
[taint329]i invoke specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Clock moved backwards.  Refusing to generate id")
[taint328]i invoke <java.lang.RuntimeException: void <init>(java.lang.String)>
[taint328]i invoke 1
value:"Clock moved backwards.  Refusing to generate id"
isoutSetContains  false value:"Clock moved backwards.  Refusing to generate id" index:0
20210427node :throw $r0
20210427node in :[]
20210427node out :[]
analysis.outSet.size():0
[CFMAP]2021 After taintAnalysis:{cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}
The data isgggg 
<invoker.SnowFlake: long nextId()>
The data isgggg invoker.SnowFlake nextId [] {cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}  {cfhider.WordCount$IntSumReducer={reduce=[I@3310c372}, cfhider.WordCount$TokenizerMapper={map=[I@29db049d}, cfhider.WordCount={main=[I@299a1d24}, invoker.SnowFlake={<init>=[I@1091b2ce, getNextMill=[I@4d71fae1, getNewstmp=[I@760df17f}}
Coming...
doAnalysis Startingqqqqqqqq.....
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
[taint329]i invoke specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Clock moved backwards.  Refusing to generate id")
[taint328]i invoke <java.lang.RuntimeException: void <init>(java.lang.String)>
[taint328]i invoke 1
value:"Clock moved backwards.  Refusing to generate id"
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$r0 = new java.lang.RuntimeException
currStmt left value20210420:$r0
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$l19 = $l17 | $l18
currStmt left value20210420:$l19
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$l18 = <invoker.SnowFlake: long sequence>
currStmt left value20210420:$l18
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$l17 = $l14 | $l16
currStmt left value20210420:$l17
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$l16 = $l15 << 12
currStmt left value20210420:$l16
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$l15 = <invoker.SnowFlake: long machineId>
currStmt left value20210420:$l15
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$l14 = $l11 | $l13
currStmt left value20210420:$l14
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$l13 = $l12 << 17
currStmt left value20210420:$l13
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$l12 = <invoker.SnowFlake: long datacenterId>
currStmt left value20210420:$l12
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$l11 = $l10 << 22
currStmt left value20210420:$l11
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$l10 = l0 - 1480166465631L
currStmt left value20210420:$l10
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:<invoker.SnowFlake: long lastStmp> = l0
currStmt left value20210420:<invoker.SnowFlake: long lastStmp>
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:l0 = staticinvoke <invoker.SnowFlake: long getNextMill()>()
currStmt left value20210420:l0
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
Have
the value=$b9
the value=0
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$b9 = $l8 cmp 0L
currStmt left value20210420:$b9
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$l8 = <invoker.SnowFlake: long sequence>
currStmt left value20210420:$l8
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:<invoker.SnowFlake: long sequence> = $l7
currStmt left value20210420:<invoker.SnowFlake: long sequence>
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$l7 = $l6 & 4095L
currStmt left value20210420:$l7
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$l6 = $l5 + 1L
currStmt left value20210420:$l6
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$l5 = <invoker.SnowFlake: long sequence>
currStmt left value20210420:$l5
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:<invoker.SnowFlake: long sequence> = 0L
currStmt left value20210420:<invoker.SnowFlake: long sequence>
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
Have
the value=$b4
the value=0
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$b4 = l0 cmp $l3
currStmt left value20210420:$b4
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$l3 = <invoker.SnowFlake: long lastStmp>
currStmt left value20210420:$l3
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
Have
the value=$b2
the value=0
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$b2 = l0 cmp $l1
currStmt left value20210420:$b2
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$l1 = <invoker.SnowFlake: long lastStmp>
currStmt left value20210420:$l1
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:l0 = staticinvoke <invoker.SnowFlake: long getNewstmp()>()
currStmt left value20210420:l0
doAnalysis endqqqqqqq.....
come here
[CFMAP]2021 After BackwardAnalysis:{cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}
[taint into] sootMethod: getNextMill
[]
class name :invoker.SnowFlake
method name :getNextMill
method list :[]
clasname=invoker.SnowFlake
methodname=getNextMill
sourcelist2021=[]
20210427node :l0 = staticinvoke <invoker.SnowFlake: long getNewstmp()>()
20210427node in :[]
调用语句赋值给变量:l0 = staticinvoke <invoker.SnowFlake: long getNewstmp()>()
Invokestmt:getNewstmp
20210427node out :[]
[taint328]a invoke <invoker.SnowFlake: long getNewstmp()>
[taint328]a invoke 0
[invokemap]invoke:getNewstmp  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
20210427node :$l1 = <invoker.SnowFlake: long lastStmp>
20210427node in :[]
普通复制语句1112:$l1 = <invoker.SnowFlake: long lastStmp>
[taint source] u:<invoker.SnowFlake: long lastStmp>
SourceList:[]
20210427node out :[]
20210427node :$b2 = l0 cmp $l1
20210427node in :[]
普通复制语句1112:$b2 = l0 cmp $l1
[taint source] u:l0
SourceList:[]
[taint source] u:$l1
SourceList:[]
[taint source] u:l0 cmp $l1
SourceList:[]
20210427node out :[]
20210427node :if $b2 > 0 goto return l0
20210427node in :[]
20210427node out :[]
Have
Stmt if :if $b2 > 0 goto return l0Stmt if value:$b2 > 0the value=$b2
the value=0
maintainValues.size0
ifValues1
20210427node :return l0
20210427node in :[]
20210427node out :[]
20210427node :l0 = staticinvoke <invoker.SnowFlake: long getNewstmp()>()
20210427node in :[]
调用语句赋值给变量:l0 = staticinvoke <invoker.SnowFlake: long getNewstmp()>()
Invokestmt:getNewstmp
20210427node out :[]
[taint328]a invoke <invoker.SnowFlake: long getNewstmp()>
[taint328]a invoke 0
[invokemap]invoke:getNewstmp  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
20210427node :goto [?= $l1 = <invoker.SnowFlake: long lastStmp>]
20210427node in :[]
20210427node out :[]
analysis.outSet.size():0
[CFMAP]2021 After taintAnalysis:{cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}
The data isgggg 
<invoker.SnowFlake: long getNextMill()>
The data isgggg invoker.SnowFlake getNextMill [] {cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}  {cfhider.WordCount$IntSumReducer={reduce=[I@3310c372}, cfhider.WordCount$TokenizerMapper={map=[I@29db049d}, cfhider.WordCount={main=[I@299a1d24}, invoker.SnowFlake={<init>=[I@1091b2ce, getNextMill=[I@4d71fae1, getNewstmp=[I@d6a0566}}
Coming...
doAnalysis Startingqqqqqqqq.....
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:l0 = staticinvoke <invoker.SnowFlake: long getNewstmp()>()
currStmt left value20210420:l0
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
Have
the value=$b2
the value=0
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$b2 = l0 cmp $l1
currStmt left value20210420:$b2
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$l1 = <invoker.SnowFlake: long lastStmp>
currStmt left value20210420:$l1
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:l0 = staticinvoke <invoker.SnowFlake: long getNewstmp()>()
currStmt left value20210420:l0
doAnalysis endqqqqqqq.....
come here
[CFMAP]2021 After BackwardAnalysis:{cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}
[taint into] sootMethod: getNewstmp
[]
class name :invoker.SnowFlake
method name :getNewstmp
method list :[]
clasname=invoker.SnowFlake
methodname=getNewstmp
sourcelist2021=[]
20210427node :$l0 = staticinvoke <java.lang.System: long currentTimeMillis()>()
20210427node in :[]
调用语句赋值给变量:$l0 = staticinvoke <java.lang.System: long currentTimeMillis()>()
20210427node out :[]
[taint328]a invoke <java.lang.System: long currentTimeMillis()>
[taint328]a invoke 0
20210427node :return $l0
20210427node in :[]
20210427node out :[]
analysis.outSet.size():0
[CFMAP]2021 After taintAnalysis:{cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}
The data isgggg 
<invoker.SnowFlake: long getNewstmp()>
The data isgggg invoker.SnowFlake getNewstmp [] {cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}  {cfhider.WordCount$IntSumReducer={reduce=[I@3310c372}, cfhider.WordCount$TokenizerMapper={map=[I@29db049d}, cfhider.WordCount={main=[I@299a1d24}, invoker.SnowFlake={<init>=[I@1091b2ce, getNextMill=[I@4d71fae1, getNewstmp=[I@d6a0566}}
Coming...
doAnalysis Startingqqqqqqqq.....
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$l0 = staticinvoke <java.lang.System: long currentTimeMillis()>()
currStmt left value20210420:$l0
doAnalysis endqqqqqqq.....
come here
[CFMAP]2021 After BackwardAnalysis:{cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}
[taint into] sootMethod: <clinit>
[]
class name :invoker.SnowFlake
method name :<clinit>
method list :[]
clasname=invoker.SnowFlake
methodname=<clinit>
sourcelist2021=[]
20210427node :<invoker.SnowFlake: long sequence> = 0L
20210427node in :[]
普通复制语句1112:<invoker.SnowFlake: long sequence> = 0L
[taint source] u:0L
SourceList:[]
20210427node out :[]
20210427node :<invoker.SnowFlake: long lastStmp> = -1L
20210427node in :[]
普通复制语句1112:<invoker.SnowFlake: long lastStmp> = -1L
[taint source] u:-1L
SourceList:[]
20210427node out :[]
20210427node :return
20210427node in :[]
20210427node out :[]
analysis.outSet.size():0
[CFMAP]2021 After taintAnalysis:{cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}
The data isgggg 
<invoker.SnowFlake: void <clinit>()>
The data isgggg invoker.SnowFlake <clinit> [] {cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}  {cfhider.WordCount$IntSumReducer={reduce=[I@3310c372}, cfhider.WordCount$TokenizerMapper={map=[I@29db049d}, cfhider.WordCount={main=[I@299a1d24}, invoker.SnowFlake={<init>=[I@1091b2ce, getNextMill=[I@4d71fae1, getNewstmp=[I@d6a0566}}
Coming...
doAnalysis Startingqqqqqqqq.....
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:<invoker.SnowFlake: long lastStmp> = -1L
currStmt left value20210420:<invoker.SnowFlake: long lastStmp>
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:<invoker.SnowFlake: long sequence> = 0L
currStmt left value20210420:<invoker.SnowFlake: long sequence>
doAnalysis endqqqqqqq.....
come here
[CFMAP]2021 After BackwardAnalysis:{cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}
[taint into] sootMethod: <init>
[]
class name :invoker.SnowFlake
method name :<init>
method list :[]
clasname=invoker.SnowFlake
methodname=<init>
sourcelist2021=[]
20210427node :r0 := @this: invoker.SnowFlake
20210427node in :[]
20210427node out :[]
currStmt20210423:r0 := @this: invoker.SnowFlake
20210427node :l0 := @parameter0: long
20210427node in :[]
[idStmt]iiiiiii l0 := @parameter0: long  index:0
ClassName:invoker.SnowFlake
MethodName:<init>
aaaa:0
20210427node out :[]
currStmt20210423:l0 := @parameter0: long
20210427node :l1 := @parameter1: long
20210427node in :[]
[idStmt]iiiiiii l1 := @parameter1: long  index:1
ClassName:invoker.SnowFlake
MethodName:<init>
aaaa:0
20210427node out :[]
currStmt20210423:l1 := @parameter1: long
20210427node :specialinvoke r0.<java.lang.Object: void <init>()>()
20210427node in :[]
20210427node out :[]
[taint329]i invoke specialinvoke r0.<java.lang.Object: void <init>()>()
[taint328]i invoke <java.lang.Object: void <init>()>
[taint328]i invoke 0
20210427node :$b2 = l0 cmp 31L
20210427node in :[]
普通复制语句1112:$b2 = l0 cmp 31L
[taint source] u:l0
SourceList:[]
[taint source] u:31L
SourceList:[]
[taint source] u:l0 cmp 31L
SourceList:[]
20210427node out :[]
20210427node :if $b2 > 0 goto $r1 = new java.lang.IllegalArgumentException
20210427node in :[]
20210427node out :[]
Have
Stmt if :if $b2 > 0 goto $r1 = new java.lang.IllegalArgumentExceptionStmt if value:$b2 > 0the value=$b2
the value=0
maintainValues.size0
ifValues1
20210427node :$b3 = l0 cmp 0L
20210427node in :[]
普通复制语句1112:$b3 = l0 cmp 0L
[taint source] u:l0
SourceList:[]
[taint source] u:0L
SourceList:[]
[taint source] u:l0 cmp 0L
SourceList:[]
20210427node out :[]
20210427node :if $b3 >= 0 goto $b4 = l1 cmp 31L
20210427node in :[]
20210427node out :[]
Have
Stmt if :if $b3 >= 0 goto $b4 = l1 cmp 31LStmt if value:$b3 >= 0the value=$b3
the value=0
maintainValues.size0
ifValues1
20210427node :$b4 = l1 cmp 31L
20210427node in :[]
普通复制语句1112:$b4 = l1 cmp 31L
[taint source] u:l1
SourceList:[]
[taint source] u:31L
SourceList:[]
[taint source] u:l1 cmp 31L
SourceList:[]
20210427node out :[]
20210427node :if $b4 > 0 goto $r2 = new java.lang.IllegalArgumentException
20210427node in :[]
20210427node out :[]
Have
Stmt if :if $b4 > 0 goto $r2 = new java.lang.IllegalArgumentExceptionStmt if value:$b4 > 0the value=$b4
the value=0
maintainValues.size0
ifValues1
20210427node :$b5 = l1 cmp 0L
20210427node in :[]
普通复制语句1112:$b5 = l1 cmp 0L
[taint source] u:l1
SourceList:[]
[taint source] u:0L
SourceList:[]
[taint source] u:l1 cmp 0L
SourceList:[]
20210427node out :[]
20210427node :if $b5 >= 0 goto <invoker.SnowFlake: long datacenterId> = 0L
20210427node in :[]
20210427node out :[]
Have
Stmt if :if $b5 >= 0 goto <invoker.SnowFlake: long datacenterId> = 0LStmt if value:$b5 >= 0the value=$b5
the value=0
maintainValues.size0
ifValues1
20210427node :<invoker.SnowFlake: long datacenterId> = 0L
20210427node in :[]
普通复制语句1112:<invoker.SnowFlake: long datacenterId> = 0L
[taint source] u:0L
SourceList:[]
20210427node out :[]
20210427node :<invoker.SnowFlake: long machineId> = 0L
20210427node in :[]
普通复制语句1112:<invoker.SnowFlake: long machineId> = 0L
[taint source] u:0L
SourceList:[]
20210427node out :[]
20210427node :return
20210427node in :[]
20210427node out :[]
20210427node :$r2 = new java.lang.IllegalArgumentException
20210427node in :[]
普通复制语句1112:$r2 = new java.lang.IllegalArgumentException
[taint source] u:new java.lang.IllegalArgumentException
SourceList:[]
20210427node out :[]
20210427node :specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("machineId can\'t be greater than MAX_MACHINE_NUM or less than 0")
20210427node in :[]
20210427node out :[]
[taint329]i invoke specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("machineId can\'t be greater than MAX_MACHINE_NUM or less than 0")
[taint328]i invoke <java.lang.IllegalArgumentException: void <init>(java.lang.String)>
[taint328]i invoke 1
value:"machineId can\'t be greater than MAX_MACHINE_NUM or less than 0"
isoutSetContains  false value:"machineId can\'t be greater than MAX_MACHINE_NUM or less than 0" index:0
20210427node :throw $r2
20210427node in :[]
20210427node out :[]
20210427node :$r1 = new java.lang.IllegalArgumentException
20210427node in :[]
普通复制语句1112:$r1 = new java.lang.IllegalArgumentException
[taint source] u:new java.lang.IllegalArgumentException
SourceList:[]
20210427node out :[]
20210427node :specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("datacenterId can\'t be greater than MAX_DATACENTER_NUM or less than 0")
20210427node in :[]
20210427node out :[]
[taint329]i invoke specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("datacenterId can\'t be greater than MAX_DATACENTER_NUM or less than 0")
[taint328]i invoke <java.lang.IllegalArgumentException: void <init>(java.lang.String)>
[taint328]i invoke 1
value:"datacenterId can\'t be greater than MAX_DATACENTER_NUM or less than 0"
isoutSetContains  false value:"datacenterId can\'t be greater than MAX_DATACENTER_NUM or less than 0" index:0
20210427node :throw $r1
20210427node in :[]
20210427node out :[]
analysis.outSet.size():0
[CFMAP]2021 After taintAnalysis:{cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}
The data isgggg 
<invoker.SnowFlake: void <init>(long,long)>
The data isgggg invoker.SnowFlake <init> [] {cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}  {cfhider.WordCount$IntSumReducer={reduce=[I@3310c372}, cfhider.WordCount$TokenizerMapper={map=[I@29db049d}, cfhider.WordCount={main=[I@299a1d24}, invoker.SnowFlake={<init>=[I@2b88726b, getNextMill=[I@4d71fae1, getNewstmp=[I@d6a0566}}
Coming...
doAnalysis Startingqqqqqqqq.....
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
[taint329]i invoke specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("datacenterId can\'t be greater than MAX_DATACENTER_NUM or less than 0")
[taint328]i invoke <java.lang.IllegalArgumentException: void <init>(java.lang.String)>
[taint328]i invoke 1
value:"datacenterId can\'t be greater than MAX_DATACENTER_NUM or less than 0"
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$r1 = new java.lang.IllegalArgumentException
currStmt left value20210420:$r1
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
[taint329]i invoke specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("machineId can\'t be greater than MAX_MACHINE_NUM or less than 0")
[taint328]i invoke <java.lang.IllegalArgumentException: void <init>(java.lang.String)>
[taint328]i invoke 1
value:"machineId can\'t be greater than MAX_MACHINE_NUM or less than 0"
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$r2 = new java.lang.IllegalArgumentException
currStmt left value20210420:$r2
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:<invoker.SnowFlake: long machineId> = 0L
currStmt left value20210420:<invoker.SnowFlake: long machineId>
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:<invoker.SnowFlake: long datacenterId> = 0L
currStmt left value20210420:<invoker.SnowFlake: long datacenterId>
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
Have
the value=$b5
the value=0
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$b5 = l1 cmp 0L
currStmt left value20210420:$b5
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
Have
the value=$b4
the value=0
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$b4 = l1 cmp 31L
currStmt left value20210420:$b4
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
Have
the value=$b3
the value=0
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$b3 = l0 cmp 0L
currStmt left value20210420:$b3
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
Have
the value=$b2
the value=0
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$b2 = l0 cmp 31L
currStmt left value20210420:$b2
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
[taint329]i invoke specialinvoke r0.<java.lang.Object: void <init>()>()
[taint328]i invoke <java.lang.Object: void <init>()>
[taint328]i invoke 0
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
doAnalysis endqqqqqqq.....
come here
[CFMAP]2021 After BackwardAnalysis:{cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}
[taint into] sootMethod: nextId
[]
class name :invoker.SnowFlake
method name :nextId
method list :[]
clasname=invoker.SnowFlake
methodname=nextId
sourcelist2021=[]
20210427node :l0 = staticinvoke <invoker.SnowFlake: long getNewstmp()>()
20210427node in :[]
调用语句赋值给变量:l0 = staticinvoke <invoker.SnowFlake: long getNewstmp()>()
Invokestmt:getNewstmp
20210427node out :[]
[taint328]a invoke <invoker.SnowFlake: long getNewstmp()>
[taint328]a invoke 0
[invokemap]invoke:getNewstmp  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
20210427node :$l1 = <invoker.SnowFlake: long lastStmp>
20210427node in :[]
普通复制语句1112:$l1 = <invoker.SnowFlake: long lastStmp>
[taint source] u:<invoker.SnowFlake: long lastStmp>
SourceList:[]
20210427node out :[]
20210427node :$b2 = l0 cmp $l1
20210427node in :[]
普通复制语句1112:$b2 = l0 cmp $l1
[taint source] u:l0
SourceList:[]
[taint source] u:$l1
SourceList:[]
[taint source] u:l0 cmp $l1
SourceList:[]
20210427node out :[]
20210427node :if $b2 >= 0 goto $l3 = <invoker.SnowFlake: long lastStmp>
20210427node in :[]
20210427node out :[]
Have
Stmt if :if $b2 >= 0 goto $l3 = <invoker.SnowFlake: long lastStmp>Stmt if value:$b2 >= 0the value=$b2
the value=0
maintainValues.size0
ifValues1
20210427node :$l3 = <invoker.SnowFlake: long lastStmp>
20210427node in :[]
普通复制语句1112:$l3 = <invoker.SnowFlake: long lastStmp>
[taint source] u:<invoker.SnowFlake: long lastStmp>
SourceList:[]
20210427node out :[]
20210427node :$b4 = l0 cmp $l3
20210427node in :[]
普通复制语句1112:$b4 = l0 cmp $l3
[taint source] u:l0
SourceList:[]
[taint source] u:$l3
SourceList:[]
[taint source] u:l0 cmp $l3
SourceList:[]
20210427node out :[]
20210427node :if $b4 != 0 goto <invoker.SnowFlake: long sequence> = 0L
20210427node in :[]
20210427node out :[]
Have
Stmt if :if $b4 != 0 goto <invoker.SnowFlake: long sequence> = 0LStmt if value:$b4 != 0the value=$b4
the value=0
maintainValues.size0
ifValues1
20210427node :<invoker.SnowFlake: long sequence> = 0L
20210427node in :[]
普通复制语句1112:<invoker.SnowFlake: long sequence> = 0L
[taint source] u:0L
SourceList:[]
20210427node out :[]
20210427node :$l5 = <invoker.SnowFlake: long sequence>
20210427node in :[]
普通复制语句1112:$l5 = <invoker.SnowFlake: long sequence>
[taint source] u:<invoker.SnowFlake: long sequence>
SourceList:[]
20210427node out :[]
20210427node :$l6 = $l5 + 1L
20210427node in :[]
普通复制语句1112:$l6 = $l5 + 1L
[taint source] u:$l5
SourceList:[]
[taint source] u:1L
SourceList:[]
[taint source] u:$l5 + 1L
SourceList:[]
20210427node out :[]
20210427node :$l7 = $l6 & 4095L
20210427node in :[]
普通复制语句1112:$l7 = $l6 & 4095L
[taint source] u:$l6
SourceList:[]
[taint source] u:4095L
SourceList:[]
[taint source] u:$l6 & 4095L
SourceList:[]
20210427node out :[]
20210427node :<invoker.SnowFlake: long sequence> = $l7
20210427node in :[]
普通复制语句1112:<invoker.SnowFlake: long sequence> = $l7
[taint source] u:$l7
SourceList:[]
20210427node out :[]
20210427node :$l8 = <invoker.SnowFlake: long sequence>
20210427node in :[]
普通复制语句1112:$l8 = <invoker.SnowFlake: long sequence>
[taint source] u:<invoker.SnowFlake: long sequence>
SourceList:[]
20210427node out :[]
20210427node :$b9 = $l8 cmp 0L
20210427node in :[]
普通复制语句1112:$b9 = $l8 cmp 0L
[taint source] u:$l8
SourceList:[]
[taint source] u:0L
SourceList:[]
[taint source] u:$l8 cmp 0L
SourceList:[]
20210427node out :[]
20210427node :if $b9 != 0 goto <invoker.SnowFlake: long lastStmp> = l0
20210427node in :[]
20210427node out :[]
Have
Stmt if :if $b9 != 0 goto <invoker.SnowFlake: long lastStmp> = l0Stmt if value:$b9 != 0the value=$b9
the value=0
maintainValues.size0
ifValues1
20210427node :l0 = staticinvoke <invoker.SnowFlake: long getNextMill()>()
20210427node in :[]
调用语句赋值给变量:l0 = staticinvoke <invoker.SnowFlake: long getNextMill()>()
Invokestmt:getNextMill
20210427node out :[]
[taint328]a invoke <invoker.SnowFlake: long getNextMill()>
[taint328]a invoke 0
[invokemap]invoke:getNextMill  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
20210427node :goto [?= <invoker.SnowFlake: long lastStmp> = l0]
20210427node in :[]
20210427node out :[]
20210427node :<invoker.SnowFlake: long lastStmp> = l0
20210427node in :[]
普通复制语句1112:<invoker.SnowFlake: long lastStmp> = l0
[taint source] u:l0
SourceList:[]
20210427node out :[]
20210427node :$l10 = l0 - 1480166465631L
20210427node in :[]
普通复制语句1112:$l10 = l0 - 1480166465631L
[taint source] u:l0
SourceList:[]
[taint source] u:1480166465631L
SourceList:[]
[taint source] u:l0 - 1480166465631L
SourceList:[]
20210427node out :[]
20210427node :$l11 = $l10 << 22
20210427node in :[]
普通复制语句1112:$l11 = $l10 << 22
[taint source] u:$l10
SourceList:[]
[taint source] u:22
SourceList:[]
[taint source] u:$l10 << 22
SourceList:[]
20210427node out :[]
20210427node :$l12 = <invoker.SnowFlake: long datacenterId>
20210427node in :[]
普通复制语句1112:$l12 = <invoker.SnowFlake: long datacenterId>
[taint source] u:<invoker.SnowFlake: long datacenterId>
SourceList:[]
20210427node out :[]
20210427node :$l13 = $l12 << 17
20210427node in :[]
普通复制语句1112:$l13 = $l12 << 17
[taint source] u:$l12
SourceList:[]
[taint source] u:17
SourceList:[]
[taint source] u:$l12 << 17
SourceList:[]
20210427node out :[]
20210427node :$l14 = $l11 | $l13
20210427node in :[]
普通复制语句1112:$l14 = $l11 | $l13
[taint source] u:$l11
SourceList:[]
[taint source] u:$l13
SourceList:[]
[taint source] u:$l11 | $l13
SourceList:[]
20210427node out :[]
20210427node :$l15 = <invoker.SnowFlake: long machineId>
20210427node in :[]
普通复制语句1112:$l15 = <invoker.SnowFlake: long machineId>
[taint source] u:<invoker.SnowFlake: long machineId>
SourceList:[]
20210427node out :[]
20210427node :$l16 = $l15 << 12
20210427node in :[]
普通复制语句1112:$l16 = $l15 << 12
[taint source] u:$l15
SourceList:[]
[taint source] u:12
SourceList:[]
[taint source] u:$l15 << 12
SourceList:[]
20210427node out :[]
20210427node :$l17 = $l14 | $l16
20210427node in :[]
普通复制语句1112:$l17 = $l14 | $l16
[taint source] u:$l14
SourceList:[]
[taint source] u:$l16
SourceList:[]
[taint source] u:$l14 | $l16
SourceList:[]
20210427node out :[]
20210427node :$l18 = <invoker.SnowFlake: long sequence>
20210427node in :[]
普通复制语句1112:$l18 = <invoker.SnowFlake: long sequence>
[taint source] u:<invoker.SnowFlake: long sequence>
SourceList:[]
20210427node out :[]
20210427node :$l19 = $l17 | $l18
20210427node in :[]
普通复制语句1112:$l19 = $l17 | $l18
[taint source] u:$l17
SourceList:[]
[taint source] u:$l18
SourceList:[]
[taint source] u:$l17 | $l18
SourceList:[]
20210427node out :[]
20210427node :return $l19
20210427node in :[]
20210427node out :[]
20210427node :$r0 = new java.lang.RuntimeException
20210427node in :[]
普通复制语句1112:$r0 = new java.lang.RuntimeException
[taint source] u:new java.lang.RuntimeException
SourceList:[]
20210427node out :[]
20210427node :specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Clock moved backwards.  Refusing to generate id")
20210427node in :[]
20210427node out :[]
[taint329]i invoke specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Clock moved backwards.  Refusing to generate id")
[taint328]i invoke <java.lang.RuntimeException: void <init>(java.lang.String)>
[taint328]i invoke 1
value:"Clock moved backwards.  Refusing to generate id"
isoutSetContains  false value:"Clock moved backwards.  Refusing to generate id" index:0
20210427node :throw $r0
20210427node in :[]
20210427node out :[]
analysis.outSet.size():0
[CFMAP]2021 After taintAnalysis:{cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}
The data isgggg 
<invoker.SnowFlake: long nextId()>
The data isgggg invoker.SnowFlake nextId [] {cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}  {cfhider.WordCount$IntSumReducer={reduce=[I@3310c372}, cfhider.WordCount$TokenizerMapper={map=[I@29db049d}, cfhider.WordCount={main=[I@299a1d24}, invoker.SnowFlake={<init>=[I@2b88726b, getNextMill=[I@b0fe521, getNewstmp=[I@408bdf33}}
Coming...
doAnalysis Startingqqqqqqqq.....
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
[taint329]i invoke specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Clock moved backwards.  Refusing to generate id")
[taint328]i invoke <java.lang.RuntimeException: void <init>(java.lang.String)>
[taint328]i invoke 1
value:"Clock moved backwards.  Refusing to generate id"
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$r0 = new java.lang.RuntimeException
currStmt left value20210420:$r0
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$l19 = $l17 | $l18
currStmt left value20210420:$l19
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$l18 = <invoker.SnowFlake: long sequence>
currStmt left value20210420:$l18
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$l17 = $l14 | $l16
currStmt left value20210420:$l17
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$l16 = $l15 << 12
currStmt left value20210420:$l16
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$l15 = <invoker.SnowFlake: long machineId>
currStmt left value20210420:$l15
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$l14 = $l11 | $l13
currStmt left value20210420:$l14
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$l13 = $l12 << 17
currStmt left value20210420:$l13
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$l12 = <invoker.SnowFlake: long datacenterId>
currStmt left value20210420:$l12
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$l11 = $l10 << 22
currStmt left value20210420:$l11
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$l10 = l0 - 1480166465631L
currStmt left value20210420:$l10
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:<invoker.SnowFlake: long lastStmp> = l0
currStmt left value20210420:<invoker.SnowFlake: long lastStmp>
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:l0 = staticinvoke <invoker.SnowFlake: long getNextMill()>()
currStmt left value20210420:l0
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
Have
the value=$b9
the value=0
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$b9 = $l8 cmp 0L
currStmt left value20210420:$b9
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$l8 = <invoker.SnowFlake: long sequence>
currStmt left value20210420:$l8
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:<invoker.SnowFlake: long sequence> = $l7
currStmt left value20210420:<invoker.SnowFlake: long sequence>
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$l7 = $l6 & 4095L
currStmt left value20210420:$l7
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$l6 = $l5 + 1L
currStmt left value20210420:$l6
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$l5 = <invoker.SnowFlake: long sequence>
currStmt left value20210420:$l5
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:<invoker.SnowFlake: long sequence> = 0L
currStmt left value20210420:<invoker.SnowFlake: long sequence>
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
Have
the value=$b4
the value=0
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$b4 = l0 cmp $l3
currStmt left value20210420:$b4
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$l3 = <invoker.SnowFlake: long lastStmp>
currStmt left value20210420:$l3
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
Have
the value=$b2
the value=0
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$b2 = l0 cmp $l1
currStmt left value20210420:$b2
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$l1 = <invoker.SnowFlake: long lastStmp>
currStmt left value20210420:$l1
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:l0 = staticinvoke <invoker.SnowFlake: long getNewstmp()>()
currStmt left value20210420:l0
doAnalysis endqqqqqqq.....
come here
[CFMAP]2021 After BackwardAnalysis:{cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}
[taint into] sootMethod: getNextMill
[]
class name :invoker.SnowFlake
method name :getNextMill
method list :[]
clasname=invoker.SnowFlake
methodname=getNextMill
sourcelist2021=[]
20210427node :l0 = staticinvoke <invoker.SnowFlake: long getNewstmp()>()
20210427node in :[]
调用语句赋值给变量:l0 = staticinvoke <invoker.SnowFlake: long getNewstmp()>()
Invokestmt:getNewstmp
20210427node out :[]
[taint328]a invoke <invoker.SnowFlake: long getNewstmp()>
[taint328]a invoke 0
[invokemap]invoke:getNewstmp  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
20210427node :$l1 = <invoker.SnowFlake: long lastStmp>
20210427node in :[]
普通复制语句1112:$l1 = <invoker.SnowFlake: long lastStmp>
[taint source] u:<invoker.SnowFlake: long lastStmp>
SourceList:[]
20210427node out :[]
20210427node :$b2 = l0 cmp $l1
20210427node in :[]
普通复制语句1112:$b2 = l0 cmp $l1
[taint source] u:l0
SourceList:[]
[taint source] u:$l1
SourceList:[]
[taint source] u:l0 cmp $l1
SourceList:[]
20210427node out :[]
20210427node :if $b2 > 0 goto return l0
20210427node in :[]
20210427node out :[]
Have
Stmt if :if $b2 > 0 goto return l0Stmt if value:$b2 > 0the value=$b2
the value=0
maintainValues.size0
ifValues1
20210427node :return l0
20210427node in :[]
20210427node out :[]
20210427node :l0 = staticinvoke <invoker.SnowFlake: long getNewstmp()>()
20210427node in :[]
调用语句赋值给变量:l0 = staticinvoke <invoker.SnowFlake: long getNewstmp()>()
Invokestmt:getNewstmp
20210427node out :[]
[taint328]a invoke <invoker.SnowFlake: long getNewstmp()>
[taint328]a invoke 0
[invokemap]invoke:getNewstmp  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
20210427node :goto [?= $l1 = <invoker.SnowFlake: long lastStmp>]
20210427node in :[]
20210427node out :[]
analysis.outSet.size():0
[CFMAP]2021 After taintAnalysis:{cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}
The data isgggg 
<invoker.SnowFlake: long getNextMill()>
The data isgggg invoker.SnowFlake getNextMill [] {cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}  {cfhider.WordCount$IntSumReducer={reduce=[I@3310c372}, cfhider.WordCount$TokenizerMapper={map=[I@29db049d}, cfhider.WordCount={main=[I@299a1d24}, invoker.SnowFlake={<init>=[I@2b88726b, getNextMill=[I@b0fe521, getNewstmp=[I@1eeaae60}}
Coming...
doAnalysis Startingqqqqqqqq.....
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:l0 = staticinvoke <invoker.SnowFlake: long getNewstmp()>()
currStmt left value20210420:l0
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
Have
the value=$b2
the value=0
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$b2 = l0 cmp $l1
currStmt left value20210420:$b2
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$l1 = <invoker.SnowFlake: long lastStmp>
currStmt left value20210420:$l1
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:l0 = staticinvoke <invoker.SnowFlake: long getNewstmp()>()
currStmt left value20210420:l0
doAnalysis endqqqqqqq.....
come here
[CFMAP]2021 After BackwardAnalysis:{cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}
[taint into] sootMethod: getNewstmp
[]
class name :invoker.SnowFlake
method name :getNewstmp
method list :[]
clasname=invoker.SnowFlake
methodname=getNewstmp
sourcelist2021=[]
20210427node :$l0 = staticinvoke <java.lang.System: long currentTimeMillis()>()
20210427node in :[]
调用语句赋值给变量:$l0 = staticinvoke <java.lang.System: long currentTimeMillis()>()
20210427node out :[]
[taint328]a invoke <java.lang.System: long currentTimeMillis()>
[taint328]a invoke 0
20210427node :return $l0
20210427node in :[]
20210427node out :[]
analysis.outSet.size():0
[CFMAP]2021 After taintAnalysis:{cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}
The data isgggg 
<invoker.SnowFlake: long getNewstmp()>
The data isgggg invoker.SnowFlake getNewstmp [] {cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}  {cfhider.WordCount$IntSumReducer={reduce=[I@3310c372}, cfhider.WordCount$TokenizerMapper={map=[I@29db049d}, cfhider.WordCount={main=[I@299a1d24}, invoker.SnowFlake={<init>=[I@2b88726b, getNextMill=[I@b0fe521, getNewstmp=[I@1eeaae60}}
Coming...
doAnalysis Startingqqqqqqqq.....
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$l0 = staticinvoke <java.lang.System: long currentTimeMillis()>()
currStmt left value20210420:$l0
doAnalysis endqqqqqqq.....
come here
[CFMAP]2021 After BackwardAnalysis:{cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}
[taint into] sootMethod: <clinit>
[]
class name :invoker.SnowFlake
method name :<clinit>
method list :[]
clasname=invoker.SnowFlake
methodname=<clinit>
sourcelist2021=[]
20210427node :<invoker.SnowFlake: long sequence> = 0L
20210427node in :[]
普通复制语句1112:<invoker.SnowFlake: long sequence> = 0L
[taint source] u:0L
SourceList:[]
20210427node out :[]
20210427node :<invoker.SnowFlake: long lastStmp> = -1L
20210427node in :[]
普通复制语句1112:<invoker.SnowFlake: long lastStmp> = -1L
[taint source] u:-1L
SourceList:[]
20210427node out :[]
20210427node :return
20210427node in :[]
20210427node out :[]
analysis.outSet.size():0
[CFMAP]2021 After taintAnalysis:{cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}
The data isgggg 
<invoker.SnowFlake: void <clinit>()>
The data isgggg invoker.SnowFlake <clinit> [] {cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}  {cfhider.WordCount$IntSumReducer={reduce=[I@3310c372}, cfhider.WordCount$TokenizerMapper={map=[I@29db049d}, cfhider.WordCount={main=[I@299a1d24}, invoker.SnowFlake={<init>=[I@2b88726b, getNextMill=[I@b0fe521, getNewstmp=[I@1eeaae60}}
Coming...
doAnalysis Startingqqqqqqqq.....
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:<invoker.SnowFlake: long lastStmp> = -1L
currStmt left value20210420:<invoker.SnowFlake: long lastStmp>
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:<invoker.SnowFlake: long sequence> = 0L
currStmt left value20210420:<invoker.SnowFlake: long sequence>
doAnalysis endqqqqqqq.....
come here
[CFMAP]2021 After BackwardAnalysis:{cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}
[taint into] sootMethod: <init>
[]
class name :invoker.SnowFlake
method name :<init>
method list :[]
clasname=invoker.SnowFlake
methodname=<init>
sourcelist2021=[]
20210427node :r0 := @this: invoker.SnowFlake
20210427node in :[]
20210427node out :[]
currStmt20210423:r0 := @this: invoker.SnowFlake
20210427node :l0 := @parameter0: long
20210427node in :[]
[idStmt]iiiiiii l0 := @parameter0: long  index:0
ClassName:invoker.SnowFlake
MethodName:<init>
aaaa:0
20210427node out :[]
currStmt20210423:l0 := @parameter0: long
20210427node :l1 := @parameter1: long
20210427node in :[]
[idStmt]iiiiiii l1 := @parameter1: long  index:1
ClassName:invoker.SnowFlake
MethodName:<init>
aaaa:0
20210427node out :[]
currStmt20210423:l1 := @parameter1: long
20210427node :specialinvoke r0.<java.lang.Object: void <init>()>()
20210427node in :[]
20210427node out :[]
[taint329]i invoke specialinvoke r0.<java.lang.Object: void <init>()>()
[taint328]i invoke <java.lang.Object: void <init>()>
[taint328]i invoke 0
20210427node :$b2 = l0 cmp 31L
20210427node in :[]
普通复制语句1112:$b2 = l0 cmp 31L
[taint source] u:l0
SourceList:[]
[taint source] u:31L
SourceList:[]
[taint source] u:l0 cmp 31L
SourceList:[]
20210427node out :[]
20210427node :if $b2 > 0 goto $r1 = new java.lang.IllegalArgumentException
20210427node in :[]
20210427node out :[]
Have
Stmt if :if $b2 > 0 goto $r1 = new java.lang.IllegalArgumentExceptionStmt if value:$b2 > 0the value=$b2
the value=0
maintainValues.size0
ifValues1
20210427node :$b3 = l0 cmp 0L
20210427node in :[]
普通复制语句1112:$b3 = l0 cmp 0L
[taint source] u:l0
SourceList:[]
[taint source] u:0L
SourceList:[]
[taint source] u:l0 cmp 0L
SourceList:[]
20210427node out :[]
20210427node :if $b3 >= 0 goto $b4 = l1 cmp 31L
20210427node in :[]
20210427node out :[]
Have
Stmt if :if $b3 >= 0 goto $b4 = l1 cmp 31LStmt if value:$b3 >= 0the value=$b3
the value=0
maintainValues.size0
ifValues1
20210427node :$b4 = l1 cmp 31L
20210427node in :[]
普通复制语句1112:$b4 = l1 cmp 31L
[taint source] u:l1
SourceList:[]
[taint source] u:31L
SourceList:[]
[taint source] u:l1 cmp 31L
SourceList:[]
20210427node out :[]
20210427node :if $b4 > 0 goto $r2 = new java.lang.IllegalArgumentException
20210427node in :[]
20210427node out :[]
Have
Stmt if :if $b4 > 0 goto $r2 = new java.lang.IllegalArgumentExceptionStmt if value:$b4 > 0the value=$b4
the value=0
maintainValues.size0
ifValues1
20210427node :$b5 = l1 cmp 0L
20210427node in :[]
普通复制语句1112:$b5 = l1 cmp 0L
[taint source] u:l1
SourceList:[]
[taint source] u:0L
SourceList:[]
[taint source] u:l1 cmp 0L
SourceList:[]
20210427node out :[]
20210427node :if $b5 >= 0 goto <invoker.SnowFlake: long datacenterId> = 0L
20210427node in :[]
20210427node out :[]
Have
Stmt if :if $b5 >= 0 goto <invoker.SnowFlake: long datacenterId> = 0LStmt if value:$b5 >= 0the value=$b5
the value=0
maintainValues.size0
ifValues1
20210427node :<invoker.SnowFlake: long datacenterId> = 0L
20210427node in :[]
普通复制语句1112:<invoker.SnowFlake: long datacenterId> = 0L
[taint source] u:0L
SourceList:[]
20210427node out :[]
20210427node :<invoker.SnowFlake: long machineId> = 0L
20210427node in :[]
普通复制语句1112:<invoker.SnowFlake: long machineId> = 0L
[taint source] u:0L
SourceList:[]
20210427node out :[]
20210427node :return
20210427node in :[]
20210427node out :[]
20210427node :$r2 = new java.lang.IllegalArgumentException
20210427node in :[]
普通复制语句1112:$r2 = new java.lang.IllegalArgumentException
[taint source] u:new java.lang.IllegalArgumentException
SourceList:[]
20210427node out :[]
20210427node :specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("machineId can\'t be greater than MAX_MACHINE_NUM or less than 0")
20210427node in :[]
20210427node out :[]
[taint329]i invoke specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("machineId can\'t be greater than MAX_MACHINE_NUM or less than 0")
[taint328]i invoke <java.lang.IllegalArgumentException: void <init>(java.lang.String)>
[taint328]i invoke 1
value:"machineId can\'t be greater than MAX_MACHINE_NUM or less than 0"
isoutSetContains  false value:"machineId can\'t be greater than MAX_MACHINE_NUM or less than 0" index:0
20210427node :throw $r2
20210427node in :[]
20210427node out :[]
20210427node :$r1 = new java.lang.IllegalArgumentException
20210427node in :[]
普通复制语句1112:$r1 = new java.lang.IllegalArgumentException
[taint source] u:new java.lang.IllegalArgumentException
SourceList:[]
20210427node out :[]
20210427node :specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("datacenterId can\'t be greater than MAX_DATACENTER_NUM or less than 0")
20210427node in :[]
20210427node out :[]
[taint329]i invoke specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("datacenterId can\'t be greater than MAX_DATACENTER_NUM or less than 0")
[taint328]i invoke <java.lang.IllegalArgumentException: void <init>(java.lang.String)>
[taint328]i invoke 1
value:"datacenterId can\'t be greater than MAX_DATACENTER_NUM or less than 0"
isoutSetContains  false value:"datacenterId can\'t be greater than MAX_DATACENTER_NUM or less than 0" index:0
20210427node :throw $r1
20210427node in :[]
20210427node out :[]
analysis.outSet.size():0
[CFMAP]2021 After taintAnalysis:{cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}
The data isgggg 
<invoker.SnowFlake: void <init>(long,long)>
The data isgggg invoker.SnowFlake <init> [] {cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}  {cfhider.WordCount$IntSumReducer={reduce=[I@3310c372}, cfhider.WordCount$TokenizerMapper={map=[I@29db049d}, cfhider.WordCount={main=[I@299a1d24}, invoker.SnowFlake={<init>=[I@415e307b, getNextMill=[I@b0fe521, getNewstmp=[I@1eeaae60}}
Coming...
doAnalysis Startingqqqqqqqq.....
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
[taint329]i invoke specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("datacenterId can\'t be greater than MAX_DATACENTER_NUM or less than 0")
[taint328]i invoke <java.lang.IllegalArgumentException: void <init>(java.lang.String)>
[taint328]i invoke 1
value:"datacenterId can\'t be greater than MAX_DATACENTER_NUM or less than 0"
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$r1 = new java.lang.IllegalArgumentException
currStmt left value20210420:$r1
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
[taint329]i invoke specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("machineId can\'t be greater than MAX_MACHINE_NUM or less than 0")
[taint328]i invoke <java.lang.IllegalArgumentException: void <init>(java.lang.String)>
[taint328]i invoke 1
value:"machineId can\'t be greater than MAX_MACHINE_NUM or less than 0"
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$r2 = new java.lang.IllegalArgumentException
currStmt left value20210420:$r2
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:<invoker.SnowFlake: long machineId> = 0L
currStmt left value20210420:<invoker.SnowFlake: long machineId>
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:<invoker.SnowFlake: long datacenterId> = 0L
currStmt left value20210420:<invoker.SnowFlake: long datacenterId>
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
Have
the value=$b5
the value=0
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$b5 = l1 cmp 0L
currStmt left value20210420:$b5
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
Have
the value=$b4
the value=0
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$b4 = l1 cmp 31L
currStmt left value20210420:$b4
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
Have
the value=$b3
the value=0
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$b3 = l0 cmp 0L
currStmt left value20210420:$b3
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
Have
the value=$b2
the value=0
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$b2 = l0 cmp 31L
currStmt left value20210420:$b2
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
[taint329]i invoke specialinvoke r0.<java.lang.Object: void <init>()>()
[taint328]i invoke <java.lang.Object: void <init>()>
[taint328]i invoke 0
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
doAnalysis endqqqqqqq.....
come here
[CFMAP]2021 After BackwardAnalysis:{cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}
[taint into] sootMethod: nextId
[]
class name :invoker.SnowFlake
method name :nextId
method list :[]
clasname=invoker.SnowFlake
methodname=nextId
sourcelist2021=[]
20210427node :l0 = staticinvoke <invoker.SnowFlake: long getNewstmp()>()
20210427node in :[]
调用语句赋值给变量:l0 = staticinvoke <invoker.SnowFlake: long getNewstmp()>()
Invokestmt:getNewstmp
20210427node out :[]
[taint328]a invoke <invoker.SnowFlake: long getNewstmp()>
[taint328]a invoke 0
[invokemap]invoke:getNewstmp  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
20210427node :$l1 = <invoker.SnowFlake: long lastStmp>
20210427node in :[]
普通复制语句1112:$l1 = <invoker.SnowFlake: long lastStmp>
[taint source] u:<invoker.SnowFlake: long lastStmp>
SourceList:[]
20210427node out :[]
20210427node :$b2 = l0 cmp $l1
20210427node in :[]
普通复制语句1112:$b2 = l0 cmp $l1
[taint source] u:l0
SourceList:[]
[taint source] u:$l1
SourceList:[]
[taint source] u:l0 cmp $l1
SourceList:[]
20210427node out :[]
20210427node :if $b2 >= 0 goto $l3 = <invoker.SnowFlake: long lastStmp>
20210427node in :[]
20210427node out :[]
Have
Stmt if :if $b2 >= 0 goto $l3 = <invoker.SnowFlake: long lastStmp>Stmt if value:$b2 >= 0the value=$b2
the value=0
maintainValues.size0
ifValues1
20210427node :$l3 = <invoker.SnowFlake: long lastStmp>
20210427node in :[]
普通复制语句1112:$l3 = <invoker.SnowFlake: long lastStmp>
[taint source] u:<invoker.SnowFlake: long lastStmp>
SourceList:[]
20210427node out :[]
20210427node :$b4 = l0 cmp $l3
20210427node in :[]
普通复制语句1112:$b4 = l0 cmp $l3
[taint source] u:l0
SourceList:[]
[taint source] u:$l3
SourceList:[]
[taint source] u:l0 cmp $l3
SourceList:[]
20210427node out :[]
20210427node :if $b4 != 0 goto <invoker.SnowFlake: long sequence> = 0L
20210427node in :[]
20210427node out :[]
Have
Stmt if :if $b4 != 0 goto <invoker.SnowFlake: long sequence> = 0LStmt if value:$b4 != 0the value=$b4
the value=0
maintainValues.size0
ifValues1
20210427node :<invoker.SnowFlake: long sequence> = 0L
20210427node in :[]
普通复制语句1112:<invoker.SnowFlake: long sequence> = 0L
[taint source] u:0L
SourceList:[]
20210427node out :[]
20210427node :$l5 = <invoker.SnowFlake: long sequence>
20210427node in :[]
普通复制语句1112:$l5 = <invoker.SnowFlake: long sequence>
[taint source] u:<invoker.SnowFlake: long sequence>
SourceList:[]
20210427node out :[]
20210427node :$l6 = $l5 + 1L
20210427node in :[]
普通复制语句1112:$l6 = $l5 + 1L
[taint source] u:$l5
SourceList:[]
[taint source] u:1L
SourceList:[]
[taint source] u:$l5 + 1L
SourceList:[]
20210427node out :[]
20210427node :$l7 = $l6 & 4095L
20210427node in :[]
普通复制语句1112:$l7 = $l6 & 4095L
[taint source] u:$l6
SourceList:[]
[taint source] u:4095L
SourceList:[]
[taint source] u:$l6 & 4095L
SourceList:[]
20210427node out :[]
20210427node :<invoker.SnowFlake: long sequence> = $l7
20210427node in :[]
普通复制语句1112:<invoker.SnowFlake: long sequence> = $l7
[taint source] u:$l7
SourceList:[]
20210427node out :[]
20210427node :$l8 = <invoker.SnowFlake: long sequence>
20210427node in :[]
普通复制语句1112:$l8 = <invoker.SnowFlake: long sequence>
[taint source] u:<invoker.SnowFlake: long sequence>
SourceList:[]
20210427node out :[]
20210427node :$b9 = $l8 cmp 0L
20210427node in :[]
普通复制语句1112:$b9 = $l8 cmp 0L
[taint source] u:$l8
SourceList:[]
[taint source] u:0L
SourceList:[]
[taint source] u:$l8 cmp 0L
SourceList:[]
20210427node out :[]
20210427node :if $b9 != 0 goto <invoker.SnowFlake: long lastStmp> = l0
20210427node in :[]
20210427node out :[]
Have
Stmt if :if $b9 != 0 goto <invoker.SnowFlake: long lastStmp> = l0Stmt if value:$b9 != 0the value=$b9
the value=0
maintainValues.size0
ifValues1
20210427node :l0 = staticinvoke <invoker.SnowFlake: long getNextMill()>()
20210427node in :[]
调用语句赋值给变量:l0 = staticinvoke <invoker.SnowFlake: long getNextMill()>()
Invokestmt:getNextMill
20210427node out :[]
[taint328]a invoke <invoker.SnowFlake: long getNextMill()>
[taint328]a invoke 0
[invokemap]invoke:getNextMill  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
20210427node :goto [?= <invoker.SnowFlake: long lastStmp> = l0]
20210427node in :[]
20210427node out :[]
20210427node :<invoker.SnowFlake: long lastStmp> = l0
20210427node in :[]
普通复制语句1112:<invoker.SnowFlake: long lastStmp> = l0
[taint source] u:l0
SourceList:[]
20210427node out :[]
20210427node :$l10 = l0 - 1480166465631L
20210427node in :[]
普通复制语句1112:$l10 = l0 - 1480166465631L
[taint source] u:l0
SourceList:[]
[taint source] u:1480166465631L
SourceList:[]
[taint source] u:l0 - 1480166465631L
SourceList:[]
20210427node out :[]
20210427node :$l11 = $l10 << 22
20210427node in :[]
普通复制语句1112:$l11 = $l10 << 22
[taint source] u:$l10
SourceList:[]
[taint source] u:22
SourceList:[]
[taint source] u:$l10 << 22
SourceList:[]
20210427node out :[]
20210427node :$l12 = <invoker.SnowFlake: long datacenterId>
20210427node in :[]
普通复制语句1112:$l12 = <invoker.SnowFlake: long datacenterId>
[taint source] u:<invoker.SnowFlake: long datacenterId>
SourceList:[]
20210427node out :[]
20210427node :$l13 = $l12 << 17
20210427node in :[]
普通复制语句1112:$l13 = $l12 << 17
[taint source] u:$l12
SourceList:[]
[taint source] u:17
SourceList:[]
[taint source] u:$l12 << 17
SourceList:[]
20210427node out :[]
20210427node :$l14 = $l11 | $l13
20210427node in :[]
普通复制语句1112:$l14 = $l11 | $l13
[taint source] u:$l11
SourceList:[]
[taint source] u:$l13
SourceList:[]
[taint source] u:$l11 | $l13
SourceList:[]
20210427node out :[]
20210427node :$l15 = <invoker.SnowFlake: long machineId>
20210427node in :[]
普通复制语句1112:$l15 = <invoker.SnowFlake: long machineId>
[taint source] u:<invoker.SnowFlake: long machineId>
SourceList:[]
20210427node out :[]
20210427node :$l16 = $l15 << 12
20210427node in :[]
普通复制语句1112:$l16 = $l15 << 12
[taint source] u:$l15
SourceList:[]
[taint source] u:12
SourceList:[]
[taint source] u:$l15 << 12
SourceList:[]
20210427node out :[]
20210427node :$l17 = $l14 | $l16
20210427node in :[]
普通复制语句1112:$l17 = $l14 | $l16
[taint source] u:$l14
SourceList:[]
[taint source] u:$l16
SourceList:[]
[taint source] u:$l14 | $l16
SourceList:[]
20210427node out :[]
20210427node :$l18 = <invoker.SnowFlake: long sequence>
20210427node in :[]
普通复制语句1112:$l18 = <invoker.SnowFlake: long sequence>
[taint source] u:<invoker.SnowFlake: long sequence>
SourceList:[]
20210427node out :[]
20210427node :$l19 = $l17 | $l18
20210427node in :[]
普通复制语句1112:$l19 = $l17 | $l18
[taint source] u:$l17
SourceList:[]
[taint source] u:$l18
SourceList:[]
[taint source] u:$l17 | $l18
SourceList:[]
20210427node out :[]
20210427node :return $l19
20210427node in :[]
20210427node out :[]
20210427node :$r0 = new java.lang.RuntimeException
20210427node in :[]
普通复制语句1112:$r0 = new java.lang.RuntimeException
[taint source] u:new java.lang.RuntimeException
SourceList:[]
20210427node out :[]
20210427node :specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Clock moved backwards.  Refusing to generate id")
20210427node in :[]
20210427node out :[]
[taint329]i invoke specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Clock moved backwards.  Refusing to generate id")
[taint328]i invoke <java.lang.RuntimeException: void <init>(java.lang.String)>
[taint328]i invoke 1
value:"Clock moved backwards.  Refusing to generate id"
isoutSetContains  false value:"Clock moved backwards.  Refusing to generate id" index:0
20210427node :throw $r0
20210427node in :[]
20210427node out :[]
analysis.outSet.size():0
[CFMAP]2021 After taintAnalysis:{cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}
The data isgggg 
<invoker.SnowFlake: long nextId()>
The data isgggg invoker.SnowFlake nextId [] {cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}  {cfhider.WordCount$IntSumReducer={reduce=[I@3310c372}, cfhider.WordCount$TokenizerMapper={map=[I@29db049d}, cfhider.WordCount={main=[I@299a1d24}, invoker.SnowFlake={<init>=[I@415e307b, getNextMill=[I@ec0fcc4, getNewstmp=[I@2012af6d}}
Coming...
doAnalysis Startingqqqqqqqq.....
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
[taint329]i invoke specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Clock moved backwards.  Refusing to generate id")
[taint328]i invoke <java.lang.RuntimeException: void <init>(java.lang.String)>
[taint328]i invoke 1
value:"Clock moved backwards.  Refusing to generate id"
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$r0 = new java.lang.RuntimeException
currStmt left value20210420:$r0
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$l19 = $l17 | $l18
currStmt left value20210420:$l19
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$l18 = <invoker.SnowFlake: long sequence>
currStmt left value20210420:$l18
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$l17 = $l14 | $l16
currStmt left value20210420:$l17
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$l16 = $l15 << 12
currStmt left value20210420:$l16
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$l15 = <invoker.SnowFlake: long machineId>
currStmt left value20210420:$l15
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$l14 = $l11 | $l13
currStmt left value20210420:$l14
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$l13 = $l12 << 17
currStmt left value20210420:$l13
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$l12 = <invoker.SnowFlake: long datacenterId>
currStmt left value20210420:$l12
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$l11 = $l10 << 22
currStmt left value20210420:$l11
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$l10 = l0 - 1480166465631L
currStmt left value20210420:$l10
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:<invoker.SnowFlake: long lastStmp> = l0
currStmt left value20210420:<invoker.SnowFlake: long lastStmp>
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:l0 = staticinvoke <invoker.SnowFlake: long getNextMill()>()
currStmt left value20210420:l0
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
Have
the value=$b9
the value=0
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$b9 = $l8 cmp 0L
currStmt left value20210420:$b9
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$l8 = <invoker.SnowFlake: long sequence>
currStmt left value20210420:$l8
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:<invoker.SnowFlake: long sequence> = $l7
currStmt left value20210420:<invoker.SnowFlake: long sequence>
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$l7 = $l6 & 4095L
currStmt left value20210420:$l7
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$l6 = $l5 + 1L
currStmt left value20210420:$l6
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$l5 = <invoker.SnowFlake: long sequence>
currStmt left value20210420:$l5
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:<invoker.SnowFlake: long sequence> = 0L
currStmt left value20210420:<invoker.SnowFlake: long sequence>
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
Have
the value=$b4
the value=0
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$b4 = l0 cmp $l3
currStmt left value20210420:$b4
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$l3 = <invoker.SnowFlake: long lastStmp>
currStmt left value20210420:$l3
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
Have
the value=$b2
the value=0
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$b2 = l0 cmp $l1
currStmt left value20210420:$b2
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$l1 = <invoker.SnowFlake: long lastStmp>
currStmt left value20210420:$l1
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:l0 = staticinvoke <invoker.SnowFlake: long getNewstmp()>()
currStmt left value20210420:l0
doAnalysis endqqqqqqq.....
come here
[CFMAP]2021 After BackwardAnalysis:{cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}
[taint into] sootMethod: getNextMill
[]
class name :invoker.SnowFlake
method name :getNextMill
method list :[]
clasname=invoker.SnowFlake
methodname=getNextMill
sourcelist2021=[]
20210427node :l0 = staticinvoke <invoker.SnowFlake: long getNewstmp()>()
20210427node in :[]
调用语句赋值给变量:l0 = staticinvoke <invoker.SnowFlake: long getNewstmp()>()
Invokestmt:getNewstmp
20210427node out :[]
[taint328]a invoke <invoker.SnowFlake: long getNewstmp()>
[taint328]a invoke 0
[invokemap]invoke:getNewstmp  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
20210427node :$l1 = <invoker.SnowFlake: long lastStmp>
20210427node in :[]
普通复制语句1112:$l1 = <invoker.SnowFlake: long lastStmp>
[taint source] u:<invoker.SnowFlake: long lastStmp>
SourceList:[]
20210427node out :[]
20210427node :$b2 = l0 cmp $l1
20210427node in :[]
普通复制语句1112:$b2 = l0 cmp $l1
[taint source] u:l0
SourceList:[]
[taint source] u:$l1
SourceList:[]
[taint source] u:l0 cmp $l1
SourceList:[]
20210427node out :[]
20210427node :if $b2 > 0 goto return l0
20210427node in :[]
20210427node out :[]
Have
Stmt if :if $b2 > 0 goto return l0Stmt if value:$b2 > 0the value=$b2
the value=0
maintainValues.size0
ifValues1
20210427node :return l0
20210427node in :[]
20210427node out :[]
20210427node :l0 = staticinvoke <invoker.SnowFlake: long getNewstmp()>()
20210427node in :[]
调用语句赋值给变量:l0 = staticinvoke <invoker.SnowFlake: long getNewstmp()>()
Invokestmt:getNewstmp
20210427node out :[]
[taint328]a invoke <invoker.SnowFlake: long getNewstmp()>
[taint328]a invoke 0
[invokemap]invoke:getNewstmp  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
20210427node :goto [?= $l1 = <invoker.SnowFlake: long lastStmp>]
20210427node in :[]
20210427node out :[]
analysis.outSet.size():0
[CFMAP]2021 After taintAnalysis:{cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}
The data isgggg 
<invoker.SnowFlake: long getNextMill()>
The data isgggg invoker.SnowFlake getNextMill [] {cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}  {cfhider.WordCount$IntSumReducer={reduce=[I@3310c372}, cfhider.WordCount$TokenizerMapper={map=[I@29db049d}, cfhider.WordCount={main=[I@299a1d24}, invoker.SnowFlake={<init>=[I@415e307b, getNextMill=[I@ec0fcc4, getNewstmp=[I@2abb2d8e}}
Coming...
doAnalysis Startingqqqqqqqq.....
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:l0 = staticinvoke <invoker.SnowFlake: long getNewstmp()>()
currStmt left value20210420:l0
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
Have
the value=$b2
the value=0
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$b2 = l0 cmp $l1
currStmt left value20210420:$b2
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$l1 = <invoker.SnowFlake: long lastStmp>
currStmt left value20210420:$l1
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:l0 = staticinvoke <invoker.SnowFlake: long getNewstmp()>()
currStmt left value20210420:l0
doAnalysis endqqqqqqq.....
come here
[CFMAP]2021 After BackwardAnalysis:{cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}
[taint into] sootMethod: getNewstmp
[]
class name :invoker.SnowFlake
method name :getNewstmp
method list :[]
clasname=invoker.SnowFlake
methodname=getNewstmp
sourcelist2021=[]
20210427node :$l0 = staticinvoke <java.lang.System: long currentTimeMillis()>()
20210427node in :[]
调用语句赋值给变量:$l0 = staticinvoke <java.lang.System: long currentTimeMillis()>()
20210427node out :[]
[taint328]a invoke <java.lang.System: long currentTimeMillis()>
[taint328]a invoke 0
20210427node :return $l0
20210427node in :[]
20210427node out :[]
analysis.outSet.size():0
[CFMAP]2021 After taintAnalysis:{cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}
The data isgggg 
<invoker.SnowFlake: long getNewstmp()>
The data isgggg invoker.SnowFlake getNewstmp [] {cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}  {cfhider.WordCount$IntSumReducer={reduce=[I@3310c372}, cfhider.WordCount$TokenizerMapper={map=[I@29db049d}, cfhider.WordCount={main=[I@299a1d24}, invoker.SnowFlake={<init>=[I@415e307b, getNextMill=[I@ec0fcc4, getNewstmp=[I@2abb2d8e}}
Coming...
doAnalysis Startingqqqqqqqq.....
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:$l0 = staticinvoke <java.lang.System: long currentTimeMillis()>()
currStmt left value20210420:$l0
doAnalysis endqqqqqqq.....
come here
[CFMAP]2021 After BackwardAnalysis:{cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}
[taint into] sootMethod: <clinit>
[]
class name :invoker.SnowFlake
method name :<clinit>
method list :[]
clasname=invoker.SnowFlake
methodname=<clinit>
sourcelist2021=[]
20210427node :<invoker.SnowFlake: long sequence> = 0L
20210427node in :[]
普通复制语句1112:<invoker.SnowFlake: long sequence> = 0L
[taint source] u:0L
SourceList:[]
20210427node out :[]
20210427node :<invoker.SnowFlake: long lastStmp> = -1L
20210427node in :[]
普通复制语句1112:<invoker.SnowFlake: long lastStmp> = -1L
[taint source] u:-1L
SourceList:[]
20210427node out :[]
20210427node :return
20210427node in :[]
20210427node out :[]
analysis.outSet.size():0
[CFMAP]2021 After taintAnalysis:{cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}
The data isgggg 
<invoker.SnowFlake: void <clinit>()>
The data isgggg invoker.SnowFlake <clinit> [] {cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}  {cfhider.WordCount$IntSumReducer={reduce=[I@3310c372}, cfhider.WordCount$TokenizerMapper={map=[I@29db049d}, cfhider.WordCount={main=[I@299a1d24}, invoker.SnowFlake={<init>=[I@415e307b, getNextMill=[I@ec0fcc4, getNewstmp=[I@2abb2d8e}}
Coming...
doAnalysis Startingqqqqqqqq.....
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:<invoker.SnowFlake: long lastStmp> = -1L
currStmt left value20210420:<invoker.SnowFlake: long lastStmp>
srcValue=[]
destValue:[]
taint data:[]
Coming in Backward Analysis
currStmt20210420:<invoker.SnowFlake: long sequence> = 0L
currStmt left value20210420:<invoker.SnowFlake: long sequence>
doAnalysis endqqqqqqq.....
come here
[CFMAP]2021 After BackwardAnalysis:{cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}
[taint]SooClass:invoker.sgx_invoker
[========CFMAP=======after taint===]:{cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}
[==========memberVariables==after taint=========]:{}
[============staticmemberVariables=====after taint=======]:{}
[========INVOKE==========] class = cfhider.WordCount$IntSumReducer method = reduce, Value1 = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[========INVOKE==========] class = cfhider.WordCount$TokenizerMapper method = map, Value1 = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[========INVOKE==========] class = cfhider.WordCount method = main, Value1 = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[========INVOKE==========] class = invoker.SnowFlake method = <init>, Value1 = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[========INVOKE==========] class = invoker.SnowFlake method = getNextMill, Value1 = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[========INVOKE==========] class = invoker.SnowFlake method = getNewstmp, Value1 = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
Key class = cfhider.WordCount$IntSumReducer, Value = {<init>=[], reduce=[]}
Key1 method = <init>, Value1 = []
Key1 method = reduce, Value1 = []
Key class = cfhider.WordCount$TokenizerMapper, Value = {<init>=[], <clinit>=[], map=[$z0]}
Key1 method = <init>, Value1 = []
Key1 method = <clinit>, Value1 = []
Key1 method = map, Value1 = [$z0]
<<<<<<ZYSTBLE>>>>>> in Function TypeIndex typeStr:********boolean*************
Key class = cfhider.WordCount, Value = {<init>=[], main=[]}
Key1 method = <init>, Value1 = []
Key1 method = main, Value1 = []
Key class = invoker.SnowFlake, Value = {<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}
Key1 method = <init>, Value1 = []
Key1 method = <clinit>, Value1 = []
Key1 method = getNextMill, Value1 = []
Key1 method = getNewstmp, Value1 = []
Key1 method = nextId, Value1 = []
[========CFMAP=======after delete constant===]:{cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}
[add member]SooClass:cfhider.WordCount$IntSumReducer
[add member] class: cfhider.WordCount$IntSumReducer
[add member]SooClass:cfhider.WordCount
[add member] class: cfhider.WordCount
[add member]SooClass:cfhider.WordCount$TokenizerMapper
[add member] class: cfhider.WordCount$TokenizerMapper
<<<<<<ZYSTBLE>>>>>> in Function TypeIndex typeStr:********boolean*************
<<<<<<ZYSTBLE>>>>>> in Function TypeIndex typeStr:********boolean*************
===b1  :false  b2 :true  b3:false
<<<<<<ZYSTBLE>>>>>> in Function TypeIndex typeStr:********boolean*************
[add member]SooClass:invoker.SnowFlake
[add member] class: invoker.SnowFlake
[add member]SooClass:invoker.sgx_invoker
[========CFMAP==========]:{cfhider.WordCount$IntSumReducer={<init>=[], reduce=[]}, cfhider.WordCount$TokenizerMapper={<init>=[], <clinit>=[], map=[$z0]}, cfhider.WordCount={<init>=[], main=[]}, invoker.SnowFlake={<init>=[], <clinit>=[], getNextMill=[], getNewstmp=[], nextId=[]}}
[========INVOKEMAP==========]:{cfhider.WordCount$IntSumReducer={reduce=[I@3310c372}, cfhider.WordCount$TokenizerMapper={map=[I@29db049d}, cfhider.WordCount={main=[I@299a1d24}, invoker.SnowFlake={<init>=[I@415e307b, getNextMill=[I@ec0fcc4, getNewstmp=[I@2abb2d8e}}
[==========memberVariables===========]:{}
[============staticmemberVariables============]:{}
Transforming cfhider.WordCount$IntSumReducer... 
classname20210512: 1
classname20210512:cfhider.WordCount$IntSumReducer
MethodName20210512:<init>
classname20210512: 1
classname20210512:cfhider.WordCount$IntSumReducer
MethodName20210512:reduce
classname20210512: 1
classname20210512:cfhider.WordCount$IntSumReducer
MethodName20210512:reduce
Transforming cfhider.WordCount... 
classname20210512: 1
classname20210512:cfhider.WordCount
MethodName20210512:<init>
classname20210512: 1
classname20210512:cfhider.WordCount
MethodName20210512:main
Transforming cfhider.WordCount$TokenizerMapper... 
classname20210512: 1
classname20210512:cfhider.WordCount$TokenizerMapper
MethodName20210512:<init>
classname20210512: 1
classname20210512:cfhider.WordCount$TokenizerMapper
MethodName20210512:map
<<!!!!!!START!!!!!!>>start insertting at class: cfhider.WordCount$TokenizerMapper
<<!!!!!!START!!!!!!>>start processing function: <cfhider.WordCount$TokenizerMapper: void map(java.lang.Object,org.apache.hadoop.io.Text,org.apache.hadoop.mapreduce.Mapper$Context)>;
tLocal=r0
tLocal=r1
tLocal=r2
tLocal=r3
tLocal=$r4
tLocal=r5
tLocal=$r6
tLocal=$z0
tLocal=$r7
tLocal=$r8
tLocal=$r9
tLocal=$r10
tLocal=invokeLineNo
tLocal=getUUID
tLocal=invokeUUID
tLocal=branchInvokeResult
tLocal=sgxInvoker
**********************Line376
====currScanPre==0404=====r0 := @this: cfhider.WordCount$TokenizerMapper
def:r0
use:@this: cfhider.WordCount$TokenizerMapper
====currScanPre==0404=====r1 := @parameter0: java.lang.Object
def:r1
use:@parameter0: java.lang.Object
====currScanPre==0404=====r2 := @parameter1: org.apache.hadoop.io.Text
def:r2
use:@parameter1: org.apache.hadoop.io.Text
====currScanPre==0404=====r3 := @parameter2: org.apache.hadoop.mapreduce.Mapper$Context
def:r3
use:@parameter2: org.apache.hadoop.mapreduce.Mapper$Context
====currScanPre==0404=====$r4 = new java.util.StringTokenizer
def:$r4
use:new java.util.StringTokenizer
====currScanPre==0404=====$r6 = virtualinvoke r2.<org.apache.hadoop.io.Text: java.lang.String toString()>()
def:$r6
use:r2
use:virtualinvoke r2.<org.apache.hadoop.io.Text: java.lang.String toString()>()
====currScanPre==0404=====specialinvoke $r4.<java.util.StringTokenizer: void <init>(java.lang.String)>($r6)
use:$r4
use:$r6
use:specialinvoke $r4.<java.util.StringTokenizer: void <init>(java.lang.String)>($r6)
====currScanPre==0404=====r5 = $r4
def:r5
use:$r4
====currScanPre==0404=====$z0 = virtualinvoke r5.<java.util.StringTokenizer: boolean hasMoreTokens()>()
def:$z0
add def:$z0
use:r5
use:virtualinvoke r5.<java.util.StringTokenizer: boolean hasMoreTokens()>()
====currScanPre==0404=====if $z0 == 0 goto return
use:$z0
add use:$z0
use:0
use:$z0 == 0
====currScanPre==0404=====$r7 = r0.<cfhider.WordCount$TokenizerMapper: org.apache.hadoop.io.Text word>
def:$r7
use:r0
use:r0.<cfhider.WordCount$TokenizerMapper: org.apache.hadoop.io.Text word>
====currScanPre==0404=====$r8 = virtualinvoke r5.<java.util.StringTokenizer: java.lang.String nextToken()>()
def:$r8
use:r5
use:virtualinvoke r5.<java.util.StringTokenizer: java.lang.String nextToken()>()
====currScanPre==0404=====virtualinvoke $r7.<org.apache.hadoop.io.Text: void set(java.lang.String)>($r8)
use:$r7
use:$r8
use:virtualinvoke $r7.<org.apache.hadoop.io.Text: void set(java.lang.String)>($r8)
====currScanPre==0404=====$r9 = r0.<cfhider.WordCount$TokenizerMapper: org.apache.hadoop.io.Text word>
def:$r9
use:r0
use:r0.<cfhider.WordCount$TokenizerMapper: org.apache.hadoop.io.Text word>
====currScanPre==0404=====$r10 = <cfhider.WordCount$TokenizerMapper: org.apache.hadoop.io.IntWritable one>
def:$r10
use:<cfhider.WordCount$TokenizerMapper: org.apache.hadoop.io.IntWritable one>
====currScanPre==0404=====virtualinvoke r3.<org.apache.hadoop.mapreduce.Mapper$Context: void write(java.lang.Object,java.lang.Object)>($r9, $r10)
use:r3
use:$r9
use:$r10
use:virtualinvoke r3.<org.apache.hadoop.mapreduce.Mapper$Context: void write(java.lang.Object,java.lang.Object)>($r9, $r10)
====currScanPre==0404=====goto [?= $z0 = virtualinvoke r5.<java.util.StringTokenizer: boolean hasMoreTokens()>()]
====currScanPre==0404=====return
**********************Line456
the value of param list:$z0 
***zy+++lastIdentityStmt is： r0 := @this: cfhider.WordCount$TokenizerMapper;
localArray:[r0, r1, r2, r3, $r4, r5, $r6, $z0, $r7, $r8, $r9, $r10, invokeLineNo, getUUID, invokeUUID, branchInvokeResult, sgxInvoker]
ok condVals1
currProStmt is IdentityStmt:r0 := @this: cfhider.WordCount$TokenizerMapper
currProStmt is IdentityStmt:r1 := @parameter0: java.lang.Object
0424 identity Vals r1 := @parameter0: java.lang.Object
currProStmt is IdentityStmt:r2 := @parameter1: org.apache.hadoop.io.Text
0424 identity Vals r2 := @parameter1: org.apache.hadoop.io.Text
currProStmt is IdentityStmt:r3 := @parameter2: org.apache.hadoop.mapreduce.Mapper$Context
0424 identity Vals r3 := @parameter2: org.apache.hadoop.mapreduce.Mapper$Context
line 701 current stmt is: ----------#$r4 = new java.util.StringTokenizer#----------------
 line632 current stmt is: ----------#$r4 = new java.util.StringTokenizer#----------------
currDefVals:[$r4]
currDefVals after retainAll:[]
currUseVals:[new java.util.StringTokenizer]
currUseVals after retainAll:[]
r0: has been inited in original javafile!
r1: has been inited in original javafile!
r2: has been inited in original javafile!
r3: has been inited in original javafile!
20210603=$r4
20210603=java.util.StringTokenizer
20210603=$r4 = null
$r4: init stmt will be inserted into jimplefile! :$r4 = null
20210603=r5
20210603=java.util.StringTokenizer
20210603=r5 = null
r5: init stmt will be inserted into jimplefile! :r5 = null
20210603=$r6
20210603=java.lang.String
20210603=$r6 = null
$r6: init stmt will be inserted into jimplefile! :$r6 = null
20210603=$z0
20210603=boolean
$z0: init stmt will be inserted into jimplefile! :$z0 = 0
20210603=$r7
20210603=org.apache.hadoop.io.Text
20210603=$r7 = null
$r7: init stmt will be inserted into jimplefile! :$r7 = null
20210603=$r8
20210603=java.lang.String
20210603=$r8 = null
$r8: init stmt will be inserted into jimplefile! :$r8 = null
20210603=$r9
20210603=org.apache.hadoop.io.Text
20210603=$r9 = null
$r9: init stmt will be inserted into jimplefile! :$r9 = null
20210603=$r10
20210603=org.apache.hadoop.io.IntWritable
20210603=$r10 = null
$r10: init stmt will be inserted into jimplefile! :$r10 = null
20210603=invokeLineNo
20210603=long
invokeLineNo: init stmt will be inserted into jimplefile! :invokeLineNo = 0L
20210603=getUUID
20210603=java.lang.String
20210603=getUUID = null
getUUID: init stmt will be inserted into jimplefile! :getUUID = null
20210603=invokeUUID
20210603=java.lang.String
20210603=invokeUUID = null
invokeUUID: init stmt will be inserted into jimplefile! :invokeUUID = null
20210603=branchInvokeResult
20210603=boolean
branchInvokeResult: init stmt will be inserted into jimplefile! :branchInvokeResult = 0
20210603=sgxInvoker
20210603=invoker.sgx_invoker
20210603=sgxInvoker = null
sgxInvoker: init stmt will be inserted into jimplefile! :sgxInvoker = null
2199 currStmt: $r4 = new java.util.StringTokenizer
2204 stmt: sgxInvoker = new invoker.sgx_invoker
2206 currStmt: $r4 = new java.util.StringTokenizer
ZYSTBLE condValsTypeArray:[1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
ZYSTBLE 8.31:
ValueInitStmt is:#virtualinvoke sgxInvoker.<invoker.sgx_invoker: boolean initValueInEnclave(java.lang.String,java.lang.String,long)>(getUUID, invokeUUID, invokeLineNo)#--
currProStmt is NewExpr: $r4 = new java.util.StringTokenizer;
currProStmt is NewExpr TypeString: java.util.StringTokenizer;
line 701 current stmt is: ----------#$r6 = virtualinvoke r2.<org.apache.hadoop.io.Text: java.lang.String toString()>()#----------------
 line632 current stmt is: ----------#$r6 = virtualinvoke r2.<org.apache.hadoop.io.Text: java.lang.String toString()>()#----------------
currDefVals:[$r6]
currDefVals after retainAll:[]
currUseVals:[r2, virtualinvoke r2.<org.apache.hadoop.io.Text: java.lang.String toString()>()]
currUseVals after retainAll:[]
currProStmt is InvokeExpr: $r6 = virtualinvoke r2.<org.apache.hadoop.io.Text: java.lang.String toString()>();
20210618 assi methodname :toString
20210618 assi classname :org.apache.hadoop.io.Text
currProStmt isn't sensitive:$r6 = virtualinvoke r2.<org.apache.hadoop.io.Text: java.lang.String toString()>()
line 701 current stmt is: ----------#specialinvoke $r4.<java.util.StringTokenizer: void <init>(java.lang.String)>($r6)#----------------
 line632 current stmt is: ----------#specialinvoke $r4.<java.util.StringTokenizer: void <init>(java.lang.String)>($r6)#----------------
currDefVals:[]
currDefVals after retainAll:[]
currUseVals:[$r4, $r6, specialinvoke $r4.<java.util.StringTokenizer: void <init>(java.lang.String)>($r6)]
currUseVals after retainAll:[]
20210618replaceInvokeStmtA methodname :<init>
20210618replaceInvokeStmtA classname :java.util.StringTokenizer
20210618===
currProStmt isn't sensitive invokestmt:specialinvoke $r4.<java.util.StringTokenizer: void <init>(java.lang.String)>($r6)
currProStmt isn't sensitive argList:1
line 701 current stmt is: ----------#r5 = $r4#----------------
 line632 current stmt is: ----------#r5 = $r4#----------------
currDefVals:[r5]
currDefVals after retainAll:[]
currUseVals:[$r4]
currUseVals after retainAll:[]
currProStmt is AssignStmt: r5 = $r4;
line 701 current stmt is: ----------#$z0 = virtualinvoke r5.<java.util.StringTokenizer: boolean hasMoreTokens()>()#----------------
 line632 current stmt is: ----------#$z0 = virtualinvoke r5.<java.util.StringTokenizer: boolean hasMoreTokens()>()#----------------
currDefVals:[$z0]
currDefVals after retainAll:[$z0]
currUseVals:[r5, virtualinvoke r5.<java.util.StringTokenizer: boolean hasMoreTokens()>()]
currUseVals after retainAll:[]
currProStmt is InvokeExpr: $z0 = virtualinvoke r5.<java.util.StringTokenizer: boolean hasMoreTokens()>();
20210618 assi methodname :hasMoreTokens
20210618 assi classname :java.util.StringTokenizer
currProStmt isn't sensitive:$z0 = virtualinvoke r5.<java.util.StringTokenizer: boolean hasMoreTokens()>()
currProStmt will change to GET:$z0 = virtualinvoke r5.<java.util.StringTokenizer: boolean hasMoreTokens()>()
20210603=tmpResult0
20210603=boolean
new assi:$z0 = tmpResult0
enter replaceValueUpdateStmt:$z0 = tmpResult0
ass r curr pro Unit: tmpResult0;
ass r curr pro Unit type: boolean;
ass l curr pro Unit: $z0;
ass l curr pro Unit type: boolean;
=curr pro Unit: tmpResult0;
exp:********tmpResult0*************
Local exp********tmpResult0*************
values:********tmpResult0*************
values.type:********boolean*************
********
rOpArr********false*************
rightCondValue1: []
condVals: [$z0]
rightCondValue2: []
=leftOpValue.type==boolean
=leftOpValue==$z0
<<<<<<ZYSTBLE>>>>>> in Function TypeIndex typeStr:********boolean*************
<<<<<<ZYSTBLE>>>>>> in Function TypeIndex typeStr:********boolean*************
returnTypeIndex=1
pos_index=0
return_index=100
<<<<<<ZYSTBLE>>>>>> in Function TypeIndex typeStr:********boolean*************
values.get(0)=tmpResult0
pos_index=-1
<<<<<<ZYSTBLE>>>>>> tuple-0 update: ++++++++++++++++++++++++++ 1++++++++++++++++++++++
values.size=1
0515 :tmpResult0 boolean
<<<<<<ZYSTBLE>>>>>> in Function TypeIndex typeStr:********boolean*************
<<<<<<ZYSTBLE>>>>>> in Function TypeIndex typeStr:********boolean*************
add: else :tmpResult0
<<<<<<ZYSTBLE>>>>>> in Function TypeIndex typeStr:********boolean*************
2869 not array
loc=tmpResult0
localArray=[r0, tmpResult0, r1, r2, r3, $r4, r5, $r6, $z0, $r7, $r8, $r9, $r10, invokeLineNo, getUUID, invokeUUID, branchInvokeResult, sgxInvoker]
loc.equals: index:0
2891 set left_index::0
loggedValue type:boolean
loggerLocal :sgxInvoker
ZY newInvokeStmt to insert is: ++++++++++++++++++++++++++ virtualinvoke sgxInvoker.<invoker.sgx_invoker: void add(int)>(tmpResult0)++++++++++++++++++++++
add: loc :virtualinvoke sgxInvoker.<invoker.sgx_invoker: void add(int)>(tmpResult0)  index:0
loc=$z0
localArray=[r0, tmpResult0, r1, r2, r3, $r4, r5, $r6, $z0, $r7, $r8, $r9, $r10, invokeLineNo, getUUID, invokeUUID, branchInvokeResult, sgxInvoker]
loc=branchInvokeResult
localArray=[r0, tmpResult0, r1, r2, r3, $r4, r5, $r6, $z0, $r7, $r8, $r9, $r10, invokeLineNo, getUUID, invokeUUID, branchInvokeResult, sgxInvoker]
setParam0=true
indexwriter 3:
left_index:0
left_flag_index:-1
right_index:-1
right_flag_index:-1
return_index:100
return_flag_index:-1
counter:0
stmt update has no second operand:********-1*************
1111222111
1111555111
newInvokeStmt to insert is: ++++++++++++++++++++++++++ virtualinvoke sgxInvoker.<invoker.sgx_invoker: void updateValueInEnclave(java.lang.String,int,long)>(getUUID, 0, 0L)++++++++++++++++++++++
start insert before currStmt: ++++++++++++++++++++++++++ $z0 = tmpResult0++++++++++++++++++++++
line 701 current stmt is: ----------#if $z0 == 0 goto return#----------------
 line632 current stmt is: ----------#if $z0 == 0 goto return#----------------
currDefVals:[]
currDefVals after retainAll:[]
currUseVals:[$z0, 0, $z0 == 0]
currUseVals after retainAll:[$z0]
the value=$z0
the value=0
the value if stmt:[$z0]
the method SourceList:[$z0]
 curr pro Unit: $z0 == 0;
exp:********$z0 == 0*************
exp:********$z0*************
Local exp********$z0*************
exp:********0*************
Constant exp********0*************
operator:******** == *************
newInvokeStmt to insert is: ++++++++++++++++++++++++++ virtualinvoke sgxInvoker.<invoker.sgx_invoker: void clear()>()++++++++++++++++++++++
start insert before currStmt: ++++++++++++++++++++++++++ if $z0 == 0 goto return++++++++++++++++++++++
<<<<<<ZYSTBLE>>>>>> in Function TypeIndex typeStr:********boolean*************
<<<<<<ZYSTBLE>>>>>> tuple-0 branch: ++++++++++++++++++++++++++ 1++++++++++++++++++++++
values0 is in condvals!
<<<<<<ZYSTBLE>>>>>> in Function TypeIndex typeStr:********boolean*************
val_type is:====1
pos_index is:====0
left_index is:====100
<<<<<<ZYSTBLE>>>>>> in Function TypeIndex typeStr:********int*************
values1 is constant!
left_index：====b==:100
right_index：===b===:int_0
operator：===b===:[ == ]
re：===b===:-1
counter：===b===:1
assignStmt to insert is: ++++++++++++++++++++++++++ branchInvokeResult = virtualinvoke sgxInvoker.<invoker.sgx_invoker: boolean getBooleanValue(java.lang.String,long)>(getUUID, 1L)++++++++++++++++++++++
start insert before currStmt: ++++++++++++++++++++++++++ if branchInvokeResult == 1 goto return++++++++++++++++++++++
currProStmt is IfStmt: if branchInvokeResult == 1 goto return;
line 701 current stmt is: ----------#$r7 = r0.<cfhider.WordCount$TokenizerMapper: org.apache.hadoop.io.Text word>#----------------
 line632 current stmt is: ----------#$r7 = r0.<cfhider.WordCount$TokenizerMapper: org.apache.hadoop.io.Text word>#----------------
currDefVals:[$r7]
currDefVals after retainAll:[]
currUseVals:[r0, r0.<cfhider.WordCount$TokenizerMapper: org.apache.hadoop.io.Text word>]
currUseVals after retainAll:[]
currProStmt is AssignStmt: $r7 = r0.<cfhider.WordCount$TokenizerMapper: org.apache.hadoop.io.Text word>;
line 701 current stmt is: ----------#$r8 = virtualinvoke r5.<java.util.StringTokenizer: java.lang.String nextToken()>()#----------------
 line632 current stmt is: ----------#$r8 = virtualinvoke r5.<java.util.StringTokenizer: java.lang.String nextToken()>()#----------------
currDefVals:[$r8]
currDefVals after retainAll:[]
currUseVals:[r5, virtualinvoke r5.<java.util.StringTokenizer: java.lang.String nextToken()>()]
currUseVals after retainAll:[]
currProStmt is InvokeExpr: $r8 = virtualinvoke r5.<java.util.StringTokenizer: java.lang.String nextToken()>();
20210618 assi methodname :nextToken
20210618 assi classname :java.util.StringTokenizer
currProStmt isn't sensitive:$r8 = virtualinvoke r5.<java.util.StringTokenizer: java.lang.String nextToken()>()
line 701 current stmt is: ----------#virtualinvoke $r7.<org.apache.hadoop.io.Text: void set(java.lang.String)>($r8)#----------------
 line632 current stmt is: ----------#virtualinvoke $r7.<org.apache.hadoop.io.Text: void set(java.lang.String)>($r8)#----------------
currDefVals:[]
currDefVals after retainAll:[]
currUseVals:[$r7, $r8, virtualinvoke $r7.<org.apache.hadoop.io.Text: void set(java.lang.String)>($r8)]
currUseVals after retainAll:[]
20210618replaceInvokeStmtA methodname :set
20210618replaceInvokeStmtA classname :org.apache.hadoop.io.Text
20210618===
currProStmt isn't sensitive invokestmt:virtualinvoke $r7.<org.apache.hadoop.io.Text: void set(java.lang.String)>($r8)
currProStmt isn't sensitive argList:1
line 701 current stmt is: ----------#$r9 = r0.<cfhider.WordCount$TokenizerMapper: org.apache.hadoop.io.Text word>#----------------
 line632 current stmt is: ----------#$r9 = r0.<cfhider.WordCount$TokenizerMapper: org.apache.hadoop.io.Text word>#----------------
currDefVals:[$r9]
currDefVals after retainAll:[]
currUseVals:[r0, r0.<cfhider.WordCount$TokenizerMapper: org.apache.hadoop.io.Text word>]
currUseVals after retainAll:[]
currProStmt is AssignStmt: $r9 = r0.<cfhider.WordCount$TokenizerMapper: org.apache.hadoop.io.Text word>;
line 701 current stmt is: ----------#$r10 = <cfhider.WordCount$TokenizerMapper: org.apache.hadoop.io.IntWritable one>#----------------
 line632 current stmt is: ----------#$r10 = <cfhider.WordCount$TokenizerMapper: org.apache.hadoop.io.IntWritable one>#----------------
currDefVals:[$r10]
currDefVals after retainAll:[]
currUseVals:[<cfhider.WordCount$TokenizerMapper: org.apache.hadoop.io.IntWritable one>]
currUseVals after retainAll:[]
currProStmt is AssignStmt: $r10 = <cfhider.WordCount$TokenizerMapper: org.apache.hadoop.io.IntWritable one>;
line 701 current stmt is: ----------#virtualinvoke r3.<org.apache.hadoop.mapreduce.Mapper$Context: void write(java.lang.Object,java.lang.Object)>($r9, $r10)#----------------
 line632 current stmt is: ----------#virtualinvoke r3.<org.apache.hadoop.mapreduce.Mapper$Context: void write(java.lang.Object,java.lang.Object)>($r9, $r10)#----------------
currDefVals:[]
currDefVals after retainAll:[]
currUseVals:[r3, $r9, $r10, virtualinvoke r3.<org.apache.hadoop.mapreduce.Mapper$Context: void write(java.lang.Object,java.lang.Object)>($r9, $r10)]
currUseVals after retainAll:[]
20210618replaceInvokeStmtA methodname :write
20210618replaceInvokeStmtA classname :org.apache.hadoop.mapreduce.Mapper$Context
20210618===
currProStmt isn't sensitive invokestmt:virtualinvoke r3.<org.apache.hadoop.mapreduce.Mapper$Context: void write(java.lang.Object,java.lang.Object)>($r9, $r10)
currProStmt isn't sensitive argList:2
line 701 current stmt is: ----------#goto [?= tmpResult0 = virtualinvoke r5.<java.util.StringTokenizer: boolean hasMoreTokens()>()]#----------------
 line632 current stmt is: ----------#goto [?= tmpResult0 = virtualinvoke r5.<java.util.StringTokenizer: boolean hasMoreTokens()>()]#----------------
currDefVals:[]
currDefVals after retainAll:[]
currUseVals:[]
currUseVals after retainAll:[]
line 701 current stmt is: ----------#return#----------------
 line632 current stmt is: ----------#return#----------------
currDefVals:[]
currDefVals after retainAll:[]
currUseVals:[]
currUseVals after retainAll:[]
currProStmt return stmt before deleteValuestmt: return
<<!!!!!!ZYreturn!!!!!!>>this processing function: <cfhider.WordCount$TokenizerMapper: void map(java.lang.Object,org.apache.hadoop.io.Text,org.apache.hadoop.mapreduce.Mapper$Context)>;
A
C2
B
ValueDeleteStmt is:#virtualinvoke sgxInvoker.<invoker.sgx_invoker: boolean deleteValueInEnclave(java.lang.String,java.lang.String,long)>(getUUID, "", 0L)#--
***++++++lastIdentityStmt is:++++++++++r3 := @parameter2: org.apache.hadoop.mapreduce.Mapper$Context
<<!!!!!!START!!!!!!>>20210610start insertting at class: cfhider.WordCount$TokenizerMapper
<<!!!!!!START!!!!!!>>20210610start processing function: <cfhider.WordCount$TokenizerMapper: void map(java.lang.Object,org.apache.hadoop.io.Text,org.apache.hadoop.mapreduce.Mapper$Context)>;
**********************Line177
====currScanPre==updatemerge=====r0 := @this: cfhider.WordCount$TokenizerMapper
====currScanPre==updatemerge=====r1 := @parameter0: java.lang.Object
====currScanPre==updatemerge=====r2 := @parameter1: org.apache.hadoop.io.Text
====currScanPre==updatemerge=====r3 := @parameter2: org.apache.hadoop.mapreduce.Mapper$Context
====currScanPre==updatemerge=====tmpResult0 = 0
====currScanPre==updatemerge=====$r4 = null
====currScanPre==updatemerge=====r5 = null
====currScanPre==updatemerge=====$r6 = null
====currScanPre==updatemerge=====$z0 = 0
====currScanPre==updatemerge=====$r7 = null
====currScanPre==updatemerge=====$r8 = null
====currScanPre==updatemerge=====$r9 = null
====currScanPre==updatemerge=====$r10 = null
====currScanPre==updatemerge=====invokeLineNo = 0L
====currScanPre==updatemerge=====getUUID = null
====currScanPre==updatemerge=====invokeUUID = null
====currScanPre==updatemerge=====branchInvokeResult = 0
====currScanPre==updatemerge=====sgxInvoker = null
====currScanPre==updatemerge=====sgxInvoker = new invoker.sgx_invoker
====currScanPre==updatemerge=====specialinvoke sgxInvoker.<invoker.sgx_invoker: void <init>()>()
====currScanPre==updatemerge=====virtualinvoke sgxInvoker.<invoker.sgx_invoker: boolean initenclave()>()
====currScanPre==updatemerge=====getUUID = virtualinvoke sgxInvoker.<invoker.sgx_invoker: java.lang.String getUUID()>()
====currScanPre==updatemerge=====virtualinvoke sgxInvoker.<invoker.sgx_invoker: boolean initValueInEnclave(java.lang.String,java.lang.String,long)>(getUUID, invokeUUID, invokeLineNo)
====currScanPre==updatemerge=====$r4 = new java.util.StringTokenizer
====currScanPre==updatemerge=====$r6 = virtualinvoke r2.<org.apache.hadoop.io.Text: java.lang.String toString()>()
====currScanPre==updatemerge=====specialinvoke $r4.<java.util.StringTokenizer: void <init>(java.lang.String)>($r6)
====currScanPre==updatemerge=====r5 = $r4
====currScanPre==updatemerge=====tmpResult0 = virtualinvoke r5.<java.util.StringTokenizer: boolean hasMoreTokens()>()
====currScanPre==updatemerge=====virtualinvoke sgxInvoker.<invoker.sgx_invoker: void add(int)>(tmpResult0)
====curr type 20210610=====int
====currScanPre==updatemerge=====virtualinvoke sgxInvoker.<invoker.sgx_invoker: void updateValueInEnclave(java.lang.String,int,long)>(getUUID, 0, 0L)
----add index ,Is :0
====addIndex put:0 indexList:[0]
====currScanPre==updatemerge=====branchInvokeResult = virtualinvoke sgxInvoker.<invoker.sgx_invoker: boolean getBooleanValue(java.lang.String,long)>(getUUID, 1L)
====currScanPre==updatemerge=====if branchInvokeResult == 1 goto virtualinvoke sgxInvoker.<invoker.sgx_invoker: boolean deleteValueInEnclave(java.lang.String,java.lang.String,long)>(getUUID, "", 0L)
++++GtoStmt==has tag++++if branchInvokeResult == 1 goto virtualinvoke sgxInvoker.<invoker.sgx_invoker: boolean deleteValueInEnclave(java.lang.String,java.lang.String,long)>(getUUID, "", 0L)
====currScanPre==updatemerge=====$r7 = r0.<cfhider.WordCount$TokenizerMapper: org.apache.hadoop.io.Text word>
====currScanPre==updatemerge=====$r8 = virtualinvoke r5.<java.util.StringTokenizer: java.lang.String nextToken()>()
====currScanPre==updatemerge=====virtualinvoke $r7.<org.apache.hadoop.io.Text: void set(java.lang.String)>($r8)
====currScanPre==updatemerge=====$r9 = r0.<cfhider.WordCount$TokenizerMapper: org.apache.hadoop.io.Text word>
====currScanPre==updatemerge=====$r10 = <cfhider.WordCount$TokenizerMapper: org.apache.hadoop.io.IntWritable one>
====currScanPre==updatemerge=====virtualinvoke r3.<org.apache.hadoop.mapreduce.Mapper$Context: void write(java.lang.Object,java.lang.Object)>($r9, $r10)
====currScanPre==updatemerge=====goto [?= tmpResult0 = virtualinvoke r5.<java.util.StringTokenizer: boolean hasMoreTokens()>()]
++++GtoStmt==has tag++++goto [?= tmpResult0 = virtualinvoke r5.<java.util.StringTokenizer: boolean hasMoreTokens()>()]
====currScanPre==updatemerge=====virtualinvoke sgxInvoker.<invoker.sgx_invoker: boolean deleteValueInEnclave(java.lang.String,java.lang.String,long)>(getUUID, "", 0L)
====currScanPre==updatemerge=====return
++++updateMerge==add_index++++:{0=[0]}
----second while, currScanPreStmt: r0 := @this: cfhider.WordCount$TokenizerMapper
----second while, currScanPreStmt: r1 := @parameter0: java.lang.Object
----second while, currScanPreStmt: r2 := @parameter1: org.apache.hadoop.io.Text
----second while, currScanPreStmt: r3 := @parameter2: org.apache.hadoop.mapreduce.Mapper$Context
----second while, currScanPreStmt: tmpResult0 = 0
----second while, currScanPreStmt: $r4 = null
----second while, currScanPreStmt: r5 = null
----second while, currScanPreStmt: $r6 = null
----second while, currScanPreStmt: $z0 = 0
----second while, currScanPreStmt: $r7 = null
----second while, currScanPreStmt: $r8 = null
----second while, currScanPreStmt: $r9 = null
----second while, currScanPreStmt: $r10 = null
----second while, currScanPreStmt: invokeLineNo = 0L
----second while, currScanPreStmt: getUUID = null
----second while, currScanPreStmt: invokeUUID = null
----second while, currScanPreStmt: branchInvokeResult = 0
----second while, currScanPreStmt: sgxInvoker = null
----second while, currScanPreStmt: sgxInvoker = new invoker.sgx_invoker
----second while, currScanPreStmt: specialinvoke sgxInvoker.<invoker.sgx_invoker: void <init>()>()
----second while, currScanPreStmt: virtualinvoke sgxInvoker.<invoker.sgx_invoker: boolean initenclave()>()
----second while, currScanPreStmt: getUUID = virtualinvoke sgxInvoker.<invoker.sgx_invoker: java.lang.String getUUID()>()
----second while, currScanPreStmt: virtualinvoke sgxInvoker.<invoker.sgx_invoker: boolean initValueInEnclave(java.lang.String,java.lang.String,long)>(getUUID, invokeUUID, invokeLineNo)
----second while, currScanPreStmt: $r4 = new java.util.StringTokenizer
----second while, currScanPreStmt: $r6 = virtualinvoke r2.<org.apache.hadoop.io.Text: java.lang.String toString()>()
----second while, currScanPreStmt: specialinvoke $r4.<java.util.StringTokenizer: void <init>(java.lang.String)>($r6)
----second while, currScanPreStmt: r5 = $r4
----second while, currScanPreStmt: tmpResult0 = virtualinvoke r5.<java.util.StringTokenizer: boolean hasMoreTokens()>()
----break point,label: label0
----second while, currScanPreStmt: virtualinvoke sgxInvoker.<invoker.sgx_invoker: void add(int)>(tmpResult0)
----second while ,updateParamsArrayList :[tmpResult0]
----second while, currScanPreStmt: virtualinvoke sgxInvoker.<invoker.sgx_invoker: void updateValueInEnclave(java.lang.String,int,long)>(getUUID, 0, 0L)
----second while ,firstIs :0
----second while, currScanPreStmt: branchInvokeResult = virtualinvoke sgxInvoker.<invoker.sgx_invoker: boolean getBooleanValue(java.lang.String,long)>(getUUID, 1L)
----second while ,left Stmt :branchInvokeResult = virtualinvoke sgxInvoker.<invoker.sgx_invoker: boolean getBooleanValue(java.lang.String,long)>(getUUID, 1L)
----second while ,leftOp : branchInvokeResult
----second while, currScanPreStmt: if branchInvokeResult == 1 goto virtualinvoke sgxInvoker.<invoker.sgx_invoker: boolean deleteValueInEnclave(java.lang.String,java.lang.String,long)>(getUUID, "", 0L)
----break point, has Tag: if branchInvokeResult == 1 goto virtualinvoke sgxInvoker.<invoker.sgx_invoker: boolean deleteValueInEnclave(java.lang.String,java.lang.String,long)>(getUUID, "", 0L)
----second while, currScanPreStmt: $r7 = r0.<cfhider.WordCount$TokenizerMapper: org.apache.hadoop.io.Text word>
----second while ,left Stmt :$r7 = r0.<cfhider.WordCount$TokenizerMapper: org.apache.hadoop.io.Text word>
----second while ,leftOp : $r7
----second while, currScanPreStmt: $r8 = virtualinvoke r5.<java.util.StringTokenizer: java.lang.String nextToken()>()
----second while ,left Stmt :$r8 = virtualinvoke r5.<java.util.StringTokenizer: java.lang.String nextToken()>()
----second while ,leftOp : $r8
----second while, currScanPreStmt: virtualinvoke $r7.<org.apache.hadoop.io.Text: void set(java.lang.String)>($r8)
----second while, currScanPreStmt: $r9 = r0.<cfhider.WordCount$TokenizerMapper: org.apache.hadoop.io.Text word>
----second while ,left Stmt :$r9 = r0.<cfhider.WordCount$TokenizerMapper: org.apache.hadoop.io.Text word>
----second while ,leftOp : $r9
----second while, currScanPreStmt: $r10 = <cfhider.WordCount$TokenizerMapper: org.apache.hadoop.io.IntWritable one>
----second while ,left Stmt :$r10 = <cfhider.WordCount$TokenizerMapper: org.apache.hadoop.io.IntWritable one>
----second while ,leftOp : $r10
----second while, currScanPreStmt: virtualinvoke r3.<org.apache.hadoop.mapreduce.Mapper$Context: void write(java.lang.Object,java.lang.Object)>($r9, $r10)
----second while, currScanPreStmt: goto [?= tmpResult0 = virtualinvoke r5.<java.util.StringTokenizer: boolean hasMoreTokens()>()]
----break point, has Tag: goto [?= tmpResult0 = virtualinvoke r5.<java.util.StringTokenizer: boolean hasMoreTokens()>()]
----second while, currScanPreStmt: virtualinvoke sgxInvoker.<invoker.sgx_invoker: boolean deleteValueInEnclave(java.lang.String,java.lang.String,long)>(getUUID, "", 0L)
----break point,label: label1
----second while, currScanPreStmt: return
**********************Line198
<<!!!!!!END!!!!!!>>20210610start insertting at class: cfhider.WordCount$TokenizerMapper
<<!!!!!!END!!!!!!>>20210610start processing function: <cfhider.WordCount$TokenizerMapper: void map(java.lang.Object,org.apache.hadoop.io.Text,org.apache.hadoop.mapreduce.Mapper$Context)>;
classname20210512: 1
classname20210512:cfhider.WordCount$TokenizerMapper
MethodName20210512:map
<<!!!!!!START!!!!!!>>start insertting at class: cfhider.WordCount$TokenizerMapper
<<!!!!!!START!!!!!!>>start processing function: <cfhider.WordCount$TokenizerMapper: void map(java.lang.Object,java.lang.Object,org.apache.hadoop.mapreduce.Mapper$Context)>;
tLocal=r0
tLocal=r1
tLocal=r2
tLocal=r3
tLocal=$r4
tLocal=invokeLineNo
tLocal=getUUID
tLocal=invokeUUID
tLocal=branchInvokeResult
tLocal=sgxInvoker
**********************Line376
====currScanPre==0404=====r0 := @this: cfhider.WordCount$TokenizerMapper
def:r0
use:@this: cfhider.WordCount$TokenizerMapper
====currScanPre==0404=====r1 := @parameter0: java.lang.Object
def:r1
use:@parameter0: java.lang.Object
====currScanPre==0404=====r2 := @parameter1: java.lang.Object
def:r2
use:@parameter1: java.lang.Object
====currScanPre==0404=====r3 := @parameter2: org.apache.hadoop.mapreduce.Mapper$Context
def:r3
use:@parameter2: org.apache.hadoop.mapreduce.Mapper$Context
====currScanPre==0404=====$r4 = (org.apache.hadoop.io.Text) r2
def:$r4
use:r2
use:(org.apache.hadoop.io.Text) r2
====currScanPre==0404=====virtualinvoke r0.<cfhider.WordCount$TokenizerMapper: void map(java.lang.Object,org.apache.hadoop.io.Text,org.apache.hadoop.mapreduce.Mapper$Context)>(r1, $r4, r3)
use:r0
use:r1
use:$r4
use:r3
use:virtualinvoke r0.<cfhider.WordCount$TokenizerMapper: void map(java.lang.Object,org.apache.hadoop.io.Text,org.apache.hadoop.mapreduce.Mapper$Context)>(r1, $r4, r3)
====currScanPre==0404=====return
**********************Line456
the value of param list:
***zy+++lastIdentityStmt is： r0 := @this: cfhider.WordCount$TokenizerMapper;
localArray:[r0, r1, r2, r3, $r4, invokeLineNo, getUUID, invokeUUID, branchInvokeResult, sgxInvoker]
ok condVals0
currProStmt is IdentityStmt:r0 := @this: cfhider.WordCount$TokenizerMapper
currProStmt is IdentityStmt:r1 := @parameter0: java.lang.Object
0424 identity Vals r1 := @parameter0: java.lang.Object
currProStmt is IdentityStmt:r2 := @parameter1: java.lang.Object
0424 identity Vals r2 := @parameter1: java.lang.Object
currProStmt is IdentityStmt:r3 := @parameter2: org.apache.hadoop.mapreduce.Mapper$Context
0424 identity Vals r3 := @parameter2: org.apache.hadoop.mapreduce.Mapper$Context
line 701 current stmt is: ----------#$r4 = (org.apache.hadoop.io.Text) r2#----------------
 line632 current stmt is: ----------#$r4 = (org.apache.hadoop.io.Text) r2#----------------
currDefVals:[$r4]
currDefVals after retainAll:[]
currUseVals:[r2, (org.apache.hadoop.io.Text) r2]
currUseVals after retainAll:[]
r0: has been inited in original javafile!
r1: has been inited in original javafile!
r2: has been inited in original javafile!
r3: has been inited in original javafile!
20210603=$r4
20210603=org.apache.hadoop.io.Text
20210603=$r4 = null
$r4: init stmt will be inserted into jimplefile! :$r4 = null
20210603=invokeLineNo
20210603=long
invokeLineNo: init stmt will be inserted into jimplefile! :invokeLineNo = 0L
20210603=getUUID
20210603=java.lang.String
20210603=getUUID = null
getUUID: init stmt will be inserted into jimplefile! :getUUID = null
20210603=invokeUUID
20210603=java.lang.String
20210603=invokeUUID = null
invokeUUID: init stmt will be inserted into jimplefile! :invokeUUID = null
20210603=branchInvokeResult
20210603=boolean
branchInvokeResult: init stmt will be inserted into jimplefile! :branchInvokeResult = 0
20210603=sgxInvoker
20210603=invoker.sgx_invoker
20210603=sgxInvoker = null
sgxInvoker: init stmt will be inserted into jimplefile! :sgxInvoker = null
2199 currStmt: $r4 = (org.apache.hadoop.io.Text) r2
2204 stmt: sgxInvoker = new invoker.sgx_invoker
2206 currStmt: $r4 = (org.apache.hadoop.io.Text) r2
currProStmt is AssignStmt: $r4 = (org.apache.hadoop.io.Text) r2;
line 701 current stmt is: ----------#virtualinvoke r0.<cfhider.WordCount$TokenizerMapper: void map(java.lang.Object,org.apache.hadoop.io.Text,org.apache.hadoop.mapreduce.Mapper$Context)>(r1, $r4, r3)#----------------
 line632 current stmt is: ----------#virtualinvoke r0.<cfhider.WordCount$TokenizerMapper: void map(java.lang.Object,org.apache.hadoop.io.Text,org.apache.hadoop.mapreduce.Mapper$Context)>(r1, $r4, r3)#----------------
currDefVals:[]
currDefVals after retainAll:[]
currUseVals:[r0, r1, $r4, r3, virtualinvoke r0.<cfhider.WordCount$TokenizerMapper: void map(java.lang.Object,org.apache.hadoop.io.Text,org.apache.hadoop.mapreduce.Mapper$Context)>(r1, $r4, r3)]
currUseVals after retainAll:[]
20210618replaceInvokeStmtA methodname :map
20210618replaceInvokeStmtA classname :cfhider.WordCount$TokenizerMapper
20210618===
currProStmt isn't sensitive invokestmt:virtualinvoke r0.<cfhider.WordCount$TokenizerMapper: void map(java.lang.Object,org.apache.hadoop.io.Text,org.apache.hadoop.mapreduce.Mapper$Context)>(r1, $r4, r3)
currProStmt isn't sensitive argList:3
line 701 current stmt is: ----------#return#----------------
 line632 current stmt is: ----------#return#----------------
currDefVals:[]
currDefVals after retainAll:[]
currUseVals:[]
currUseVals after retainAll:[]
currProStmt return stmt before deleteValuestmt: return
<<!!!!!!ZYreturn!!!!!!>>this processing function: <cfhider.WordCount$TokenizerMapper: void map(java.lang.Object,java.lang.Object,org.apache.hadoop.mapreduce.Mapper$Context)>;
***++++++lastIdentityStmt is:++++++++++r3 := @parameter2: org.apache.hadoop.mapreduce.Mapper$Context
<<!!!!!!START!!!!!!>>20210610start insertting at class: cfhider.WordCount$TokenizerMapper
<<!!!!!!START!!!!!!>>20210610start processing function: <cfhider.WordCount$TokenizerMapper: void map(java.lang.Object,java.lang.Object,org.apache.hadoop.mapreduce.Mapper$Context)>;
**********************Line177
====currScanPre==updatemerge=====r0 := @this: cfhider.WordCount$TokenizerMapper
====currScanPre==updatemerge=====r1 := @parameter0: java.lang.Object
====currScanPre==updatemerge=====r2 := @parameter1: java.lang.Object
====currScanPre==updatemerge=====r3 := @parameter2: org.apache.hadoop.mapreduce.Mapper$Context
====currScanPre==updatemerge=====$r4 = null
====currScanPre==updatemerge=====invokeLineNo = 0L
====currScanPre==updatemerge=====getUUID = null
====currScanPre==updatemerge=====invokeUUID = null
====currScanPre==updatemerge=====branchInvokeResult = 0
====currScanPre==updatemerge=====sgxInvoker = null
====currScanPre==updatemerge=====sgxInvoker = new invoker.sgx_invoker
====currScanPre==updatemerge=====specialinvoke sgxInvoker.<invoker.sgx_invoker: void <init>()>()
====currScanPre==updatemerge=====virtualinvoke sgxInvoker.<invoker.sgx_invoker: boolean initenclave()>()
====currScanPre==updatemerge=====$r4 = (org.apache.hadoop.io.Text) r2
====currScanPre==updatemerge=====virtualinvoke r0.<cfhider.WordCount$TokenizerMapper: void map(java.lang.Object,org.apache.hadoop.io.Text,org.apache.hadoop.mapreduce.Mapper$Context)>(r1, $r4, r3)
====currScanPre==updatemerge=====return
++++updateMerge==add_index++++:{}
----second while, currScanPreStmt: r0 := @this: cfhider.WordCount$TokenizerMapper
----second while, currScanPreStmt: r1 := @parameter0: java.lang.Object
----second while, currScanPreStmt: r2 := @parameter1: java.lang.Object
----second while, currScanPreStmt: r3 := @parameter2: org.apache.hadoop.mapreduce.Mapper$Context
----second while, currScanPreStmt: $r4 = null
----second while, currScanPreStmt: invokeLineNo = 0L
----second while, currScanPreStmt: getUUID = null
----second while, currScanPreStmt: invokeUUID = null
----second while, currScanPreStmt: branchInvokeResult = 0
----second while, currScanPreStmt: sgxInvoker = null
----second while, currScanPreStmt: sgxInvoker = new invoker.sgx_invoker
----second while, currScanPreStmt: specialinvoke sgxInvoker.<invoker.sgx_invoker: void <init>()>()
----second while, currScanPreStmt: virtualinvoke sgxInvoker.<invoker.sgx_invoker: boolean initenclave()>()
----second while, currScanPreStmt: $r4 = (org.apache.hadoop.io.Text) r2
----second while, currScanPreStmt: virtualinvoke r0.<cfhider.WordCount$TokenizerMapper: void map(java.lang.Object,org.apache.hadoop.io.Text,org.apache.hadoop.mapreduce.Mapper$Context)>(r1, $r4, r3)
----second while, currScanPreStmt: return
**********************Line198
<<!!!!!!END!!!!!!>>20210610start insertting at class: cfhider.WordCount$TokenizerMapper
<<!!!!!!END!!!!!!>>20210610start processing function: <cfhider.WordCount$TokenizerMapper: void map(java.lang.Object,java.lang.Object,org.apache.hadoop.mapreduce.Mapper$Context)>;
classname20210512: 1
classname20210512:cfhider.WordCount$TokenizerMapper
MethodName20210512:<clinit>
Transforming invoker.SnowFlake... 
classname20210512: 1
classname20210512:invoker.SnowFlake
MethodName20210512:<init>
classname20210512: 1
classname20210512:invoker.SnowFlake
MethodName20210512:nextId
classname20210512: 1
classname20210512:invoker.SnowFlake
MethodName20210512:getNextMill
classname20210512: 1
classname20210512:invoker.SnowFlake
MethodName20210512:getNewstmp
classname20210512: 1
classname20210512:invoker.SnowFlake
MethodName20210512:<clinit>
Transforming invoker.sgx_invoker... 
classname20210512: 1
classname20210512:invoker.sgx_invoker
MethodName20210512:<init>
classname20210512: 1
classname20210512:invoker.sgx_invoker
MethodName20210512:sgx_invoker
classname20210512: 1
classname20210512:invoker.sgx_invoker
MethodName20210512:clear
classname20210512: 1
classname20210512:invoker.sgx_invoker
MethodName20210512:add
classname20210512: 1
classname20210512:invoker.sgx_invoker
MethodName20210512:add
classname20210512: 1
classname20210512:invoker.sgx_invoker
MethodName20210512:add
classname20210512: 1
classname20210512:invoker.sgx_invoker
MethodName20210512:add
classname20210512: 1
classname20210512:invoker.sgx_invoker
MethodName20210512:add
classname20210512: 1
classname20210512:invoker.sgx_invoker
MethodName20210512:add
classname20210512: 1
classname20210512:invoker.sgx_invoker
MethodName20210512:add
classname20210512: 1
classname20210512:invoker.sgx_invoker
MethodName20210512:add
classname20210512: 1
classname20210512:invoker.sgx_invoker
MethodName20210512:add
classname20210512: 1
classname20210512:invoker.sgx_invoker
MethodName20210512:add
classname20210512: 1
classname20210512:invoker.sgx_invoker
MethodName20210512:add
classname20210512: 1
classname20210512:invoker.sgx_invoker
MethodName20210512:add
classname20210512: 1
classname20210512:invoker.sgx_invoker
MethodName20210512:add
classname20210512: 1
classname20210512:invoker.sgx_invoker
MethodName20210512:add
classname20210512: 1
classname20210512:invoker.sgx_invoker
MethodName20210512:add
classname20210512: 1
classname20210512:invoker.sgx_invoker
MethodName20210512:add
classname20210512: 1
classname20210512:invoker.sgx_invoker
MethodName20210512:add
classname20210512: 1
classname20210512:invoker.sgx_invoker
MethodName20210512:add
classname20210512: 1
classname20210512:invoker.sgx_invoker
MethodName20210512:add
classname20210512: 1
classname20210512:invoker.sgx_invoker
MethodName20210512:setCounter
classname20210512: 1
classname20210512:invoker.sgx_invoker
MethodName20210512:setCuuid
classname20210512: 1
classname20210512:invoker.sgx_invoker
MethodName20210512:initenclave
classname20210512: 1
classname20210512:invoker.sgx_invoker
MethodName20210512:closeenclave
classname20210512: 1
classname20210512:invoker.sgx_invoker
MethodName20210512:getUUID
classname20210512: 1
classname20210512:invoker.sgx_invoker
MethodName20210512:initArrayInEnclave
classname20210512: 1
classname20210512:invoker.sgx_invoker
MethodName20210512:initValueInEnclave
classname20210512: 1
classname20210512:invoker.sgx_invoker
MethodName20210512:deleteValueInEnclave
classname20210512: 1
classname20210512:invoker.sgx_invoker
MethodName20210512:updateValueInEnclave
classname20210512: 1
classname20210512:invoker.sgx_invoker
MethodName20210512:updateMultArray
classname20210512: 1
classname20210512:invoker.sgx_invoker
MethodName20210512:getBooleanValue
classname20210512: 1
classname20210512:invoker.sgx_invoker
MethodName20210512:getIntValue
classname20210512: 1
classname20210512:invoker.sgx_invoker
MethodName20210512:getIntArray
classname20210512: 1
classname20210512:invoker.sgx_invoker
MethodName20210512:getDoubleArray
classname20210512: 1
classname20210512:invoker.sgx_invoker
MethodName20210512:getByteArray
classname20210512: 1
classname20210512:invoker.sgx_invoker
MethodName20210512:getFloatValue
classname20210512: 1
classname20210512:invoker.sgx_invoker
MethodName20210512:getDoubleValue
classname20210512: 1
classname20210512:invoker.sgx_invoker
MethodName20210512:getCharValue
classname20210512: 1
classname20210512:invoker.sgx_invoker
MethodName20210512:getLongValue
classname20210512: 1
classname20210512:invoker.sgx_invoker
MethodName20210512:getByteValue
classname20210512: 1
classname20210512:invoker.sgx_invoker
MethodName20210512:<clinit>
Writing to replaceOutput/cfhider.WordCount$IntSumReducer.jimple
Writing to replaceOutput/cfhider.WordCount.jimple
Writing to replaceOutput/cfhider.WordCount$TokenizerMapper.jimple
Writing to replaceOutput/invoker.SnowFlake.jimple
Writing to replaceOutput/invoker.sgx_invoker.jimple
Soot finished on Sun Jul 25 16:48:27 CST 2021
Soot has run for 0 min. 37 sec.
ok
